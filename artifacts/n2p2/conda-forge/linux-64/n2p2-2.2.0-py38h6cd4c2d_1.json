{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.21.8",
  "conda_private": false,
  "conda_version": "4.12.0",
  "description": "This repository (obtain source code here) provides ready-to-use\nsoftware for high-dimensional neural network potentials in\ncomputational physics and chemistry. The methodology behind the\nBehler-Parinello neural network potentials was first described here:\nJ. Behler and M. Parrinello, Phys. Rev. Lett. 98, 146401 (2007)\n",
  "dev_url": "https://github.com/CompPhysVienna/n2p2",
  "doc_url": "https://compphysvienna.github.io/n2p2/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "jan-janssen"
   ]
  },
  "home": "https://compphysvienna.github.io/n2p2/",
  "identifiers": [],
  "keywords": [],
  "license": "GPL-3.0-or-later",
  "license_family": "GPL",
  "license_file": "LICENSE",
  "root_pkgs": [
   "patch 2.7.6 h7f98852_1002",
   "ca-certificates 2022.5.18.1 ha878542_0",
   "anaconda-client 1.8.0 pyhd8ed1ab_0",
   "perl 5.32.1 2_h7f98852_perl5",
   "libssh2 1.10.0 ha56f1ee_2",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "_libgcc_mutex 0.1 conda_forge",
   "readline 8.1 h46c0cb4_0",
   "libffi 3.4.2 h7f98852_5",
   "six 1.16.0 pyh6c4a22f_0",
   "patchelf 0.14.5 h58526e2_0",
   "sniffio 1.2.0 py39hf3d152e_3",
   "importlib_resources 5.7.1 pyhd8ed1ab_1",
   "wheel 0.37.1 pyhd8ed1ab_0",
   "tini 0.19.0 h7f98852_0",
   "ripgrep 13.0.0 h2f28480_2",
   "cryptography 37.0.2 py39hd97740a_0",
   "conda-build 3.21.8 py39hf3d152e_1",
   "lz4-c 1.9.3 h9c3ff4c_1",
   "libzlib 1.2.12 h166bdaf_0",
   "libedit 3.1.20191231 he28a2e2_2",
   "chardet 4.0.0 py39hf3d152e_3",
   "reproc 14.2.3 h7f98852_0",
   "pip 22.1.1 pyhd8ed1ab_0",
   "conda 4.12.0 py39hf3d152e_0",
   "commonmark 0.9.1 py_0",
   "xz 5.2.5 h516909a_1",
   "glob2 0.7 py_0",
   "reproc-cpp 14.2.3 h9c3ff4c_0",
   "markupsafe 2.1.1 py39hb9d737c_1",
   "psutil 5.9.1 py39hb9d737c_0",
   "ruamel.yaml.clib 0.2.6 py39hb9d737c_1",
   "charset-normalizer 2.0.12 pyhd8ed1ab_0",
   "importlib-metadata 4.11.4 py39hf3d152e_0",
   "zipp 3.8.0 pyhd8ed1ab_0",
   "icu 70.1 h27087fc_0",
   "certifi 2022.5.18.1 py39hf3d152e_0",
   "ruamel.yaml 0.17.21 py39hb9d737c_1",
   "curl 7.83.1 h7bff187_0",
   "soupsieve 2.3.1 pyhd8ed1ab_0",
   "libsolv 0.7.22 h6239696_0",
   "pycparser 2.21 pyhd8ed1ab_0",
   "urllib3 1.26.9 pyhd8ed1ab_0",
   "pyrsistent 0.18.1 py39hb9d737c_1",
   "pybind11-abi 4 hd8ed1ab_3",
   "filelock 3.7.0 pyhd8ed1ab_0",
   "dataclasses 0.8 pyhc8e2a94_3",
   "py-lief 0.11.5 py39he80948d_1",
   "zlib 1.2.12 h166bdaf_0",
   "json5 0.9.5 pyh9f0ad1d_0",
   "pyopenssl 22.0.0 pyhd8ed1ab_0",
   "nbformat 5.4.0 pyhd8ed1ab_0",
   "_openmp_mutex 4.5 2_gnu",
   "watchgod 0.8.2 pyhd8ed1ab_0",
   "pcre2 10.37 h032f7d1_0",
   "zstd 1.5.2 h8a70e8d_1",
   "liblief 0.11.5 h9c3ff4c_1",
   "sqlite 3.38.5 h4ff8645_0",
   "libnsl 2.0.0 h7f98852_0",
   "lzo 2.10 h516909a_1000",
   "rich 12.4.4 pyhd8ed1ab_0",
   "pysocks 1.7.1 py39hf3d152e_5",
   "pygments 2.12.0 pyhd8ed1ab_0",
   "prompt-toolkit 3.0.29 pyha770c72_0",
   "libmamba 0.23.3 hd8a31e3_1",
   "clyent 1.2.2 py_1",
   "colorama 0.4.4 pyh9f0ad1d_0",
   "krb5 1.19.3 h3790be6_0",
   "python-libarchive-c 4.0 py39hf3d152e_1",
   "libmambapy 0.23.3 py39hd55135b_1",
   "conda-package-handling 1.8.1 py39hb9d737c_1",
   "libgcc-ng 12.1.0 h8d9b700_16",
   "ruamel_yaml 0.15.80 py39hb9d737c_1007",
   "anyio 3.6.1 py39hf3d152e_0",
   "boa 0.11.0 pyha770c72_0",
   "libiconv 1.16 h516909a_0",
   "c-ares 1.18.1 h7f98852_0",
   "tzdata 2022a h191b570_0",
   "jsonschema 4.5.1 pyhd8ed1ab_0",
   "libnghttp2 1.47.0 h727a467_0",
   "python_abi 3.9 2_cp39",
   "idna 3.3 pyhd8ed1ab_0",
   "openssl 1.1.1o h166bdaf_0",
   "libev 4.33 h516909a_1",
   "keyutils 1.6.1 h166bdaf_0",
   "yaml 0.2.5 h7f98852_2",
   "tqdm 4.64.0 pyhd8ed1ab_0",
   "su-exec 0.2 h516909a_1002",
   "python-fastjsonschema 2.15.3 pyhd8ed1ab_0",
   "pyyaml 6.0 py39hb9d737c_4",
   "libuuid 2.32.1 h7f98852_1000",
   "cffi 1.15.0 py39h4bc2ebd_0",
   "libcurl 7.83.1 h7bff187_0",
   "wcwidth 0.2.5 pyh9f0ad1d_2",
   "libarchive 3.5.2 hb890918_2",
   "ncurses 6.3 h27087fc_1",
   "libstdcxx-ng 12.1.0 ha89aaad_16",
   "pkginfo 1.8.2 pyhd8ed1ab_0",
   "ld_impl_linux-64 2.36.1 hea4e1c9_2",
   "tk 8.6.12 h27826a3_0",
   "gettext 0.19.8.1 h73d1719_1008",
   "libxml2 2.9.14 h22db469_0",
   "pytz 2022.1 pyhd8ed1ab_0",
   "bzip2 1.0.8 h7f98852_4",
   "mamba 0.23.3 py39hfa8f2c8_1",
   "traitlets 5.2.1.post0 pyhd8ed1ab_0",
   "pycosat 0.6.3 py39hb9d737c_1010",
   "yaml-cpp 0.7.0 h27087fc_1",
   "joblib 1.1.0 pyhd8ed1ab_0",
   "jinja2 3.1.2 pyhd8ed1ab_0",
   "backports 1.0 py_2",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "setuptools 62.3.2 py39hf3d152e_0",
   "future 0.18.2 py39hf3d152e_5",
   "libgomp 12.1.0 h8d9b700_16",
   "git 2.35.3 pl5321h36853c3_0",
   "expat 2.4.8 h27087fc_0",
   "prompt_toolkit 3.0.29 hd8ed1ab_0",
   "python 3.9.13 h9a8a25e_0_cpython",
   "typing_extensions 4.2.0 pyha770c72_1",
   "beautifulsoup4 4.11.1 pyha770c72_0",
   "jupyter_core 4.10.0 py39hf3d152e_0",
   "requests 2.27.1 pyhd8ed1ab_0",
   "brotlipy 0.7.0 py39hb9d737c_1004",
   "attrs 21.4.0 pyhd8ed1ab_0",
   "click 8.1.3 py39hf3d152e_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "conda-env 2.6.0 1",
   "conda-forge-ci-setup 3.20.1 py39h69ce9fc_100",
   "oniguruma 6.9.8 h166bdaf_0",
   "jq 1.6 h36c2ea0_1000"
  ],
  "summary": "n2p2 - A Neural Network Potential Package",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "cdt_name": "cos6",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "10",
  "docker_image": "quay.io/condaforge/linux-anvil-cos7-x86_64",
  "extend_keys": [
   "ignore_version",
   "extend_keys",
   "pin_run_as_build",
   "ignore_build_only_deps"
  ],
  "fortran_compiler": "gfortran",
  "gsl": "2.7",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "libblas": "3.9 *netlib",
  "libcblas": "3.9 *netlib",
  "lua": "5",
  "mpi": "mpich",
  "mpich": "4",
  "numpy": "1.16",
  "openmpi": "4",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.8.* *_cpython",
  "r_base": "3.5",
  "target_platform": "linux-64"
 },
 "files": [
  "bin/nnp-atomenv",
  "bin/nnp-checkdw",
  "bin/nnp-checkf",
  "bin/nnp-comp2",
  "bin/nnp-convert",
  "bin/nnp-cutoff",
  "bin/nnp-dataset",
  "bin/nnp-dist",
  "bin/nnp-norm",
  "bin/nnp-norm2",
  "bin/nnp-predict",
  "bin/nnp-prune",
  "bin/nnp-scaling",
  "bin/nnp-select",
  "bin/nnp-symfunc",
  "bin/nnp-train",
  "include/Atom.h",
  "include/CompactFunction.h",
  "include/CoreFunction.h",
  "include/CutoffFunction.h",
  "include/Dataset.h",
  "include/Element.h",
  "include/ElementMap.h",
  "include/GradientDescent.h",
  "include/InterfaceLammps.h",
  "include/KalmanFilter.h",
  "include/Log.h",
  "include/Mode.h",
  "include/NeuralNetwork.h",
  "include/Prediction.h",
  "include/Settings.h",
  "include/SetupAnalysis.h",
  "include/Stopwatch.h",
  "include/Structure.h",
  "include/SymFnc.h",
  "include/SymFncBaseComp.h",
  "include/SymFncBaseCompAng.h",
  "include/SymFncBaseCompAngWeighted.h",
  "include/SymFncBaseCutoff.h",
  "include/SymFncBaseExpAng.h",
  "include/SymFncCompAngn.h",
  "include/SymFncCompAngnWeighted.h",
  "include/SymFncCompAngw.h",
  "include/SymFncCompAngwWeighted.h",
  "include/SymFncCompRad.h",
  "include/SymFncCompRadWeighted.h",
  "include/SymFncExpAngn.h",
  "include/SymFncExpAngnWeighted.h",
  "include/SymFncExpAngw.h",
  "include/SymFncExpRad.h",
  "include/SymFncExpRadWeighted.h",
  "include/SymFncStatistics.h",
  "include/SymGrp.h",
  "include/SymGrpBaseComp.h",
  "include/SymGrpBaseCompAng.h",
  "include/SymGrpBaseCompAngWeighted.h",
  "include/SymGrpBaseCutoff.h",
  "include/SymGrpBaseExpAng.h",
  "include/SymGrpCompAngn.h",
  "include/SymGrpCompAngnWeighted.h",
  "include/SymGrpCompAngw.h",
  "include/SymGrpCompAngwWeighted.h",
  "include/SymGrpCompRad.h",
  "include/SymGrpCompRadWeighted.h",
  "include/SymGrpExpAngn.h",
  "include/SymGrpExpAngnWeighted.h",
  "include/SymGrpExpAngw.h",
  "include/SymGrpExpRad.h",
  "include/SymGrpExpRadWeighted.h",
  "include/Training.h",
  "include/Updater.h",
  "include/Vec3D.h",
  "include/mpi-extra.h",
  "include/utility.h",
  "include/version.h",
  "lib/Makefile.lammps-extra",
  "lib/lammps-extra.cmake",
  "lib/libnnp.so",
  "lib/libnnpif.so",
  "lib/libnnptrain.so",
  "lib/python3.8/site-packages/pynnp.cpython-38-x86_64-linux-gnu.so"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py38h6cd4c2d_1",
  "build_number": 1,
  "depends": [
   "gsl >=2.7,<2.8.0a0",
   "libblas >=3.9.0,<4.0a0",
   "libcblas >=3.9.0,<4.0a0",
   "libgcc-ng >=12",
   "libstdcxx-ng >=12",
   "mpich >=4.0.2,<5.0a0",
   "python >=3.8,<3.9.0a0",
   "python_abi 3.8.* *_cp38"
  ],
  "license": "GPL-3.0-or-later",
  "license_family": "GPL",
  "name": "n2p2",
  "platform": "linux",
  "subdir": "linux-64",
  "timestamp": 1653917348060,
  "version": "2.2.0"
 },
 "metadata_version": 1,
 "name": "n2p2",
 "raw_recipe": "{% set name = \"n2p2\" %}\n{% set version = \"2.2.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/CompPhysVienna/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: 4acaa255632a7b9811d7530fd52ac7dd0bb3a8e3a3cf8512beadd29b62c1bfef\n  patches:\n    - app.patch\n    - cflags.patch\n    - shared.patch\n\nbuild:\n  number: 1\n  skip: true  # [not linux]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - make\n  host:\n    - python\n    - cython\n    - {{ mpi }}\n    - libblas\n    - libcblas\n    - gsl\n    - eigen\n  run:\n    - python\n\ntest:\n  imports:\n    - pynnp\n  commands:\n    - test -f ${PREFIX}/bin/nnp-convert\n    - test -f ${PREFIX}/bin/nnp-cutoff\n    - test -f ${PREFIX}/bin/nnp-dist\n    - test -f ${PREFIX}/bin/nnp-predict\n    - test -f ${PREFIX}/bin/nnp-prune\n    - test -f ${PREFIX}/bin/nnp-select\n    - test -f ${PREFIX}/bin/nnp-symfunc\n    - test -f ${PREFIX}/bin/nnp-comp2\n    - test -f ${PREFIX}/bin/nnp-dataset\n    - test -f ${PREFIX}/bin/nnp-norm\n    - test -f ${PREFIX}/bin/nnp-scaling\n    - test -f ${PREFIX}/bin/nnp-train\n\nabout:\n  home: https://compphysvienna.github.io/n2p2/\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: n2p2 - A Neural Network Potential Package\n  description: |\n    This repository (obtain source code here) provides ready-to-use \n    software for high-dimensional neural network potentials in \n    computational physics and chemistry. The methodology behind the \n    Behler-Parinello neural network potentials was first described here:\n    J. Behler and M. Parrinello, Phys. Rev. Lett. 98, 146401 (2007)\n  doc_url: https://compphysvienna.github.io/n2p2/\n  dev_url: https://github.com/CompPhysVienna/n2p2\n\nextra:\n  recipe-maintainers:\n    - jan-janssen\n",
 "rendered_recipe": {
  "about": {
   "description": "This repository (obtain source code here) provides ready-to-use\nsoftware for high-dimensional neural network potentials in\ncomputational physics and chemistry. The methodology behind the\nBehler-Parinello neural network potentials was first described here:\nJ. Behler and M. Parrinello, Phys. Rev. Lett. 98, 146401 (2007)\n",
   "dev_url": "https://github.com/CompPhysVienna/n2p2",
   "doc_url": "https://compphysvienna.github.io/n2p2/",
   "home": "https://compphysvienna.github.io/n2p2/",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "n2p2 - A Neural Network Potential Package"
  },
  "build": {
   "number": "1",
   "string": "py38h6cd4c2d_1"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "jan-janssen"
   ]
  },
  "package": {
   "name": "n2p2",
   "version": "2.2.0"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 2_gnu",
    "binutils_impl_linux-64 2.36.1 h193b22a_2",
    "binutils_linux-64 2.36 hf3e587d_10",
    "gcc_impl_linux-64 10.3.0 hf2f2afa_16",
    "gcc_linux-64 10.3.0 hc39de41_10",
    "gxx_impl_linux-64 10.3.0 hf2f2afa_16",
    "gxx_linux-64 10.3.0 h2593f52_10",
    "kernel-headers_linux-64 2.6.32 he073ed8_15",
    "ld_impl_linux-64 2.36.1 hea4e1c9_2",
    "libgcc-devel_linux-64 10.3.0 he6cfe16_16",
    "libgcc-ng 12.1.0 h8d9b700_16",
    "libgomp 12.1.0 h8d9b700_16",
    "libsanitizer 10.3.0 h26c7422_16",
    "libstdcxx-devel_linux-64 10.3.0 he6cfe16_16",
    "libstdcxx-ng 12.1.0 ha89aaad_16",
    "make 4.3 hd18ef5c_1",
    "sysroot_linux-64 2.12 he073ed8_15"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 2_gnu",
    "bzip2 1.0.8 h7f98852_4",
    "ca-certificates 2022.5.18.1 ha878542_0",
    "cython 0.29.30 py38hfa26641_0",
    "eigen 3.4.0 h4bd325d_0",
    "gsl 2.7 he838d99_0",
    "ld_impl_linux-64 2.36.1 hea4e1c9_2",
    "libblas 3.9.0 5_h92ddd45_netlib",
    "libcblas 3.9.0 5_h92ddd45_netlib",
    "libffi 3.4.2 h7f98852_5",
    "libgcc-ng 12.1.0 h8d9b700_16",
    "libgfortran-ng 12.1.0 h69a702a_16",
    "libgfortran5 12.1.0 hdcd56e2_16",
    "libgomp 12.1.0 h8d9b700_16",
    "libnsl 2.0.0 h7f98852_0",
    "libstdcxx-ng 12.1.0 ha89aaad_16",
    "libuuid 2.32.1 h7f98852_1000",
    "libzlib 1.2.12 h166bdaf_0",
    "mpi 1.0 mpich",
    "mpich 4.0.2 h846660c_100",
    "ncurses 6.3 h27087fc_1",
    "openssl 3.0.3 h166bdaf_0",
    "python 3.8.13 ha86cf86_0_cpython",
    "python_abi 3.8 2_cp38",
    "readline 8.1 h46c0cb4_0",
    "sqlite 3.38.5 h4ff8645_0",
    "tk 8.6.12 h27826a3_0",
    "xz 5.2.5 h516909a_1",
    "zlib 1.2.12 h166bdaf_0"
   ],
   "run": [
    "gsl >=2.7,<2.8.0a0",
    "libblas >=3.9.0,<4.0a0",
    "libcblas >=3.9.0,<4.0a0",
    "libgcc-ng >=12",
    "libstdcxx-ng >=12",
    "mpich >=4.0.2,<5.0a0",
    "python >=3.8,<3.9.0a0",
    "python_abi 3.8.* *_cp38"
   ]
  },
  "source": {
   "patches": [
    "app.patch",
    "cflags.patch",
    "shared.patch"
   ],
   "sha256": "4acaa255632a7b9811d7530fd52ac7dd0bb3a8e3a3cf8512beadd29b62c1bfef",
   "url": "https://github.com/CompPhysVienna/n2p2/archive/v2.2.0.tar.gz"
  },
  "test": {
   "commands": [
    "test -f ${PREFIX}/bin/nnp-convert",
    "test -f ${PREFIX}/bin/nnp-cutoff",
    "test -f ${PREFIX}/bin/nnp-dist",
    "test -f ${PREFIX}/bin/nnp-predict",
    "test -f ${PREFIX}/bin/nnp-prune",
    "test -f ${PREFIX}/bin/nnp-select",
    "test -f ${PREFIX}/bin/nnp-symfunc",
    "test -f ${PREFIX}/bin/nnp-comp2",
    "test -f ${PREFIX}/bin/nnp-dataset",
    "test -f ${PREFIX}/bin/nnp-norm",
    "test -f ${PREFIX}/bin/nnp-scaling",
    "test -f ${PREFIX}/bin/nnp-train"
   ],
   "imports": [
    "pynnp"
   ]
  }
 },
 "version": "2.2.0"
}
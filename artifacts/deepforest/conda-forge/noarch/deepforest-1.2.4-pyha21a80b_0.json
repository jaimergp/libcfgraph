{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.23.3",
  "conda_version": "22.11.1",
  "description": "DeepForest is a python package for training and predicting individual\ntree crowns from airborne RGB imagery. DeepForest comes with a prebuilt\nmodel trained on data from the National Ecological Observation Network.\nUsers can extend this model by annotating and training custom models\nstarting from the prebuilt model.\n\nDeepForest es un paquete de python para la predicci\u00f3n\nde coronas de \u00e1rboles individuales basada en modelos entrenados\ncon im\u00e1genes remotas RVA ( RGB, por sus siglas en ingl\u00e9s).\nDeepForest viene con un modelo entrenado con datos prove\u00eddos por la\nRed Nacional de Observatorios Ecol\u00f3gicos (NEON, por sus siglas en ingl\u00e9s).\nLos usuarios pueden ampliar este modelo pre-construido por anotaci\u00f3n\nde etiquetas y entrenamiento con datos locales. La documentaci\u00f3n de\nDeepForest est\u00e1 escrita en ingl\u00e9s, sin embargo, agradecer\u00edamos\ncontribuciones con fin de hacerla accesible en otros idiomas.\n",
  "dev_url": "https://github.com/weecology/DeepForest",
  "doc_url": "https://deepforest.readthedocs.io/en/latest/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "bw4sz",
    "henrykironde"
   ]
  },
  "home": "https://github.com/weecology/DeepForest",
  "identifiers": [],
  "keywords": [],
  "license": "MIT",
  "license_family": "MIT",
  "license_file": "LICENSE",
  "root_pkgs": [
   "watchgod 0.8.2 pyhd8ed1ab_0",
   "pysocks 1.7.1 pyha2e5f31_6",
   "ripgrep 13.0.0 h2f28480_2",
   "su-exec 0.2 h166bdaf_1003",
   "libnghttp2 1.51.0 hff17c54_0",
   "xz 5.2.6 h166bdaf_0",
   "mdurl 0.1.0 pyhd8ed1ab_0",
   "libzlib 1.2.13 h166bdaf_4",
   "chardet 5.1.0 py310hff52083_0",
   "setuptools 65.6.3 pyhd8ed1ab_0",
   "c-ares 1.18.1 h7f98852_0",
   "pkginfo 1.9.6 pyhd8ed1ab_0",
   "openssl 3.0.7 h0b41bf4_2",
   "reproc-cpp 14.2.4 hcb278e6_0",
   "conda-package-streaming 0.7.0 pyhd8ed1ab_1",
   "libffi 3.4.2 h7f98852_5",
   "platformdirs 2.6.2 pyhd8ed1ab_0",
   "joblib 1.2.0 pyhd8ed1ab_0",
   "charset-normalizer 2.1.1 pyhd8ed1ab_0",
   "pytz 2022.7.1 pyhd8ed1ab_0",
   "pluggy 1.0.0 pyhd8ed1ab_5",
   "python-fastjsonschema 2.16.2 pyhd8ed1ab_0",
   "python 3.10.8 h4a9ceb5_0_cpython",
   "requests 2.28.2 pyhd8ed1ab_0",
   "fmt 9.1.0 h924138e_0",
   "jsonschema 4.17.3 pyhd8ed1ab_0",
   "patchelf 0.17.2 h58526e2_0",
   "importlib-metadata 6.0.0 pyha770c72_0",
   "conda-build 3.23.3 py310hff52083_1",
   "dataclasses 0.8 pyhc8e2a94_3",
   "libmambapy 1.1.0 py310h1428755_3",
   "boa 0.14.0 pyhd8ed1ab_0",
   "wheel 0.38.4 pyhd8ed1ab_0",
   "gettext 0.21.1 h27087fc_0",
   "libgcc-ng 12.2.0 h65d4601_19",
   "conda 22.11.1 py310hff52083_1",
   "python-libarchive-c 4.0 py310hff52083_2",
   "soupsieve 2.3.2.post1 pyhd8ed1ab_0",
   "rich 13.3.1 pyhd8ed1ab_1",
   "colorama 0.4.6 pyhd8ed1ab_0",
   "wcwidth 0.2.6 pyhd8ed1ab_0",
   "anaconda-client 1.11.0 pyhd8ed1ab_1",
   "zipp 3.12.0 pyhd8ed1ab_0",
   "lz4-c 1.9.4 hcb278e6_0",
   "tk 8.6.12 h27826a3_0",
   "libnsl 2.0.0 h7f98852_0",
   "typing-extensions 4.4.0 hd8ed1ab_0",
   "libcurl 7.87.0 hdc1c0ab_0",
   "idna 3.4 pyhd8ed1ab_0",
   "prompt-toolkit 3.0.36 pyha770c72_0",
   "yaml 0.2.5 h7f98852_2",
   "toolz 0.12.0 pyhd8ed1ab_0",
   "pybind11-abi 4 hd8ed1ab_3",
   "pycosat 0.6.4 py310h5764c6d_1",
   "python_abi 3.10 3_cp310",
   "tzdata 2022g h191b570_0",
   "libarchive 3.6.2 h3d51595_0",
   "prompt_toolkit 3.0.36 hd8ed1ab_0",
   "_libgcc_mutex 0.1 conda_forge",
   "json5 0.9.5 pyh9f0ad1d_0",
   "yaml-cpp 0.7.0 h27087fc_2",
   "curl 7.87.0 hdc1c0ab_0",
   "glob2 0.7 py_0",
   "perl 5.32.1 2_h7f98852_perl5",
   "jinja2 3.1.2 pyhd8ed1ab_1",
   "libuuid 2.32.1 h7f98852_1000",
   "icu 70.1 h27087fc_0",
   "cffi 1.15.1 py310h255011f_3",
   "toml 0.10.2 pyhd8ed1ab_0",
   "mamba 1.1.0 py310h51d5547_3",
   "typing_extensions 4.4.0 pyha770c72_0",
   "libgomp 12.2.0 h65d4601_19",
   "libev 4.33 h516909a_1",
   "libedit 3.1.20191231 he28a2e2_2",
   "_openmp_mutex 4.5 2_gnu",
   "readline 8.1.2 h0f457ee_0",
   "expat 2.5.0 h27087fc_0",
   "pyrsistent 0.19.3 py310h1fa729e_0",
   "conda-package-handling 2.0.2 pyh38be061_0",
   "pip 22.3.1 pyhd8ed1ab_0",
   "pyyaml 6.0 py310h5764c6d_5",
   "filelock 3.9.0 pyhd8ed1ab_0",
   "traitlets 5.8.1 pyhd8ed1ab_0",
   "pygments 2.14.0 pyhd8ed1ab_0",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "krb5 1.20.1 h81ceb04_0",
   "ruamel.yaml.clib 0.2.7 py310h1fa729e_1",
   "jupyter_core 5.1.5 py310hff52083_0",
   "zstd 1.5.2 h3eb15da_6",
   "urllib3 1.26.14 pyhd8ed1ab_0",
   "nbformat 5.7.3 pyhd8ed1ab_0",
   "git 2.39.1 pl5321h693f4a3_0",
   "ruamel.yaml 0.17.21 py310h5764c6d_2",
   "six 1.16.0 pyh6c4a22f_0",
   "pkgutil-resolve-name 1.3.10 pyhd8ed1ab_0",
   "markdown-it-py 2.1.0 pyhd8ed1ab_0",
   "importlib_resources 5.10.2 pyhd8ed1ab_0",
   "libssh2 1.10.0 hf14f497_3",
   "psutil 5.9.4 py310h5764c6d_0",
   "libiconv 1.17 h166bdaf_0",
   "clyent 1.2.2 py_1",
   "reproc 14.2.4 h0b41bf4_0",
   "libsolv 0.7.23 h3eb15da_0",
   "keyutils 1.6.1 h166bdaf_0",
   "ca-certificates 2022.12.7 ha878542_0",
   "pcre2 10.40 hc3806b6_0",
   "ruamel_yaml 0.15.80 py310h5764c6d_1008",
   "tini 0.19.0 h166bdaf_1",
   "attrs 22.2.0 pyh71513ae_0",
   "patch 2.7.6 h7f98852_1002",
   "brotlipy 0.7.0 py310h5764c6d_1005",
   "pyopenssl 23.0.0 pyhd8ed1ab_0",
   "libstdcxx-ng 12.2.0 h46fd767_19",
   "bzip2 1.0.8 h7f98852_4",
   "ld_impl_linux-64 2.40 h41732ed_0",
   "cryptography 39.0.0 py310h34c0648_0",
   "certifi 2022.12.7 pyhd8ed1ab_0",
   "lzo 2.10 h516909a_1000",
   "libsqlite 3.40.0 h753d276_0",
   "libxml2 2.10.3 h7463322_0",
   "tqdm 4.64.1 pyhd8ed1ab_0",
   "backports 1.0 pyhd8ed1ab_3",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "zstandard 0.19.0 py310hdeb6495_1",
   "ncurses 6.3 h27087fc_1",
   "markupsafe 2.1.2 py310h1fa729e_0",
   "libmamba 1.1.0 hde2b089_3",
   "pycparser 2.21 pyhd8ed1ab_0",
   "beautifulsoup4 4.11.1 pyha770c72_0",
   "anyio 3.6.2 pyhd8ed1ab_0",
   "sniffio 1.3.0 pyhd8ed1ab_0",
   "liblief 0.11.5 h9c3ff4c_1",
   "click 8.1.3 unix_pyhd8ed1ab_2",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "jq 1.6 h36c2ea0_1000",
   "oniguruma 6.9.8 h166bdaf_0",
   "conda-forge-ci-setup 3.25.0 py310hce54274_100",
   "conda-env 2.6.0 1",
   "py-lief 0.11.5 py310h122e73d_1"
  ],
  "summary": "Python Package for Tree Crown Detection in Airborne RGB imagery",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "cdt_name": "cos6",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "docker_image": "quay.io/condaforge/linux-anvil-cos7-x86_64",
  "extend_keys": [
   "ignore_build_only_deps",
   "ignore_version",
   "pin_run_as_build",
   "extend_keys"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.21",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.10",
  "r_base": "3.5",
  "target_platform": "linux-64"
 },
 "conda_pkg_format": "2",
 "files": [
  "site-packages/deepforest-1.2.4.dist-info/AUTHORS.rst",
  "site-packages/deepforest-1.2.4.dist-info/INSTALLER",
  "site-packages/deepforest-1.2.4.dist-info/LICENSE",
  "site-packages/deepforest-1.2.4.dist-info/METADATA",
  "site-packages/deepforest-1.2.4.dist-info/RECORD",
  "site-packages/deepforest-1.2.4.dist-info/REQUESTED",
  "site-packages/deepforest-1.2.4.dist-info/WHEEL",
  "site-packages/deepforest-1.2.4.dist-info/direct_url.json",
  "site-packages/deepforest/IoU.py",
  "site-packages/deepforest/__init__.py",
  "site-packages/deepforest/_version.py",
  "site-packages/deepforest/callbacks.py",
  "site-packages/deepforest/data/2019_YELL_2_528000_4978000_image_crop2.png",
  "site-packages/deepforest/data/2019_YELL_2_528000_4978000_image_crop2.xml",
  "site-packages/deepforest/data/2019_YELL_2_541000_4977000_image_crop.png",
  "site-packages/deepforest/data/2019_YELL_2_541000_4977000_image_crop.xml",
  "site-packages/deepforest/data/OSBS_029.csv",
  "site-packages/deepforest/data/OSBS_029.png",
  "site-packages/deepforest/data/OSBS_029.tif",
  "site-packages/deepforest/data/OSBS_029.xml",
  "site-packages/deepforest/data/SOAP_031.png",
  "site-packages/deepforest/data/SOAP_061.png",
  "site-packages/deepforest/data/SOAP_061.xml",
  "site-packages/deepforest/data/__init__.py",
  "site-packages/deepforest/data/classes.csv",
  "site-packages/deepforest/data/deepforest_config.yml",
  "site-packages/deepforest/data/example.csv",
  "site-packages/deepforest/data/testfile_deepforest.csv",
  "site-packages/deepforest/data/testfile_multi.csv",
  "site-packages/deepforest/dataset.py",
  "site-packages/deepforest/evaluate.py",
  "site-packages/deepforest/main.py",
  "site-packages/deepforest/model.py",
  "site-packages/deepforest/predict.py",
  "site-packages/deepforest/preprocess.py",
  "site-packages/deepforest/utilities.py",
  "site-packages/deepforest/visualize.py",
  "site-packages/tests/__init__.py",
  "site-packages/tests/conftest.py",
  "site-packages/tests/profile_dataset.py",
  "site-packages/tests/profile_evaluate.py",
  "site-packages/tests/profile_predict_file.py",
  "site-packages/tests/test_IoU.py",
  "site-packages/tests/test_callbacks.py",
  "site-packages/tests/test_data.py",
  "site-packages/tests/test_dataset.py",
  "site-packages/tests/test_environment.py",
  "site-packages/tests/test_evaluate.py",
  "site-packages/tests/test_main.py",
  "site-packages/tests/test_model.py",
  "site-packages/tests/test_preprocess.py",
  "site-packages/tests/test_utilities.py",
  "site-packages/tests/test_visualize.py"
 ],
 "index": {
  "arch": null,
  "build": "pyha21a80b_0",
  "build_number": 0,
  "depends": [
   "albumentations",
   "geopandas",
   "h5py",
   "imagecodecs",
   "matplotlib-base",
   "numpy >=1.21.6,<2.0a0",
   "numpydoc",
   "pandas",
   "pillow",
   "pip",
   "pytest",
   "python >=3.6",
   "pytorch",
   "pytorch-lightning >=1.5.8",
   "pyyaml >=5.1.0",
   "rasterio",
   "recommonmark",
   "rtree",
   "setuptools <59.6.0",
   "slidingwindow",
   "sphinx >=1.8",
   "torchvision",
   "tqdm",
   "xmltodict"
  ],
  "license": "MIT",
  "license_family": "MIT",
  "name": "deepforest",
  "noarch": "python",
  "platform": null,
  "subdir": "noarch",
  "timestamp": 1675105017622,
  "version": "1.2.4"
 },
 "metadata_version": 1,
 "name": "deepforest",
 "raw_recipe": "{% set name = \"deepforest\" %}\n{% set version = \"1.2.4\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 16d95ff2e254c3f676df18db5f4f8de18037889dca682e3463452dacf9058f59\n\nbuild:\n  noarch: python\n  number: 0\n  script:\n    - '{{ PYTHON }} -m pip install . --no-deps --ignore-installed -vv '\n\nrequirements:\n  host:\n    - python >=3.6\n    - pip >=20.1\n    - numpy\n  run:\n    - python >=3.6\n    - numpydoc\n    - h5py\n    - geopandas\n    - pandas\n    - pillow\n    - pip\n    - pytorch-lightning >=1.5.8\n    - pytorch\n    - pyyaml >=5.1.0\n    - pytest\n    - matplotlib-base\n    - {{ pin_compatible('numpy') }}\n    - recommonmark\n    - rasterio\n    - rtree\n    - sphinx >=1.8\n    - slidingwindow\n    - tqdm\n    - torchvision\n    - xmltodict\n    - imagecodecs\n    - albumentations\n    - setuptools <59.6.0\ntest:\n  imports:\n    - deepforest\n    - deepforest.main\n  source_files:\n    - tests/*\n\nabout:\n  home: https://github.com/weecology/DeepForest\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Python Package for Tree Crown Detection in Airborne RGB imagery\n  description: |\n    DeepForest is a python package for training and predicting individual\n    tree crowns from airborne RGB imagery. DeepForest comes with a prebuilt\n    model trained on data from the National Ecological Observation Network.\n    Users can extend this model by annotating and training custom models\n    starting from the prebuilt model.\n\n    DeepForest es un paquete de python para la predicci\u00f3n\n    de coronas de \u00e1rboles individuales basada en modelos entrenados\n    con im\u00e1genes remotas RVA ( RGB, por sus siglas en ingl\u00e9s).\n    DeepForest viene con un modelo entrenado con datos prove\u00eddos por la\n    Red Nacional de Observatorios Ecol\u00f3gicos (NEON, por sus siglas en ingl\u00e9s).\n    Los usuarios pueden ampliar este modelo pre-construido por anotaci\u00f3n\n    de etiquetas y entrenamiento con datos locales. La documentaci\u00f3n de\n    DeepForest est\u00e1 escrita en ingl\u00e9s, sin embargo, agradecer\u00edamos\n    contribuciones con fin de hacerla accesible en otros idiomas.\n  doc_url: https://deepforest.readthedocs.io/en/latest/\n  dev_url: https://github.com/weecology/DeepForest\n\nextra:\n  recipe-maintainers:\n    - bw4sz\n    - henrykironde\n",
 "rendered_recipe": {
  "about": {
   "description": "DeepForest is a python package for training and predicting individual\ntree crowns from airborne RGB imagery. DeepForest comes with a prebuilt\nmodel trained on data from the National Ecological Observation Network.\nUsers can extend this model by annotating and training custom models\nstarting from the prebuilt model.\n\nDeepForest es un paquete de python para la predicci\u00f3n\nde coronas de \u00e1rboles individuales basada en modelos entrenados\ncon im\u00e1genes remotas RVA ( RGB, por sus siglas en ingl\u00e9s).\nDeepForest viene con un modelo entrenado con datos prove\u00eddos por la\nRed Nacional de Observatorios Ecol\u00f3gicos (NEON, por sus siglas en ingl\u00e9s).\nLos usuarios pueden ampliar este modelo pre-construido por anotaci\u00f3n\nde etiquetas y entrenamiento con datos locales. La documentaci\u00f3n de\nDeepForest est\u00e1 escrita en ingl\u00e9s, sin embargo, agradecer\u00edamos\ncontribuciones con fin de hacerla accesible en otros idiomas.\n",
   "dev_url": "https://github.com/weecology/DeepForest",
   "doc_url": "https://deepforest.readthedocs.io/en/latest/",
   "home": "https://github.com/weecology/DeepForest",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Python Package for Tree Crown Detection in Airborne RGB imagery"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": [
    "/home/conda/feedstock_root/build_artifacts/deepforest_1675104848134/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps --ignore-installed -vv "
   ],
   "string": "pyha21a80b_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "bw4sz",
    "henrykironde"
   ]
  },
  "package": {
   "name": "deepforest",
   "version": "1.2.4"
  },
  "requirements": {
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 2_gnu",
    "bzip2 1.0.8 h7f98852_4",
    "ca-certificates 2022.12.7 ha878542_0",
    "ld_impl_linux-64 2.40 h41732ed_0",
    "libblas 3.9.0 16_linux64_openblas",
    "libcblas 3.9.0 16_linux64_openblas",
    "libffi 3.4.2 h7f98852_5",
    "libgcc-ng 12.2.0 h65d4601_19",
    "libgfortran-ng 12.2.0 h69a702a_19",
    "libgfortran5 12.2.0 h337968e_19",
    "libgomp 12.2.0 h65d4601_19",
    "liblapack 3.9.0 16_linux64_openblas",
    "libnsl 2.0.0 h7f98852_0",
    "libopenblas 0.3.21 pthreads_h78a6416_3",
    "libsqlite 3.40.0 h753d276_0",
    "libstdcxx-ng 12.2.0 h46fd767_19",
    "libuuid 2.32.1 h7f98852_1000",
    "libzlib 1.2.13 h166bdaf_4",
    "ncurses 6.3 h27087fc_1",
    "numpy 1.21.6 py310h45f3432_0",
    "openssl 3.0.7 h0b41bf4_2",
    "pip 22.3.1 pyhd8ed1ab_0",
    "python 3.10.8 h4a9ceb5_0_cpython",
    "python_abi 3.10 3_cp310",
    "readline 8.1.2 h0f457ee_0",
    "setuptools 66.1.1 pyhd8ed1ab_0",
    "tk 8.6.12 h27826a3_0",
    "tzdata 2022g h191b570_0",
    "wheel 0.38.4 pyhd8ed1ab_0",
    "xz 5.2.6 h166bdaf_0"
   ],
   "run": [
    "albumentations",
    "geopandas",
    "h5py",
    "imagecodecs",
    "matplotlib-base",
    "numpy >=1.21.6,<2.0a0",
    "numpydoc",
    "pandas",
    "pillow",
    "pip",
    "pytest",
    "python >=3.6",
    "pytorch",
    "pytorch-lightning >=1.5.8",
    "pyyaml >=5.1.0",
    "rasterio",
    "recommonmark",
    "rtree",
    "setuptools <59.6.0",
    "slidingwindow",
    "sphinx >=1.8",
    "torchvision",
    "tqdm",
    "xmltodict"
   ]
  },
  "source": {
   "sha256": "16d95ff2e254c3f676df18db5f4f8de18037889dca682e3463452dacf9058f59",
   "url": "https://pypi.io/packages/source/d/deepforest/deepforest-1.2.4.tar.gz"
  },
  "test": {
   "imports": [
    "deepforest",
    "deepforest.main"
   ],
   "source_files": [
    "tests/*"
   ]
  }
 },
 "version": "1.2.4"
}
{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.24.0",
  "conda_version": "23.3.1",
  "description": "`TensorDict` is a dictionary-like class that inherits properties from tensors,\nsuch as indexing, shape operations, casting to device or point-to-point communication\nin distributed settings.\n\nThe main purpose of TensorDict is to make code-bases more _readable_ and _modular_ by\nabstracting away tailored operations:\n\n```python\nfor i, tensordict in enumerate(dataset):\n    tensordict = model(tensordict)\n    loss = loss_module(tensordict)\n    loss.backward()\n    optimizer.step()\n    optimizer.zero_grad()\n```\n\nWith this level of abstraction, one can recycle a training loop for highly heterogeneous task.\nEach individual step of the training loop (data collection and transform, model prediction,\nloss computation etc.) can be tailored to the use case at hand without impacting the others.\nFor instance, the above example can be easily used across classification and segmentation tasks,\namong many others.\n\nPyPI: [https://pypi.org/project/tensordict/](https://pypi.org/project/tensordict/)\n\n---\n\n\n:fire: The conda-forge recipe was generated with [Conda-Forger App](https://sugatoray-conda-forger.streamlit.app/).\n\n:point_right: [![Streamlit App](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://sugatoray-conda-forger.streamlit.app/)\n\n[_streamlit-conda-forger-app]: https://sugatoray-conda-forger.streamlit.app/\n",
  "dev_url": "https://github.com/pytorch-labs/tensordict",
  "doc_url": "https://pytorch-labs.github.io/tensordict/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "sugatoray"
   ]
  },
  "home": "https://github.com/pytorch-labs/tensordict",
  "identifiers": [],
  "keywords": [],
  "license": "MIT",
  "license_file": "LICENSE",
  "root_pkgs": [
   "ripgrep 13.0.0 h2f28480_2",
   "requests-toolbelt 0.10.1 pyhd8ed1ab_0",
   "libiconv 1.17 h166bdaf_0",
   "xorg-libxau 1.0.9 h7f98852_0",
   "reproc 14.2.4 h0b41bf4_0",
   "mdurl 0.1.0 pyhd8ed1ab_0",
   "prompt-toolkit 3.0.38 pyha770c72_0",
   "importlib-metadata 6.6.0 pyha770c72_0",
   "markupsafe 2.1.2 py310h1fa729e_0",
   "libexpat 2.5.0 hcb278e6_1",
   "git 2.40.1 pl5321h86e50cf_0",
   "curl 8.0.1 h588be90_0",
   "pyopenssl 23.1.1 pyhd8ed1ab_0",
   "idna 3.4 pyhd8ed1ab_0",
   "libcurl 8.0.1 h588be90_0",
   "glob2 0.7 py_0",
   "python-libarchive-c 4.0 py310hff52083_2",
   "python_abi 3.10 3_cp310",
   "libnghttp2 1.52.0 h61bc06f_0",
   "chardet 5.1.0 py310hff52083_0",
   "pkginfo 1.9.6 pyhd8ed1ab_0",
   "ruamel.yaml.clib 0.2.7 py310h1fa729e_1",
   "boltons 23.0.0 pyhd8ed1ab_0",
   "libedit 3.1.20191231 he28a2e2_2",
   "brotlipy 0.7.0 py310h5764c6d_1005",
   "sniffio 1.3.0 pyhd8ed1ab_0",
   "libsolv 0.7.23 h3eb15da_0",
   "wcwidth 0.2.6 pyhd8ed1ab_0",
   "pyrsistent 0.19.3 py310h1fa729e_0",
   "joblib 1.2.0 pyhd8ed1ab_0",
   "packaging 23.1 pyhd8ed1ab_0",
   "beautifulsoup4 4.12.2 pyha770c72_0",
   "libmambapy 1.4.2 py310h1428755_0",
   "libstdcxx-ng 12.2.0 h46fd767_19",
   "ruamel.yaml 0.17.21 py310h1fa729e_3",
   "boa 0.14.0 pyhd8ed1ab_4",
   "conda-package-handling 2.0.2 pyh38be061_0",
   "libpng 1.6.39 h753d276_0",
   "libjpeg-turbo 2.1.5.1 h0b41bf4_0",
   "soupsieve 2.3.2.post1 pyhd8ed1ab_0",
   "lerc 4.0.0 h27087fc_0",
   "markdown-it-py 2.2.0 pyhd8ed1ab_0",
   "yaml-cpp 0.7.0 h27087fc_2",
   "tornado 6.3 py310h1fa729e_0",
   "zstd 1.5.2 h3eb15da_6",
   "toolz 0.12.0 pyhd8ed1ab_0",
   "prompt_toolkit 3.0.38 hd8ed1ab_0",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "yaml 0.2.5 h7f98852_2",
   "dataclasses 0.8 pyhc8e2a94_3",
   "xorg-libxdmcp 1.1.3 h7f98852_0",
   "lz4-c 1.9.4 hcb278e6_0",
   "lcms2 2.15 haa2dc70_1",
   "jinja2 3.1.2 pyhd8ed1ab_1",
   "charset-normalizer 3.1.0 pyhd8ed1ab_0",
   "libssh2 1.10.0 hf14f497_3",
   "pyyaml 6.0 py310h5764c6d_5",
   "conda 23.3.1 py310hff52083_0",
   "libarchive 3.6.2 h3d51595_0",
   "json5 0.9.5 pyh9f0ad1d_0",
   "colorama 0.4.6 pyhd8ed1ab_0",
   "perl 5.32.1 2_h7f98852_perl5",
   "jsonpointer 2.0 py_0",
   "libdeflate 1.18 h0b41bf4_0",
   "icu 72.1 hcb278e6_0",
   "jsonpatch 1.32 pyhd8ed1ab_0",
   "requests 2.29.0 pyhd8ed1ab_0",
   "libuuid 2.38.1 h0b41bf4_0",
   "setuptools 67.7.2 pyhd8ed1ab_0",
   "libzlib 1.2.13 h166bdaf_4",
   "cffi 1.15.1 py310h255011f_3",
   "rich 13.3.5 pyhd8ed1ab_0",
   "pycparser 2.21 pyhd8ed1ab_0",
   "backports 1.0 pyhd8ed1ab_3",
   "keyutils 1.6.1 h166bdaf_0",
   "pybind11-abi 4 hd8ed1ab_3",
   "bzip2 1.0.8 h7f98852_4",
   "liblief 0.12.3 h27087fc_0",
   "anyio 3.6.2 pyhd8ed1ab_0",
   "patchelf 0.17.2 h58526e2_0",
   "libev 4.33 h516909a_1",
   "gettext 0.21.1 h27087fc_0",
   "libgomp 12.2.0 h65d4601_19",
   "urllib3 1.26.15 pyhd8ed1ab_0",
   "krb5 1.20.1 h81ceb04_0",
   "pluggy 1.0.0 pyhd8ed1ab_5",
   "patch 2.7.6 h7f98852_1002",
   "pytz 2023.3 pyhd8ed1ab_0",
   "c-ares 1.18.1 h7f98852_0",
   "ncurses 6.3 h27087fc_1",
   "readline 8.2 h8228510_1",
   "platformdirs 3.5.0 pyhd8ed1ab_0",
   "py-lief 0.12.3 py310hd8f1fbe_0",
   "pip 23.1.2 pyhd8ed1ab_0",
   "libxcb 1.13 h7f98852_1004",
   "lzo 2.10 h516909a_1000",
   "tini 0.19.0 h166bdaf_1",
   "wheel 0.40.0 pyhd8ed1ab_0",
   "pysocks 1.7.1 pyha2e5f31_6",
   "_openmp_mutex 4.5 2_gnu",
   "jsonschema 4.17.3 pyhd8ed1ab_0",
   "conda-build 3.24.0 py310hff52083_1",
   "typing_extensions 4.5.0 pyha770c72_0",
   "clyent 1.2.2 py_1",
   "su-exec 0.2 h166bdaf_1003",
   "pthread-stubs 0.4 h36c2ea0_1001",
   "libmamba 1.4.2 hcea66bb_0",
   "python 3.10.10 he550d4f_0_cpython",
   "typing-extensions 4.5.0 hd8ed1ab_0",
   "libwebp-base 1.3.0 h0b41bf4_0",
   "tzdata 2023c h71feb2d_0",
   "python-fastjsonschema 2.16.3 pyhd8ed1ab_0",
   "attrs 22.2.0 pyh71513ae_0",
   "libffi 3.4.2 h7f98852_5",
   "tk 8.6.12 h27826a3_0",
   "fmt 9.1.0 h924138e_0",
   "cryptography 40.0.2 py310h34c0648_0",
   "six 1.16.0 pyh6c4a22f_0",
   "psutil 5.9.5 py310h1fa729e_0",
   "pygments 2.15.1 pyhd8ed1ab_0",
   "zstandard 0.19.0 py310hdeb6495_1",
   "libtiff 4.5.0 ha587672_6",
   "nbformat 5.8.0 pyhd8ed1ab_0",
   "jupyter_core 5.3.0 py310hff52083_0",
   "libnsl 2.0.0 h7f98852_0",
   "pcre2 10.40 hc3806b6_0",
   "_libgcc_mutex 0.1 conda_forge",
   "watchgod 0.8.2 pyhd8ed1ab_0",
   "defusedxml 0.7.1 pyhd8ed1ab_0",
   "traitlets 5.9.0 pyhd8ed1ab_0",
   "certifi 2022.12.7 pyhd8ed1ab_0",
   "pillow 9.5.0 py310h065c6d2_0",
   "tomli 2.0.1 pyhd8ed1ab_0",
   "filelock 3.12.0 pyhd8ed1ab_0",
   "pycosat 0.6.4 py310h5764c6d_1",
   "ruamel_yaml 0.15.80 py310h5764c6d_1008",
   "tqdm 4.65.0 pyhd8ed1ab_1",
   "anaconda-project 0.11.1 pyhd8ed1ab_0",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "xz 5.2.6 h166bdaf_0",
   "ld_impl_linux-64 2.40 h41732ed_0",
   "freetype 2.12.1 hca18f0e_1",
   "ca-certificates 2022.12.7 ha878542_0",
   "anaconda-client 1.11.2 pyhd8ed1ab_0",
   "conda-pack 0.7.0 pyh6c4a22f_0",
   "importlib_resources 5.12.0 pyhd8ed1ab_0",
   "reproc-cpp 14.2.4 hcb278e6_0",
   "conda-package-streaming 0.7.0 pyhd8ed1ab_1",
   "libxml2 2.10.4 hfdac1af_0",
   "pkgutil-resolve-name 1.3.10 pyhd8ed1ab_0",
   "libsqlite 3.40.0 h753d276_1",
   "mamba 1.4.2 py310h51d5547_0",
   "openjpeg 2.5.0 hfec8fc6_2",
   "libgcc-ng 12.2.0 h65d4601_19",
   "zipp 3.15.0 pyhd8ed1ab_0",
   "conda-oci-mirror 0.1.0 pyhd8ed1ab_0",
   "oras-py 0.1.14 pyhd8ed1ab_0",
   "jq 1.6 h36c2ea0_1000",
   "openssl 3.1.0 hd590300_3",
   "conda-forge-ci-setup 3.31.0 py310hce54274_100",
   "conda-forge-metadata 0.4.1 pyhd8ed1ab_0",
   "click 8.1.3 unix_pyhd8ed1ab_2",
   "oniguruma 6.9.8 h166bdaf_0",
   "conda-env 2.6.0 1",
   "shyaml 0.6.2 pyhd3deb0d_0"
  ],
  "summary": "TensorDict is a pytorch dedicated tensor container.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "cdt_name": "cos6",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "docker_image": "quay.io/condaforge/linux-anvil-cos7-x86_64",
  "extend_keys": [
   "pin_run_as_build",
   "extend_keys",
   "ignore_build_only_deps",
   "ignore_version"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "numpy": "1.21",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.10",
  "pytorch": "1.13",
  "r_base": "3.5",
  "target_platform": "linux-64"
 },
 "conda_pkg_format": "2",
 "files": [
  "site-packages/tensordict-0.1.1+5b467a2.dist-info/INSTALLER",
  "site-packages/tensordict-0.1.1+5b467a2.dist-info/LICENSE",
  "site-packages/tensordict-0.1.1+5b467a2.dist-info/METADATA",
  "site-packages/tensordict-0.1.1+5b467a2.dist-info/RECORD",
  "site-packages/tensordict-0.1.1+5b467a2.dist-info/REQUESTED",
  "site-packages/tensordict-0.1.1+5b467a2.dist-info/WHEEL",
  "site-packages/tensordict-0.1.1+5b467a2.dist-info/direct_url.json",
  "site-packages/tensordict/__init__.py",
  "site-packages/tensordict/_contextlib.py",
  "site-packages/tensordict/memmap.py",
  "site-packages/tensordict/nn/__init__.py",
  "site-packages/tensordict/nn/common.py",
  "site-packages/tensordict/nn/distributions/__init__.py",
  "site-packages/tensordict/nn/distributions/continuous.py",
  "site-packages/tensordict/nn/distributions/discrete.py",
  "site-packages/tensordict/nn/distributions/truncated_normal.py",
  "site-packages/tensordict/nn/distributions/utils.py",
  "site-packages/tensordict/nn/functional_modules.py",
  "site-packages/tensordict/nn/probabilistic.py",
  "site-packages/tensordict/nn/sequence.py",
  "site-packages/tensordict/nn/utils.py",
  "site-packages/tensordict/persistent.py",
  "site-packages/tensordict/prototype/__init__.py",
  "site-packages/tensordict/prototype/fx.py",
  "site-packages/tensordict/prototype/tensorclass.py",
  "site-packages/tensordict/tensorclass.py",
  "site-packages/tensordict/tensordict.py",
  "site-packages/tensordict/utils.py",
  "site-packages/tensordict/version.py"
 ],
 "index": {
  "arch": null,
  "build": "pyh6074d0b_0",
  "build_number": 0,
  "depends": [
   "cloudpickle",
   "numpy",
   "python >=3.8",
   "pytorch"
  ],
  "license": "MIT",
  "name": "tensordict",
  "noarch": "python",
  "platform": null,
  "subdir": "noarch",
  "timestamp": 1683416787162,
  "version": "0.1.1"
 },
 "metadata_version": 1,
 "name": "tensordict",
 "raw_recipe": "{% set name = \"tensordict\" %}\n{% set version = \"0.1.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  # NOTE:\n  # The PyPI address does not have any package-source available yet\n  # Once the source is added there, change the recipe to build with\n  # the source from PyPI.\n  url: https://github.com/pytorch-labs/tensordict/archive/v{{ version }}.tar.gz\n  sha256: b0d8ff823cc556c317fce3f9c26234305a5196e73939cc186a2be01aa3fb1347\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - python >=3.8\n    - setuptools\n    - wheel\n    - pytorch\n    - pip\n  run:\n    - python >=3.8\n    - pytorch\n    - numpy\n    - cloudpickle\n\ntest:\n  imports:\n    - tensordict\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/pytorch-labs/tensordict\n  summary: TensorDict is a pytorch dedicated tensor container.\n  license: MIT\n  license_file: LICENSE\n  description: |\n    `TensorDict` is a dictionary-like class that inherits properties from tensors,\n    such as indexing, shape operations, casting to device or point-to-point communication\n    in distributed settings.\n\n    The main purpose of TensorDict is to make code-bases more _readable_ and _modular_ by\n    abstracting away tailored operations:\n\n    ```python\n    for i, tensordict in enumerate(dataset):\n        # the model reads and writes tensordicts\n        tensordict = model(tensordict)\n        loss = loss_module(tensordict)\n        loss.backward()\n        optimizer.step()\n        optimizer.zero_grad()\n    ```\n\n    With this level of abstraction, one can recycle a training loop for highly heterogeneous task.\n    Each individual step of the training loop (data collection and transform, model prediction,\n    loss computation etc.) can be tailored to the use case at hand without impacting the others.\n    For instance, the above example can be easily used across classification and segmentation tasks,\n    among many others.\n\n    PyPI: [https://pypi.org/project/tensordict/](https://pypi.org/project/tensordict/)\n\n    ---\n\n    ### **Conda-Forge Package Made with Conda-Forger App**: :zap:\n\n    :fire: The conda-forge recipe was generated with [Conda-Forger App](https://sugatoray-conda-forger.streamlit.app/).\n\n    :point_right: [![Streamlit App](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://sugatoray-conda-forger.streamlit.app/)\n\n    [_streamlit-conda-forger-app]: https://sugatoray-conda-forger.streamlit.app/\n\n  doc_url: https://pytorch-labs.github.io/tensordict/\n  dev_url: https://github.com/pytorch-labs/tensordict\n\nextra:\n  recipe-maintainers:\n    - sugatoray\n",
 "rendered_recipe": {
  "about": {
   "description": "`TensorDict` is a dictionary-like class that inherits properties from tensors,\nsuch as indexing, shape operations, casting to device or point-to-point communication\nin distributed settings.\n\nThe main purpose of TensorDict is to make code-bases more _readable_ and _modular_ by\nabstracting away tailored operations:\n\n```python\nfor i, tensordict in enumerate(dataset):\n    tensordict = model(tensordict)\n    loss = loss_module(tensordict)\n    loss.backward()\n    optimizer.step()\n    optimizer.zero_grad()\n```\n\nWith this level of abstraction, one can recycle a training loop for highly heterogeneous task.\nEach individual step of the training loop (data collection and transform, model prediction,\nloss computation etc.) can be tailored to the use case at hand without impacting the others.\nFor instance, the above example can be easily used across classification and segmentation tasks,\namong many others.\n\nPyPI: [https://pypi.org/project/tensordict/](https://pypi.org/project/tensordict/)\n\n---\n\n\n:fire: The conda-forge recipe was generated with [Conda-Forger App](https://sugatoray-conda-forger.streamlit.app/).\n\n:point_right: [![Streamlit App](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://sugatoray-conda-forger.streamlit.app/)\n\n[_streamlit-conda-forger-app]: https://sugatoray-conda-forger.streamlit.app/\n",
   "dev_url": "https://github.com/pytorch-labs/tensordict",
   "doc_url": "https://pytorch-labs.github.io/tensordict/",
   "home": "https://github.com/pytorch-labs/tensordict",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "TensorDict is a pytorch dedicated tensor container."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/home/conda/feedstock_root/build_artifacts/tensordict_1683416620952/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv",
   "string": "pyh6074d0b_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "sugatoray"
   ]
  },
  "package": {
   "name": "tensordict",
   "version": "0.1.1"
  },
  "requirements": {
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 2_kmp_llvm",
    "bzip2 1.0.8 h7f98852_4",
    "ca-certificates 2022.12.7 ha878542_0",
    "icu 72.1 hcb278e6_0",
    "ld_impl_linux-64 2.40 h41732ed_0",
    "libblas 3.9.0 16_linux64_openblas",
    "libcblas 3.9.0 16_linux64_openblas",
    "libexpat 2.5.0 hcb278e6_1",
    "libffi 3.4.2 h7f98852_5",
    "libgcc-ng 12.2.0 h65d4601_19",
    "libgfortran-ng 12.2.0 h69a702a_19",
    "libgfortran5 12.2.0 h337968e_19",
    "libhwloc 2.9.1 hd6dc26d_0",
    "libiconv 1.17 h166bdaf_0",
    "liblapack 3.9.0 16_linux64_openblas",
    "libnsl 2.0.0 h7f98852_0",
    "libopenblas 0.3.21 pthreads_h78a6416_3",
    "libprotobuf 3.21.12 h3eb15da_0",
    "libsqlite 3.40.0 h753d276_1",
    "libstdcxx-ng 12.2.0 h46fd767_19",
    "libuuid 2.38.1 h0b41bf4_0",
    "libxml2 2.10.4 hfdac1af_0",
    "libzlib 1.2.13 h166bdaf_4",
    "llvm-openmp 16.0.3 h4dfa4b3_0",
    "mkl 2022.2.1 h84fe81f_16997",
    "ncurses 6.3 h27087fc_1",
    "numpy 1.24.3 py311h64a7726_0",
    "openssl 3.1.0 hd590300_3",
    "pip 23.1.2 pyhd8ed1ab_0",
    "python 3.11.3 h2755cc3_0_cpython",
    "python_abi 3.11 3_cp311",
    "pytorch 1.13.1 cpu_py311h410fd25_1",
    "readline 8.2 h8228510_1",
    "setuptools 67.7.2 pyhd8ed1ab_0",
    "sleef 3.5.1 h9b69904_2",
    "tbb 2021.9.0 hf52228f_0",
    "tk 8.6.12 h27826a3_0",
    "typing_extensions 4.5.0 pyha770c72_0",
    "tzdata 2023c h71feb2d_0",
    "wheel 0.40.0 pyhd8ed1ab_0",
    "xz 5.2.6 h166bdaf_0",
    "zstd 1.5.2 h3eb15da_6"
   ],
   "run": [
    "cloudpickle",
    "numpy",
    "python >=3.8",
    "pytorch"
   ]
  },
  "source": {
   "sha256": "b0d8ff823cc556c317fce3f9c26234305a5196e73939cc186a2be01aa3fb1347",
   "url": "https://github.com/pytorch-labs/tensordict/archive/v0.1.1.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "tensordict"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "version": "0.1.1"
}
{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.23.2",
  "conda_version": "22.9.0",
  "description": "OpenTelemetry is a collection of tools, APIs, and SDKs. Use it to\ninstrument, generate, collect, and export telemetry data (metrics,\nlogs, and traces) to help you analyze your software\u2019s performance\nand behavior.\n",
  "dev_url": "https://github.com/open-telemetry/opentelemetry-cpp",
  "doc_url": "https://opentelemetry.io/docs/instrumentation/cpp/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "lidavidm"
   ]
  },
  "home": "https://github.com/open-telemetry/opentelemetry-cpp",
  "identifiers": [],
  "keywords": [],
  "license": "Apache-2.0",
  "license_family": "APACHE",
  "license_file": "LICENSE",
  "root_pkgs": [
   "importlib-metadata 5.1.0 pyha770c72_0",
   "ncurses 6.3 h27087fc_1",
   "charset-normalizer 2.1.1 pyhd8ed1ab_0",
   "icu 70.1 h27087fc_0",
   "certifi 2022.9.24 pyhd8ed1ab_0",
   "zstd 1.5.2 h6239696_4",
   "reproc-cpp 14.2.3 h9c3ff4c_0",
   "rich 12.6.0 pyhd8ed1ab_0",
   "pyopenssl 22.1.0 pyhd8ed1ab_0",
   "lz4-c 1.9.3 h9c3ff4c_1",
   "commonmark 0.9.1 py_0",
   "libsqlite 3.40.0 h753d276_0",
   "python 3.10.8 h4a9ceb5_0_cpython",
   "ruamel.yaml.clib 0.2.7 py310h5764c6d_0",
   "conda-package-streaming 0.7.0 pyhd8ed1ab_1",
   "lzo 2.10 h516909a_1000",
   "expat 2.5.0 h27087fc_0",
   "_libgcc_mutex 0.1 conda_forge",
   "wcwidth 0.2.5 pyh9f0ad1d_2",
   "pycparser 2.21 pyhd8ed1ab_0",
   "pytz 2022.6 pyhd8ed1ab_0",
   "libiconv 1.17 h166bdaf_0",
   "bzip2 1.0.8 h7f98852_4",
   "brotlipy 0.7.0 py310h5764c6d_1005",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "fmt 9.1.0 h924138e_0",
   "prompt_toolkit 3.0.33 hd8ed1ab_0",
   "boa 0.13.0 pyha770c72_1",
   "libuuid 2.32.1 h7f98852_1000",
   "ld_impl_linux-64 2.39 hcc3a1bd_1",
   "curl 7.86.0 h2283fc2_1",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "libxml2 2.10.3 h7463322_0",
   "chardet 5.1.0 py310hff52083_0",
   "libgcc-ng 12.2.0 h65d4601_19",
   "libssh2 1.10.0 hf14f497_3",
   "pygments 2.13.0 pyhd8ed1ab_0",
   "ca-certificates 2022.9.24 ha878542_0",
   "jinja2 3.1.2 pyhd8ed1ab_1",
   "glob2 0.7 py_0",
   "filelock 3.8.0 pyhd8ed1ab_0",
   "tini 0.19.0 h166bdaf_1",
   "python-fastjsonschema 2.16.2 pyhd8ed1ab_0",
   "libffi 3.4.2 h7f98852_5",
   "traitlets 5.6.0 pyhd8ed1ab_0",
   "libsolv 0.7.22 h6239696_0",
   "json5 0.9.5 pyh9f0ad1d_0",
   "clyent 1.2.2 py_1",
   "yaml-cpp 0.7.0 h27087fc_2",
   "wheel 0.38.4 pyhd8ed1ab_0",
   "toml 0.10.2 pyhd8ed1ab_0",
   "prompt-toolkit 3.0.33 pyha770c72_0",
   "pysocks 1.7.1 pyha2e5f31_6",
   "platformdirs 2.5.2 pyhd8ed1ab_1",
   "cffi 1.15.1 py310h255011f_2",
   "ripgrep 13.0.0 h2f28480_2",
   "pyyaml 6.0 py310h5764c6d_5",
   "psutil 5.9.4 py310h5764c6d_0",
   "_openmp_mutex 4.5 2_gnu",
   "yaml 0.2.5 h7f98852_2",
   "readline 8.1.2 h0f457ee_0",
   "backports 1.0 pyhd8ed1ab_3",
   "pycosat 0.6.4 py310h5764c6d_1",
   "anaconda-client 1.11.0 pyhd8ed1ab_1",
   "pkginfo 1.9.2 pyhd8ed1ab_0",
   "pkgutil-resolve-name 1.3.10 pyhd8ed1ab_0",
   "keyutils 1.6.1 h166bdaf_0",
   "libmamba 1.0.0 h9eff5f0_2",
   "python_abi 3.10 3_cp310",
   "xz 5.2.6 h166bdaf_0",
   "libzlib 1.2.13 h166bdaf_4",
   "colorama 0.4.6 pyhd8ed1ab_0",
   "c-ares 1.18.1 h7f98852_0",
   "joblib 1.2.0 pyhd8ed1ab_0",
   "typing_extensions 4.4.0 pyha770c72_0",
   "zstandard 0.19.0 py310hdeb6495_1",
   "setuptools 65.5.1 pyhd8ed1ab_0",
   "git 2.38.1 pl5321h8df7355_1",
   "gettext 0.21.1 h27087fc_0",
   "ruamel.yaml 0.17.21 py310h5764c6d_2",
   "sniffio 1.3.0 pyhd8ed1ab_0",
   "six 1.16.0 pyh6c4a22f_0",
   "conda 22.9.0 py310hff52083_2",
   "nbformat 5.7.0 pyhd8ed1ab_0",
   "pip 22.3.1 pyhd8ed1ab_0",
   "patchelf 0.17.0 h58526e2_0",
   "libnghttp2 1.47.0 hff17c54_1",
   "dataclasses 0.8 pyhc8e2a94_3",
   "patch 2.7.6 h7f98852_1002",
   "zipp 3.11.0 pyhd8ed1ab_0",
   "pcre2 10.40 hc3806b6_0",
   "mamba 1.0.0 py310h51d5547_2",
   "jupyter_core 5.1.0 py310hff52083_0",
   "cryptography 38.0.4 py310h600f1e7_0",
   "libedit 3.1.20191231 he28a2e2_2",
   "su-exec 0.2 h166bdaf_1003",
   "soupsieve 2.3.2.post1 pyhd8ed1ab_0",
   "libgomp 12.2.0 h65d4601_19",
   "tqdm 4.64.1 pyhd8ed1ab_0",
   "jsonschema 4.17.3 pyhd8ed1ab_0",
   "toolz 0.12.0 pyhd8ed1ab_0",
   "tzdata 2022g h191b570_0",
   "libarchive 3.5.2 hada088e_3",
   "python-libarchive-c 4.0 py310hff52083_2",
   "perl 5.32.1 2_h7f98852_perl5",
   "beautifulsoup4 4.11.1 pyha770c72_0",
   "libnsl 2.0.0 h7f98852_0",
   "tk 8.6.12 h27826a3_0",
   "importlib_resources 5.10.0 pyhd8ed1ab_0",
   "pybind11-abi 4 hd8ed1ab_3",
   "urllib3 1.26.13 pyhd8ed1ab_0",
   "markupsafe 2.1.1 py310h5764c6d_2",
   "watchgod 0.8.2 pyhd8ed1ab_0",
   "idna 3.4 pyhd8ed1ab_0",
   "pyrsistent 0.19.2 py310h5764c6d_0",
   "requests 2.28.1 pyhd8ed1ab_1",
   "libcurl 7.86.0 h2283fc2_1",
   "libmambapy 1.0.0 py310hd5a56e8_2",
   "conda-package-handling 2.0.2 pyh38be061_0",
   "future 0.18.2 pyhd8ed1ab_6",
   "libstdcxx-ng 12.2.0 h46fd767_19",
   "libev 4.33 h516909a_1",
   "anyio 3.6.2 pyhd8ed1ab_0",
   "krb5 1.19.3 h08a2579_0",
   "ruamel_yaml 0.15.80 py310h5764c6d_1008",
   "reproc 14.2.3 h7f98852_0",
   "attrs 22.1.0 pyh71513ae_1",
   "conda-env 2.6.0 1",
   "click 8.1.3 unix_pyhd8ed1ab_2",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "jq 1.6 h36c2ea0_1000",
   "conda-build 3.23.2 py310hff52083_1",
   "py-lief 0.11.5 py310h122e73d_1",
   "openssl 3.0.7 h0b41bf4_1",
   "oniguruma 6.9.8 h166bdaf_0",
   "conda-forge-ci-setup 3.24.5 py310hce54274_100",
   "liblief 0.11.5 h9c3ff4c_1"
  ],
  "summary": "The OpenTelemetry C++ Client",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "CMAKE_CROSSCOMPILING_EMULATOR": "/usr/bin/qemu-ppc64le-static",
  "CROSSCOMPILING_EMULATOR": "/usr/bin/qemu-ppc64le-static",
  "build_platform": "linux-64",
  "c_compiler": "gcc",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "11",
  "docker_image": "quay.io/condaforge/linux-anvil-cos7-x86_64",
  "extend_keys": [
   "ignore_version",
   "extend_keys",
   "pin_run_as_build",
   "ignore_build_only_deps"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.10",
  "r_base": "3.5",
  "target_platform": "linux-ppc64le"
 },
 "conda_pkg_format": "2",
 "files": [
  "include/opentelemetry/baggage/baggage.h",
  "include/opentelemetry/baggage/baggage_context.h",
  "include/opentelemetry/baggage/propagation/baggage_propagator.h",
  "include/opentelemetry/common/attribute_value.h",
  "include/opentelemetry/common/key_value_iterable.h",
  "include/opentelemetry/common/key_value_iterable_view.h",
  "include/opentelemetry/common/kv_properties.h",
  "include/opentelemetry/common/macros.h",
  "include/opentelemetry/common/spin_lock_mutex.h",
  "include/opentelemetry/common/string_util.h",
  "include/opentelemetry/common/timestamp.h",
  "include/opentelemetry/config.h",
  "include/opentelemetry/context/context.h",
  "include/opentelemetry/context/context_value.h",
  "include/opentelemetry/context/propagation/composite_propagator.h",
  "include/opentelemetry/context/propagation/global_propagator.h",
  "include/opentelemetry/context/propagation/noop_propagator.h",
  "include/opentelemetry/context/propagation/text_map_propagator.h",
  "include/opentelemetry/context/runtime_context.h",
  "include/opentelemetry/detail/preprocessor.h",
  "include/opentelemetry/logs/logger.h",
  "include/opentelemetry/logs/logger_provider.h",
  "include/opentelemetry/logs/noop.h",
  "include/opentelemetry/logs/provider.h",
  "include/opentelemetry/logs/severity.h",
  "include/opentelemetry/metrics/async_instruments.h",
  "include/opentelemetry/metrics/meter.h",
  "include/opentelemetry/metrics/meter_provider.h",
  "include/opentelemetry/metrics/noop.h",
  "include/opentelemetry/metrics/observer_result.h",
  "include/opentelemetry/metrics/provider.h",
  "include/opentelemetry/metrics/sync_instruments.h",
  "include/opentelemetry/nostd/detail/all.h",
  "include/opentelemetry/nostd/detail/decay.h",
  "include/opentelemetry/nostd/detail/dependent_type.h",
  "include/opentelemetry/nostd/detail/functional.h",
  "include/opentelemetry/nostd/detail/invoke.h",
  "include/opentelemetry/nostd/detail/trait.h",
  "include/opentelemetry/nostd/detail/type_pack_element.h",
  "include/opentelemetry/nostd/detail/valueless.h",
  "include/opentelemetry/nostd/detail/variant_alternative.h",
  "include/opentelemetry/nostd/detail/variant_fwd.h",
  "include/opentelemetry/nostd/detail/variant_size.h",
  "include/opentelemetry/nostd/detail/void.h",
  "include/opentelemetry/nostd/function_ref.h",
  "include/opentelemetry/nostd/internal/absl/base/attributes.h",
  "include/opentelemetry/nostd/internal/absl/base/config.h",
  "include/opentelemetry/nostd/internal/absl/base/internal/identity.h",
  "include/opentelemetry/nostd/internal/absl/base/internal/inline_variable.h",
  "include/opentelemetry/nostd/internal/absl/base/internal/invoke.h",
  "include/opentelemetry/nostd/internal/absl/base/macros.h",
  "include/opentelemetry/nostd/internal/absl/base/optimization.h",
  "include/opentelemetry/nostd/internal/absl/base/options.h",
  "include/opentelemetry/nostd/internal/absl/base/policy_checks.h",
  "include/opentelemetry/nostd/internal/absl/base/port.h",
  "include/opentelemetry/nostd/internal/absl/meta/type_traits.h",
  "include/opentelemetry/nostd/internal/absl/types/bad_variant_access.h",
  "include/opentelemetry/nostd/internal/absl/types/internal/variant.h",
  "include/opentelemetry/nostd/internal/absl/types/variant.h",
  "include/opentelemetry/nostd/internal/absl/utility/utility.h",
  "include/opentelemetry/nostd/shared_ptr.h",
  "include/opentelemetry/nostd/span.h",
  "include/opentelemetry/nostd/string_view.h",
  "include/opentelemetry/nostd/type_traits.h",
  "include/opentelemetry/nostd/unique_ptr.h",
  "include/opentelemetry/nostd/utility.h",
  "include/opentelemetry/nostd/variant.h",
  "include/opentelemetry/plugin/detail/dynamic_library_handle.h",
  "include/opentelemetry/plugin/detail/dynamic_load_unix.h",
  "include/opentelemetry/plugin/detail/dynamic_load_windows.h",
  "include/opentelemetry/plugin/detail/loader_info.h",
  "include/opentelemetry/plugin/detail/tracer_handle.h",
  "include/opentelemetry/plugin/detail/utility.h",
  "include/opentelemetry/plugin/dynamic_load.h",
  "include/opentelemetry/plugin/factory.h",
  "include/opentelemetry/plugin/hook.h",
  "include/opentelemetry/plugin/tracer.h",
  "include/opentelemetry/std/shared_ptr.h",
  "include/opentelemetry/std/span.h",
  "include/opentelemetry/std/string_view.h",
  "include/opentelemetry/std/type_traits.h",
  "include/opentelemetry/std/unique_ptr.h",
  "include/opentelemetry/std/utility.h",
  "include/opentelemetry/std/variant.h",
  "include/opentelemetry/trace/canonical_code.h",
  "include/opentelemetry/trace/context.h",
  "include/opentelemetry/trace/default_span.h",
  "include/opentelemetry/trace/experimental_semantic_conventions.h",
  "include/opentelemetry/trace/noop.h",
  "include/opentelemetry/trace/propagation/b3_propagator.h",
  "include/opentelemetry/trace/propagation/detail/hex.h",
  "include/opentelemetry/trace/propagation/detail/string.h",
  "include/opentelemetry/trace/propagation/http_trace_context.h",
  "include/opentelemetry/trace/propagation/jaeger.h",
  "include/opentelemetry/trace/provider.h",
  "include/opentelemetry/trace/scope.h",
  "include/opentelemetry/trace/semantic_conventions.h",
  "include/opentelemetry/trace/span.h",
  "include/opentelemetry/trace/span_context.h",
  "include/opentelemetry/trace/span_context_kv_iterable.h",
  "include/opentelemetry/trace/span_context_kv_iterable_view.h",
  "include/opentelemetry/trace/span_id.h",
  "include/opentelemetry/trace/span_metadata.h",
  "include/opentelemetry/trace/span_startoptions.h",
  "include/opentelemetry/trace/trace_flags.h",
  "include/opentelemetry/trace/trace_id.h",
  "include/opentelemetry/trace/trace_state.h",
  "include/opentelemetry/trace/tracer.h",
  "include/opentelemetry/trace/tracer_provider.h",
  "include/opentelemetry/version.h",
  "lib/cmake/opentelemetry-cpp/opentelemetry-cpp-config-version.cmake",
  "lib/cmake/opentelemetry-cpp/opentelemetry-cpp-config.cmake",
  "lib/cmake/opentelemetry-cpp/opentelemetry-cpp-target.cmake"
 ],
 "index": {
  "arch": "ppc64le",
  "build": "he01d56d_0",
  "build_number": 0,
  "depends": [
   "libgcc-ng >=12",
   "libstdcxx-ng >=12"
  ],
  "license": "Apache-2.0",
  "license_family": "APACHE",
  "name": "cpp-opentelemetry-api",
  "platform": "linux",
  "subdir": "linux-ppc64le",
  "timestamp": 1670244075587,
  "version": "1.8.1"
 },
 "metadata_version": 1,
 "name": "cpp-opentelemetry-api",
 "raw_recipe": "{% set name = \"cpp-opentelemetry-api\" %}\n{% set version = \"1.8.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/open-telemetry/opentelemetry-cpp/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 3d640201594b07f08dade9cd1017bd0b59674daca26223b560b9bb6bf56264c2\n\nbuild:\n  number: 0\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake >=3.1\n    - ninja\n\ntest:\n  commands:\n    - test -d $PREFIX/include/opentelemetry/  # [unix]\n    - if not exist %LIBRARY_INC%\\opentelemetry exit 1  # [win]\n\nabout:\n  home: https://github.com/open-telemetry/opentelemetry-cpp\n  license: Apache-2.0\n  license_family: APACHE\n  license_file: LICENSE\n  summary: The OpenTelemetry C++ Client\n  description: |\n    OpenTelemetry is a collection of tools, APIs, and SDKs. Use it to\n    instrument, generate, collect, and export telemetry data (metrics,\n    logs, and traces) to help you analyze your software\u2019s performance\n    and behavior.\n  doc_url: https://opentelemetry.io/docs/instrumentation/cpp/\n  dev_url: https://github.com/open-telemetry/opentelemetry-cpp\n\nextra:\n  recipe-maintainers:\n    - lidavidm\n",
 "rendered_recipe": {
  "about": {
   "description": "OpenTelemetry is a collection of tools, APIs, and SDKs. Use it to\ninstrument, generate, collect, and export telemetry data (metrics,\nlogs, and traces) to help you analyze your software\u2019s performance\nand behavior.\n",
   "dev_url": "https://github.com/open-telemetry/opentelemetry-cpp",
   "doc_url": "https://opentelemetry.io/docs/instrumentation/cpp/",
   "home": "https://github.com/open-telemetry/opentelemetry-cpp",
   "license": "Apache-2.0",
   "license_family": "APACHE",
   "license_file": "LICENSE",
   "summary": "The OpenTelemetry C++ Client"
  },
  "build": {
   "number": "0",
   "string": "he01d56d_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "lidavidm"
   ]
  },
  "package": {
   "name": "cpp-opentelemetry-api",
   "version": "1.8.1"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 2_gnu",
    "binutils_impl_linux-64 2.39 he00db2b_1",
    "binutils_impl_linux-ppc64le 2.39 hfa2502d_1",
    "binutils_linux-ppc64le 2.39 hd308743_11",
    "bzip2 1.0.8 h7f98852_4",
    "c-ares 1.18.1 h7f98852_0",
    "ca-certificates 2022.9.24 ha878542_0",
    "cmake 3.25.1 h816a3e0_0",
    "expat 2.5.0 h27087fc_0",
    "gcc_impl_linux-64 11.3.0 hab1b70f_19",
    "gcc_impl_linux-ppc64le 11.3.0 hd66d8ab_19",
    "gcc_linux-ppc64le 11.3.0 h6e805a1_11",
    "gxx_impl_linux-64 11.3.0 hab1b70f_19",
    "gxx_impl_linux-ppc64le 11.3.0 hd66d8ab_19",
    "gxx_linux-ppc64le 11.3.0 hae34585_11",
    "kernel-headers_linux-64 2.6.32 he073ed8_15",
    "kernel-headers_linux-ppc64le 3.10.0 h23d7e6c_13",
    "keyutils 1.6.1 h166bdaf_0",
    "krb5 1.19.3 h08a2579_0",
    "ld_impl_linux-64 2.39 hcc3a1bd_1",
    "ld_impl_linux-ppc64le 2.39 h5d5c4ab_1",
    "libcurl 7.86.0 h2283fc2_1",
    "libedit 3.1.20191231 he28a2e2_2",
    "libev 4.33 h516909a_1",
    "libgcc-devel_linux-64 11.3.0 h210ce93_19",
    "libgcc-devel_linux-ppc64le 11.3.0 h0bad41f_19",
    "libgcc-ng 12.2.0 h65d4601_19",
    "libgomp 12.2.0 h65d4601_19",
    "libnghttp2 1.47.0 hff17c54_1",
    "libsanitizer 11.3.0 h239ccf8_19",
    "libssh2 1.10.0 hf14f497_3",
    "libstdcxx-devel_linux-64 11.3.0 h210ce93_19",
    "libstdcxx-devel_linux-ppc64le 11.3.0 h0bad41f_19",
    "libstdcxx-ng 12.2.0 h46fd767_19",
    "libuv 1.44.2 h166bdaf_0",
    "libzlib 1.2.13 h166bdaf_4",
    "ncurses 6.3 h27087fc_1",
    "ninja 1.11.0 h924138e_0",
    "openssl 3.0.7 h0b41bf4_1",
    "rhash 1.4.3 h166bdaf_0",
    "sysroot_linux-64 2.12 he073ed8_15",
    "sysroot_linux-ppc64le 2.17 h395ec9b_13",
    "xz 5.2.6 h166bdaf_0",
    "zlib 1.2.13 h166bdaf_4",
    "zstd 1.5.2 h6239696_4"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 2_gnu",
    "libgcc-ng 12.2.0 hbc1322c_19",
    "libgomp 12.2.0 hbc1322c_19",
    "libstdcxx-ng 12.2.0 h99369c6_19"
   ],
   "run": [
    "libgcc-ng >=12",
    "libstdcxx-ng >=12"
   ]
  },
  "source": {
   "sha256": "3d640201594b07f08dade9cd1017bd0b59674daca26223b560b9bb6bf56264c2",
   "url": "https://github.com/open-telemetry/opentelemetry-cpp/archive/refs/tags/v1.8.1.tar.gz"
  },
  "test": {
   "commands": [
    "test -d $PREFIX/include/opentelemetry/"
   ]
  }
 },
 "version": "1.8.1"
}
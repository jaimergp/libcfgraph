{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.21.8",
  "conda_private": false,
  "conda_version": "4.11.0",
  "description": "OpenTelemetry is a collection of tools, APIs, and SDKs. Use it to\ninstrument, generate, collect, and export telemetry data (metrics,\nlogs, and traces) to help you analyze your software\u2019s performance\nand behavior.\n",
  "dev_url": "https://github.com/open-telemetry/opentelemetry-cpp",
  "doc_url": "https://opentelemetry.io/docs/instrumentation/cpp/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "lidavidm"
   ]
  },
  "home": "https://github.com/open-telemetry/opentelemetry-cpp",
  "identifiers": [],
  "keywords": [],
  "license": "Apache-2.0",
  "license_family": "APACHE",
  "license_file": "LICENSE",
  "root_pkgs": [
   "tzdata 2021e he74cb21_0",
   "commonmark 0.9.1 py_0",
   "libedit 3.1.20191231 he28a2e2_2",
   "libnsl 2.0.0 h7f98852_0",
   "patchelf 0.14.3 h58526e2_0",
   "ld_impl_linux-64 2.36.1 hea4e1c9_2",
   "six 1.16.0 pyh6c4a22f_0",
   "colorama 0.4.4 pyh9f0ad1d_0",
   "wcwidth 0.2.5 pyh9f0ad1d_2",
   "liblief 0.11.5 h9c3ff4c_1",
   "psutil 5.9.0 py39h3811e60_0",
   "conda-package-handling 1.7.3 py39h3811e60_1",
   "pkginfo 1.8.2 pyhd8ed1ab_0",
   "future 0.18.2 py39hf3d152e_4",
   "charset-normalizer 2.0.11 pyhd8ed1ab_0",
   "lz4-c 1.9.3 h9c3ff4c_1",
   "pyrsistent 0.18.1 py39h3811e60_0",
   "gettext 0.19.8.1 h73d1719_1008",
   "openssl 1.1.1l h7f98852_0",
   "xz 5.2.5 h516909a_1",
   "libnghttp2 1.46.0 h812cca2_0",
   "ripgrep 13.0.0 habb4d0f_1",
   "anaconda-client 1.8.0 pyhd8ed1ab_0",
   "libstdcxx-ng 11.2.0 he4da1e4_12",
   "curl 7.81.0 h2574ce0_0",
   "typing_extensions 4.0.1 pyha770c72_0",
   "pybind11-abi 4 hd8ed1ab_3",
   "attrs 21.4.0 pyhd8ed1ab_0",
   "beautifulsoup4 4.10.0 pyha770c72_0",
   "cffi 1.15.0 py39h4bc2ebd_0",
   "ruamel_yaml 0.15.80 py39h3811e60_1006",
   "yaml 0.2.5 h7f98852_2",
   "_openmp_mutex 4.5 1_gnu",
   "json5 0.9.5 pyh9f0ad1d_0",
   "libgcc-ng 11.2.0 h1d223b6_12",
   "certifi 2021.10.8 py39hf3d152e_1",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "jupyter_core 4.9.1 py39hf3d152e_1",
   "py-lief 0.11.5 py39he80948d_1",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "backports 1.0 py_2",
   "python 3.9.10 h85951f9_2_cpython",
   "pip 22.0.3 pyhd8ed1ab_0",
   "wheel 0.37.1 pyhd8ed1ab_0",
   "chardet 4.0.0 py39hf3d152e_2",
   "su-exec 0.2 h516909a_1002",
   "sqlite 3.37.0 h9cd32fc_0",
   "markupsafe 2.0.1 py39h3811e60_1",
   "libiconv 1.16 h516909a_0",
   "dataclasses 0.8 pyhc8e2a94_3",
   "watchgod 0.7 pyhd8ed1ab_0",
   "libffi 3.4.2 h7f98852_5",
   "reproc 14.2.3 h7f98852_0",
   "pytz 2021.3 pyhd8ed1ab_0",
   "ruamel.yaml 0.17.19 py39h3811e60_0",
   "clyent 1.2.2 py_1",
   "glob2 0.7 py_0",
   "libev 4.33 h516909a_1",
   "libgomp 11.2.0 h1d223b6_12",
   "tini 0.19.0 h7f98852_0",
   "jinja2 3.0.3 pyhd8ed1ab_0",
   "importlib-metadata 4.11.0 py39hf3d152e_0",
   "rich 11.2.0 pyhd8ed1ab_0",
   "readline 8.1 h46c0cb4_0",
   "ipython_genutils 0.2.0 py_1",
   "pyyaml 6.0 py39h3811e60_3",
   "python_abi 3.9 2_cp39",
   "_libgcc_mutex 0.1 conda_forge",
   "ca-certificates 2021.10.8 ha878542_0",
   "libxml2 2.9.12 h885dcf4_1",
   "tqdm 4.62.3 pyhd8ed1ab_0",
   "idna 3.3 pyhd8ed1ab_0",
   "perl 5.32.1 1_h7f98852_perl5",
   "urllib3 1.26.8 pyhd8ed1ab_1",
   "libarchive 3.5.2 hccf745f_1",
   "ruamel.yaml.clib 0.2.6 py39h3811e60_0",
   "zstd 1.5.2 ha95c52a_0",
   "soupsieve 2.3.1 pyhd8ed1ab_0",
   "reproc-cpp 14.2.3 h9c3ff4c_0",
   "brotlipy 0.7.0 py39h3811e60_1003",
   "libcurl 7.81.0 h2574ce0_0",
   "requests 2.27.1 pyhd8ed1ab_0",
   "ncurses 6.3 h9c3ff4c_0",
   "pygments 2.11.2 pyhd8ed1ab_0",
   "cryptography 36.0.1 py39h95dcef6_0",
   "traitlets 5.1.1 pyhd8ed1ab_0",
   "pysocks 1.7.1 py39hf3d152e_4",
   "conda-build 3.21.8 py39hf3d152e_0",
   "pcre2 10.37 h032f7d1_0",
   "jsonschema 4.4.0 pyhd8ed1ab_0",
   "libssh2 1.10.0 ha56f1ee_2",
   "zipp 3.7.0 pyhd8ed1ab_1",
   "joblib 1.1.0 pyhd8ed1ab_0",
   "pyopenssl 22.0.0 pyhd8ed1ab_0",
   "tk 8.6.11 h27826a3_1",
   "lzo 2.10 h516909a_1000",
   "pycparser 2.21 pyhd8ed1ab_0",
   "expat 2.4.4 h9c3ff4c_0",
   "icu 69.1 h9c3ff4c_0",
   "conda 4.11.0 py39hf3d152e_0",
   "git 2.35.0 pl5321hc30692c_0",
   "bzip2 1.0.8 h7f98852_4",
   "setuptools 60.8.2 py39hf3d152e_0",
   "pycosat 0.6.3 py39h3811e60_1009",
   "python-libarchive-c 4.0 py39hf3d152e_0",
   "importlib_resources 5.4.0 pyhd8ed1ab_0",
   "libzlib 1.2.11 h36c2ea0_1013",
   "prompt_toolkit 3.0.27 hd8ed1ab_0",
   "patch 2.7.6 h7f98852_1002",
   "libsolv 0.7.19 h780b84a_5",
   "krb5 1.19.2 hcc1bbae_3",
   "prompt-toolkit 3.0.27 pyha770c72_0",
   "c-ares 1.18.1 h7f98852_0",
   "filelock 3.4.2 pyhd8ed1ab_1",
   "libuuid 2.32.1 h7f98852_1000",
   "zlib 1.2.11 h36c2ea0_1013",
   "yaml-cpp 0.6.3 he1b5a44_4",
   "nbformat 5.1.3 pyhd8ed1ab_0",
   "mamba 0.19.1 py39hfa8f2c8_0",
   "click 8.0.3 py39hf3d152e_1",
   "jq 1.6 h36c2ea0_1000",
   "conda-env 2.6.0 1",
   "conda-forge-ci-setup 3.18.1 py39h090c8b7_0",
   "libmambapy 0.19.1 py39h8bfa403_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "boa 0.8.2 pyha770c72_0",
   "libmamba 0.19.1 h3985d26_0",
   "oniguruma 6.9.7.1 h7f98852_0"
  ],
  "summary": "The OpenTelemetry C++ Client",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "CMAKE_CROSSCOMPILING_EMULATOR": "/usr/bin/qemu-ppc64le-static",
  "CROSSCOMPILING_EMULATOR": "/usr/bin/qemu-ppc64le-static",
  "build_platform": "linux-64",
  "c_compiler": "gcc",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "curl": "7",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "9",
  "docker_image": "quay.io/condaforge/linux-anvil-cos7-x86_64",
  "extend_keys": [
   "ignore_build_only_deps",
   "ignore_version",
   "pin_run_as_build",
   "extend_keys"
  ],
  "fortran_compiler": "gfortran",
  "grpc_cpp": "1.44",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "curl": {
    "max_pin": "x"
   },
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "zlib": {
    "max_pin": "x.x"
   }
  },
  "python": "3.9",
  "r_base": "3.5",
  "target_platform": "linux-ppc64le",
  "zlib": "1.2"
 },
 "files": [
  "include/opentelemetry/exporters/memory/in_memory_span_data.h",
  "include/opentelemetry/exporters/memory/in_memory_span_exporter.h",
  "include/opentelemetry/exporters/ostream/log_exporter.h",
  "include/opentelemetry/exporters/ostream/span_exporter.h",
  "include/opentelemetry/exporters/otlp/otlp_environment.h",
  "include/opentelemetry/exporters/otlp/otlp_grpc_exporter.h",
  "include/opentelemetry/exporters/otlp/otlp_grpc_exporter_options.h",
  "include/opentelemetry/exporters/otlp/otlp_grpc_log_exporter.h",
  "include/opentelemetry/exporters/otlp/otlp_http_client.h",
  "include/opentelemetry/exporters/otlp/otlp_http_exporter.h",
  "include/opentelemetry/exporters/otlp/otlp_http_log_exporter.h",
  "include/opentelemetry/exporters/otlp/otlp_log_recordable.h",
  "include/opentelemetry/exporters/otlp/otlp_recordable_utils.h",
  "include/opentelemetry/exporters/otlp/protobuf_include_prefix.h",
  "include/opentelemetry/exporters/otlp/protobuf_include_suffix.h",
  "include/opentelemetry/exporters/zipkin/zipkin_exporter.h",
  "include/opentelemetry/ext/http/client/curl/http_client_curl.h",
  "include/opentelemetry/ext/http/client/curl/http_operation_curl.h",
  "include/opentelemetry/ext/http/client/http_client.h",
  "include/opentelemetry/ext/http/client/http_client_factory.h",
  "include/opentelemetry/ext/http/common/url_parser.h",
  "include/opentelemetry/ext/http/server/file_http_server.h",
  "include/opentelemetry/ext/http/server/http_server.h",
  "include/opentelemetry/ext/http/server/socket_tools.h",
  "include/opentelemetry/ext/zpages/latency_boundaries.h",
  "include/opentelemetry/ext/zpages/static/tracez_index.h",
  "include/opentelemetry/ext/zpages/static/tracez_script.h",
  "include/opentelemetry/ext/zpages/static/tracez_style.h",
  "include/opentelemetry/ext/zpages/threadsafe_span_data.h",
  "include/opentelemetry/ext/zpages/tracez_data.h",
  "include/opentelemetry/ext/zpages/tracez_data_aggregator.h",
  "include/opentelemetry/ext/zpages/tracez_http_server.h",
  "include/opentelemetry/ext/zpages/tracez_processor.h",
  "include/opentelemetry/ext/zpages/tracez_shared_data.h",
  "include/opentelemetry/ext/zpages/zpages.h",
  "include/opentelemetry/ext/zpages/zpages_http_server.h",
  "include/opentelemetry/proto/collector/logs/v1/logs_service.grpc.pb.h",
  "include/opentelemetry/proto/collector/logs/v1/logs_service.pb.h",
  "include/opentelemetry/proto/collector/logs/v1/logs_service_mock.grpc.pb.h",
  "include/opentelemetry/proto/collector/metrics/v1/metrics_service.grpc.pb.h",
  "include/opentelemetry/proto/collector/metrics/v1/metrics_service.pb.h",
  "include/opentelemetry/proto/collector/metrics/v1/metrics_service_mock.grpc.pb.h",
  "include/opentelemetry/proto/collector/trace/v1/trace_service.grpc.pb.h",
  "include/opentelemetry/proto/collector/trace/v1/trace_service.pb.h",
  "include/opentelemetry/proto/collector/trace/v1/trace_service_mock.grpc.pb.h",
  "include/opentelemetry/proto/common/v1/common.grpc.pb.h",
  "include/opentelemetry/proto/common/v1/common.pb.h",
  "include/opentelemetry/proto/common/v1/common_mock.grpc.pb.h",
  "include/opentelemetry/proto/logs/v1/logs.grpc.pb.h",
  "include/opentelemetry/proto/logs/v1/logs.pb.h",
  "include/opentelemetry/proto/logs/v1/logs_mock.grpc.pb.h",
  "include/opentelemetry/proto/metrics/v1/metrics.grpc.pb.h",
  "include/opentelemetry/proto/metrics/v1/metrics.pb.h",
  "include/opentelemetry/proto/metrics/v1/metrics_mock.grpc.pb.h",
  "include/opentelemetry/proto/resource/v1/resource.grpc.pb.h",
  "include/opentelemetry/proto/resource/v1/resource.pb.h",
  "include/opentelemetry/proto/resource/v1/resource_mock.grpc.pb.h",
  "include/opentelemetry/proto/trace/v1/trace.grpc.pb.h",
  "include/opentelemetry/proto/trace/v1/trace.pb.h",
  "include/opentelemetry/proto/trace/v1/trace_mock.grpc.pb.h",
  "include/opentelemetry/sdk/_metrics/aggregator/aggregator.h",
  "include/opentelemetry/sdk/_metrics/aggregator/counter_aggregator.h",
  "include/opentelemetry/sdk/_metrics/aggregator/exact_aggregator.h",
  "include/opentelemetry/sdk/_metrics/aggregator/gauge_aggregator.h",
  "include/opentelemetry/sdk/_metrics/aggregator/histogram_aggregator.h",
  "include/opentelemetry/sdk/_metrics/aggregator/min_max_sum_count_aggregator.h",
  "include/opentelemetry/sdk/_metrics/aggregator/sketch_aggregator.h",
  "include/opentelemetry/sdk/_metrics/async_instruments.h",
  "include/opentelemetry/sdk/_metrics/controller.h",
  "include/opentelemetry/sdk/_metrics/exporter.h",
  "include/opentelemetry/sdk/_metrics/instrument.h",
  "include/opentelemetry/sdk/_metrics/meter.h",
  "include/opentelemetry/sdk/_metrics/meter_provider.h",
  "include/opentelemetry/sdk/_metrics/processor.h",
  "include/opentelemetry/sdk/_metrics/record.h",
  "include/opentelemetry/sdk/_metrics/sync_instruments.h",
  "include/opentelemetry/sdk/_metrics/ungrouped_processor.h",
  "include/opentelemetry/sdk/common/atomic_shared_ptr.h",
  "include/opentelemetry/sdk/common/atomic_unique_ptr.h",
  "include/opentelemetry/sdk/common/attribute_utils.h",
  "include/opentelemetry/sdk/common/circular_buffer.h",
  "include/opentelemetry/sdk/common/circular_buffer_range.h",
  "include/opentelemetry/sdk/common/empty_attributes.h",
  "include/opentelemetry/sdk/common/env_variables.h",
  "include/opentelemetry/sdk/common/exporter_utils.h",
  "include/opentelemetry/sdk/common/global_log_handler.h",
  "include/opentelemetry/sdk/instrumentationlibrary/instrumentation_library.h",
  "include/opentelemetry/sdk/logs/batch_log_processor.h",
  "include/opentelemetry/sdk/logs/exporter.h",
  "include/opentelemetry/sdk/logs/log_record.h",
  "include/opentelemetry/sdk/logs/logger.h",
  "include/opentelemetry/sdk/logs/logger_provider.h",
  "include/opentelemetry/sdk/logs/processor.h",
  "include/opentelemetry/sdk/logs/recordable.h",
  "include/opentelemetry/sdk/logs/simple_log_processor.h",
  "include/opentelemetry/sdk/metrics/meter.h",
  "include/opentelemetry/sdk/metrics/meter_context.h",
  "include/opentelemetry/sdk/metrics/meter_provider.h",
  "include/opentelemetry/sdk/metrics/metric_exporter.h",
  "include/opentelemetry/sdk/metrics/metric_reader.h",
  "include/opentelemetry/sdk/metrics/recordable.h",
  "include/opentelemetry/sdk/metrics/view.h",
  "include/opentelemetry/sdk/resource/experimental_semantic_conventions.h",
  "include/opentelemetry/sdk/resource/resource.h",
  "include/opentelemetry/sdk/resource/resource_detector.h",
  "include/opentelemetry/sdk/trace/batch_span_processor.h",
  "include/opentelemetry/sdk/trace/exporter.h",
  "include/opentelemetry/sdk/trace/id_generator.h",
  "include/opentelemetry/sdk/trace/multi_recordable.h",
  "include/opentelemetry/sdk/trace/multi_span_processor.h",
  "include/opentelemetry/sdk/trace/processor.h",
  "include/opentelemetry/sdk/trace/random_id_generator.h",
  "include/opentelemetry/sdk/trace/recordable.h",
  "include/opentelemetry/sdk/trace/sampler.h",
  "include/opentelemetry/sdk/trace/samplers/always_off.h",
  "include/opentelemetry/sdk/trace/samplers/always_on.h",
  "include/opentelemetry/sdk/trace/samplers/parent.h",
  "include/opentelemetry/sdk/trace/samplers/trace_id_ratio.h",
  "include/opentelemetry/sdk/trace/simple_processor.h",
  "include/opentelemetry/sdk/trace/span_data.h",
  "include/opentelemetry/sdk/trace/tracer.h",
  "include/opentelemetry/sdk/trace/tracer_context.h",
  "include/opentelemetry/sdk/trace/tracer_provider.h",
  "include/opentelemetry/sdk/version/version.h",
  "lib/cmake/opentelemetry-cpp/opentelemetry-cpp-config-version.cmake",
  "lib/cmake/opentelemetry-cpp/opentelemetry-cpp-config.cmake",
  "lib/cmake/opentelemetry-cpp/opentelemetry-cpp-target-release.cmake",
  "lib/cmake/opentelemetry-cpp/opentelemetry-cpp-target.cmake",
  "lib/libhttp_client_curl.a",
  "lib/libopentelemetry_common.a",
  "lib/libopentelemetry_exporter_ostream_span.a",
  "lib/libopentelemetry_exporter_otlp_grpc.a",
  "lib/libopentelemetry_exporter_otlp_grpc_log.a",
  "lib/libopentelemetry_exporter_otlp_http.a",
  "lib/libopentelemetry_exporter_otlp_http_client.a",
  "lib/libopentelemetry_exporter_zipkin_trace.a",
  "lib/libopentelemetry_metrics.a",
  "lib/libopentelemetry_otlp_recordable.a",
  "lib/libopentelemetry_proto.a",
  "lib/libopentelemetry_resources.a",
  "lib/libopentelemetry_trace.a",
  "lib/libopentelemetry_version.a"
 ],
 "index": {
  "arch": "ppc64le",
  "build": "hd6d2a79_3",
  "build_number": 3,
  "depends": [
   "cpp-opentelemetry-api 1.1.1.*",
   "curl >=7.81.0,<8.0a0",
   "grpc-cpp >=1.44.0,<1.45.0a0",
   "libgcc-ng >=9.4.0",
   "libprotobuf >=3.18",
   "libprotobuf >=3.19.4,<3.20.0a0",
   "libstdcxx-ng >=9.4.0",
   "libzlib >=1.2.11,<1.3.0a0",
   "nlohmann_json"
  ],
  "license": "Apache-2.0",
  "license_family": "APACHE",
  "name": "cpp-opentelemetry-sdk",
  "platform": "linux",
  "subdir": "linux-ppc64le",
  "timestamp": 1645017911609,
  "version": "1.1.1"
 },
 "metadata_version": 1,
 "name": "cpp-opentelemetry-sdk",
 "raw_recipe": "{% set name = \"cpp-opentelemetry-sdk\" %}\n{% set version = \"1.1.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/open-telemetry/opentelemetry-cpp/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: b4e231e6b18dc6945831c8964d09d4195899e9def7ff9d0d3fa5000800494f3c\n  patches:\n    - cross_compile_grpc_cpp_plugin_path.patch  # [build_platform != target_platform]\n\nbuild:\n  number: 3\n  always_include_files:\n    # Must overwrite the ones installed by cpp-opentelemetry-api\n    - lib/cmake/opentelemetry-cpp/  # [unix]\n    - Library/lib/cmake/opentelemetry-cpp/  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake >=3.1\n    - ninja\n    - proto-opentelemetry-proto =0.11.0\n\n    # For cross-compiling\n    - curl                # [build_platform != target_platform]\n    - grpc-cpp            # [build_platform != target_platform]\n    - libprotobuf >=3.18  # [build_platform != target_platform]\n    - nlohmann_json       # [build_platform != target_platform]\n    - zlib                # [build_platform != target_platform]\n  host:\n    # -api and -sdk packages of different versions are not necessarily\n    # compatible.\n    - cpp-opentelemetry-api ={{ version }}\n    - curl\n    - grpc-cpp\n    - libprotobuf >=3.18\n    - nlohmann_json\n    - zlib\n  run:\n    - cpp-opentelemetry-api ={{ version }}\n    - curl\n    - grpc-cpp\n    - libprotobuf >=3.18\n    - nlohmann_json\n\ntest:\n  commands:\n    - test -d $PREFIX/include/opentelemetry/sdk/  # [unix]\n    - test -d $PREFIX/lib/cmake/opentelemetry-cpp/  # [unix]\n    - test -f $PREFIX/lib/cmake/opentelemetry-cpp/opentelemetry-cpp-config.cmake  # [unix]\n    - test -f $PREFIX/lib/libopentelemetry_common.a  # [unix]\n    - test -f $PREFIX/lib/libopentelemetry_exporter_otlp_grpc.a  # [unix]\n    - if not exist %LIBRARY_INC%\\opentelemetry\\sdk exit 1  # [win]\n    - if not exist %LIBRARY_LIB%\\cmake\\opentelemetry-cpp exit 1  # [win]\n    - if not exist %LIBRARY_LIB%\\cmake\\opentelemetry-cpp\\opentelemetry-cpp-config.cmake exit 1  # [win]\n    - if not exist %LIBRARY_LIB%\\opentelemetry_common.lib exit 1  # [win]\n    - if not exist %LIBRARY_LIB%\\opentelemetry_exporter_otlp_grpc.lib exit 1  # [win]\n\nabout:\n  home: https://github.com/open-telemetry/opentelemetry-cpp\n  license: Apache-2.0\n  license_family: APACHE\n  license_file: LICENSE\n  summary: The OpenTelemetry C++ Client\n  description: |\n    OpenTelemetry is a collection of tools, APIs, and SDKs. Use it to\n    instrument, generate, collect, and export telemetry data (metrics,\n    logs, and traces) to help you analyze your software\u2019s performance\n    and behavior.\n  doc_url: https://opentelemetry.io/docs/instrumentation/cpp/\n  dev_url: https://github.com/open-telemetry/opentelemetry-cpp\n\nextra:\n  recipe-maintainers:\n    - lidavidm\n",
 "rendered_recipe": {
  "about": {
   "description": "OpenTelemetry is a collection of tools, APIs, and SDKs. Use it to\ninstrument, generate, collect, and export telemetry data (metrics,\nlogs, and traces) to help you analyze your software\u2019s performance\nand behavior.\n",
   "dev_url": "https://github.com/open-telemetry/opentelemetry-cpp",
   "doc_url": "https://opentelemetry.io/docs/instrumentation/cpp/",
   "home": "https://github.com/open-telemetry/opentelemetry-cpp",
   "license": "Apache-2.0",
   "license_family": "APACHE",
   "license_file": "LICENSE",
   "summary": "The OpenTelemetry C++ Client"
  },
  "build": {
   "always_include_files": [
    "lib/cmake/opentelemetry-cpp/"
   ],
   "number": "3",
   "string": "hd6d2a79_3"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "lidavidm"
   ]
  },
  "package": {
   "name": "cpp-opentelemetry-sdk",
   "version": "1.1.1"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "abseil-cpp 20211102.0 h9c3ff4c_0",
    "binutils_impl_linux-64 2.36.1 h193b22a_2",
    "binutils_impl_linux-ppc64le 2.36.1 h17f093b_2",
    "binutils_linux-ppc64le 2.36 h5e27e69_5",
    "bzip2 1.0.8 h7f98852_4",
    "c-ares 1.18.1 h7f98852_0",
    "ca-certificates 2021.10.8 ha878542_0",
    "cmake 3.22.2 h1021d11_0",
    "curl 7.81.0 h494985f_0",
    "expat 2.4.4 h9c3ff4c_0",
    "gcc_impl_linux-64 9.4.0 h03d3576_12",
    "gcc_impl_linux-ppc64le 9.4.0 h10ae0d0_12",
    "gcc_linux-ppc64le 9.4.0 hf801c13_5",
    "grpc-cpp 1.44.0 h1021d7f_0",
    "gxx_impl_linux-64 9.4.0 h03d3576_12",
    "gxx_impl_linux-ppc64le 9.4.0 h10ae0d0_12",
    "gxx_linux-ppc64le 9.4.0 ha72065e_5",
    "kernel-headers_linux-64 2.6.32 he073ed8_15",
    "kernel-headers_linux-ppc64le 3.10.0 h23d7e6c_13",
    "krb5 1.19.2 h48eae69_3",
    "ld_impl_linux-64 2.36.1 hea4e1c9_2",
    "ld_impl_linux-ppc64le 2.36.1 h8031a8f_2",
    "libcurl 7.81.0 h494985f_0",
    "libedit 3.1.20191231 he28a2e2_2",
    "libev 4.33 h516909a_1",
    "libgcc-devel_linux-64 9.4.0 hd854feb_12",
    "libgcc-devel_linux-ppc64le 9.4.0 h60c1801_12",
    "libgcc-ng 11.2.0 h1d223b6_12",
    "libgomp 11.2.0 h1d223b6_12",
    "libnghttp2 1.46.0 ha19adfc_0",
    "libprotobuf 3.19.4 h780b84a_0",
    "libsanitizer 9.4.0 h79bfe98_12",
    "libssh2 1.10.0 ha35d2d1_2",
    "libstdcxx-devel_linux-64 9.4.0 hd854feb_12",
    "libstdcxx-devel_linux-ppc64le 9.4.0 h60c1801_12",
    "libstdcxx-ng 11.2.0 he4da1e4_12",
    "libuv 1.43.0 h7f98852_0",
    "libzlib 1.2.11 h36c2ea0_1013",
    "lz4-c 1.9.3 h9c3ff4c_1",
    "ncurses 6.3 h9c3ff4c_0",
    "ninja 1.10.2 h4bd325d_1",
    "nlohmann_json 3.10.5 h9c3ff4c_0",
    "openssl 3.0.0 h7f98852_2",
    "proto-opentelemetry-proto 0.11.0 hd8ed1ab_0",
    "re2 2022.02.01 h9c3ff4c_0",
    "rhash 1.4.1 h7f98852_0",
    "sysroot_linux-64 2.12 he073ed8_15",
    "sysroot_linux-ppc64le 2.17 h395ec9b_13",
    "tk 8.6.11 h27826a3_1",
    "xz 5.2.5 h516909a_1",
    "zlib 1.2.11 h36c2ea0_1013",
    "zstd 1.5.2 ha95c52a_0"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "abseil-cpp 20211102.0 h3b9df90_0",
    "c-ares 1.18.1 h4e0d66e_0",
    "ca-certificates 2021.10.8 h1084571_0",
    "cpp-opentelemetry-api 1.1.1 h2acdbc0_0",
    "curl 7.81.0 h3643067_0",
    "grpc-cpp 1.44.0 hb435f04_0",
    "krb5 1.19.2 hf9a8087_3",
    "libcurl 7.81.0 h3643067_0",
    "libedit 3.1.20191231 h41a240f_2",
    "libev 4.33 h6eb9509_1",
    "libgcc-ng 11.2.0 h7698a5e_12",
    "libgomp 11.2.0 h7698a5e_12",
    "libnghttp2 1.46.0 h66fdf1b_0",
    "libprotobuf 3.19.4 h690f14c_0",
    "libssh2 1.10.0 he881182_2",
    "libstdcxx-ng 11.2.0 habdf983_12",
    "libzlib 1.2.11 h339bb43_1013",
    "ncurses 6.3 h3b9df90_0",
    "nlohmann_json 3.9.1 h3b9df90_1",
    "openssl 3.0.0 h4e0d66e_2",
    "re2 2022.02.01 h3b9df90_0",
    "tk 8.6.11 h41c6715_1",
    "zlib 1.2.11 h339bb43_1013"
   ],
   "run": [
    "cpp-opentelemetry-api =1.1.1",
    "curl >=7.81.0,<8.0a0",
    "grpc-cpp >=1.44.0,<1.45.0a0",
    "libgcc-ng >=9.4.0",
    "libprotobuf >=3.18",
    "libprotobuf >=3.19.4,<3.20.0a0",
    "libstdcxx-ng >=9.4.0",
    "libzlib >=1.2.11,<1.3.0a0",
    "nlohmann_json"
   ]
  },
  "source": {
   "patches": [
    "cross_compile_grpc_cpp_plugin_path.patch"
   ],
   "sha256": "b4e231e6b18dc6945831c8964d09d4195899e9def7ff9d0d3fa5000800494f3c",
   "url": "https://github.com/open-telemetry/opentelemetry-cpp/archive/refs/tags/v1.1.1.tar.gz"
  },
  "test": {
   "commands": [
    "test -d $PREFIX/include/opentelemetry/sdk/",
    "test -d $PREFIX/lib/cmake/opentelemetry-cpp/",
    "test -f $PREFIX/lib/cmake/opentelemetry-cpp/opentelemetry-cpp-config.cmake",
    "test -f $PREFIX/lib/libopentelemetry_common.a",
    "test -f $PREFIX/lib/libopentelemetry_exporter_otlp_grpc.a"
   ]
  }
 },
 "version": "1.1.1"
}
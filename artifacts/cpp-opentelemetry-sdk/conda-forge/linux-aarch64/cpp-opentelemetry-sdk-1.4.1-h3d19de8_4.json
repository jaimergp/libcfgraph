{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.21.9",
  "conda_private": false,
  "conda_version": "4.13.0",
  "description": "OpenTelemetry is a collection of tools, APIs, and SDKs. Use it to\ninstrument, generate, collect, and export telemetry data (metrics,\nlogs, and traces) to help you analyze your software\u2019s performance\nand behavior.\n",
  "dev_url": "https://github.com/open-telemetry/opentelemetry-cpp",
  "doc_url": "https://opentelemetry.io/docs/instrumentation/cpp/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "lidavidm"
   ]
  },
  "home": "https://github.com/open-telemetry/opentelemetry-cpp",
  "identifiers": [],
  "keywords": [],
  "license": "Apache-2.0",
  "license_family": "APACHE",
  "license_file": "LICENSE",
  "root_pkgs": [
   "pkginfo 1.8.3 pyhd8ed1ab_0",
   "pyyaml 6.0 py39hb9d737c_4",
   "libstdcxx-ng 12.1.0 ha89aaad_16",
   "glob2 0.7 py_0",
   "reproc 14.2.3 h7f98852_0",
   "urllib3 1.26.10 pyhd8ed1ab_0",
   "chardet 5.0.0 py39hf3d152e_0",
   "ruamel_yaml 0.15.80 py39hb9d737c_1007",
   "certifi 2022.6.15 py39hf3d152e_0",
   "libnsl 2.0.0 h7f98852_0",
   "libuuid 2.32.1 h7f98852_1000",
   "ca-certificates 2022.6.15 ha878542_0",
   "reproc-cpp 14.2.3 h9c3ff4c_0",
   "idna 3.3 pyhd8ed1ab_0",
   "patchelf 0.15.0 h58526e2_0",
   "python-fastjsonschema 2.16.1 pyhd8ed1ab_0",
   "zipp 3.8.0 pyhd8ed1ab_0",
   "wheel 0.37.1 pyhd8ed1ab_0",
   "conda-package-handling 1.8.1 py39hb9d737c_1",
   "libxml2 2.9.14 h22db469_3",
   "filelock 3.7.1 pyhd8ed1ab_0",
   "zlib 1.2.12 h166bdaf_2",
   "tini 0.19.0 h7f98852_0",
   "setuptools 63.2.0 py39hf3d152e_0",
   "json5 0.9.5 pyh9f0ad1d_0",
   "anyio 3.6.1 py39hf3d152e_0",
   "pycparser 2.21 pyhd8ed1ab_0",
   "mamba 0.24.0 py39hfa8f2c8_1",
   "nbformat 5.4.0 pyhd8ed1ab_0",
   "python-libarchive-c 4.0 py39hf3d152e_1",
   "jsonschema 4.7.2 pyhd8ed1ab_0",
   "cffi 1.15.1 py39he91dace_0",
   "libmamba 0.24.0 hd8a31e3_1",
   "liblief 0.11.5 h9c3ff4c_1",
   "libnghttp2 1.47.0 h727a467_0",
   "pybind11-abi 4 hd8ed1ab_3",
   "ripgrep 13.0.0 h2f28480_2",
   "c-ares 1.18.1 h7f98852_0",
   "beautifulsoup4 4.11.1 pyha770c72_0",
   "six 1.16.0 pyh6c4a22f_0",
   "clyent 1.2.2 py_1",
   "brotlipy 0.7.0 py39hb9d737c_1004",
   "ld_impl_linux-64 2.36.1 hea4e1c9_2",
   "joblib 1.1.0 pyhd8ed1ab_0",
   "conda 4.13.0 py39hf3d152e_1",
   "tqdm 4.64.0 pyhd8ed1ab_0",
   "zstd 1.5.2 h8a70e8d_2",
   "curl 7.83.1 h7bff187_0",
   "gettext 0.19.8.1 h73d1719_1008",
   "pip 22.2 pyhd8ed1ab_0",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "bzip2 1.0.8 h7f98852_4",
   "libev 4.33 h516909a_1",
   "prompt_toolkit 3.0.30 hd8ed1ab_0",
   "conda-build 3.21.9 py39hf3d152e_1",
   "ncurses 6.3 h27087fc_1",
   "git 2.37.1 pl5321h36853c3_0",
   "importlib_resources 5.8.0 pyhd8ed1ab_0",
   "prompt-toolkit 3.0.30 pyha770c72_0",
   "libgomp 12.1.0 h8d9b700_16",
   "sniffio 1.2.0 py39hf3d152e_3",
   "libffi 3.4.2 h7f98852_5",
   "_libgcc_mutex 0.1 conda_forge",
   "sqlite 3.39.2 h4ff8645_0",
   "requests 2.28.1 pyhd8ed1ab_0",
   "jupyter_core 4.11.1 py39hf3d152e_0",
   "keyutils 1.6.1 h166bdaf_0",
   "anaconda-client 1.8.0 pyhd8ed1ab_0",
   "python 3.9.13 h9a8a25e_0_cpython",
   "yaml-cpp 0.7.0 h27087fc_1",
   "ruamel.yaml 0.17.21 py39hb9d737c_1",
   "cryptography 37.0.4 py39hd97740a_0",
   "pygments 2.12.0 pyhd8ed1ab_0",
   "lz4-c 1.9.3 h9c3ff4c_1",
   "pyopenssl 22.0.0 pyhd8ed1ab_0",
   "psutil 5.9.1 py39hb9d737c_0",
   "perl 5.32.1 2_h7f98852_perl5",
   "watchgod 0.8.2 pyhd8ed1ab_0",
   "boa 0.11.0 pyha770c72_1",
   "markupsafe 2.1.1 py39hb9d737c_1",
   "wcwidth 0.2.5 pyh9f0ad1d_2",
   "readline 8.1.2 h0f457ee_0",
   "pyrsistent 0.18.1 py39hb9d737c_1",
   "ruamel.yaml.clib 0.2.6 py39hb9d737c_1",
   "libsolv 0.7.22 h6239696_0",
   "pysocks 1.7.1 py39hf3d152e_5",
   "libedit 3.1.20191231 he28a2e2_2",
   "python_abi 3.9 2_cp39",
   "libiconv 1.16 h516909a_0",
   "tzdata 2022a h191b570_0",
   "lzo 2.10 h516909a_1000",
   "future 0.18.2 py39hf3d152e_5",
   "su-exec 0.2 h516909a_1002",
   "openssl 1.1.1q h166bdaf_0",
   "dataclasses 0.8 pyhc8e2a94_3",
   "libgcc-ng 12.1.0 h8d9b700_16",
   "charset-normalizer 2.1.0 pyhd8ed1ab_0",
   "libcurl 7.83.1 h7bff187_0",
   "jinja2 3.1.2 pyhd8ed1ab_1",
   "rich 12.5.1 pyhd8ed1ab_0",
   "traitlets 5.3.0 pyhd8ed1ab_0",
   "typing_extensions 4.3.0 pyha770c72_0",
   "xz 5.2.5 h516909a_1",
   "libarchive 3.5.2 hb890918_3",
   "krb5 1.19.3 h3790be6_0",
   "importlib-metadata 4.11.4 py39hf3d152e_0",
   "pycosat 0.6.3 py39hb9d737c_1010",
   "pytz 2022.1 pyhd8ed1ab_0",
   "commonmark 0.9.1 py_0",
   "pcre2 10.37 h032f7d1_0",
   "colorama 0.4.5 pyhd8ed1ab_0",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "attrs 21.4.0 pyhd8ed1ab_0",
   "_openmp_mutex 4.5 2_gnu",
   "patch 2.7.6 h7f98852_1002",
   "expat 2.4.8 h27087fc_0",
   "libssh2 1.10.0 ha56f1ee_2",
   "py-lief 0.11.5 py39he80948d_1",
   "libzlib 1.2.12 h166bdaf_2",
   "yaml 0.2.5 h7f98852_2",
   "libmambapy 0.24.0 py39hd55135b_1",
   "backports 1.0 py_2",
   "tk 8.6.12 h27826a3_0",
   "soupsieve 2.3.2.post1 pyhd8ed1ab_0",
   "icu 70.1 h27087fc_0",
   "conda-forge-ci-setup 3.21.0 py39h69ce9fc_100",
   "jq 1.6 h36c2ea0_1000",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "conda-env 2.6.0 1",
   "click 8.1.3 py39hf3d152e_0",
   "oniguruma 6.9.8 h166bdaf_0"
  ],
  "summary": "The OpenTelemetry C++ Client",
  "tags": []
 },
 "conda_build_config": {
  "BUILD": "aarch64-conda_cos7-linux-gnu",
  "CI": "azure",
  "CMAKE_CROSSCOMPILING_EMULATOR": "/usr/bin/qemu-aarch64-static",
  "CROSSCOMPILING_EMULATOR": "/usr/bin/qemu-aarch64-static",
  "build_platform": "linux-64",
  "c_compiler": "gcc",
  "cdt_arch": "aarch64",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "curl": "7",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "10",
  "docker_image": "quay.io/condaforge/linux-anvil-cos7-x86_64",
  "extend_keys": [
   "ignore_version",
   "extend_keys",
   "ignore_build_only_deps",
   "pin_run_as_build"
  ],
  "fortran_compiler": "gfortran",
  "grpc_cpp": "1.47",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "curl": {
    "max_pin": "x"
   },
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "zlib": {
    "max_pin": "x.x"
   }
  },
  "python": "3.9",
  "r_base": "3.5",
  "target_platform": "linux-aarch64",
  "zlib": "1.2"
 },
 "files": [
  "include/opentelemetry/exporters/memory/in_memory_span_data.h",
  "include/opentelemetry/exporters/memory/in_memory_span_exporter.h",
  "include/opentelemetry/exporters/ostream/common_utils.h",
  "include/opentelemetry/exporters/ostream/log_exporter.h",
  "include/opentelemetry/exporters/ostream/metric_exporter.h",
  "include/opentelemetry/exporters/ostream/metrics_exporter.h",
  "include/opentelemetry/exporters/ostream/span_exporter.h",
  "include/opentelemetry/exporters/otlp/otlp_environment.h",
  "include/opentelemetry/exporters/otlp/otlp_grpc_exporter.h",
  "include/opentelemetry/exporters/otlp/otlp_grpc_exporter_options.h",
  "include/opentelemetry/exporters/otlp/otlp_grpc_log_exporter.h",
  "include/opentelemetry/exporters/otlp/otlp_http_client.h",
  "include/opentelemetry/exporters/otlp/otlp_http_exporter.h",
  "include/opentelemetry/exporters/otlp/otlp_http_log_exporter.h",
  "include/opentelemetry/exporters/otlp/otlp_log_recordable.h",
  "include/opentelemetry/exporters/otlp/otlp_recordable.h",
  "include/opentelemetry/exporters/otlp/otlp_recordable_utils.h",
  "include/opentelemetry/exporters/otlp/protobuf_include_prefix.h",
  "include/opentelemetry/exporters/otlp/protobuf_include_suffix.h",
  "include/opentelemetry/exporters/prometheus/collector.h",
  "include/opentelemetry/exporters/prometheus/exporter.h",
  "include/opentelemetry/exporters/prometheus/exporter_utils.h",
  "include/opentelemetry/exporters/prometheus/prometheus_collector.h",
  "include/opentelemetry/exporters/prometheus/prometheus_exporter.h",
  "include/opentelemetry/exporters/prometheus/prometheus_exporter_utils.h",
  "include/opentelemetry/exporters/zipkin/zipkin_exporter.h",
  "include/opentelemetry/ext/http/client/curl/http_client_curl.h",
  "include/opentelemetry/ext/http/client/curl/http_operation_curl.h",
  "include/opentelemetry/ext/http/client/http_client.h",
  "include/opentelemetry/ext/http/client/http_client_factory.h",
  "include/opentelemetry/ext/http/client/nosend/http_client_nosend.h",
  "include/opentelemetry/ext/http/common/url_parser.h",
  "include/opentelemetry/ext/http/server/file_http_server.h",
  "include/opentelemetry/ext/http/server/http_server.h",
  "include/opentelemetry/ext/http/server/socket_tools.h",
  "include/opentelemetry/ext/zpages/latency_boundaries.h",
  "include/opentelemetry/ext/zpages/static/tracez_index.h",
  "include/opentelemetry/ext/zpages/static/tracez_script.h",
  "include/opentelemetry/ext/zpages/static/tracez_style.h",
  "include/opentelemetry/ext/zpages/threadsafe_span_data.h",
  "include/opentelemetry/ext/zpages/tracez_data.h",
  "include/opentelemetry/ext/zpages/tracez_data_aggregator.h",
  "include/opentelemetry/ext/zpages/tracez_http_server.h",
  "include/opentelemetry/ext/zpages/tracez_processor.h",
  "include/opentelemetry/ext/zpages/tracez_shared_data.h",
  "include/opentelemetry/ext/zpages/zpages.h",
  "include/opentelemetry/ext/zpages/zpages_http_server.h",
  "include/opentelemetry/proto/collector/logs/v1/logs_service.grpc.pb.h",
  "include/opentelemetry/proto/collector/logs/v1/logs_service.pb.h",
  "include/opentelemetry/proto/collector/logs/v1/logs_service_mock.grpc.pb.h",
  "include/opentelemetry/proto/collector/metrics/v1/metrics_service.grpc.pb.h",
  "include/opentelemetry/proto/collector/metrics/v1/metrics_service.pb.h",
  "include/opentelemetry/proto/collector/metrics/v1/metrics_service_mock.grpc.pb.h",
  "include/opentelemetry/proto/collector/trace/v1/trace_service.grpc.pb.h",
  "include/opentelemetry/proto/collector/trace/v1/trace_service.pb.h",
  "include/opentelemetry/proto/collector/trace/v1/trace_service_mock.grpc.pb.h",
  "include/opentelemetry/proto/common/v1/common.grpc.pb.h",
  "include/opentelemetry/proto/common/v1/common.pb.h",
  "include/opentelemetry/proto/common/v1/common_mock.grpc.pb.h",
  "include/opentelemetry/proto/logs/v1/logs.grpc.pb.h",
  "include/opentelemetry/proto/logs/v1/logs.pb.h",
  "include/opentelemetry/proto/logs/v1/logs_mock.grpc.pb.h",
  "include/opentelemetry/proto/metrics/v1/metrics.grpc.pb.h",
  "include/opentelemetry/proto/metrics/v1/metrics.pb.h",
  "include/opentelemetry/proto/metrics/v1/metrics_mock.grpc.pb.h",
  "include/opentelemetry/proto/resource/v1/resource.grpc.pb.h",
  "include/opentelemetry/proto/resource/v1/resource.pb.h",
  "include/opentelemetry/proto/resource/v1/resource_mock.grpc.pb.h",
  "include/opentelemetry/proto/trace/v1/trace.grpc.pb.h",
  "include/opentelemetry/proto/trace/v1/trace.pb.h",
  "include/opentelemetry/proto/trace/v1/trace_mock.grpc.pb.h",
  "include/opentelemetry/sdk/common/atomic_shared_ptr.h",
  "include/opentelemetry/sdk/common/atomic_unique_ptr.h",
  "include/opentelemetry/sdk/common/attribute_utils.h",
  "include/opentelemetry/sdk/common/attributemap_hash.h",
  "include/opentelemetry/sdk/common/circular_buffer.h",
  "include/opentelemetry/sdk/common/circular_buffer_range.h",
  "include/opentelemetry/sdk/common/empty_attributes.h",
  "include/opentelemetry/sdk/common/env_variables.h",
  "include/opentelemetry/sdk/common/exporter_utils.h",
  "include/opentelemetry/sdk/common/global_log_handler.h",
  "include/opentelemetry/sdk/instrumentationlibrary/instrumentation_library.h",
  "include/opentelemetry/sdk/logs/batch_log_processor.h",
  "include/opentelemetry/sdk/logs/exporter.h",
  "include/opentelemetry/sdk/logs/log_record.h",
  "include/opentelemetry/sdk/logs/logger.h",
  "include/opentelemetry/sdk/logs/logger_context.h",
  "include/opentelemetry/sdk/logs/logger_provider.h",
  "include/opentelemetry/sdk/logs/multi_log_processor.h",
  "include/opentelemetry/sdk/logs/multi_recordable.h",
  "include/opentelemetry/sdk/logs/processor.h",
  "include/opentelemetry/sdk/logs/recordable.h",
  "include/opentelemetry/sdk/logs/simple_log_processor.h",
  "include/opentelemetry/sdk/metrics/aggregation/aggregation.h",
  "include/opentelemetry/sdk/metrics/aggregation/default_aggregation.h",
  "include/opentelemetry/sdk/metrics/aggregation/drop_aggregation.h",
  "include/opentelemetry/sdk/metrics/aggregation/histogram_aggregation.h",
  "include/opentelemetry/sdk/metrics/aggregation/lastvalue_aggregation.h",
  "include/opentelemetry/sdk/metrics/aggregation/sum_aggregation.h",
  "include/opentelemetry/sdk/metrics/async_instruments.h",
  "include/opentelemetry/sdk/metrics/data/metric_data.h",
  "include/opentelemetry/sdk/metrics/data/point_data.h",
  "include/opentelemetry/sdk/metrics/exemplar/always_sample_filter.h",
  "include/opentelemetry/sdk/metrics/exemplar/data.h",
  "include/opentelemetry/sdk/metrics/exemplar/filter.h",
  "include/opentelemetry/sdk/metrics/exemplar/never_sample_filter.h",
  "include/opentelemetry/sdk/metrics/exemplar/no_exemplar_reservoir.h",
  "include/opentelemetry/sdk/metrics/exemplar/reservoir.h",
  "include/opentelemetry/sdk/metrics/export/metric_producer.h",
  "include/opentelemetry/sdk/metrics/export/periodic_exporting_metric_reader.h",
  "include/opentelemetry/sdk/metrics/instruments.h",
  "include/opentelemetry/sdk/metrics/meter.h",
  "include/opentelemetry/sdk/metrics/meter_context.h",
  "include/opentelemetry/sdk/metrics/meter_provider.h",
  "include/opentelemetry/sdk/metrics/metric_exporter.h",
  "include/opentelemetry/sdk/metrics/metric_reader.h",
  "include/opentelemetry/sdk/metrics/observer_result.h",
  "include/opentelemetry/sdk/metrics/state/async_metric_storage.h",
  "include/opentelemetry/sdk/metrics/state/attributes_hashmap.h",
  "include/opentelemetry/sdk/metrics/state/metric_collector.h",
  "include/opentelemetry/sdk/metrics/state/metric_storage.h",
  "include/opentelemetry/sdk/metrics/state/multi_metric_storage.h",
  "include/opentelemetry/sdk/metrics/state/sync_metric_storage.h",
  "include/opentelemetry/sdk/metrics/state/temporal_metric_storage.h",
  "include/opentelemetry/sdk/metrics/sync_instruments.h",
  "include/opentelemetry/sdk/metrics/view/attributes_processor.h",
  "include/opentelemetry/sdk/metrics/view/instrument_selector.h",
  "include/opentelemetry/sdk/metrics/view/meter_selector.h",
  "include/opentelemetry/sdk/metrics/view/predicate.h",
  "include/opentelemetry/sdk/metrics/view/predicate_factory.h",
  "include/opentelemetry/sdk/metrics/view/view.h",
  "include/opentelemetry/sdk/metrics/view/view_registry.h",
  "include/opentelemetry/sdk/resource/experimental_semantic_conventions.h",
  "include/opentelemetry/sdk/resource/resource.h",
  "include/opentelemetry/sdk/resource/resource_detector.h",
  "include/opentelemetry/sdk/trace/batch_span_processor.h",
  "include/opentelemetry/sdk/trace/exporter.h",
  "include/opentelemetry/sdk/trace/id_generator.h",
  "include/opentelemetry/sdk/trace/multi_recordable.h",
  "include/opentelemetry/sdk/trace/multi_span_processor.h",
  "include/opentelemetry/sdk/trace/processor.h",
  "include/opentelemetry/sdk/trace/random_id_generator.h",
  "include/opentelemetry/sdk/trace/recordable.h",
  "include/opentelemetry/sdk/trace/sampler.h",
  "include/opentelemetry/sdk/trace/samplers/always_off.h",
  "include/opentelemetry/sdk/trace/samplers/always_on.h",
  "include/opentelemetry/sdk/trace/samplers/parent.h",
  "include/opentelemetry/sdk/trace/samplers/trace_id_ratio.h",
  "include/opentelemetry/sdk/trace/simple_processor.h",
  "include/opentelemetry/sdk/trace/span_data.h",
  "include/opentelemetry/sdk/trace/tracer.h",
  "include/opentelemetry/sdk/trace/tracer_context.h",
  "include/opentelemetry/sdk/trace/tracer_provider.h",
  "include/opentelemetry/sdk/version/version.h",
  "include/opentelemetry/sdk_config.h",
  "lib/cmake/opentelemetry-cpp/opentelemetry-cpp-config-version.cmake",
  "lib/cmake/opentelemetry-cpp/opentelemetry-cpp-config.cmake",
  "lib/cmake/opentelemetry-cpp/opentelemetry-cpp-target-release.cmake",
  "lib/cmake/opentelemetry-cpp/opentelemetry-cpp-target.cmake",
  "lib/libopentelemetry_common.a",
  "lib/libopentelemetry_exporter_ostream_logs.a",
  "lib/libopentelemetry_exporter_ostream_metrics.a",
  "lib/libopentelemetry_exporter_ostream_span.a",
  "lib/libopentelemetry_exporter_otlp_grpc.a",
  "lib/libopentelemetry_exporter_otlp_grpc_log.a",
  "lib/libopentelemetry_exporter_otlp_http.a",
  "lib/libopentelemetry_exporter_otlp_http_client.a",
  "lib/libopentelemetry_exporter_otlp_http_log.a",
  "lib/libopentelemetry_exporter_zipkin_trace.a",
  "lib/libopentelemetry_http_client_curl.a",
  "lib/libopentelemetry_logs.a",
  "lib/libopentelemetry_metrics.a",
  "lib/libopentelemetry_otlp_recordable.a",
  "lib/libopentelemetry_proto.a",
  "lib/libopentelemetry_resources.a",
  "lib/libopentelemetry_trace.a",
  "lib/libopentelemetry_version.a",
  "lib/libprometheus_exporter.a"
 ],
 "index": {
  "arch": "aarch64",
  "build": "h3d19de8_4",
  "build_number": 4,
  "depends": [
   "cpp-opentelemetry-api 1.4.1.*",
   "curl >=7.83.1,<8.0a0",
   "grpc-cpp >=1.47.1,<1.48.0a0",
   "libgcc-ng >=12",
   "libprotobuf >=3.18",
   "libprotobuf >=3.20.1,<3.21.0a0",
   "libstdcxx-ng >=12",
   "libzlib >=1.2.12,<1.3.0a0",
   "nlohmann_json",
   "prometheus-cpp"
  ],
  "license": "Apache-2.0",
  "license_family": "APACHE",
  "name": "cpp-opentelemetry-sdk",
  "platform": "linux",
  "subdir": "linux-aarch64",
  "timestamp": 1658870939014,
  "version": "1.4.1"
 },
 "metadata_version": 1,
 "name": "cpp-opentelemetry-sdk",
 "raw_recipe": "# code: language: jinja-yaml\n{% set name = \"cpp-opentelemetry-sdk\" %}\n{% set version = \"1.4.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/open-telemetry/opentelemetry-cpp/archive/refs/tags/v{{ version }}.tar.gz\n    sha256: 301b1ab74a664723560f46c29f228360aff1e2d63e930b963755ea077ae67524\n    patches:\n      - cross_compile_grpc_cpp_plugin_path.patch  # [build_platform != target_platform]\n      - include_ctime.patch\n\nbuild:\n  number: 4\n  always_include_files:\n    # Must overwrite the ones installed by cpp-opentelemetry-api\n    - lib/cmake/opentelemetry-cpp/  # [unix]\n    - Library/lib/cmake/opentelemetry-cpp/  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake >=3.1\n    - ninja\n    - proto-opentelemetry-proto =0.17.0\n\n    # For cross-compiling\n    - curl                    # [build_platform != target_platform]\n    - grpc-cpp                # [build_platform != target_platform]\n    - libprotobuf >=3.18      # [build_platform != target_platform]\n    - nlohmann_json >=3.10.5  # [build_platform != target_platform]\n    - zlib                    # [build_platform != target_platform]\n    - prometheus-cpp          # [build_platform != target_platform] \n  host:\n    # -api and -sdk packages of different versions are not necessarily\n    # compatible.\n    - cpp-opentelemetry-api ={{ version }}\n    - curl\n    - grpc-cpp\n    - libprotobuf >=3.18\n    - nlohmann_json >=3.10.5\n    - zlib\n    - prometheus-cpp\n  run:\n    - cpp-opentelemetry-api ={{ version }}\n    - curl\n    - grpc-cpp\n    - libprotobuf >=3.18\n    - nlohmann_json\n    - prometheus-cpp\n\ntest:\n  commands:\n    - test -d $PREFIX/include/opentelemetry/sdk/  # [unix]\n    - test -d $PREFIX/lib/cmake/opentelemetry-cpp/  # [unix]\n    - test -f $PREFIX/lib/cmake/opentelemetry-cpp/opentelemetry-cpp-config.cmake  # [unix]\n    - test -f $PREFIX/lib/libopentelemetry_common.a  # [unix]\n    - test -f $PREFIX/lib/libopentelemetry_exporter_otlp_grpc.a  # [unix]\n    - if not exist %LIBRARY_INC%\\opentelemetry\\sdk exit 1  # [win]\n    - if not exist %LIBRARY_LIB%\\cmake\\opentelemetry-cpp exit 1  # [win]\n    - if not exist %LIBRARY_LIB%\\cmake\\opentelemetry-cpp\\opentelemetry-cpp-config.cmake exit 1  # [win]\n    - if not exist %LIBRARY_LIB%\\opentelemetry_common.lib exit 1  # [win]\n    - if not exist %LIBRARY_LIB%\\opentelemetry_exporter_otlp_grpc.lib exit 1  # [win]\n\nabout:\n  home: https://github.com/open-telemetry/opentelemetry-cpp\n  license: Apache-2.0\n  license_family: APACHE\n  license_file: LICENSE\n  summary: The OpenTelemetry C++ Client\n  description: |\n    OpenTelemetry is a collection of tools, APIs, and SDKs. Use it to\n    instrument, generate, collect, and export telemetry data (metrics,\n    logs, and traces) to help you analyze your software\u2019s performance\n    and behavior.\n  doc_url: https://opentelemetry.io/docs/instrumentation/cpp/\n  dev_url: https://github.com/open-telemetry/opentelemetry-cpp\n\nextra:\n  recipe-maintainers:\n    - lidavidm\n",
 "rendered_recipe": {
  "about": {
   "description": "OpenTelemetry is a collection of tools, APIs, and SDKs. Use it to\ninstrument, generate, collect, and export telemetry data (metrics,\nlogs, and traces) to help you analyze your software\u2019s performance\nand behavior.\n",
   "dev_url": "https://github.com/open-telemetry/opentelemetry-cpp",
   "doc_url": "https://opentelemetry.io/docs/instrumentation/cpp/",
   "home": "https://github.com/open-telemetry/opentelemetry-cpp",
   "license": "Apache-2.0",
   "license_family": "APACHE",
   "license_file": "LICENSE",
   "summary": "The OpenTelemetry C++ Client"
  },
  "build": {
   "always_include_files": [
    "lib/cmake/opentelemetry-cpp/"
   ],
   "number": "4",
   "string": "h3d19de8_4"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "lidavidm"
   ]
  },
  "package": {
   "name": "cpp-opentelemetry-sdk",
   "version": "1.4.1"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 2_gnu",
    "abseil-cpp 20211102.0 h27087fc_1",
    "binutils_impl_linux-64 2.36.1 h193b22a_2",
    "binutils_impl_linux-aarch64 2.36.1 he24a65f_2",
    "binutils_linux-aarch64 2.36 h38357a0_10",
    "bzip2 1.0.8 h7f98852_4",
    "c-ares 1.18.1 h7f98852_0",
    "ca-certificates 2022.6.15 ha878542_0",
    "cmake 3.23.2 h5432695_0",
    "curl 7.83.1 h2283fc2_0",
    "expat 2.4.8 h27087fc_0",
    "gcc_impl_linux-64 10.3.0 hf2f2afa_16",
    "gcc_impl_linux-aarch64 10.3.0 h3721c86_16",
    "gcc_linux-aarch64 10.3.0 hd47fc70_10",
    "grpc-cpp 1.47.1 h00ec82a_0",
    "gxx_impl_linux-64 10.3.0 hf2f2afa_16",
    "gxx_impl_linux-aarch64 10.3.0 h3721c86_16",
    "gxx_linux-aarch64 10.3.0 hab23ad4_10",
    "kernel-headers_linux-64 2.6.32 he073ed8_15",
    "kernel-headers_linux-aarch64 4.18.0 h5b4a56d_13",
    "keyutils 1.6.1 h166bdaf_0",
    "krb5 1.19.3 h08a2579_0",
    "ld_impl_linux-64 2.36.1 hea4e1c9_2",
    "ld_impl_linux-aarch64 2.36.1 h4e2ea54_2",
    "libcurl 7.83.1 h2283fc2_0",
    "libedit 3.1.20191231 he28a2e2_2",
    "libev 4.33 h516909a_1",
    "libgcc-devel_linux-64 10.3.0 he6cfe16_16",
    "libgcc-devel_linux-aarch64 10.3.0 hfaf2395_16",
    "libgcc-ng 12.1.0 h8d9b700_16",
    "libgomp 12.1.0 h8d9b700_16",
    "libnghttp2 1.47.0 he49606f_0",
    "libprotobuf 3.20.1 h6239696_0",
    "libsanitizer 10.3.0 h26c7422_16",
    "libssh2 1.10.0 ha35d2d1_2",
    "libstdcxx-devel_linux-64 10.3.0 he6cfe16_16",
    "libstdcxx-devel_linux-aarch64 10.3.0 hfaf2395_16",
    "libstdcxx-ng 12.1.0 ha89aaad_16",
    "libuv 1.44.2 h166bdaf_0",
    "libzlib 1.2.12 h166bdaf_2",
    "lz4-c 1.9.3 h9c3ff4c_1",
    "ncurses 6.3 h27087fc_1",
    "ninja 1.11.0 h924138e_0",
    "nlohmann_json 3.10.5 h27087fc_1",
    "openssl 3.0.5 h166bdaf_0",
    "prometheus-cpp 1.0.1 h751d214_0",
    "proto-opentelemetry-proto 0.17.0 hd8ed1ab_0",
    "re2 2022.06.01 h27087fc_0",
    "rhash 1.4.3 h166bdaf_0",
    "sysroot_linux-64 2.12 he073ed8_15",
    "sysroot_linux-aarch64 2.17 h43d7e78_13",
    "xz 5.2.5 h516909a_1",
    "zlib 1.2.12 h166bdaf_2",
    "zstd 1.5.2 h8a70e8d_2"
   ],
   "host": [
    "_openmp_mutex 4.5 2_gnu",
    "abseil-cpp 20211102.0 h4de3ea5_1",
    "c-ares 1.18.1 hf897c2e_0",
    "ca-certificates 2022.6.15 h4fd8a4c_0",
    "cpp-opentelemetry-api 1.4.1 hdd96247_0",
    "curl 7.83.1 h22f3f83_0",
    "grpc-cpp 1.47.1 h19c0212_0",
    "keyutils 1.6.1 h4e544f5_0",
    "krb5 1.19.3 h750e270_0",
    "libcurl 7.83.1 h22f3f83_0",
    "libedit 3.1.20191231 he28a2e2_2",
    "libev 4.33 h516909a_1",
    "libgcc-ng 12.1.0 h3242a24_16",
    "libgomp 12.1.0 h3242a24_16",
    "libnghttp2 1.47.0 h2b6b862_0",
    "libprotobuf 3.20.1 h7866ba4_0",
    "libssh2 1.10.0 hd8c4cff_2",
    "libstdcxx-ng 12.1.0 hd01590b_16",
    "libzlib 1.2.12 h4e544f5_2",
    "ncurses 6.3 headf329_1",
    "nlohmann_json 3.10.5 h4de3ea5_1",
    "openssl 3.0.5 h4e544f5_0",
    "prometheus-cpp 1.0.1 hf32e593_0",
    "re2 2022.06.01 h4de3ea5_0",
    "zlib 1.2.12 h4e544f5_2"
   ],
   "run": [
    "cpp-opentelemetry-api =1.4.1",
    "curl >=7.83.1,<8.0a0",
    "grpc-cpp >=1.47.1,<1.48.0a0",
    "libgcc-ng >=12",
    "libprotobuf >=3.18",
    "libprotobuf >=3.20.1,<3.21.0a0",
    "libstdcxx-ng >=12",
    "libzlib >=1.2.12,<1.3.0a0",
    "nlohmann_json",
    "prometheus-cpp"
   ]
  },
  "source": [
   {
    "patches": [
     "cross_compile_grpc_cpp_plugin_path.patch",
     "include_ctime.patch"
    ],
    "sha256": "301b1ab74a664723560f46c29f228360aff1e2d63e930b963755ea077ae67524",
    "url": "https://github.com/open-telemetry/opentelemetry-cpp/archive/refs/tags/v1.4.1.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "test -d $PREFIX/include/opentelemetry/sdk/",
    "test -d $PREFIX/lib/cmake/opentelemetry-cpp/",
    "test -f $PREFIX/lib/cmake/opentelemetry-cpp/opentelemetry-cpp-config.cmake",
    "test -f $PREFIX/lib/libopentelemetry_common.a",
    "test -f $PREFIX/lib/libopentelemetry_exporter_otlp_grpc.a"
   ]
  }
 },
 "version": "1.4.1"
}
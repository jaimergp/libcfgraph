{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.22.0",
  "conda_private": false,
  "conda_version": "22.9.0",
  "description": "This is a C-level implementation of a fast, re-entrant,\noptimistic lock for CPython. It is a drop-in replacement for\nthreading.RLock. FastRLock is implemented in Cython and also provides a\nC-API for direct use from Cython code via from fastrlock cimport rlock.\n\nUnder normal conditions, it is about 10x faster than threading.RLock in\nPython 2.7 because it avoids all locking unless two or more threads try to\nacquire it at the same time. Under congestion, it is still about 10% faster\nthan RLock due to being implemented in Cython.\n\nThis is mostly equivalent to the revised RLock implementation in Python\n3.2, but still faster due to being implemented in Cython. Note that the\nthreading.RLock implementation in Python 3.4 and later tends to be as fast\nor even faster than the lock provided by this package, when called through\nthe Python API. FastRLock is still faster also on these systems when called\nthrough its Cython API.\n",
  "dev_url": "https://github.com/scoder/fastrlock",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "hmaarrfk"
   ]
  },
  "home": "https://github.com/scoder/fastrlock",
  "identifiers": [],
  "keywords": [],
  "license": "MIT",
  "license_family": "MIT",
  "license_file": "LICENSE",
  "root_pkgs": [
   "libsolv 0.7.22 h7866ba4_0",
   "keyutils 1.6.1 h4e544f5_0",
   "joblib 1.2.0 pyhd8ed1ab_0",
   "py-lief 0.12.2 py310h130cc07_0",
   "idna 3.4 pyhd8ed1ab_0",
   "ld_impl_linux-aarch64 2.39 ha75b1e8_0",
   "libgomp 12.2.0 h607ecd0_19",
   "xz 5.2.6 h9cdd2b7_0",
   "traitlets 5.5.0 pyhd8ed1ab_0",
   "yaml-cpp 0.7.0 h4de3ea5_2",
   "pycparser 2.21 pyhd8ed1ab_0",
   "pyopenssl 22.1.0 pyhd8ed1ab_0",
   "libstdcxx-ng 12.2.0 hc13a102_19",
   "pkginfo 1.8.3 pyhd8ed1ab_0",
   "importlib_resources 5.10.0 pyhd8ed1ab_0",
   "markupsafe 2.1.1 py310hdc54845_2",
   "krb5 1.19.3 h7c456eb_0",
   "libssh2 1.10.0 h4bb3959_3",
   "glob2 0.7 py_0",
   "attrs 22.1.0 pyh71513ae_1",
   "python-libarchive-c 4.0 py310h4c7bcd0_2",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "libcurl 7.86.0 h8fd98b7_0",
   "reproc 14.2.3 hf897c2e_0",
   "rich 12.6.0 pyhd8ed1ab_0",
   "perl 5.32.1 2_hf897c2e_perl5",
   "libnsl 2.0.0 hf897c2e_0",
   "yaml 0.2.5 hf897c2e_2",
   "_openmp_mutex 4.5 2_gnu",
   "tzdata 2022e h191b570_0",
   "python 3.10.6 h023d47c_0_cpython",
   "python-fastjsonschema 2.16.2 pyhd8ed1ab_0",
   "wcwidth 0.2.5 pyh9f0ad1d_2",
   "anyio 3.6.2 pyhd8ed1ab_0",
   "clyent 1.2.2 py_1",
   "future 0.18.2 pyhd8ed1ab_6",
   "pcre2 10.37 he7b27c6_1",
   "su-exec 0.2 h4e544f5_1003",
   "ca-certificates 2022.9.24 h4fd8a4c_0",
   "tini 0.19.0 h4e544f5_1",
   "backports 1.0 py_2",
   "tqdm 4.64.1 pyhd8ed1ab_0",
   "json5 0.9.5 pyh9f0ad1d_0",
   "git 2.38.1 pl5321h6429092_0",
   "libarchive 3.5.2 h610d84a_3",
   "zipp 3.10.0 pyhd8ed1ab_0",
   "prompt_toolkit 3.0.31 hd8ed1ab_0",
   "importlib-metadata 5.0.0 pyha770c72_1",
   "libev 4.33 h516909a_1",
   "libmamba 0.27.0 hfcbcd16_0",
   "nbformat 5.7.0 pyhd8ed1ab_0",
   "conda-package-handling 1.9.0 py310h761cc84_1",
   "libmambapy 0.27.0 py310h76fea7e_0",
   "ncurses 6.3 headf329_1",
   "libsqlite 3.39.4 hf9034f9_0",
   "chardet 5.0.0 py310hbbe02a8_1",
   "wheel 0.37.1 pyhd8ed1ab_0",
   "libiconv 1.17 h9cdd2b7_0",
   "zstd 1.5.2 hc1e27d5_4",
   "brotlipy 0.7.0 py310h761cc84_1005",
   "jinja2 3.1.2 pyhd8ed1ab_1",
   "pycosat 0.6.4 py310h761cc84_1",
   "prompt-toolkit 3.0.31 pyha770c72_0",
   "jsonschema 4.16.0 pyhd8ed1ab_0",
   "toml 0.10.2 pyhd8ed1ab_0",
   "typing_extensions 4.4.0 pyha770c72_0",
   "mamba 0.27.0 py310hcf12e44_0",
   "commonmark 0.9.1 py_0",
   "patchelf 0.15.0 h884eca8_0",
   "cffi 1.15.1 py310hf0c4615_2",
   "pybind11-abi 4 hd8ed1ab_3",
   "filelock 3.8.0 pyhd8ed1ab_0",
   "colorama 0.4.6 pyhd8ed1ab_0",
   "ruamel.yaml 0.17.21 py310h761cc84_2",
   "libxml2 2.10.3 h249b6dd_0",
   "bzip2 1.0.8 hf897c2e_4",
   "libuuid 2.32.1 hf897c2e_1000",
   "lz4-c 1.9.3 h01db608_1",
   "dataclasses 0.8 pyhc8e2a94_3",
   "ruamel.yaml.clib 0.2.7 py310h761cc84_0",
   "python_abi 3.10 2_cp310",
   "certifi 2022.9.24 pyhd8ed1ab_0",
   "ripgrep 13.0.0 hc770f70_2",
   "libnghttp2 1.47.0 h4173d3e_1",
   "libzlib 1.2.13 h4e544f5_4",
   "expat 2.5.0 ha18d298_0",
   "anaconda-client 1.8.0 pyhd8ed1ab_0",
   "beautifulsoup4 4.11.1 pyha770c72_0",
   "tk 8.6.12 hd8af866_0",
   "openssl 1.1.1q h4e544f5_1",
   "urllib3 1.26.11 pyhd8ed1ab_0",
   "psutil 5.9.3 py310h761cc84_1",
   "boa 0.12.0 pyha770c72_4",
   "pygments 2.13.0 pyhd8ed1ab_0",
   "setuptools 65.5.0 pyhd8ed1ab_0",
   "libedit 3.1.20191231 he28a2e2_2",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "libgcc-ng 12.2.0 h607ecd0_19",
   "pysocks 1.7.1 pyha2e5f31_6",
   "charset-normalizer 2.1.1 pyhd8ed1ab_0",
   "readline 8.1.2 h38e3740_0",
   "watchgod 0.8.2 pyhd8ed1ab_0",
   "reproc-cpp 14.2.3 h01db608_0",
   "six 1.16.0 pyh6c4a22f_0",
   "c-ares 1.18.1 hf897c2e_0",
   "requests 2.28.1 pyhd8ed1ab_1",
   "toolz 0.12.0 pyhd8ed1ab_0",
   "lzo 2.10 h516909a_1000",
   "ruamel_yaml 0.15.80 py310h761cc84_1008",
   "conda-build 3.22.0 py310h4c7bcd0_2",
   "conda 22.9.0 py310h4c7bcd0_1",
   "pytz 2022.5 pyhd8ed1ab_0",
   "cryptography 38.0.2 py310h6991d6a_2",
   "icu 70.1 ha18d298_0",
   "pip 22.3 pyhd8ed1ab_0",
   "jupyter_core 4.11.1 py310h4c7bcd0_1",
   "gettext 0.21.1 ha18d298_0",
   "sniffio 1.3.0 pyhd8ed1ab_0",
   "pyrsistent 0.18.1 py310hdc54845_2",
   "pkgutil-resolve-name 1.3.10 pyhd8ed1ab_0",
   "libffi 3.4.2 h3557bc0_5",
   "patch 2.7.6 hf897c2e_1002",
   "soupsieve 2.3.2.post1 pyhd8ed1ab_0",
   "curl 7.86.0 h8fd98b7_0",
   "pyyaml 6.0 py310h761cc84_5",
   "liblief 0.12.2 h4de3ea5_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "conda-forge-ci-setup 3.21.0 py310hf7ba518_100",
   "conda-env 2.6.0 1",
   "oniguruma 6.9.8 h4e544f5_0",
   "click 8.1.3 unix_pyhd8ed1ab_2",
   "jq 1.6 hb9de7d4_1000"
  ],
  "summary": "This is a C-level implementation of a fast, re-entrant, optimistic lock for CPython",
  "tags": []
 },
 "conda_build_config": {
  "BUILD": "aarch64-conda_cos7-linux-gnu",
  "CI": "travis",
  "c_compiler": "gcc",
  "c_compiler_version": "10",
  "cdt_arch": "aarch64",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "10",
  "docker_image": "quay.io/condaforge/linux-anvil-aarch64",
  "extend_keys": [
   "ignore_build_only_deps",
   "ignore_version",
   "pin_run_as_build",
   "extend_keys"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.10.* *_cpython",
  "r_base": "3.5",
  "target_platform": "linux-aarch64",
  "zip_keys": [
   [
    "c_compiler_version",
    "cxx_compiler_version"
   ]
  ]
 },
 "files": [
  "lib/python3.10/site-packages/fastrlock-0.8-py3.10.egg-info/PKG-INFO",
  "lib/python3.10/site-packages/fastrlock-0.8-py3.10.egg-info/not-zip-safe",
  "lib/python3.10/site-packages/fastrlock/__init__.pxd",
  "lib/python3.10/site-packages/fastrlock/__init__.py",
  "lib/python3.10/site-packages/fastrlock/_lock.pxi",
  "lib/python3.10/site-packages/fastrlock/rlock.cpython-310-aarch64-linux-gnu.so",
  "lib/python3.10/site-packages/fastrlock/rlock.pxd"
 ],
 "index": {
  "arch": "aarch64",
  "build": "py310h16c9dca_3",
  "build_number": 3,
  "depends": [
   "libgcc-ng >=12",
   "libstdcxx-ng >=12",
   "python >=3.10,<3.11.0a0",
   "python_abi 3.10.* *_cp310"
  ],
  "license": "MIT",
  "license_family": "MIT",
  "name": "fastrlock",
  "platform": "linux",
  "subdir": "linux-aarch64",
  "timestamp": 1667047449142,
  "version": "0.8"
 },
 "metadata_version": 1,
 "name": "fastrlock",
 "raw_recipe": "{% set name = \"fastrlock\" %}\n{% set version = \"0.8\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 9cc100ed0924b32173d7de705a82fdf1257cdf60af1952a13f64759307b40931\n\nbuild:\n  number: 3\n  # We need to pass --with-cython to force cython to regenerate the .c file\n  script: {{ PYTHON }} -m pip install . --global-option=\"--with-cython\" -vv\n\nrequirements:\n  build:\n    - {{ compiler(\"c\") }}\n    - {{ compiler(\"cxx\") }}\n  host:\n    - python\n    - pip\n    - cython\n  run:\n    - python\n\ntest:\n  imports:\n    - fastrlock\n\nabout:\n  home: https://github.com/scoder/fastrlock\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: This is a C-level implementation of a fast, re-entrant, optimistic lock for CPython\n  description: |\n    This is a C-level implementation of a fast, re-entrant,\n    optimistic lock for CPython. It is a drop-in replacement for\n    threading.RLock. FastRLock is implemented in Cython and also provides a\n    C-API for direct use from Cython code via from fastrlock cimport rlock.\n\n    Under normal conditions, it is about 10x faster than threading.RLock in\n    Python 2.7 because it avoids all locking unless two or more threads try to\n    acquire it at the same time. Under congestion, it is still about 10% faster\n    than RLock due to being implemented in Cython.\n\n    This is mostly equivalent to the revised RLock implementation in Python\n    3.2, but still faster due to being implemented in Cython. Note that the\n    threading.RLock implementation in Python 3.4 and later tends to be as fast\n    or even faster than the lock provided by this package, when called through\n    the Python API. FastRLock is still faster also on these systems when called\n    through its Cython API.\n  dev_url: https://github.com/scoder/fastrlock\n\nextra:\n  recipe-maintainers:\n    - hmaarrfk\n",
 "rendered_recipe": {
  "about": {
   "description": "This is a C-level implementation of a fast, re-entrant,\noptimistic lock for CPython. It is a drop-in replacement for\nthreading.RLock. FastRLock is implemented in Cython and also provides a\nC-API for direct use from Cython code via from fastrlock cimport rlock.\n\nUnder normal conditions, it is about 10x faster than threading.RLock in\nPython 2.7 because it avoids all locking unless two or more threads try to\nacquire it at the same time. Under congestion, it is still about 10% faster\nthan RLock due to being implemented in Cython.\n\nThis is mostly equivalent to the revised RLock implementation in Python\n3.2, but still faster due to being implemented in Cython. Note that the\nthreading.RLock implementation in Python 3.4 and later tends to be as fast\nor even faster than the lock provided by this package, when called through\nthe Python API. FastRLock is still faster also on these systems when called\nthrough its Cython API.\n",
   "dev_url": "https://github.com/scoder/fastrlock",
   "home": "https://github.com/scoder/fastrlock",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "This is a C-level implementation of a fast, re-entrant, optimistic lock for CPython"
  },
  "build": {
   "number": "3",
   "script": "/home/conda/feedstock_root/build_artifacts/fastrlock_1667047369430/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_p/bin/python -m pip install . --global-option=\"--with-cython\" -vv",
   "string": "py310h16c9dca_3"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "hmaarrfk"
   ]
  },
  "package": {
   "name": "fastrlock",
   "version": "0.8"
  },
  "requirements": {
   "build": [
    "_openmp_mutex 4.5 2_gnu",
    "binutils_impl_linux-aarch64 2.39 hb04425f_0",
    "binutils_linux-aarch64 2.39 h489c705_11",
    "gcc_impl_linux-aarch64 10.4.0 h9569200_19",
    "gcc_linux-aarch64 10.4.0 h72ad2ee_11",
    "gxx_impl_linux-aarch64 10.4.0 h9569200_19",
    "gxx_linux-aarch64 10.4.0 hb08d869_11",
    "kernel-headers_linux-aarch64 4.18.0 h5b4a56d_13",
    "ld_impl_linux-aarch64 2.39 ha75b1e8_0",
    "libgcc-devel_linux-aarch64 10.4.0 h3c6860a_19",
    "libgcc-ng 12.2.0 h607ecd0_19",
    "libgomp 12.2.0 h607ecd0_19",
    "libsanitizer 10.4.0 h0e20637_19",
    "libstdcxx-devel_linux-aarch64 10.4.0 h3c6860a_19",
    "libstdcxx-ng 12.2.0 hc13a102_19",
    "sysroot_linux-aarch64 2.17 h43d7e78_13"
   ],
   "host": [
    "_openmp_mutex 4.5 2_gnu",
    "bzip2 1.0.8 hf897c2e_4",
    "ca-certificates 2022.9.24 h4fd8a4c_0",
    "cython 0.29.32 py310h130cc07_1",
    "ld_impl_linux-aarch64 2.39 ha75b1e8_0",
    "libffi 3.4.2 h3557bc0_5",
    "libgcc-ng 12.2.0 h607ecd0_19",
    "libgomp 12.2.0 h607ecd0_19",
    "libnsl 2.0.0 hf897c2e_0",
    "libsqlite 3.39.4 hf9034f9_0",
    "libstdcxx-ng 12.2.0 hc13a102_19",
    "libuuid 2.32.1 hf897c2e_1000",
    "libzlib 1.2.13 h4e544f5_4",
    "ncurses 6.3 headf329_1",
    "openssl 3.0.5 h4e544f5_2",
    "pip 22.3 pyhd8ed1ab_0",
    "python 3.10.6 h92ab765_0_cpython",
    "python_abi 3.10 2_cp310",
    "readline 8.1.2 h38e3740_0",
    "setuptools 65.5.0 pyhd8ed1ab_0",
    "tk 8.6.12 hd8af866_0",
    "tzdata 2022e h191b570_0",
    "wheel 0.37.1 pyhd8ed1ab_0",
    "xz 5.2.6 h9cdd2b7_0"
   ],
   "run": [
    "libgcc-ng >=12",
    "libstdcxx-ng >=12",
    "python >=3.10,<3.11.0a0",
    "python_abi 3.10.* *_cp310"
   ]
  },
  "source": {
   "sha256": "9cc100ed0924b32173d7de705a82fdf1257cdf60af1952a13f64759307b40931",
   "url": "https://pypi.io/packages/source/f/fastrlock/fastrlock-0.8.tar.gz"
  },
  "test": {
   "imports": [
    "fastrlock"
   ]
  }
 },
 "version": "0.8"
}
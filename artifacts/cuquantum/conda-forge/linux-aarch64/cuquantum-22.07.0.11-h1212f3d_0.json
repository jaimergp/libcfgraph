{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.21.9",
  "conda_private": false,
  "conda_version": "4.13.0",
  "description": "NVIDIA cuQuantum is an SDK of optimized libraries and tools for accelerating quantum computing workflows.\nUsing NVIDIA GPU Tensor Core GPUs, developers can use cuQuantum to speed up quantum circuit simulations\nbased on state vector and tensor network methods by orders of magnitude. Two major components of the\nSDK are\n\n  - cuStateVec: a high-performance library for state vector computations\n  - cuTensorNet: a high-performance library for tensor network computations\n\nLicense Agreements:- The packages are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
  "dev_url": "https://developer.nvidia.com/cuquantum-downloads",
  "doc_url": "https://docs.nvidia.com/cuda/cuquantum/index.html",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "leofang",
    "JeremyWangNVDA",
    "mtjrider"
   ]
  },
  "home": "https://developer.nvidia.com/cuquantum-sdk",
  "identifiers": [],
  "keywords": [],
  "license": "LicenseRef-cuQuantum-Software-License-Agreement",
  "license_file": "docs/cuQuantum_license.pdf",
  "license_url": "https://docs.nvidia.com/cuda/cuquantum/license.html",
  "root_pkgs": [
   "libsolv 0.7.22 h7866ba4_0",
   "keyutils 1.6.1 h4e544f5_0",
   "openssl 1.1.1q h4e544f5_0",
   "nbformat 5.4.0 pyhd8ed1ab_0",
   "pyopenssl 22.0.0 pyhd8ed1ab_0",
   "yaml-cpp 0.7.0 h4de3ea5_1",
   "su-exec 0.2 h516909a_1002",
   "zipp 3.8.0 pyhd8ed1ab_0",
   "pycparser 2.21 pyhd8ed1ab_0",
   "pyrsistent 0.18.1 py39hb9a1dbb_1",
   "pkginfo 1.8.3 pyhd8ed1ab_0",
   "importlib-metadata 4.11.4 py39ha65689a_0",
   "krb5 1.19.3 h7c456eb_0",
   "traitlets 5.3.0 pyhd8ed1ab_0",
   "glob2 0.7 py_0",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "rich 12.5.1 pyhd8ed1ab_0",
   "pycosat 0.6.3 py39h0fd3b05_1010",
   "ruamel.yaml.clib 0.2.6 py39h0fd3b05_1",
   "anyio 3.6.1 py39ha65689a_0",
   "reproc 14.2.3 hf897c2e_0",
   "brotlipy 0.7.0 py39h0fd3b05_1004",
   "ld_impl_linux-aarch64 2.36.1 h02ad14f_2",
   "perl 5.32.1 2_hf897c2e_perl5",
   "certifi 2022.6.15 py39h4420490_0",
   "cryptography 37.0.4 py39h32042e6_0",
   "libxml2 2.9.14 h370961a_3",
   "cffi 1.15.1 py39hb26bf21_0",
   "libnsl 2.0.0 hf897c2e_0",
   "yaml 0.2.5 hf897c2e_2",
   "colorama 0.4.5 pyhd8ed1ab_0",
   "_openmp_mutex 4.5 2_gnu",
   "wcwidth 0.2.5 pyh9f0ad1d_2",
   "libgcc-ng 12.1.0 h3242a24_16",
   "clyent 1.2.2 py_1",
   "conda-build 3.21.9 py39h4420490_1",
   "ruamel_yaml 0.15.80 py39h0fd3b05_1007",
   "libnghttp2 1.47.0 h75cb1c7_0",
   "backports 1.0 py_2",
   "xz 5.2.5 h6dd45c4_1",
   "json5 0.9.5 pyh9f0ad1d_0",
   "idna 3.3 pyhd8ed1ab_0",
   "libarchive 3.5.2 h610d84a_3",
   "conda 4.13.0 py39h4420490_1",
   "pcre2 10.37 h73360fb_0",
   "sniffio 1.2.0 py39h4420490_3",
   "psutil 5.9.1 py39h0fd3b05_0",
   "requests 2.28.1 pyhd8ed1ab_0",
   "pysocks 1.7.1 py39ha65689a_5",
   "libev 4.33 h516909a_1",
   "liblief 0.11.5 h01db608_1",
   "prompt-toolkit 3.0.30 pyha770c72_0",
   "tzdata 2022a h191b570_0",
   "libmambapy 0.24.0 py39hdaab871_1",
   "setuptools 63.2.0 py39ha65689a_0",
   "py-lief 0.11.5 py39h7ab65be_1",
   "ncurses 6.3 headf329_1",
   "zlib 1.2.12 h4e544f5_2",
   "jsonschema 4.7.2 pyhd8ed1ab_0",
   "wheel 0.37.1 pyhd8ed1ab_0",
   "future 0.18.2 py39ha65689a_5",
   "jinja2 3.1.2 pyhd8ed1ab_1",
   "importlib_resources 5.8.0 pyhd8ed1ab_0",
   "python 3.9.13 h2eada40_0_cpython",
   "python-fastjsonschema 2.15.3 pyhd8ed1ab_0",
   "mamba 0.24.0 py39hc9db4b5_1",
   "sqlite 3.39.1 hc74f5b8_0",
   "curl 7.83.1 h8fd98b7_0",
   "libstdcxx-ng 12.1.0 hd01590b_16",
   "boa 0.11.0 pyha770c72_1",
   "chardet 5.0.0 py39ha65689a_0",
   "commonmark 0.9.1 py_0",
   "patchelf 0.15.0 h884eca8_0",
   "libcurl 7.83.1 h8fd98b7_0",
   "pybind11-abi 4 hd8ed1ab_3",
   "bzip2 1.0.8 hf897c2e_4",
   "libuuid 2.32.1 hf897c2e_1000",
   "lz4-c 1.9.3 h01db608_1",
   "dataclasses 0.8 pyhc8e2a94_3",
   "pytz 2022.1 pyhd8ed1ab_0",
   "charset-normalizer 2.1.0 pyhd8ed1ab_0",
   "libiconv 1.16 h6dd45c4_0",
   "ripgrep 13.0.0 hc770f70_2",
   "jupyter_core 4.10.0 py39h4420490_0",
   "anaconda-client 1.8.0 pyhd8ed1ab_0",
   "tini 0.19.0 hf897c2e_0",
   "beautifulsoup4 4.11.1 pyha770c72_0",
   "tk 8.6.12 hd8af866_0",
   "tqdm 4.64.0 pyhd8ed1ab_0",
   "libmamba 0.24.0 h8683862_1",
   "prompt_toolkit 3.0.30 hd8ed1ab_0",
   "joblib 1.1.0 pyhd8ed1ab_0",
   "ruamel.yaml 0.17.21 py39h0fd3b05_1",
   "typing_extensions 4.3.0 pyha770c72_0",
   "gettext 0.19.8.1 h6edf1e2_1008",
   "pyyaml 6.0 py39h0fd3b05_4",
   "libedit 3.1.20191231 he28a2e2_2",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "readline 8.1.2 h38e3740_0",
   "watchgod 0.8.2 pyhd8ed1ab_0",
   "expat 2.4.8 ha18d298_0",
   "reproc-cpp 14.2.3 h01db608_0",
   "six 1.16.0 pyh6c4a22f_0",
   "c-ares 1.18.1 hf897c2e_0",
   "lzo 2.10 h516909a_1000",
   "python_abi 3.9 2_cp39",
   "filelock 3.7.1 pyhd8ed1ab_0",
   "conda-package-handling 1.8.1 py39h0fd3b05_1",
   "icu 70.1 ha18d298_0",
   "git 2.37.1 pl5321hd6c143b_0",
   "attrs 21.4.0 pyhd8ed1ab_0",
   "soupsieve 2.3.1 pyhd8ed1ab_0",
   "libzlib 1.2.12 h4e544f5_2",
   "ca-certificates 2022.6.15 h4fd8a4c_0",
   "urllib3 1.26.10 pyhd8ed1ab_0",
   "libgomp 12.1.0 h3242a24_16",
   "zstd 1.5.2 haad177d_2",
   "libffi 3.4.2 h3557bc0_5",
   "patch 2.7.6 hf897c2e_1002",
   "markupsafe 2.1.1 py39hb9a1dbb_1",
   "python-libarchive-c 4.0 py39h4420490_1",
   "pygments 2.12.0 pyhd8ed1ab_0",
   "libssh2 1.10.0 h1ab2c7b_2",
   "pip 22.2 pyhd8ed1ab_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "conda-forge-ci-setup 3.21.0 py39hbe0ec15_100",
   "conda-env 2.6.0 1",
   "oniguruma 6.9.8 h4e544f5_0",
   "click 8.1.3 py39h4420490_0",
   "jq 1.6 hb9de7d4_1000"
  ],
  "summary": "cuQuantum SDK: A High-Performance Library for Accelerating Quantum Information Science",
  "tags": []
 },
 "conda_build_config": {
  "BUILD": "aarch64-conda_cos7-linux-gnu",
  "CI": "travis",
  "c_compiler": "gcc",
  "c_compiler_version": "10",
  "cdt_arch": "aarch64",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cuda_compiler": "nvcc",
  "cuda_compiler_version": "11.2",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "10",
  "docker_image": "quay.io/condaforge/linux-anvil-aarch64-cuda:11.2",
  "extend_keys": [
   "ignore_build_only_deps",
   "pin_run_as_build",
   "extend_keys",
   "ignore_version"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.9",
  "r_base": "3.5",
  "target_platform": "linux-aarch64",
  "zip_keys": [
   [
    "c_compiler_version",
    "cxx_compiler_version",
    "cuda_compiler_version",
    "cdt_name",
    "docker_image"
   ]
  ]
 },
 "files": [
  "bin/.cuquantum-post-link.sh",
  "include/custatevec.h",
  "include/cutensornet.h",
  "include/cutensornet/types.h",
  "lib/libcustatevec.so",
  "lib/libcustatevec.so.1",
  "lib/libcustatevec.so.1.1.0.11",
  "lib/libcutensornet.so",
  "lib/libcutensornet.so.1",
  "lib/libcutensornet.so.1.1.0.11"
 ],
 "index": {
  "arch": "aarch64",
  "build": "h1212f3d_0",
  "build_number": 0,
  "depends": [
   "cudatoolkit >=11.0,<12",
   "cutensor >=1.5,<2",
   "libgcc-ng >=12",
   "libgomp"
  ],
  "license": "LicenseRef-cuQuantum-Software-License-Agreement",
  "name": "cuquantum",
  "platform": "linux",
  "subdir": "linux-aarch64",
  "timestamp": 1658439529032,
  "version": "22.07.0.11"
 },
 "metadata_version": 1,
 "name": "cuquantum",
 "raw_recipe": "{% set version = \"22.07.0.11\" %}\n\npackage:\n  name: cuquantum\n  version: {{ version }}\n\nsource:\n  url: https://developer.download.nvidia.com/compute/cuquantum/redist/cuquantum/linux-x86_64/cuquantum-linux-x86_64-{{ version }}-archive.tar.xz    # [linux64]\n  url: https://developer.download.nvidia.com/compute/cuquantum/redist/cuquantum/linux-sbsa/cuquantum-linux-sbsa-{{ version }}-archive.tar.xz        # [aarch64]\n  url: https://developer.download.nvidia.com/compute/cuquantum/redist/cuquantum/linux-ppc64le/cuquantum-linux-ppc64le-{{ version }}-archive.tar.xz  # [ppc64le]\n\n  sha256: bb67c2ddc9822cd0b3c50d6d269c051eab4971c4d75a02ac24de03b48e30f639  # [linux64]\n  sha256: d1d386ed4c7876bd7dcdef9f0dddcfdd2c0ccbeece49937017688469dadef123  # [aarch64]\n  sha256: 60541d5cc4999ee2e514bc20cdab42e8737b5969ab0816d93a0c324d5d318864  # [ppc64le]\n\nbuild:\n  number: 0\n  skip: true  # [win or cuda_compiler_version != \"11.2\"]\n  script:\n    - mkdir -p $PREFIX/include                                            # [linux]\n    - cp -r include/* $PREFIX/include/                                    # [linux]\n    - mkdir -p $PREFIX/lib                                                # [linux]\n    - mv lib/*.so* $PREFIX/lib/                                           # [linux]\n\n    # Patch for conda-forge:\n    # According to the CUDA support matrix, we require glibc 2.27+ on aarch64-sbsa\n    # and ppc64le, while conda-forge is still on 2.17. However, given that powf is\n    # the only offending symbol that needs a newer glibc, it is the easiest if we\n    # just patch it.\n    - patchelf --clear-symbol-version powf $PREFIX/lib/libcustatevec.so   # [aarch64 or ppc64le]\n  run_exports:\n    - {{ pin_subpackage('cuquantum', max_pin='x.x') }}\n  ignore_run_exports_from:\n    - {{ compiler('cuda') }}\n  missing_dso_whitelist:\n    - '*/libcutensor.so*'\n    - '*/libcublas.so*'\n    - '*/libcublasLt.so*'\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cuda') }}\n    - sysroot_linux-64 2.17  # [linux64]\n  host:\n  run:\n    - libgomp        # [linux]\n    - cudatoolkit >=11.0,<12\n    - cutensor >=1.5,<2\n\ntest:\n  requires:\n    - git\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}\n    - sysroot_linux-64 2.17  # [linux64]\n    # make sure we pick up the version matching the docker,\n    # or the linker would complain \n    - cudatoolkit {{ cuda_compiler_version }}\n  files:\n    - test_load_elf.c        # [linux]\n\nabout:\n  home: https://developer.nvidia.com/cuquantum-sdk\n  license: LicenseRef-cuQuantum-Software-License-Agreement\n  license_url: https://docs.nvidia.com/cuda/cuquantum/license.html\n  license_file: docs/cuQuantum_license.pdf\n  summary: 'cuQuantum SDK: A High-Performance Library for Accelerating Quantum Information Science'\n  description: |\n    NVIDIA cuQuantum is an SDK of optimized libraries and tools for accelerating quantum computing workflows.\n    Using NVIDIA GPU Tensor Core GPUs, developers can use cuQuantum to speed up quantum circuit simulations\n    based on state vector and tensor network methods by orders of magnitude. Two major components of the\n    SDK are\n\n      - cuStateVec: a high-performance library for state vector computations\n      - cuTensorNet: a high-performance library for tensor network computations\n\n    License Agreements:- The packages are governed by the NVIDIA cuQuantum\n    Software License Agreement (EULA). By downloading and using the packages,\n    you accept the terms and conditions of the NVIDIA cuQuantum EULA -\n    https://docs.nvidia.com/cuda/cuquantum/license.html\n  doc_url: https://docs.nvidia.com/cuda/cuquantum/index.html\n  dev_url: https://developer.nvidia.com/cuquantum-downloads\n\nextra:\n  recipe-maintainers:\n    - leofang\n    - JeremyWangNVDA\n    - mtjrider\n",
 "rendered_recipe": {
  "about": {
   "description": "NVIDIA cuQuantum is an SDK of optimized libraries and tools for accelerating quantum computing workflows.\nUsing NVIDIA GPU Tensor Core GPUs, developers can use cuQuantum to speed up quantum circuit simulations\nbased on state vector and tensor network methods by orders of magnitude. Two major components of the\nSDK are\n\n  - cuStateVec: a high-performance library for state vector computations\n  - cuTensorNet: a high-performance library for tensor network computations\n\nLicense Agreements:- The packages are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
   "dev_url": "https://developer.nvidia.com/cuquantum-downloads",
   "doc_url": "https://docs.nvidia.com/cuda/cuquantum/index.html",
   "home": "https://developer.nvidia.com/cuquantum-sdk",
   "license": "LicenseRef-cuQuantum-Software-License-Agreement",
   "license_file": "docs/cuQuantum_license.pdf",
   "license_url": "https://docs.nvidia.com/cuda/cuquantum/license.html",
   "summary": "cuQuantum SDK: A High-Performance Library for Accelerating Quantum Information Science"
  },
  "build": {
   "ignore_run_exports_from": [
    "nvcc_linux-aarch64 11.2.*"
   ],
   "missing_dso_whitelist": [
    "*/libcublas.so*",
    "*/libcublasLt.so*",
    "*/libcutensor.so*"
   ],
   "number": "0",
   "run_exports": [
    "cuquantum >=22.7.0.11,<22.8.0a0"
   ],
   "script": [
    "mkdir -p $PREFIX/include",
    "cp -r include/* $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/*.so* $PREFIX/lib/",
    "patchelf --clear-symbol-version powf $PREFIX/lib/libcustatevec.so"
   ],
   "string": "h1212f3d_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "JeremyWangNVDA",
    "leofang",
    "mtjrider"
   ]
  },
  "package": {
   "name": "cuquantum",
   "version": "22.07.0.11"
  },
  "requirements": {
   "build": [
    "_openmp_mutex 4.5 2_gnu",
    "binutils_impl_linux-aarch64 2.36.1 h026399b_2",
    "binutils_linux-aarch64 2.36 h7854541_10",
    "gcc_impl_linux-aarch64 10.3.0 ha07e0e6_16",
    "gcc_linux-aarch64 10.3.0 h4e3e293_10",
    "kernel-headers_linux-aarch64 4.18.0 h5b4a56d_13",
    "ld_impl_linux-aarch64 2.36.1 h02ad14f_2",
    "libgcc-devel_linux-aarch64 10.3.0 h8e480ec_16",
    "libgcc-ng 12.1.0 h3242a24_16",
    "libgomp 12.1.0 h3242a24_16",
    "libsanitizer 10.3.0 h971684a_16",
    "libstdcxx-ng 12.1.0 hd01590b_16",
    "nvcc_linux-aarch64 11.2 h8127329_19",
    "sed 4.8 ha0d5d3d_0",
    "sysroot_linux-aarch64 2.17 h43d7e78_13"
   ],
   "host": [
    "_openmp_mutex 4.5 2_gnu",
    "libgcc-ng 12.1.0 h3242a24_16",
    "libgomp 12.1.0 h3242a24_16"
   ],
   "run": [
    "cudatoolkit >=11.0,<12",
    "cutensor >=1.5,<2",
    "libgcc-ng >=12",
    "libgomp"
   ]
  },
  "source": {
   "sha256": "d1d386ed4c7876bd7dcdef9f0dddcfdd2c0ccbeece49937017688469dadef123",
   "url": "https://developer.download.nvidia.com/compute/cuquantum/redist/cuquantum/linux-sbsa/cuquantum-linux-sbsa-22.07.0.11-archive.tar.xz"
  },
  "test": {
   "files": [
    "test_load_elf.c"
   ],
   "requires": [
    "cudatoolkit 11.2.*",
    "gcc_linux-aarch64 10.*",
    "git",
    "gxx_linux-aarch64 10.*",
    "nvcc_linux-aarch64 11.2.*"
   ]
  }
 },
 "version": "22.07.0.11"
}
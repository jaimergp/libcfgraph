{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.21.9",
  "conda_private": false,
  "conda_version": "4.13.0",
  "description": "Lightwood is an AutoML framework that enables you to generate and customize machine learning pipelines declarative syntax called JSON-AI.\n\nOur goal is to make the data science/machine learning (DS/ML) life cycle easier by allowing users to focus on what they want to do their data without needing to write repetitive boilerplate code around machine learning and data preparation. Instead, we enable you to focus on the parts of a model that are truly unique and custom.\n\nLightwood works with a variety of data types such as numbers, dates, categories, tags, text, arrays and various multimedia formats. These data types can be combined together to solve complex problems. We also support a time-series mode for problems that have between-row dependencies.\n\nOur JSON-AI syntax allows users to change any and all parts of the models Lightwood automatically generates. The syntax outlines the specifics details in each step of the modeling pipeline. Users may override default values (for example, changing the type of a column) or alternatively, entirely replace steps with their own methods (ex: use a random forest model for a predictor). Lightwood creates a \"JSON-AI\" object from this syntax which can then be used to automatically generate python code to represent your pipeline.\n",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "paxcema"
   ]
  },
  "home": "https://github.com/mindsdb/lightwood",
  "identifiers": [],
  "keywords": [],
  "license": "GPL-2.0-or-later",
  "license_file": [
   "LICENSE"
  ],
  "root_pkgs": [
   "pkginfo 1.8.3 pyhd8ed1ab_0",
   "pyyaml 6.0 py39hb9d737c_4",
   "libstdcxx-ng 12.1.0 ha89aaad_16",
   "glob2 0.7 py_0",
   "reproc 14.2.3 h7f98852_0",
   "urllib3 1.26.10 pyhd8ed1ab_0",
   "chardet 5.0.0 py39hf3d152e_0",
   "ruamel_yaml 0.15.80 py39hb9d737c_1007",
   "certifi 2022.6.15 py39hf3d152e_0",
   "libnsl 2.0.0 h7f98852_0",
   "libuuid 2.32.1 h7f98852_1000",
   "ca-certificates 2022.6.15 ha878542_0",
   "reproc-cpp 14.2.3 h9c3ff4c_0",
   "idna 3.3 pyhd8ed1ab_0",
   "patchelf 0.15.0 h58526e2_0",
   "python-fastjsonschema 2.16.1 pyhd8ed1ab_0",
   "zipp 3.8.0 pyhd8ed1ab_0",
   "wheel 0.37.1 pyhd8ed1ab_0",
   "conda-package-handling 1.8.1 py39hb9d737c_1",
   "libxml2 2.9.14 h22db469_3",
   "filelock 3.7.1 pyhd8ed1ab_0",
   "zlib 1.2.12 h166bdaf_2",
   "tini 0.19.0 h7f98852_0",
   "setuptools 63.2.0 py39hf3d152e_0",
   "json5 0.9.5 pyh9f0ad1d_0",
   "anyio 3.6.1 py39hf3d152e_0",
   "pycparser 2.21 pyhd8ed1ab_0",
   "mamba 0.24.0 py39hfa8f2c8_1",
   "nbformat 5.4.0 pyhd8ed1ab_0",
   "python-libarchive-c 4.0 py39hf3d152e_1",
   "jsonschema 4.7.2 pyhd8ed1ab_0",
   "cffi 1.15.1 py39he91dace_0",
   "libmamba 0.24.0 hd8a31e3_1",
   "liblief 0.11.5 h9c3ff4c_1",
   "libnghttp2 1.47.0 h727a467_0",
   "pybind11-abi 4 hd8ed1ab_3",
   "ripgrep 13.0.0 h2f28480_2",
   "c-ares 1.18.1 h7f98852_0",
   "beautifulsoup4 4.11.1 pyha770c72_0",
   "six 1.16.0 pyh6c4a22f_0",
   "clyent 1.2.2 py_1",
   "brotlipy 0.7.0 py39hb9d737c_1004",
   "ld_impl_linux-64 2.36.1 hea4e1c9_2",
   "joblib 1.1.0 pyhd8ed1ab_0",
   "conda 4.13.0 py39hf3d152e_1",
   "tqdm 4.64.0 pyhd8ed1ab_0",
   "zstd 1.5.2 h8a70e8d_2",
   "curl 7.83.1 h7bff187_0",
   "gettext 0.19.8.1 h73d1719_1008",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "bzip2 1.0.8 h7f98852_4",
   "libev 4.33 h516909a_1",
   "prompt_toolkit 3.0.30 hd8ed1ab_0",
   "conda-build 3.21.9 py39hf3d152e_1",
   "ncurses 6.3 h27087fc_1",
   "git 2.37.1 pl5321h36853c3_0",
   "importlib_resources 5.8.0 pyhd8ed1ab_0",
   "prompt-toolkit 3.0.30 pyha770c72_0",
   "libgomp 12.1.0 h8d9b700_16",
   "sniffio 1.2.0 py39hf3d152e_3",
   "libffi 3.4.2 h7f98852_5",
   "_libgcc_mutex 0.1 conda_forge",
   "sqlite 3.39.2 h4ff8645_0",
   "requests 2.28.1 pyhd8ed1ab_0",
   "jupyter_core 4.11.1 py39hf3d152e_0",
   "keyutils 1.6.1 h166bdaf_0",
   "anaconda-client 1.8.0 pyhd8ed1ab_0",
   "python 3.9.13 h9a8a25e_0_cpython",
   "yaml-cpp 0.7.0 h27087fc_1",
   "ruamel.yaml 0.17.21 py39hb9d737c_1",
   "cryptography 37.0.4 py39hd97740a_0",
   "pygments 2.12.0 pyhd8ed1ab_0",
   "lz4-c 1.9.3 h9c3ff4c_1",
   "pyopenssl 22.0.0 pyhd8ed1ab_0",
   "psutil 5.9.1 py39hb9d737c_0",
   "perl 5.32.1 2_h7f98852_perl5",
   "watchgod 0.8.2 pyhd8ed1ab_0",
   "boa 0.11.0 pyha770c72_1",
   "markupsafe 2.1.1 py39hb9d737c_1",
   "wcwidth 0.2.5 pyh9f0ad1d_2",
   "readline 8.1.2 h0f457ee_0",
   "pyrsistent 0.18.1 py39hb9d737c_1",
   "ruamel.yaml.clib 0.2.6 py39hb9d737c_1",
   "libsolv 0.7.22 h6239696_0",
   "pysocks 1.7.1 py39hf3d152e_5",
   "libedit 3.1.20191231 he28a2e2_2",
   "python_abi 3.9 2_cp39",
   "libiconv 1.16 h516909a_0",
   "tzdata 2022a h191b570_0",
   "lzo 2.10 h516909a_1000",
   "future 0.18.2 py39hf3d152e_5",
   "su-exec 0.2 h516909a_1002",
   "openssl 1.1.1q h166bdaf_0",
   "dataclasses 0.8 pyhc8e2a94_3",
   "libgcc-ng 12.1.0 h8d9b700_16",
   "charset-normalizer 2.1.0 pyhd8ed1ab_0",
   "libcurl 7.83.1 h7bff187_0",
   "jinja2 3.1.2 pyhd8ed1ab_1",
   "rich 12.5.1 pyhd8ed1ab_0",
   "traitlets 5.3.0 pyhd8ed1ab_0",
   "typing_extensions 4.3.0 pyha770c72_0",
   "xz 5.2.5 h516909a_1",
   "libarchive 3.5.2 hb890918_3",
   "krb5 1.19.3 h3790be6_0",
   "importlib-metadata 4.11.4 py39hf3d152e_0",
   "pycosat 0.6.3 py39hb9d737c_1010",
   "pytz 2022.1 pyhd8ed1ab_0",
   "commonmark 0.9.1 py_0",
   "pcre2 10.37 h032f7d1_0",
   "colorama 0.4.5 pyhd8ed1ab_0",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "attrs 21.4.0 pyhd8ed1ab_0",
   "_openmp_mutex 4.5 2_gnu",
   "patch 2.7.6 h7f98852_1002",
   "expat 2.4.8 h27087fc_0",
   "libssh2 1.10.0 ha56f1ee_2",
   "py-lief 0.11.5 py39he80948d_1",
   "libzlib 1.2.12 h166bdaf_2",
   "yaml 0.2.5 h7f98852_2",
   "libmambapy 0.24.0 py39hd55135b_1",
   "backports 1.0 py_2",
   "tk 8.6.12 h27826a3_0",
   "soupsieve 2.3.2.post1 pyhd8ed1ab_0",
   "icu 70.1 h27087fc_0",
   "conda-forge-ci-setup 3.21.0 py39h69ce9fc_100",
   "jq 1.6 h36c2ea0_1000",
   "pip 22.2.2 pyhd8ed1ab_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "conda-env 2.6.0 1",
   "click 8.1.3 py39hf3d152e_0",
   "oniguruma 6.9.8 h166bdaf_0"
  ],
  "summary": "Lightwood is a toolkit for automatic machine learning model building",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "cdt_name": "cos6",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "docker_image": "quay.io/condaforge/linux-anvil-cos7-x86_64",
  "extend_keys": [
   "ignore_build_only_deps",
   "pin_run_as_build",
   "extend_keys",
   "ignore_version"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.9",
  "r_base": "3.5",
  "target_platform": "linux-64"
 },
 "files": [
  "site-packages/lightwood-22.8.1.0.dist-info/INSTALLER",
  "site-packages/lightwood-22.8.1.0.dist-info/METADATA",
  "site-packages/lightwood-22.8.1.0.dist-info/RECORD",
  "site-packages/lightwood-22.8.1.0.dist-info/REQUESTED",
  "site-packages/lightwood-22.8.1.0.dist-info/WHEEL",
  "site-packages/lightwood-22.8.1.0.dist-info/direct_url.json",
  "site-packages/lightwood/__about__.py",
  "site-packages/lightwood/__init__.py",
  "site-packages/lightwood/analysis/__init__.py",
  "site-packages/lightwood/analysis/analyze.py",
  "site-packages/lightwood/analysis/base.py",
  "site-packages/lightwood/analysis/explain.py",
  "site-packages/lightwood/analysis/helpers/__init__.py",
  "site-packages/lightwood/analysis/helpers/acc_stats.py",
  "site-packages/lightwood/analysis/helpers/conf_stats.py",
  "site-packages/lightwood/analysis/helpers/feature_importance.py",
  "site-packages/lightwood/analysis/helpers/shap.py",
  "site-packages/lightwood/analysis/nc/__init__.py",
  "site-packages/lightwood/analysis/nc/base.py",
  "site-packages/lightwood/analysis/nc/calibrate.py",
  "site-packages/lightwood/analysis/nc/icp.py",
  "site-packages/lightwood/analysis/nc/metrics.py",
  "site-packages/lightwood/analysis/nc/nc.py",
  "site-packages/lightwood/analysis/nc/norm.py",
  "site-packages/lightwood/analysis/nc/util.py",
  "site-packages/lightwood/analysis/nn_conf/__init__.py",
  "site-packages/lightwood/analysis/nn_conf/temp_scale.py",
  "site-packages/lightwood/api/__init__.py",
  "site-packages/lightwood/api/dtype.py",
  "site-packages/lightwood/api/high_level.py",
  "site-packages/lightwood/api/json_ai.py",
  "site-packages/lightwood/api/predictor.py",
  "site-packages/lightwood/api/types.py",
  "site-packages/lightwood/data/__init__.py",
  "site-packages/lightwood/data/cleaner.py",
  "site-packages/lightwood/data/encoded_ds.py",
  "site-packages/lightwood/data/infer_types.py",
  "site-packages/lightwood/data/splitter.py",
  "site-packages/lightwood/data/statistical_analysis.py",
  "site-packages/lightwood/data/timeseries_analyzer.py",
  "site-packages/lightwood/data/timeseries_transform.py",
  "site-packages/lightwood/encoder/__init__.py",
  "site-packages/lightwood/encoder/array/__init__.py",
  "site-packages/lightwood/encoder/array/array.py",
  "site-packages/lightwood/encoder/array/ts_cat_array.py",
  "site-packages/lightwood/encoder/array/ts_num_array.py",
  "site-packages/lightwood/encoder/audio/__init__.py",
  "site-packages/lightwood/encoder/audio/mfcc.py",
  "site-packages/lightwood/encoder/base.py",
  "site-packages/lightwood/encoder/categorical/__init__.py",
  "site-packages/lightwood/encoder/categorical/autoencoder.py",
  "site-packages/lightwood/encoder/categorical/binary.py",
  "site-packages/lightwood/encoder/categorical/gym.py",
  "site-packages/lightwood/encoder/categorical/multihot.py",
  "site-packages/lightwood/encoder/categorical/onehot.py",
  "site-packages/lightwood/encoder/datetime/__init__.py",
  "site-packages/lightwood/encoder/datetime/datetime.py",
  "site-packages/lightwood/encoder/datetime/datetime_sin_normalizer.py",
  "site-packages/lightwood/encoder/helpers.py",
  "site-packages/lightwood/encoder/identity/__init__.py",
  "site-packages/lightwood/encoder/identity/identity.py",
  "site-packages/lightwood/encoder/image/__init__.py",
  "site-packages/lightwood/encoder/image/helpers/__init__.py",
  "site-packages/lightwood/encoder/image/helpers/img_to_vec.py",
  "site-packages/lightwood/encoder/image/img_2_vec.py",
  "site-packages/lightwood/encoder/numeric/__init__.py",
  "site-packages/lightwood/encoder/numeric/numeric.py",
  "site-packages/lightwood/encoder/numeric/ts_numeric.py",
  "site-packages/lightwood/encoder/text/__init__.py",
  "site-packages/lightwood/encoder/text/helpers/__init__.py",
  "site-packages/lightwood/encoder/text/helpers/pretrained_helpers.py",
  "site-packages/lightwood/encoder/text/helpers/rnn_helpers.py",
  "site-packages/lightwood/encoder/text/pretrained.py",
  "site-packages/lightwood/encoder/text/rnn.py",
  "site-packages/lightwood/encoder/text/short.py",
  "site-packages/lightwood/encoder/text/tfidf.py",
  "site-packages/lightwood/encoder/text/vocab.py",
  "site-packages/lightwood/encoder/time_series/__init__.py",
  "site-packages/lightwood/encoder/time_series/helpers/__init__.py",
  "site-packages/lightwood/encoder/time_series/helpers/common.py",
  "site-packages/lightwood/encoder/time_series/helpers/rnn_helpers.py",
  "site-packages/lightwood/encoder/time_series/helpers/transformer_helpers.py",
  "site-packages/lightwood/encoder/time_series/rnn.py",
  "site-packages/lightwood/encoder/time_series/ts.py",
  "site-packages/lightwood/ensemble/__init__.py",
  "site-packages/lightwood/ensemble/base.py",
  "site-packages/lightwood/ensemble/best_of.py",
  "site-packages/lightwood/ensemble/mean_ensemble.py",
  "site-packages/lightwood/ensemble/mode_ensemble.py",
  "site-packages/lightwood/ensemble/weighted_mean_ensemble.py",
  "site-packages/lightwood/helpers/__init__.py",
  "site-packages/lightwood/helpers/accuracy.py",
  "site-packages/lightwood/helpers/constants.py",
  "site-packages/lightwood/helpers/device.py",
  "site-packages/lightwood/helpers/general.py",
  "site-packages/lightwood/helpers/imputers.py",
  "site-packages/lightwood/helpers/io.py",
  "site-packages/lightwood/helpers/log.py",
  "site-packages/lightwood/helpers/numeric.py",
  "site-packages/lightwood/helpers/parallelism.py",
  "site-packages/lightwood/helpers/seed.py",
  "site-packages/lightwood/helpers/templating.py",
  "site-packages/lightwood/helpers/text.py",
  "site-packages/lightwood/helpers/torch.py",
  "site-packages/lightwood/helpers/ts.py",
  "site-packages/lightwood/mixer/__init__.py",
  "site-packages/lightwood/mixer/arima.py",
  "site-packages/lightwood/mixer/base.py",
  "site-packages/lightwood/mixer/ets.py",
  "site-packages/lightwood/mixer/helpers/__init__.py",
  "site-packages/lightwood/mixer/helpers/ar_net.py",
  "site-packages/lightwood/mixer/helpers/default_net.py",
  "site-packages/lightwood/mixer/helpers/qclassic_net.py",
  "site-packages/lightwood/mixer/helpers/ranger.py",
  "site-packages/lightwood/mixer/helpers/residual_net.py",
  "site-packages/lightwood/mixer/helpers/transform_corss_entropy_loss.py",
  "site-packages/lightwood/mixer/helpers/ts.py",
  "site-packages/lightwood/mixer/lightgbm.py",
  "site-packages/lightwood/mixer/lightgbm_array.py",
  "site-packages/lightwood/mixer/neural.py",
  "site-packages/lightwood/mixer/neural_ts.py",
  "site-packages/lightwood/mixer/nhits.py",
  "site-packages/lightwood/mixer/prophet.py",
  "site-packages/lightwood/mixer/qclassic.py",
  "site-packages/lightwood/mixer/regression.py",
  "site-packages/lightwood/mixer/sktime.py",
  "site-packages/lightwood/mixer/unit.py",
  "site-packages/tests/__init__.py",
  "site-packages/tests/integration/__init__.py",
  "site-packages/tests/integration/advanced/__init__.py",
  "site-packages/tests/integration/advanced/test_array.py",
  "site-packages/tests/integration/advanced/test_custom_modules.py",
  "site-packages/tests/integration/advanced/test_text_input.py",
  "site-packages/tests/integration/advanced/test_timeseries.py",
  "site-packages/tests/integration/basic/__init__.py",
  "site-packages/tests/integration/basic/test_airline.py",
  "site-packages/tests/integration/basic/test_analyze_dataset.py",
  "site-packages/tests/integration/basic/test_categorical.py",
  "site-packages/tests/integration/basic/test_cleaner.py",
  "site-packages/tests/integration/basic/test_ensembles.py",
  "site-packages/tests/integration/basic/test_jsonai.py",
  "site-packages/tests/integration/basic/test_model_selection.py",
  "site-packages/tests/integration/basic/test_qclassic.py",
  "site-packages/tests/integration/basic/test_regression.py",
  "site-packages/tests/integration/basic/test_save_and_load.py",
  "site-packages/tests/integration/basic/test_weird_target_dist.py",
  "site-packages/tests/unit_tests/__init__.py",
  "site-packages/tests/unit_tests/data/__init__.py",
  "site-packages/tests/unit_tests/data/test_imputers.py",
  "site-packages/tests/unit_tests/data/test_transform_ts.py",
  "site-packages/tests/unit_tests/encoder/__init__.py",
  "site-packages/tests/unit_tests/encoder/audio/__init__.py",
  "site-packages/tests/unit_tests/encoder/audio/test_mfcc.py",
  "site-packages/tests/unit_tests/encoder/categorical/__init__.py",
  "site-packages/tests/unit_tests/encoder/categorical/test_autoencoder.py",
  "site-packages/tests/unit_tests/encoder/categorical/test_binary.py",
  "site-packages/tests/unit_tests/encoder/categorical/test_multihot.py",
  "site-packages/tests/unit_tests/encoder/categorical/test_onehot.py",
  "site-packages/tests/unit_tests/encoder/date/__init__.py",
  "site-packages/tests/unit_tests/encoder/date/test_datetime.py",
  "site-packages/tests/unit_tests/encoder/identity/__init__.py",
  "site-packages/tests/unit_tests/encoder/identity/test_identity.py",
  "site-packages/tests/unit_tests/encoder/images/__init__.py",
  "site-packages/tests/unit_tests/encoder/images/test_img_2_vec.py",
  "site-packages/tests/unit_tests/encoder/numeric/__init__.py",
  "site-packages/tests/unit_tests/encoder/numeric/test_numeric.py",
  "site-packages/tests/unit_tests/encoder/text/__init__.py",
  "site-packages/tests/unit_tests/encoder/text/test_pretrained.py",
  "site-packages/tests/unit_tests/encoder/text/test_rnn.py",
  "site-packages/tests/unit_tests/encoder/text/test_short.py",
  "site-packages/tests/unit_tests/encoder/text/test_tfidf.py",
  "site-packages/tests/unit_tests/encoder/text/test_vocab.py",
  "site-packages/tests/unit_tests/encoder/time_series/__init__.py",
  "site-packages/tests/unit_tests/encoder/time_series/test_timeseries_rnn.py",
  "site-packages/tests/unit_tests/encoder/time_series/test_transformer.py",
  "site-packages/tests/unit_tests/helpers.py",
  "site-packages/tests/utils/__init__.py",
  "site-packages/tests/utils/data_generation.py",
  "site-packages/tests/utils/timing.py"
 ],
 "index": {
  "arch": null,
  "build": "pyhd8ed1ab_0",
  "build_number": 0,
  "depends": [
   "autopep8 >=1.5.7",
   "black >=21.9b0",
   "colorlog 6.5.0",
   "dataclasses-json >=0.5.4",
   "dill 0.3.4",
   "langdetect >=1.0.0,<=1.0.9",
   "lightgbm >=3.2.1,<=3.3.2",
   "neuralforecast 0.1.0",
   "nltk >=3,<3.6",
   "numpy >=1.18.0,<=1.22.0",
   "optuna >=2.8.0,<2.10.0",
   "pandas >=1.1.5,<=1.3.3",
   "psutil >=5.7.0",
   "python >=3.7",
   "python-dateutil <2.8.1,>=2.1",
   "pytorch >=1.9.0",
   "pytorch-lightning >=1.3.0",
   "requests >=2.0.0",
   "schema >=0.6.8",
   "scikit-learn <=1.0.2",
   "scipy >=1.5.4,<=1.7.1",
   "setuptools >=21.2.1",
   "sktime >=0.11.0,<0.12.0",
   "statsforecast 0.7.0",
   "statsmodels >=0.12.0",
   "torch-optimizer 0.1.0",
   "transformers >=4.5.0,<=4.11.3",
   "typing_extensions",
   "wheel >=0.32.2"
  ],
  "license": "GPL-2.0-or-later",
  "name": "lightwood",
  "noarch": "python",
  "platform": null,
  "subdir": "noarch",
  "timestamp": 1660147374758,
  "version": "22.8.1.0"
 },
 "metadata_version": 1,
 "name": "lightwood",
 "raw_recipe": "{% set name = \"lightwood\" %}\n{% set version = \"22.8.1.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/lightwood-{{ version }}.tar.gz\n  sha256: 43cce4b290ac275206d8f12c506d34b6b74f4aa8413815a693fc26a50de48fed\n\nbuild:\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n  number: 0\n\nrequirements:\n  host:\n    - pip\n    - python >=3.7\n  run:\n    - autopep8 >=1.5.7\n    - black >=21.9b0\n    - colorlog ==6.5.0\n    - dataclasses-json >=0.5.4\n    - dill ==0.3.4\n    - langdetect >=1.0.0,<=1.0.9\n    - lightgbm >=3.2.1,<=3.3.2\n    - neuralforecast ==0.1.0\n    - nltk >=3,<3.6\n    - numpy >=1.18.0,<=1.22.0\n    - optuna >=2.8.0,<2.10.0\n    - pandas >=1.1.5,<=1.3.3\n    - psutil >=5.7.0\n    - python >=3.7\n    - python-dateutil <2.8.1,>=2.1\n    - pytorch-lightning >=1.3.0\n    - requests >=2.0.0\n    - schema >=0.6.8\n    - scikit-learn <=1.0.2\n    - scipy >=1.5.4,<=1.7.1\n    - setuptools >=21.2.1\n    - sktime >=0.11.0,<0.12.0\n    - statsforecast ==0.7.0\n    - statsmodels >=0.12.0\n    - pytorch >=1.9.0\n    - torch-optimizer ==0.1.0\n    - transformers >=4.5.0,<=4.11.3\n    - typing_extensions\n    - wheel >=0.32.2\n\ntest:\n  imports:\n    - lightwood\n\nabout:\n  home: https://github.com/mindsdb/lightwood\n  summary: Lightwood is a toolkit for automatic machine learning model building\n  license: GPL-2.0-or-later\n  license_file:\n    - LICENSE\n  description: |\n    Lightwood is an AutoML framework that enables you to generate and customize machine learning pipelines declarative syntax called JSON-AI.\n\n    Our goal is to make the data science/machine learning (DS/ML) life cycle easier by allowing users to focus on what they want to do their data without needing to write repetitive boilerplate code around machine learning and data preparation. Instead, we enable you to focus on the parts of a model that are truly unique and custom.\n\n    Lightwood works with a variety of data types such as numbers, dates, categories, tags, text, arrays and various multimedia formats. These data types can be combined together to solve complex problems. We also support a time-series mode for problems that have between-row dependencies.\n\n    Our JSON-AI syntax allows users to change any and all parts of the models Lightwood automatically generates. The syntax outlines the specifics details in each step of the modeling pipeline. Users may override default values (for example, changing the type of a column) or alternatively, entirely replace steps with their own methods (ex: use a random forest model for a predictor). Lightwood creates a \"JSON-AI\" object from this syntax which can then be used to automatically generate python code to represent your pipeline.\n\nextra:\n  recipe-maintainers:\n    - paxcema\n",
 "rendered_recipe": {
  "about": {
   "description": "Lightwood is an AutoML framework that enables you to generate and customize machine learning pipelines declarative syntax called JSON-AI.\n\nOur goal is to make the data science/machine learning (DS/ML) life cycle easier by allowing users to focus on what they want to do their data without needing to write repetitive boilerplate code around machine learning and data preparation. Instead, we enable you to focus on the parts of a model that are truly unique and custom.\n\nLightwood works with a variety of data types such as numbers, dates, categories, tags, text, arrays and various multimedia formats. These data types can be combined together to solve complex problems. We also support a time-series mode for problems that have between-row dependencies.\n\nOur JSON-AI syntax allows users to change any and all parts of the models Lightwood automatically generates. The syntax outlines the specifics details in each step of the modeling pipeline. Users may override default values (for example, changing the type of a column) or alternatively, entirely replace steps with their own methods (ex: use a random forest model for a predictor). Lightwood creates a \"JSON-AI\" object from this syntax which can then be used to automatically generate python code to represent your pipeline.\n",
   "home": "https://github.com/mindsdb/lightwood",
   "license": "GPL-2.0-or-later",
   "license_file": [
    "LICENSE"
   ],
   "summary": "Lightwood is a toolkit for automatic machine learning model building"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/home/conda/feedstock_root/build_artifacts/lightwood_1660147254808/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_p/bin/python -m pip install . -vv",
   "string": "pyhd8ed1ab_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "paxcema"
   ]
  },
  "package": {
   "name": "lightwood",
   "version": "22.8.1.0"
  },
  "requirements": {
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 2_gnu",
    "bzip2 1.0.8 h7f98852_4",
    "ca-certificates 2022.6.15 ha878542_0",
    "ld_impl_linux-64 2.36.1 hea4e1c9_2",
    "libffi 3.4.2 h7f98852_5",
    "libgcc-ng 12.1.0 h8d9b700_16",
    "libgomp 12.1.0 h8d9b700_16",
    "libnsl 2.0.0 h7f98852_0",
    "libuuid 2.32.1 h7f98852_1000",
    "libzlib 1.2.12 h166bdaf_2",
    "ncurses 6.3 h27087fc_1",
    "openssl 3.0.5 h166bdaf_1",
    "pip 22.2.2 pyhd8ed1ab_0",
    "python 3.10.5 ha86cf86_0_cpython",
    "python_abi 3.10 2_cp310",
    "readline 8.1.2 h0f457ee_0",
    "setuptools 63.4.2 py310hff52083_0",
    "sqlite 3.39.2 h4ff8645_0",
    "tk 8.6.12 h27826a3_0",
    "tzdata 2022a h191b570_0",
    "wheel 0.37.1 pyhd8ed1ab_0",
    "xz 5.2.5 h516909a_1",
    "zlib 1.2.12 h166bdaf_2"
   ],
   "run": [
    "autopep8 >=1.5.7",
    "black >=21.9b0",
    "colorlog ==6.5.0",
    "dataclasses-json >=0.5.4",
    "dill ==0.3.4",
    "langdetect >=1.0.0,<=1.0.9",
    "lightgbm >=3.2.1,<=3.3.2",
    "neuralforecast ==0.1.0",
    "nltk >=3,<3.6",
    "numpy >=1.18.0,<=1.22.0",
    "optuna >=2.8.0,<2.10.0",
    "pandas >=1.1.5,<=1.3.3",
    "psutil >=5.7.0",
    "python >=3.7",
    "python-dateutil <2.8.1,>=2.1",
    "pytorch >=1.9.0",
    "pytorch-lightning >=1.3.0",
    "requests >=2.0.0",
    "schema >=0.6.8",
    "scikit-learn <=1.0.2",
    "scipy >=1.5.4,<=1.7.1",
    "setuptools >=21.2.1",
    "sktime >=0.11.0,<0.12.0",
    "statsforecast ==0.7.0",
    "statsmodels >=0.12.0",
    "torch-optimizer ==0.1.0",
    "transformers >=4.5.0,<=4.11.3",
    "typing_extensions",
    "wheel >=0.32.2"
   ]
  },
  "source": {
   "sha256": "43cce4b290ac275206d8f12c506d34b6b74f4aa8413815a693fc26a50de48fed",
   "url": "https://pypi.io/packages/source/l/lightwood/lightwood-22.8.1.0.tar.gz"
  },
  "test": {
   "imports": [
    "lightwood"
   ]
  }
 },
 "version": "22.8.1.0"
}
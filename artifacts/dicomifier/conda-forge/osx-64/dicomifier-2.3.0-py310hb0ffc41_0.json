{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.21.8",
  "conda_private": false,
  "conda_version": "4.11.0",
  "description": "Dicomifier is a set of tools to convert Bruker data to DICOM files, and\nDICOM files to NIfTI. It retains meta-data (e.g. MR parameters such as echo\ntime or subject parameters such as weight or height) throughout the\nconversion process, storing them in JSON format, allowing easy access in\nmultiple environments. The meta-data from Bruker is aligned on the DICOM\ndictionary for unified human and animal processing pipelines.\n",
  "dev_url": "https://github.com/lamyj/dicomifier",
  "doc_url": "https://github.com/lamyj/dicomifier",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "lamyj"
   ]
  },
  "home": "https://github.com/lamyj/dicomifier",
  "identifiers": [],
  "keywords": [],
  "license": "CECILL-B",
  "license_family": "OTHER",
  "license_file": "LICENSE.txt",
  "root_pkgs": [
   "requests 2.27.1 pyhd8ed1ab_0",
   "gettext 0.19.8.1 hd1a6beb_1008",
   "ruamel.yaml.clib 0.2.6 py39h89e85a6_0",
   "prompt_toolkit 3.0.27 hd8ed1ab_0",
   "conda 4.11.0 py39h6e9494a_0",
   "nbformat 5.1.3 pyhd8ed1ab_0",
   "conda-env 2.6.0 1",
   "six 1.16.0 pyh6c4a22f_0",
   "conda-forge-ci-setup 3.18.1 py39hb0a6171_0",
   "icu 69.1 he49afe7_0",
   "expat 2.4.4 he49afe7_0",
   "setuptools 60.8.1 py39h6e9494a_0",
   "libcxx 12.0.1 habf9029_1",
   "liblief 0.11.5 he49afe7_1",
   "jq 1.6 hc929b4f_1000",
   "yaml 0.2.5 h0d85af4_2",
   "jsonschema 4.4.0 pyhd8ed1ab_0",
   "attrs 21.4.0 pyhd8ed1ab_0",
   "typing_extensions 4.0.1 pyha770c72_0",
   "libcurl 7.81.0 hf45b732_0",
   "future 0.18.2 py39h6e9494a_4",
   "reproc-cpp 14.2.3 he49afe7_0",
   "reproc 14.2.3 h0d85af4_0",
   "glob2 0.7 py_0",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "zlib 1.2.11 h9173be1_1013",
   "cryptography 36.0.1 py39h209aa08_0",
   "importlib-metadata 4.11.0 py39h6e9494a_0",
   "libedit 3.1.20191231 h0678c8f_2",
   "curl 7.81.0 hf45b732_0",
   "commonmark 0.9.1 py_0",
   "pygments 2.11.2 pyhd8ed1ab_0",
   "py-lief 0.11.5 py39h9fcab8e_1",
   "cffi 1.15.0 py39he338e87_0",
   "libmambapy 0.19.1 py39h2c464dc_0",
   "rich 11.2.0 pyhd8ed1ab_0",
   "libiconv 1.16 haf1e3a3_0",
   "wheel 0.37.1 pyhd8ed1ab_0",
   "markupsafe 2.0.1 py39h89e85a6_1",
   "prompt-toolkit 3.0.27 pyha770c72_0",
   "backports 1.0 py_2",
   "urllib3 1.26.8 pyhd8ed1ab_1",
   "xz 5.2.5 haf1e3a3_1",
   "jinja2 3.0.3 pyhd8ed1ab_0",
   "joblib 1.1.0 pyhd8ed1ab_0",
   "perl 5.32.1 1_h0d85af4_perl5",
   "cctools 949.0.1 hd9211c8_23",
   "zstd 1.5.2 h582d3a0_0",
   "filelock 3.4.2 pyhd8ed1ab_1",
   "python-libarchive-c 4.0 py39h6e9494a_0",
   "ruamel.yaml 0.17.19 py39h89e85a6_0",
   "colorama 0.4.4 pyh9f0ad1d_0",
   "tk 8.6.11 h5dbffcc_1",
   "zipp 3.7.0 pyhd8ed1ab_1",
   "charset-normalizer 2.0.11 pyhd8ed1ab_0",
   "git 2.35.0 pl5321h9a53687_0",
   "chardet 4.0.0 py39h6e9494a_2",
   "ld64_osx-64 530 he8994da_23",
   "boa 0.8.2 pyha770c72_0",
   "sqlite 3.37.0 h23a322b_0",
   "krb5 1.19.2 hcfbf3a7_3",
   "click 8.0.3 py39h6e9494a_1",
   "soupsieve 2.3.1 pyhd8ed1ab_0",
   "watchgod 0.7 pyhd8ed1ab_0",
   "jupyter_core 4.9.1 py39h6e9494a_1",
   "brotlipy 0.7.0 py39h89e85a6_1003",
   "libffi 3.4.2 h0d85af4_5",
   "pyopenssl 22.0.0 pyhd8ed1ab_0",
   "ruamel_yaml 0.15.80 py39h89e85a6_1006",
   "libsolv 0.7.19 hcf210ce_5",
   "libxml2 2.9.12 h7e28ab6_1",
   "libmamba 0.19.1 h9ce2d19_0",
   "libarchive 3.5.2 h2b60450_1",
   "tapi 1100.0.11 h9ce4665_0",
   "libnghttp2 1.46.0 h6f36284_0",
   "importlib_resources 5.4.0 pyhd8ed1ab_0",
   "pycosat 0.6.3 py39h89e85a6_1009",
   "idna 3.3 pyhd8ed1ab_0",
   "readline 8.1 h05e3726_0",
   "openssl 1.1.1l h0d85af4_0",
   "ncurses 6.3 he49afe7_0",
   "anaconda-client 1.8.0 pyhd8ed1ab_0",
   "libzlib 1.2.11 h9173be1_1013",
   "bzip2 1.0.8 h0d85af4_4",
   "c-ares 1.18.1 h0d85af4_0",
   "beautifulsoup4 4.10.0 pyha770c72_0",
   "json5 0.9.5 pyh9f0ad1d_0",
   "pkginfo 1.8.2 pyhd8ed1ab_0",
   "ripgrep 13.0.0 h80d2146_1",
   "conda-package-handling 1.7.3 py39h89e85a6_1",
   "pip 22.0.3 pyhd8ed1ab_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "libssh2 1.10.0 h52ee1ee_2",
   "wcwidth 0.2.5 pyh9f0ad1d_2",
   "psutil 5.9.0 py39h89e85a6_0",
   "yaml-cpp 0.6.3 hb1e8313_4",
   "clyent 1.2.2 py_1",
   "pcre2 10.37 ha16e1b2_0",
   "ld64 530 hd2e7500_23",
   "pyrsistent 0.18.1 py39h89e85a6_0",
   "python_abi 3.9 2_cp39",
   "lz4-c 1.9.3 he49afe7_1",
   "python 3.9.10 h1dd9edd_2_cpython",
   "ca-certificates 2021.10.8 h033912b_0",
   "tqdm 4.62.3 pyhd8ed1ab_0",
   "cctools_osx-64 949.0.1 h6407bdd_23",
   "certifi 2021.10.8 py39h6e9494a_1",
   "pysocks 1.7.1 py39h6e9494a_4",
   "pytz 2021.3 pyhd8ed1ab_0",
   "ldid 2.1.2 h6a69015_3",
   "ipython_genutils 0.2.0 py_1",
   "dataclasses 0.8 pyhc8e2a94_3",
   "lzo 2.10 haf1e3a3_1000",
   "libllvm12 12.0.1 hd011deb_2",
   "conda-build 3.21.8 py39h6e9494a_0",
   "pybind11-abi 4 hd8ed1ab_3",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "pycparser 2.21 pyhd8ed1ab_0",
   "tzdata 2021e he74cb21_0",
   "libev 4.33 haf1e3a3_1",
   "traitlets 5.1.1 pyhd8ed1ab_0",
   "oniguruma 6.9.7.1 h0d85af4_0",
   "pyyaml 6.0 py39h89e85a6_3",
   "mamba 0.19.1 py39ha435c47_0"
  ],
  "summary": "Convert data from Bruker to DICOM and from DICOM to NIfTI",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "CONDA_BUILD_SYSROOT": "/Applications/Xcode_12.4.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk",
  "MACOSX_DEPLOYMENT_TARGET": "10.9",
  "boost_cpp": "1.74.0",
  "c_compiler": "clang",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "clangxx",
  "cxx_compiler_version": "11",
  "extend_keys": [
   "pin_run_as_build",
   "extend_keys",
   "ignore_version",
   "ignore_build_only_deps"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "macos_machine": "x86_64-apple-darwin13.4.0",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "boost-cpp": {
    "max_pin": "x.x.x"
   },
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.10.* *_cpython",
  "r_base": "3.5",
  "target_platform": "osx-64"
 },
 "files": [
  "bin/bruker2dicom",
  "bin/dicom2nifti",
  "bin/dicomifier",
  "include/dicomifier/Dataset.h",
  "include/dicomifier/Exception.h",
  "include/dicomifier/Field.h",
  "include/dicomifier/grammar.h",
  "include/dicomifier/grammar.txx",
  "lib/libdicomifier.2.3.0.dylib",
  "lib/libdicomifier.2.dylib",
  "lib/libdicomifier.dylib",
  "lib/python3.10/site-packages/dicomifier/__init__.py",
  "lib/python3.10/site-packages/dicomifier/__main__.py",
  "lib/python3.10/site-packages/dicomifier/_dicomifier.so",
  "lib/python3.10/site-packages/dicomifier/bruker.so",
  "lib/python3.10/site-packages/dicomifier/bruker_to_dicom/__init__.py",
  "lib/python3.10/site-packages/dicomifier/bruker_to_dicom/convert.py",
  "lib/python3.10/site-packages/dicomifier/bruker_to_dicom/frame_index_generator.py",
  "lib/python3.10/site-packages/dicomifier/bruker_to_dicom/io/__init__.py",
  "lib/python3.10/site-packages/dicomifier/bruker_to_dicom/io/flat_dicom_writer.py",
  "lib/python3.10/site-packages/dicomifier/bruker_to_dicom/io/nested_dicom_writer.py",
  "lib/python3.10/site-packages/dicomifier/bruker_to_dicom/iods/__init__.py",
  "lib/python3.10/site-packages/dicomifier/bruker_to_dicom/iods/enhanced_mr_image_storage.py",
  "lib/python3.10/site-packages/dicomifier/bruker_to_dicom/iods/mr_image_storage.py",
  "lib/python3.10/site-packages/dicomifier/bruker_to_dicom/modules/__init__.py",
  "lib/python3.10/site-packages/dicomifier/bruker_to_dicom/modules/equipment.py",
  "lib/python3.10/site-packages/dicomifier/bruker_to_dicom/modules/frame_of_reference.py",
  "lib/python3.10/site-packages/dicomifier/bruker_to_dicom/modules/image.py",
  "lib/python3.10/site-packages/dicomifier/bruker_to_dicom/modules/mr.py",
  "lib/python3.10/site-packages/dicomifier/bruker_to_dicom/modules/patient.py",
  "lib/python3.10/site-packages/dicomifier/bruker_to_dicom/modules/series.py",
  "lib/python3.10/site-packages/dicomifier/bruker_to_dicom/modules/study.py",
  "lib/python3.10/site-packages/dicomifier/commands/__init__.py",
  "lib/python3.10/site-packages/dicomifier/commands/diffusion_scheme.py",
  "lib/python3.10/site-packages/dicomifier/commands/list.py",
  "lib/python3.10/site-packages/dicomifier/commands/search.py",
  "lib/python3.10/site-packages/dicomifier/commands/to_dicom.py",
  "lib/python3.10/site-packages/dicomifier/commands/to_nifti.py",
  "lib/python3.10/site-packages/dicomifier/dicom_to_nifti/__init__.py",
  "lib/python3.10/site-packages/dicomifier/dicom_to_nifti/convert.py",
  "lib/python3.10/site-packages/dicomifier/dicom_to_nifti/image.py",
  "lib/python3.10/site-packages/dicomifier/dicom_to_nifti/io.py",
  "lib/python3.10/site-packages/dicomifier/dicom_to_nifti/meta_data.py",
  "lib/python3.10/site-packages/dicomifier/dicom_to_nifti/series/__init__.py",
  "lib/python3.10/site-packages/dicomifier/dicom_to_nifti/series/default_series_finder.py",
  "lib/python3.10/site-packages/dicomifier/dicom_to_nifti/series/series_finder.py",
  "lib/python3.10/site-packages/dicomifier/dicom_to_nifti/series/siemens_xa_classic_2d_series_finder.py",
  "lib/python3.10/site-packages/dicomifier/dicom_to_nifti/siemens.py",
  "lib/python3.10/site-packages/dicomifier/dicom_to_nifti/stacks.py",
  "lib/python3.10/site-packages/dicomifier/meta_data.py",
  "lib/python3.10/site-packages/dicomifier/nifti/__init__.py",
  "lib/python3.10/site-packages/dicomifier/nifti/diffusion.py"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py310hb0ffc41_0",
  "build_number": 0,
  "depends": [
   "boost-cpp >=1.74.0,<1.74.1.0a0",
   "libcxx >=11.1.0",
   "nibabel",
   "numpy",
   "odil >=0.12",
   "python >=3.10,<3.11.0a0",
   "python-dateutil",
   "python_abi 3.10.* *_cp310"
  ],
  "license": "CECILL-B",
  "license_family": "OTHER",
  "name": "dicomifier",
  "platform": "osx",
  "subdir": "osx-64",
  "timestamp": 1644660683257,
  "version": "2.3.0"
 },
 "metadata_version": 1,
 "name": "dicomifier",
 "raw_recipe": "{% set name = \"dicomifier\" %}\n{% set version = \"2.3.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/lamyj/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: a8c8466424e08b62e341dea2ca49c47c055936b157d2b87803cc6d40a54c2621\n  patches: []\n\nbuild:\n  number: 0\n  skip: true  # [py<=35 or win]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja\n  host:\n    - boost-cpp\n    - odil >=0.12\n    - pybind11\n    - python\n  run:\n    - boost-cpp\n    - nibabel\n    - numpy\n    - odil >=0.12\n    - python\n    - python-dateutil\n\ntest:\n  imports:\n    - dicomifier\n  commands:\n    - bruker2dicom --help > /dev/null\n    - dicom2nifti --help > /dev/null\n\nabout:\n  home: https://github.com/lamyj/dicomifier\n  license: CECILL-B\n  license_family: OTHER\n  license_file: LICENSE.txt\n  summary: Convert data from Bruker to DICOM and from DICOM to NIfTI\n\n  description: |\n    Dicomifier is a set of tools to convert Bruker data to DICOM files, and \n    DICOM files to NIfTI. It retains meta-data (e.g. MR parameters such as echo \n    time or subject parameters such as weight or height) throughout the \n    conversion process, storing them in JSON format, allowing easy access in \n    multiple environments. The meta-data from Bruker is aligned on the DICOM \n    dictionary for unified human and animal processing pipelines.\n\n  doc_url: https://github.com/lamyj/dicomifier\n  dev_url: https://github.com/lamyj/dicomifier\n\nextra:\n  recipe-maintainers:\n    - lamyj\n",
 "rendered_recipe": {
  "about": {
   "description": "Dicomifier is a set of tools to convert Bruker data to DICOM files, and\nDICOM files to NIfTI. It retains meta-data (e.g. MR parameters such as echo\ntime or subject parameters such as weight or height) throughout the\nconversion process, storing them in JSON format, allowing easy access in\nmultiple environments. The meta-data from Bruker is aligned on the DICOM\ndictionary for unified human and animal processing pipelines.\n",
   "dev_url": "https://github.com/lamyj/dicomifier",
   "doc_url": "https://github.com/lamyj/dicomifier",
   "home": "https://github.com/lamyj/dicomifier",
   "license": "CECILL-B",
   "license_family": "OTHER",
   "license_file": "LICENSE.txt",
   "summary": "Convert data from Bruker to DICOM and from DICOM to NIfTI"
  },
  "build": {
   "number": "0",
   "string": "py310hb0ffc41_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "lamyj"
   ]
  },
  "package": {
   "name": "dicomifier",
   "version": "2.3.0"
  },
  "requirements": {
   "build": [
    "bzip2 1.0.8 h0d85af4_4",
    "c-ares 1.18.1 h0d85af4_0",
    "ca-certificates 2021.10.8 h033912b_0",
    "cctools_osx-64 973.0.1 hb41342b_6",
    "clang 11.1.0 h694c41f_1",
    "clang-11 11.1.0 default_he082bbe_1",
    "clang_osx-64 11.1.0 hc8532ff_6",
    "clangxx 11.1.0 default_he082bbe_1",
    "clangxx_osx-64 11.1.0 h2c55bc3_6",
    "cmake 3.22.2 h4d639be_0",
    "compiler-rt 11.1.0 h654b07c_0",
    "compiler-rt_osx-64 11.1.0 h8c5fa43_0",
    "expat 2.4.4 he49afe7_0",
    "krb5 1.19.2 h289aae4_3",
    "ld64_osx-64 609 h6adca69_6",
    "libclang-cpp11.1 11.1.0 default_he082bbe_1",
    "libcurl 7.81.0 h97da3c1_0",
    "libcxx 12.0.1 habf9029_1",
    "libedit 3.1.20191231 h0678c8f_2",
    "libev 4.33 haf1e3a3_1",
    "libllvm11 11.1.0 hd011deb_2",
    "libnghttp2 1.46.0 hfd382f3_0",
    "libssh2 1.10.0 hd3787cc_2",
    "libuv 1.43.0 h0d85af4_0",
    "libzlib 1.2.11 h9173be1_1013",
    "llvm-tools 11.1.0 hd011deb_2",
    "lz4-c 1.9.3 he49afe7_1",
    "ncurses 6.3 he49afe7_0",
    "ninja 1.10.2 h940c156_1",
    "openssl 3.0.0 h0d85af4_2",
    "rhash 1.4.1 h35c211d_0",
    "sigtool 0.1.3 h88f4db0_0",
    "tapi 1100.0.11 h9ce4665_0",
    "tk 8.6.11 h5dbffcc_1",
    "xz 5.2.5 haf1e3a3_1",
    "zlib 1.2.11 h9173be1_1013",
    "zstd 1.5.2 h582d3a0_0"
   ],
   "host": [
    "boost-cpp 1.74.0 hdbf7018_7",
    "bzip2 1.0.8 h0d85af4_4",
    "ca-certificates 2021.10.8 h033912b_0",
    "icu 69.1 he49afe7_0",
    "jsoncpp 1.9.5 h940c156_1",
    "libcxx 12.0.1 habf9029_1",
    "libffi 3.4.2 h0d85af4_5",
    "libzlib 1.2.11 h9173be1_1013",
    "lz4-c 1.9.3 he49afe7_1",
    "ncurses 6.3 he49afe7_0",
    "odil 0.12.1 py310h128ead0_5",
    "openssl 3.0.0 h0d85af4_2",
    "pybind11 2.9.1 py310h2fea185_0",
    "pybind11-global 2.9.1 py310h2fea185_0",
    "python 3.10.2 hea1dfa3_3_cpython",
    "python_abi 3.10 2_cp310",
    "readline 8.1 h05e3726_0",
    "sqlite 3.37.0 h23a322b_0",
    "tk 8.6.11 h5dbffcc_1",
    "tzdata 2021e he74cb21_0",
    "xz 5.2.5 haf1e3a3_1",
    "zlib 1.2.11 h9173be1_1013",
    "zstd 1.5.2 h582d3a0_0"
   ],
   "run": [
    "boost-cpp >=1.74.0,<1.74.1.0a0",
    "libcxx >=11.1.0",
    "nibabel",
    "numpy",
    "odil >=0.12",
    "python >=3.10,<3.11.0a0",
    "python-dateutil",
    "python_abi 3.10.* *_cp310"
   ]
  },
  "source": {
   "patches": [],
   "sha256": "a8c8466424e08b62e341dea2ca49c47c055936b157d2b87803cc6d40a54c2621",
   "url": "https://github.com/lamyj/dicomifier/archive/v2.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "bruker2dicom --help > /dev/null",
    "dicom2nifti --help > /dev/null"
   ],
   "imports": [
    "dicomifier"
   ]
  }
 },
 "version": "2.3.0"
}
{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.21.8",
  "conda_private": false,
  "conda_version": "4.12.0",
  "description": "OpenImageIO consists of:\n- Simple but powerful ImageInput and ImageOutput APIs that provide an abstraction\n  for reading and writing image files of nearly any format, without the calling\n  application needing to know any of the details of these file formats, and indeed\n  without the calling application needing to be aware of which formats are available.\n- Plugins implementing I/O for several popular image file formats, including TIFF,\n  JPEG/JFIF, OpenEXR, PNG, HDR/RGBE, ICO, BMP, Targa, JPEG-2000, RMan Zfile, FITS, DDS,\n  Softimage PIC, PNM, DPX, Cineon, IFF, Field3D, Ptex, Photoshop PSD, Wavefront RLA, SGI,\n  WebP, GIF, DICOM, many \\\"RAW\\\" digital camera formats, and a variety of movie formats\n  (readable as individual frames). More are being developed all the time.\n- An ImageCache class that transparently manages a cache so that it can access truly\n  vast amounts of image data (tens of thousands of image files totaling multiple TB)\n  very efficiently using only a tiny amount (tens of megabytes at most) of runtime memory.\n",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "SylvainCorlay",
    "JohanMabille",
    "wolfv",
    "lgritz"
   ]
  },
  "home": "https://sites.google.com/site/openimageio/home",
  "identifiers": [],
  "keywords": [],
  "license": "BSD-3-Clause",
  "license_family": "BSD",
  "license_file": "LICENSE.md",
  "root_pkgs": [
   "commonmark 0.9.1 py_0",
   "bzip2 1.0.8 h4e0d66e_4",
   "six 1.16.0 pyh6c4a22f_0",
   "colorama 0.4.4 pyh9f0ad1d_0",
   "wcwidth 0.2.5 pyh9f0ad1d_2",
   "c-ares 1.18.1 h4e0d66e_0",
   "pysocks 1.7.1 py39hc1b9086_4",
   "pkginfo 1.8.2 pyhd8ed1ab_0",
   "libxml2 2.9.12 h1876533_1",
   "pcre2 10.37 h32277c3_0",
   "markupsafe 2.1.1 py39h9ca6cee_0",
   "expat 2.4.7 hbbae597_0",
   "urllib3 1.26.9 pyhd8ed1ab_0",
   "lzo 2.10 h6eb9509_1000",
   "zlib 1.2.11 hb283c62_1014",
   "perl 5.32.1 2_h4e0d66e_perl5",
   "libev 4.33 h6eb9509_1",
   "boa 0.10.0 pyha770c72_0",
   "keyutils 1.6.1 hb283c62_0",
   "pytz 2022.1 pyhd8ed1ab_0",
   "libnghttp2 1.47.0 h262a72d_0",
   "anaconda-client 1.8.0 pyhd8ed1ab_0",
   "libstdcxx-ng 11.2.0 habdf983_14",
   "psutil 5.9.0 py39ha810350_0",
   "pybind11-abi 4 hd8ed1ab_3",
   "attrs 21.4.0 pyhd8ed1ab_0",
   "beautifulsoup4 4.10.0 pyha770c72_0",
   "liblief 0.11.5 h3b9df90_1",
   "reproc 14.2.3 h4e0d66e_0",
   "libffi 3.4.2 h4e0d66e_5",
   "ruamel.yaml.clib 0.2.6 py39hf1a8857_0",
   "python-libarchive-c 4.0 py39h0b1cf3c_0",
   "_openmp_mutex 4.5 1_gnu",
   "json5 0.9.5 pyh9f0ad1d_0",
   "rich 12.0.1 pyhd8ed1ab_0",
   "ripgrep 13.0.0 h0cb23b2_2",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "ncurses 6.3 h3b9df90_0",
   "pycosat 0.6.3 py39ha810350_1009",
   "patch 2.7.6 h4e0d66e_1002",
   "ruamel.yaml 0.17.21 py39hf1a8857_0",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "patchelf 0.14.5 hea85c5d_0",
   "backports 1.0 py_2",
   "filelock 3.6.0 pyhd8ed1ab_0",
   "importlib-metadata 4.11.3 py39hc1b9086_0",
   "python 3.9.12 h08a33c2_1_cpython",
   "jupyter_core 4.9.2 py39h0b1cf3c_0",
   "libzlib 1.2.11 hb283c62_1014",
   "nbformat 5.2.0 pyhd8ed1ab_0",
   "setuptools 61.1.1 py39hc1b9086_0",
   "wheel 0.37.1 pyhd8ed1ab_0",
   "conda-build 3.21.8 py39h0b1cf3c_0",
   "ca-certificates 2021.10.8 h1084571_0",
   "conda-package-handling 1.8.0 py39h9ca6cee_0",
   "dataclasses 0.8 pyhc8e2a94_3",
   "reproc-cpp 14.2.3 h3b9df90_0",
   "su-exec 0.2 h6eb9509_1002",
   "lz4-c 1.9.3 h3b9df90_1",
   "readline 8.1 h5c45dff_0",
   "tini 0.19.0 h4e0d66e_0",
   "libmambapy 0.22.1 py39h937fae0_0",
   "icu 69.1 h3b4ca64_0",
   "charset-normalizer 2.0.12 pyhd8ed1ab_0",
   "clyent 1.2.2 py_1",
   "glob2 0.7 py_0",
   "libedit 3.1.20191231 h41a240f_2",
   "xz 5.2.5 h6eb9509_1",
   "libsolv 0.7.19 h690f14c_5",
   "py-lief 0.11.5 py39h4c72827_1",
   "tk 8.6.12 h41c6715_0",
   "pyyaml 6.0 py39ha810350_3",
   "libgcc-ng 11.2.0 h7698a5e_14",
   "watchgod 0.8.1 pyhd8ed1ab_0",
   "libiconv 1.16 h6eb9509_0",
   "python_abi 3.9 2_cp39",
   "_libgcc_mutex 0.1 conda_forge",
   "pyrsistent 0.18.1 py39ha810350_0",
   "mamba 0.22.1 py39h3651b5a_0",
   "git 2.35.1 pl5321h131946c_0",
   "idna 3.3 pyhd8ed1ab_0",
   "soupsieve 2.3.1 pyhd8ed1ab_0",
   "libgomp 11.2.0 h7698a5e_14",
   "curl 7.82.0 h2ae36b4_0",
   "krb5 1.19.3 h33c4487_0",
   "future 0.18.2 py39hc1b9086_4",
   "requests 2.27.1 pyhd8ed1ab_0",
   "sqlite 3.37.1 h3bd21b8_0",
   "pygments 2.11.2 pyhd8ed1ab_0",
   "libnsl 2.0.0 h4e0d66e_0",
   "traitlets 5.1.1 pyhd8ed1ab_0",
   "typing_extensions 4.1.1 pyha770c72_0",
   "cryptography 36.0.2 py39hd4ec19a_0",
   "ruamel_yaml 0.15.80 py39ha810350_1006",
   "openssl 1.1.1n hb283c62_0",
   "jsonschema 4.4.0 pyhd8ed1ab_0",
   "libcurl 7.82.0 h2ae36b4_0",
   "zipp 3.7.0 pyhd8ed1ab_1",
   "importlib_resources 5.6.0 pyhd8ed1ab_0",
   "certifi 2021.10.8 py39hc1b9086_1",
   "brotlipy 0.7.0 py39ha810350_1003",
   "joblib 1.1.0 pyhd8ed1ab_0",
   "pyopenssl 22.0.0 pyhd8ed1ab_0",
   "zstd 1.5.1 h65c4b1a_0",
   "gettext 0.19.8.1 h6603d1e_1008",
   "sniffio 1.2.0 py39hc1b9086_2",
   "pip 22.0.4 pyhd8ed1ab_0",
   "jinja2 3.1.1 pyhd8ed1ab_0",
   "libuuid 2.32.1 h4e0d66e_1000",
   "yaml 0.2.5 h4e0d66e_2",
   "pycparser 2.21 pyhd8ed1ab_0",
   "tzdata 2022a h191b570_0",
   "conda 4.12.0 py39h0b1cf3c_0",
   "cffi 1.15.0 py39h7bf629d_0",
   "chardet 4.0.0 py39hc1b9086_2",
   "libmamba 0.22.1 h7a317dc_0",
   "prompt_toolkit 3.0.27 hd8ed1ab_0",
   "libarchive 3.5.2 h3281d6a_1",
   "tqdm 4.63.1 pyhd8ed1ab_0",
   "ld_impl_linux-ppc64le 2.36.1 ha35d02b_2",
   "anyio 3.5.0 py39hc1b9086_0",
   "prompt-toolkit 3.0.27 pyha770c72_0",
   "libssh2 1.10.0 ha5a9321_2",
   "yaml-cpp 0.6.3 hb209c28_4",
   "oniguruma 6.9.7.1 h4e0d66e_0",
   "conda-env 2.6.0 1",
   "jq 1.6 h339bb43_1000",
   "click 8.0.4 py39hc1b9086_0",
   "conda-forge-ci-setup 3.20.0 py39ha7e1dda_100",
   "shyaml 0.6.2 pyhd3deb0d_0"
  ],
  "summary": "Simple but powerful APIs for reading & writing many image formats",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "boost": "1.74.0",
  "c_compiler": "gcc",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "10",
  "docker_image": "quay.io/condaforge/linux-anvil-ppc64le",
  "extend_keys": [
   "ignore_version",
   "pin_run_as_build",
   "ignore_build_only_deps",
   "extend_keys"
  ],
  "ffmpeg": "4.4",
  "fortran_compiler": "gfortran",
  "giflib": "5.2",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "jpeg": "9",
  "libpng": "1.6",
  "libtiff": "4",
  "libwebp": "1",
  "lua": "5",
  "numpy": "1.16",
  "openexr": "3.1",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "boost": {
    "max_pin": "x.x.x"
   },
   "jpeg": {
    "max_pin": "x"
   },
   "libpng": {
    "max_pin": "x.x"
   },
   "libtiff": {
    "max_pin": "x"
   },
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.8.* *_cpython",
  "r_base": "3.5",
  "target_platform": "linux-ppc64le"
 },
 "files": [
  "include/OpenImageIO/Imath.h",
  "include/OpenImageIO/argparse.h",
  "include/OpenImageIO/array_view.h",
  "include/OpenImageIO/atomic.h",
  "include/OpenImageIO/attrdelegate.h",
  "include/OpenImageIO/benchmark.h",
  "include/OpenImageIO/color.h",
  "include/OpenImageIO/dassert.h",
  "include/OpenImageIO/deepdata.h",
  "include/OpenImageIO/detail/farmhash.h",
  "include/OpenImageIO/detail/fmt/core.h",
  "include/OpenImageIO/detail/fmt/format-inl.h",
  "include/OpenImageIO/detail/fmt/format.h",
  "include/OpenImageIO/detail/fmt/ostream.h",
  "include/OpenImageIO/detail/fmt/printf.h",
  "include/OpenImageIO/detail/pugixml/pugiconfig.hpp",
  "include/OpenImageIO/detail/pugixml/pugixml.cpp",
  "include/OpenImageIO/detail/pugixml/pugixml.hpp",
  "include/OpenImageIO/errorhandler.h",
  "include/OpenImageIO/export.h",
  "include/OpenImageIO/filesystem.h",
  "include/OpenImageIO/filter.h",
  "include/OpenImageIO/fmath.h",
  "include/OpenImageIO/fstream_mingw.h",
  "include/OpenImageIO/function_view.h",
  "include/OpenImageIO/hash.h",
  "include/OpenImageIO/image_view.h",
  "include/OpenImageIO/imagebuf.h",
  "include/OpenImageIO/imagebufalgo.h",
  "include/OpenImageIO/imagebufalgo_util.h",
  "include/OpenImageIO/imagecache.h",
  "include/OpenImageIO/imageio.h",
  "include/OpenImageIO/missing_math.h",
  "include/OpenImageIO/oiioversion.h",
  "include/OpenImageIO/optparser.h",
  "include/OpenImageIO/parallel.h",
  "include/OpenImageIO/paramlist.h",
  "include/OpenImageIO/platform.h",
  "include/OpenImageIO/plugin.h",
  "include/OpenImageIO/refcnt.h",
  "include/OpenImageIO/simd.h",
  "include/OpenImageIO/span.h",
  "include/OpenImageIO/strided_ptr.h",
  "include/OpenImageIO/string_view.h",
  "include/OpenImageIO/strutil.h",
  "include/OpenImageIO/sysutil.h",
  "include/OpenImageIO/texture.h",
  "include/OpenImageIO/thread.h",
  "include/OpenImageIO/tiffutils.h",
  "include/OpenImageIO/timer.h",
  "include/OpenImageIO/typedesc.h",
  "include/OpenImageIO/unittest.h",
  "include/OpenImageIO/unordered_map_concurrent.h",
  "include/OpenImageIO/ustring.h",
  "include/OpenImageIO/varyingref.h",
  "include/OpenImageIO/version.h",
  "lib/cmake/OpenImageIO/OpenImageIOConfig.cmake",
  "lib/cmake/OpenImageIO/OpenImageIOConfigVersion.cmake",
  "lib/cmake/OpenImageIO/OpenImageIOTargets-release.cmake",
  "lib/cmake/OpenImageIO/OpenImageIOTargets.cmake",
  "lib/libOpenImageIO.so",
  "lib/libOpenImageIO.so.2.2",
  "lib/libOpenImageIO.so.2.2.18",
  "lib/libOpenImageIO_Util.so",
  "lib/libOpenImageIO_Util.so.2.2",
  "lib/libOpenImageIO_Util.so.2.2.18",
  "lib/pkgconfig/OpenImageIO.pc",
  "share/cmake/Modules/FindOpenImageIO.cmake",
  "share/doc/OpenImageIO/CHANGES-0.x.md",
  "share/doc/OpenImageIO/CHANGES-1.x.md",
  "share/doc/OpenImageIO/CHANGES.md",
  "share/doc/OpenImageIO/LICENSE.md",
  "share/doc/OpenImageIO/THIRD-PARTY.md",
  "share/fonts/OpenImageIO/DroidSans-Bold.ttf",
  "share/fonts/OpenImageIO/DroidSans.ttf",
  "share/fonts/OpenImageIO/DroidSansMono.ttf",
  "share/fonts/OpenImageIO/DroidSerif-Bold.ttf",
  "share/fonts/OpenImageIO/DroidSerif-BoldItalic.ttf",
  "share/fonts/OpenImageIO/DroidSerif-Italic.ttf",
  "share/fonts/OpenImageIO/DroidSerif.ttf"
 ],
 "index": {
  "arch": "ppc64le",
  "build": "h9d925c1_2",
  "build_number": 2,
  "depends": [
   "boost >=1.74.0,<1.74.1.0a0",
   "ffmpeg >=4.4.1,<4.5.0a0",
   "ffmpeg >=4.4.1,<5.0a0",
   "giflib >=5.2.1,<5.3.0a0",
   "jpeg >=9e,<10a",
   "libgcc-ng >=10.3.0",
   "libpng >=1.6.37,<1.7.0a0",
   "libraw >=0.20.2,<0.21.0a0",
   "libstdcxx-ng >=10.3.0",
   "libtiff >=4.3.0,<5.0a0",
   "libwebp >=1.2.2,<1.3.0a0",
   "libwebp-base >=1.2.2,<2.0a0",
   "openexr >=3.1.4,<3.2.0a0",
   "python_abi 3.8.* *_cp38"
  ],
  "license": "BSD-3-Clause",
  "license_family": "BSD",
  "name": "openimageio",
  "platform": "linux",
  "subdir": "linux-ppc64le",
  "timestamp": 1648531809663,
  "version": "2.2.18"
 },
 "metadata_version": 1,
 "name": "openimageio",
 "raw_recipe": "{% set name = \"openimageio\" %}\n{% set version = \"2.2.18\" %}\n{% set sha256 = \"b8dd189fbc97f1b172528e324daa904f74a166bad62c32e7166ca6c866734a29\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: Release-{{ version }}.tar.gz\n  url: https://github.com/OpenImageIO/oiio/archive/Release-{{ version }}.0.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 2\n  skip: true  # [win]\n  run_exports:\n    - {{ pin_subpackage(name, max_pin='x.x') }}\n\nrequirements:\n  build:\n    - cmake\n    - {{ compiler('cxx') }}\n    - make  # [unix]\n  host:\n    - python\n    - pybind11\n    - boost\n    - ffmpeg\n    - giflib\n    - jpeg\n    - libpng\n    - libtiff\n    - libwebp\n    - openexr\n    - libraw\n  run:\n    # boost and libwebp don't have a run_exports section\n    - {{ pin_compatible('boost', max_pin='x.x.x') }}\n    - {{ pin_compatible('libwebp', max_pin='x.x') }}\n    # ffmpeg 3.x does not have a run-export section\n    - {{ pin_compatible('ffmpeg', max_pin='x.x') }}\n\noutputs:\n  - name: openimageio\n    script: install_lib.sh\n    test:\n      commands:\n        - test -d ${PREFIX}/include/OpenImageIO  # [unix]\n        - test -f ${PREFIX}/include/OpenImageIO/oiioversion.h  # [unix]\n        - test -f ${PREFIX}/lib/libOpenImageIO.so  # [linux]\n        - test -f ${PREFIX}/lib/libOpenImageIO.dylib  # [osx]\n\n  - name: py-openimageio\n    script: install_python.sh\n    requirements:\n      build:\n        - cmake\n        - {{ compiler('cxx') }}\n        - make  # [unix]\n      host:\n        - {{ pin_subpackage('openimageio', exact=True) }}\n        - python\n        - pybind11\n        - boost\n        - ffmpeg\n        - giflib\n        - jpeg\n        - libpng\n        - libtiff\n        - libwebp\n        - openexr\n      run:\n        - {{ pin_subpackage('openimageio', exact=True) }}\n        - python\n    test:\n      imports:\n        - OpenImageIO\n\nabout:\n  home: https://sites.google.com/site/openimageio/home\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.md\n  summary: Simple but powerful APIs for reading & writing many image formats\n  description: |\n    OpenImageIO consists of:\n    - Simple but powerful ImageInput and ImageOutput APIs that provide an abstraction\n      for reading and writing image files of nearly any format, without the calling\n      application needing to know any of the details of these file formats, and indeed\n      without the calling application needing to be aware of which formats are available.\n    - Plugins implementing I/O for several popular image file formats, including TIFF,\n      JPEG/JFIF, OpenEXR, PNG, HDR/RGBE, ICO, BMP, Targa, JPEG-2000, RMan Zfile, FITS, DDS,\n      Softimage PIC, PNM, DPX, Cineon, IFF, Field3D, Ptex, Photoshop PSD, Wavefront RLA, SGI,\n      WebP, GIF, DICOM, many \\\"RAW\\\" digital camera formats, and a variety of movie formats\n      (readable as individual frames). More are being developed all the time.\n    - An ImageCache class that transparently manages a cache so that it can access truly\n      vast amounts of image data (tens of thousands of image files totaling multiple TB)\n      very efficiently using only a tiny amount (tens of megabytes at most) of runtime memory.\n\nextra:\n  recipe-maintainers:\n    - SylvainCorlay\n    - JohanMabille\n    - wolfv\n    - lgritz\n",
 "rendered_recipe": {
  "about": {
   "description": "OpenImageIO consists of:\n- Simple but powerful ImageInput and ImageOutput APIs that provide an abstraction\n  for reading and writing image files of nearly any format, without the calling\n  application needing to know any of the details of these file formats, and indeed\n  without the calling application needing to be aware of which formats are available.\n- Plugins implementing I/O for several popular image file formats, including TIFF,\n  JPEG/JFIF, OpenEXR, PNG, HDR/RGBE, ICO, BMP, Targa, JPEG-2000, RMan Zfile, FITS, DDS,\n  Softimage PIC, PNM, DPX, Cineon, IFF, Field3D, Ptex, Photoshop PSD, Wavefront RLA, SGI,\n  WebP, GIF, DICOM, many \\\"RAW\\\" digital camera formats, and a variety of movie formats\n  (readable as individual frames). More are being developed all the time.\n- An ImageCache class that transparently manages a cache so that it can access truly\n  vast amounts of image data (tens of thousands of image files totaling multiple TB)\n  very efficiently using only a tiny amount (tens of megabytes at most) of runtime memory.\n",
   "home": "https://sites.google.com/site/openimageio/home",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.md",
   "summary": "Simple but powerful APIs for reading & writing many image formats"
  },
  "build": {
   "number": "2",
   "run_exports": [
    "openimageio >=2.2.18,<2.3.0a0"
   ],
   "string": "h9d925c1_2"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "JohanMabille",
    "SylvainCorlay",
    "lgritz",
    "wolfv"
   ]
  },
  "package": {
   "name": "openimageio",
   "version": "2.2.18"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "binutils_impl_linux-ppc64le 2.36.1 h5836da8_2",
    "binutils_linux-ppc64le 2.36 he035471_9",
    "bzip2 1.0.8 h4e0d66e_4",
    "c-ares 1.18.1 h4e0d66e_0",
    "ca-certificates 2021.10.8 h1084571_0",
    "cmake 3.22.3 h4f7acd8_0",
    "expat 2.4.7 hbbae597_0",
    "gcc_impl_linux-ppc64le 10.3.0 h4706ea9_14",
    "gcc_linux-ppc64le 10.3.0 h0cb3363_9",
    "gxx_impl_linux-ppc64le 10.3.0 h4706ea9_14",
    "gxx_linux-ppc64le 10.3.0 ha412328_9",
    "kernel-headers_linux-ppc64le 3.10.0 h23d7e6c_13",
    "keyutils 1.6.1 hb283c62_0",
    "krb5 1.19.3 ha6b4ebd_0",
    "ld_impl_linux-ppc64le 2.36.1 ha35d02b_2",
    "libcurl 7.82.0 h1ac174b_0",
    "libedit 3.1.20191231 h41a240f_2",
    "libev 4.33 h6eb9509_1",
    "libgcc-devel_linux-ppc64le 10.3.0 h5d09a8e_14",
    "libgcc-ng 11.2.0 h7698a5e_14",
    "libgomp 11.2.0 h7698a5e_14",
    "libnghttp2 1.47.0 h350ef5c_0",
    "libsanitizer 10.3.0 h85ad208_14",
    "libssh2 1.10.0 he881182_2",
    "libstdcxx-devel_linux-ppc64le 10.3.0 h5d09a8e_14",
    "libstdcxx-ng 11.2.0 habdf983_14",
    "libuv 1.43.0 h4e0d66e_0",
    "libzlib 1.2.11 hb283c62_1014",
    "lz4-c 1.9.3 h3b9df90_1",
    "make 4.3 hf817498_1",
    "ncurses 6.3 h3b9df90_0",
    "openssl 3.0.2 hb283c62_1",
    "rhash 1.4.1 h4e0d66e_0",
    "sysroot_linux-ppc64le 2.17 h395ec9b_13",
    "xz 5.2.5 h6eb9509_1",
    "zlib 1.2.11 hb283c62_1014",
    "zstd 1.5.1 h65c4b1a_0"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "aom 3.3.0 hab78ccb_1",
    "boost 1.74.0 py38h62afdde_5",
    "boost-cpp 1.74.0 haa3b612_7",
    "bzip2 1.0.8 h4e0d66e_4",
    "ca-certificates 2021.10.8 h1084571_0",
    "ffmpeg 4.4.1 h9ed9a75_2",
    "freetype 2.10.4 h8a70690_1",
    "giflib 5.2.1 h339bb43_2",
    "gmp 6.2.1 hea85c5d_0",
    "gnutls 3.6.13 hb04485b_1",
    "icu 69.1 h3b4ca64_0",
    "imath 3.1.4 ha72a2fa_0",
    "jbig 2.1 h4e0d66e_2003",
    "jpeg 9e h4e0d66e_0",
    "lame 3.100 h4e0d66e_1001",
    "lcms2 2.11 h6d9531b_1",
    "ld_impl_linux-ppc64le 2.36.1 ha35d02b_2",
    "lerc 3.0 h3b9df90_0",
    "libblas 3.9.0 13_linuxppc64le_openblas",
    "libcblas 3.9.0 13_linuxppc64le_openblas",
    "libdeflate 1.10 h4e0d66e_0",
    "libffi 3.4.2 h4e0d66e_5",
    "libgcc-ng 11.2.0 h7698a5e_14",
    "libgfortran-ng 11.2.0 hfdc3801_14",
    "libgfortran5 11.2.0 he58fbb4_14",
    "libgomp 11.2.0 h7698a5e_14",
    "libiconv 1.16 h6eb9509_0",
    "liblapack 3.9.0 13_linuxppc64le_openblas",
    "libnsl 2.0.0 h4e0d66e_0",
    "libopenblas 0.3.18 pthreads_h486567c_0",
    "libpng 1.6.37 h38e1d09_2",
    "libraw 0.20.2 h1475b77_1",
    "libstdcxx-ng 11.2.0 habdf983_14",
    "libtiff 4.3.0 hecb0ed6_3",
    "libuuid 2.32.1 h4e0d66e_1000",
    "libvpx 1.11.0 h3b9df90_3",
    "libwebp 1.2.2 h740ddc3_0",
    "libwebp-base 1.2.2 h4e0d66e_1",
    "libxml2 2.9.12 h1876533_1",
    "libzlib 1.2.11 hb283c62_1014",
    "lz4-c 1.9.3 h3b9df90_1",
    "ncurses 6.3 h3b9df90_0",
    "nettle 3.6 ha07698b_0",
    "numpy 1.22.3 py38h134ead6_0",
    "openexr 3.1.4 h3b69f5b_0",
    "openh264 2.1.1 h690f14c_0",
    "openssl 3.0.2 hb283c62_1",
    "pybind11 2.9.1 py38h06b7ddb_0",
    "pybind11-global 2.9.1 py38h06b7ddb_0",
    "python 3.8.13 h2c4edbf_0_cpython",
    "python_abi 3.8 2_cp38",
    "readline 8.1 h5c45dff_0",
    "sqlite 3.37.1 h3bd21b8_0",
    "svt-av1 0.9.1 hbbae597_0",
    "tk 8.6.12 h41c6715_0",
    "x264 1!161.3030 h4e0d66e_1",
    "x265 3.5 h06f31f1_3",
    "xz 5.2.5 h6eb9509_1",
    "zlib 1.2.11 hb283c62_1014",
    "zstd 1.5.1 h65c4b1a_0"
   ],
   "run": [
    "boost >=1.74.0,<1.74.1.0a0",
    "ffmpeg >=4.4.1,<4.5.0a0",
    "ffmpeg >=4.4.1,<5.0a0",
    "giflib >=5.2.1,<5.3.0a0",
    "jpeg >=9e,<10a",
    "libgcc-ng >=10.3.0",
    "libpng >=1.6.37,<1.7.0a0",
    "libraw >=0.20.2,<0.21.0a0",
    "libstdcxx-ng >=10.3.0",
    "libtiff >=4.3.0,<5.0a0",
    "libwebp >=1.2.2,<1.3.0a0",
    "libwebp-base >=1.2.2,<2.0a0",
    "openexr >=3.1.4,<3.2.0a0",
    "python_abi 3.8.* *_cp38"
   ]
  },
  "source": {
   "fn": "Release-2.2.18.tar.gz",
   "sha256": "b8dd189fbc97f1b172528e324daa904f74a166bad62c32e7166ca6c866734a29",
   "url": "https://github.com/OpenImageIO/oiio/archive/Release-2.2.18.0.tar.gz"
  }
 },
 "version": "2.2.18"
}
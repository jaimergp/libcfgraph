{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.21.8",
  "conda_private": false,
  "conda_version": "4.12.0",
  "description": "OpenImageIO consists of:\n- Simple but powerful ImageInput and ImageOutput APIs that provide an abstraction\n  for reading and writing image files of nearly any format, without the calling\n  application needing to know any of the details of these file formats, and indeed\n  without the calling application needing to be aware of which formats are available.\n- Plugins implementing I/O for several popular image file formats, including TIFF,\n  JPEG/JFIF, OpenEXR, PNG, HDR/RGBE, ICO, BMP, Targa, JPEG-2000, RMan Zfile, FITS, DDS,\n  Softimage PIC, PNM, DPX, Cineon, IFF, Field3D, Ptex, Photoshop PSD, Wavefront RLA, SGI,\n  WebP, GIF, DICOM, many \\\"RAW\\\" digital camera formats, and a variety of movie formats\n  (readable as individual frames). More are being developed all the time.\n- An ImageCache class that transparently manages a cache so that it can access truly\n  vast amounts of image data (tens of thousands of image files totaling multiple TB)\n  very efficiently using only a tiny amount (tens of megabytes at most) of runtime memory.\n",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "SylvainCorlay",
    "JohanMabille",
    "wolfv",
    "lgritz"
   ]
  },
  "home": "https://sites.google.com/site/openimageio/home",
  "identifiers": [],
  "keywords": [],
  "license": "BSD-3-Clause",
  "license_family": "BSD",
  "license_file": "LICENSE.md",
  "root_pkgs": [
   "xz 5.2.5 h6dd45c4_1",
   "perl 5.32.1 2_hf897c2e_perl5",
   "pcre2 10.37 h73360fb_0",
   "zlib 1.2.11 h4e544f5_1014",
   "commonmark 0.9.1 py_0",
   "libedit 3.1.20191231 he28a2e2_2",
   "setuptools 61.1.1 py39ha65689a_0",
   "libmambapy 0.22.1 py39h4730ac8_0",
   "conda-package-handling 1.8.0 py39hb9a1dbb_0",
   "libgomp 11.2.0 hf1cc4e7_14",
   "six 1.16.0 pyh6c4a22f_0",
   "colorama 0.4.4 pyh9f0ad1d_0",
   "wcwidth 0.2.5 pyh9f0ad1d_2",
   "pkginfo 1.8.2 pyhd8ed1ab_0",
   "curl 7.82.0 h8fd98b7_0",
   "libnsl 2.0.0 hf897c2e_0",
   "pycosat 0.6.3 py39h14843e3_1009",
   "ca-certificates 2021.10.8 h4fd8a4c_0",
   "urllib3 1.26.9 pyhd8ed1ab_0",
   "libnghttp2 1.47.0 h75cb1c7_0",
   "pyyaml 6.0 py39h14843e3_3",
   "boa 0.10.0 pyha770c72_0",
   "krb5 1.19.3 h7c456eb_0",
   "ld_impl_linux-aarch64 2.36.1 h02ad14f_2",
   "pytz 2022.1 pyhd8ed1ab_0",
   "anaconda-client 1.8.0 pyhd8ed1ab_0",
   "ripgrep 13.0.0 hc770f70_2",
   "reproc 14.2.3 hf897c2e_0",
   "pybind11-abi 4 hd8ed1ab_3",
   "attrs 21.4.0 pyhd8ed1ab_0",
   "beautifulsoup4 4.10.0 pyha770c72_0",
   "patch 2.7.6 hf897c2e_1002",
   "_openmp_mutex 4.5 1_gnu",
   "libuuid 2.32.1 hf897c2e_1000",
   "liblief 0.11.5 h01db608_1",
   "json5 0.9.5 pyh9f0ad1d_0",
   "rich 12.0.1 pyhd8ed1ab_0",
   "ncurses 6.3 h01db608_0",
   "pyrsistent 0.18.1 py39h14843e3_0",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "cffi 1.15.0 py39hab139ec_0",
   "python 3.9.12 h2eada40_1_cpython",
   "libgcc-ng 11.2.0 hf1cc4e7_14",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "libzlib 1.2.11 h4e544f5_1014",
   "c-ares 1.18.1 hf897c2e_0",
   "backports 1.0 py_2",
   "yaml-cpp 0.6.3 h54f1f3f_4",
   "filelock 3.6.0 pyhd8ed1ab_0",
   "bzip2 1.0.8 hf897c2e_4",
   "anyio 3.5.0 py39ha65689a_0",
   "libxml2 2.9.12 h1e2ce75_1",
   "libstdcxx-ng 11.2.0 h0d0a5bb_14",
   "nbformat 5.2.0 pyhd8ed1ab_0",
   "wheel 0.37.1 pyhd8ed1ab_0",
   "cryptography 36.0.2 py39h32042e6_0",
   "su-exec 0.2 h516909a_1002",
   "zstd 1.5.2 h41fb7a4_0",
   "patchelf 0.14.5 h884eca8_0",
   "dataclasses 0.8 pyhc8e2a94_3",
   "keyutils 1.6.1 h4e544f5_0",
   "reproc-cpp 14.2.3 h01db608_0",
   "readline 8.1 h1a49cc3_0",
   "libcurl 7.82.0 h8fd98b7_0",
   "charset-normalizer 2.0.12 pyhd8ed1ab_0",
   "clyent 1.2.2 py_1",
   "glob2 0.7 py_0",
   "libev 4.33 h516909a_1",
   "lz4-c 1.9.3 h01db608_1",
   "jupyter_core 4.9.2 py39h4420490_0",
   "ruamel_yaml 0.15.80 py39h14843e3_1006",
   "watchgod 0.8.1 pyhd8ed1ab_0",
   "chardet 4.0.0 py39ha65689a_2",
   "python_abi 3.9 2_cp39",
   "tk 8.6.12 hd8af866_0",
   "libffi 3.4.2 h3557bc0_5",
   "conda 4.12.0 py39h4420490_0",
   "idna 3.3 pyhd8ed1ab_0",
   "psutil 5.9.0 py39h14843e3_0",
   "libssh2 1.10.0 h1ab2c7b_2",
   "soupsieve 2.3.1 pyhd8ed1ab_0",
   "ruamel.yaml.clib 0.2.6 py39h981f643_0",
   "requests 2.27.1 pyhd8ed1ab_0",
   "mamba 0.22.1 py39hc9db4b5_0",
   "importlib-metadata 4.11.3 py39ha65689a_0",
   "pygments 2.11.2 pyhd8ed1ab_0",
   "py-lief 0.11.5 py39h7ab65be_1",
   "traitlets 5.1.1 pyhd8ed1ab_0",
   "typing_extensions 4.1.1 pyha770c72_0",
   "certifi 2021.10.8 py39ha65689a_1",
   "brotlipy 0.7.0 py39h14843e3_1003",
   "openssl 1.1.1n h4e544f5_0",
   "jsonschema 4.4.0 pyhd8ed1ab_0",
   "future 0.18.2 py39ha65689a_4",
   "ruamel.yaml 0.17.21 py39h981f643_0",
   "icu 69.1 h3621d8e_0",
   "zipp 3.7.0 pyhd8ed1ab_1",
   "importlib_resources 5.6.0 pyhd8ed1ab_0",
   "joblib 1.1.0 pyhd8ed1ab_0",
   "git 2.35.1 pl5321hd6c143b_0",
   "pyopenssl 22.0.0 pyhd8ed1ab_0",
   "lzo 2.10 h516909a_1000",
   "pip 22.0.4 pyhd8ed1ab_0",
   "jinja2 3.1.1 pyhd8ed1ab_0",
   "expat 2.4.7 ha18d298_0",
   "libsolv 0.7.19 h469bdbd_5",
   "pycparser 2.21 pyhd8ed1ab_0",
   "tzdata 2022a h191b570_0",
   "libiconv 1.16 h6dd45c4_0",
   "sqlite 3.37.1 hc74f5b8_0",
   "yaml 0.2.5 hf897c2e_2",
   "sniffio 1.2.0 py39ha65689a_2",
   "libarchive 3.5.2 h37be732_1",
   "pysocks 1.7.1 py39ha65689a_4",
   "tini 0.19.0 hf897c2e_0",
   "markupsafe 2.1.1 py39hb9a1dbb_0",
   "libmamba 0.22.1 hdb87969_0",
   "prompt_toolkit 3.0.27 hd8ed1ab_0",
   "conda-build 3.21.8 py39h4420490_0",
   "python-libarchive-c 4.0 py39h4420490_0",
   "tqdm 4.63.1 pyhd8ed1ab_0",
   "prompt-toolkit 3.0.27 pyha770c72_0",
   "gettext 0.19.8.1 h6edf1e2_1008",
   "oniguruma 6.9.7.1 hf897c2e_0",
   "jq 1.6 hb9de7d4_1000",
   "conda-env 2.6.0 1",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "click 8.0.4 py39ha65689a_0",
   "conda-forge-ci-setup 3.20.0 py39h7aa6a28_100"
  ],
  "summary": "Simple but powerful APIs for reading & writing many image formats",
  "tags": []
 },
 "conda_build_config": {
  "BUILD": "aarch64-conda_cos7-linux-gnu",
  "CI": "azure",
  "boost": "1.74.0",
  "c_compiler": "gcc",
  "cdt_arch": "aarch64",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "10",
  "docker_image": "quay.io/condaforge/linux-anvil-aarch64",
  "extend_keys": [
   "pin_run_as_build",
   "ignore_version",
   "extend_keys",
   "ignore_build_only_deps"
  ],
  "ffmpeg": "4.4",
  "fortran_compiler": "gfortran",
  "giflib": "5.2",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "jpeg": "9",
  "libpng": "1.6",
  "libtiff": "4",
  "libwebp": "1",
  "lua": "5",
  "numpy": "1.16",
  "openexr": "3.1",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "boost": {
    "max_pin": "x.x.x"
   },
   "jpeg": {
    "max_pin": "x"
   },
   "libpng": {
    "max_pin": "x.x"
   },
   "libtiff": {
    "max_pin": "x"
   },
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.9.* *_cpython",
  "r_base": "3.5",
  "target_platform": "linux-aarch64"
 },
 "files": [
  "include/OpenImageIO/Imath.h",
  "include/OpenImageIO/argparse.h",
  "include/OpenImageIO/array_view.h",
  "include/OpenImageIO/atomic.h",
  "include/OpenImageIO/attrdelegate.h",
  "include/OpenImageIO/benchmark.h",
  "include/OpenImageIO/color.h",
  "include/OpenImageIO/dassert.h",
  "include/OpenImageIO/deepdata.h",
  "include/OpenImageIO/detail/farmhash.h",
  "include/OpenImageIO/detail/fmt/core.h",
  "include/OpenImageIO/detail/fmt/format-inl.h",
  "include/OpenImageIO/detail/fmt/format.h",
  "include/OpenImageIO/detail/fmt/ostream.h",
  "include/OpenImageIO/detail/fmt/printf.h",
  "include/OpenImageIO/detail/pugixml/pugiconfig.hpp",
  "include/OpenImageIO/detail/pugixml/pugixml.cpp",
  "include/OpenImageIO/detail/pugixml/pugixml.hpp",
  "include/OpenImageIO/errorhandler.h",
  "include/OpenImageIO/export.h",
  "include/OpenImageIO/filesystem.h",
  "include/OpenImageIO/filter.h",
  "include/OpenImageIO/fmath.h",
  "include/OpenImageIO/fstream_mingw.h",
  "include/OpenImageIO/function_view.h",
  "include/OpenImageIO/hash.h",
  "include/OpenImageIO/image_view.h",
  "include/OpenImageIO/imagebuf.h",
  "include/OpenImageIO/imagebufalgo.h",
  "include/OpenImageIO/imagebufalgo_util.h",
  "include/OpenImageIO/imagecache.h",
  "include/OpenImageIO/imageio.h",
  "include/OpenImageIO/missing_math.h",
  "include/OpenImageIO/oiioversion.h",
  "include/OpenImageIO/optparser.h",
  "include/OpenImageIO/parallel.h",
  "include/OpenImageIO/paramlist.h",
  "include/OpenImageIO/platform.h",
  "include/OpenImageIO/plugin.h",
  "include/OpenImageIO/refcnt.h",
  "include/OpenImageIO/simd.h",
  "include/OpenImageIO/span.h",
  "include/OpenImageIO/strided_ptr.h",
  "include/OpenImageIO/string_view.h",
  "include/OpenImageIO/strutil.h",
  "include/OpenImageIO/sysutil.h",
  "include/OpenImageIO/texture.h",
  "include/OpenImageIO/thread.h",
  "include/OpenImageIO/tiffutils.h",
  "include/OpenImageIO/timer.h",
  "include/OpenImageIO/typedesc.h",
  "include/OpenImageIO/unittest.h",
  "include/OpenImageIO/unordered_map_concurrent.h",
  "include/OpenImageIO/ustring.h",
  "include/OpenImageIO/varyingref.h",
  "include/OpenImageIO/version.h",
  "lib/cmake/OpenImageIO/OpenImageIOConfig.cmake",
  "lib/cmake/OpenImageIO/OpenImageIOConfigVersion.cmake",
  "lib/cmake/OpenImageIO/OpenImageIOTargets-release.cmake",
  "lib/cmake/OpenImageIO/OpenImageIOTargets.cmake",
  "lib/libOpenImageIO.so",
  "lib/libOpenImageIO.so.2.2",
  "lib/libOpenImageIO.so.2.2.18",
  "lib/libOpenImageIO_Util.so",
  "lib/libOpenImageIO_Util.so.2.2",
  "lib/libOpenImageIO_Util.so.2.2.18",
  "lib/pkgconfig/OpenImageIO.pc",
  "share/cmake/Modules/FindOpenImageIO.cmake",
  "share/doc/OpenImageIO/CHANGES-0.x.md",
  "share/doc/OpenImageIO/CHANGES-1.x.md",
  "share/doc/OpenImageIO/CHANGES.md",
  "share/doc/OpenImageIO/LICENSE.md",
  "share/doc/OpenImageIO/THIRD-PARTY.md",
  "share/fonts/OpenImageIO/DroidSans-Bold.ttf",
  "share/fonts/OpenImageIO/DroidSans.ttf",
  "share/fonts/OpenImageIO/DroidSansMono.ttf",
  "share/fonts/OpenImageIO/DroidSerif-Bold.ttf",
  "share/fonts/OpenImageIO/DroidSerif-BoldItalic.ttf",
  "share/fonts/OpenImageIO/DroidSerif-Italic.ttf",
  "share/fonts/OpenImageIO/DroidSerif.ttf"
 ],
 "index": {
  "arch": "aarch64",
  "build": "h9d18401_2",
  "build_number": 2,
  "depends": [
   "boost >=1.74.0,<1.74.1.0a0",
   "ffmpeg >=4.4.1,<4.5.0a0",
   "ffmpeg >=4.4.1,<5.0a0",
   "giflib >=5.2.1,<5.3.0a0",
   "jpeg >=9e,<10a",
   "libgcc-ng >=10.3.0",
   "libpng >=1.6.37,<1.7.0a0",
   "libraw >=0.20.2,<0.21.0a0",
   "libstdcxx-ng >=10.3.0",
   "libtiff >=4.3.0,<5.0a0",
   "libwebp >=1.2.2,<1.3.0a0",
   "libwebp-base >=1.2.2,<2.0a0",
   "openexr >=3.1.4,<3.2.0a0",
   "python_abi 3.9.* *_cp39"
  ],
  "license": "BSD-3-Clause",
  "license_family": "BSD",
  "name": "openimageio",
  "platform": "linux",
  "subdir": "linux-aarch64",
  "timestamp": 1648528850358,
  "version": "2.2.18"
 },
 "metadata_version": 1,
 "name": "openimageio",
 "raw_recipe": "{% set name = \"openimageio\" %}\n{% set version = \"2.2.18\" %}\n{% set sha256 = \"b8dd189fbc97f1b172528e324daa904f74a166bad62c32e7166ca6c866734a29\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: Release-{{ version }}.tar.gz\n  url: https://github.com/OpenImageIO/oiio/archive/Release-{{ version }}.0.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 2\n  skip: true  # [win]\n  run_exports:\n    - {{ pin_subpackage(name, max_pin='x.x') }}\n\nrequirements:\n  build:\n    - cmake\n    - {{ compiler('cxx') }}\n    - make  # [unix]\n  host:\n    - python\n    - pybind11\n    - boost\n    - ffmpeg\n    - giflib\n    - jpeg\n    - libpng\n    - libtiff\n    - libwebp\n    - openexr\n    - libraw\n  run:\n    # boost and libwebp don't have a run_exports section\n    - {{ pin_compatible('boost', max_pin='x.x.x') }}\n    - {{ pin_compatible('libwebp', max_pin='x.x') }}\n    # ffmpeg 3.x does not have a run-export section\n    - {{ pin_compatible('ffmpeg', max_pin='x.x') }}\n\noutputs:\n  - name: openimageio\n    script: install_lib.sh\n    test:\n      commands:\n        - test -d ${PREFIX}/include/OpenImageIO  # [unix]\n        - test -f ${PREFIX}/include/OpenImageIO/oiioversion.h  # [unix]\n        - test -f ${PREFIX}/lib/libOpenImageIO.so  # [linux]\n        - test -f ${PREFIX}/lib/libOpenImageIO.dylib  # [osx]\n\n  - name: py-openimageio\n    script: install_python.sh\n    requirements:\n      build:\n        - cmake\n        - {{ compiler('cxx') }}\n        - make  # [unix]\n      host:\n        - {{ pin_subpackage('openimageio', exact=True) }}\n        - python\n        - pybind11\n        - boost\n        - ffmpeg\n        - giflib\n        - jpeg\n        - libpng\n        - libtiff\n        - libwebp\n        - openexr\n      run:\n        - {{ pin_subpackage('openimageio', exact=True) }}\n        - python\n    test:\n      imports:\n        - OpenImageIO\n\nabout:\n  home: https://sites.google.com/site/openimageio/home\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.md\n  summary: Simple but powerful APIs for reading & writing many image formats\n  description: |\n    OpenImageIO consists of:\n    - Simple but powerful ImageInput and ImageOutput APIs that provide an abstraction\n      for reading and writing image files of nearly any format, without the calling\n      application needing to know any of the details of these file formats, and indeed\n      without the calling application needing to be aware of which formats are available.\n    - Plugins implementing I/O for several popular image file formats, including TIFF,\n      JPEG/JFIF, OpenEXR, PNG, HDR/RGBE, ICO, BMP, Targa, JPEG-2000, RMan Zfile, FITS, DDS,\n      Softimage PIC, PNM, DPX, Cineon, IFF, Field3D, Ptex, Photoshop PSD, Wavefront RLA, SGI,\n      WebP, GIF, DICOM, many \\\"RAW\\\" digital camera formats, and a variety of movie formats\n      (readable as individual frames). More are being developed all the time.\n    - An ImageCache class that transparently manages a cache so that it can access truly\n      vast amounts of image data (tens of thousands of image files totaling multiple TB)\n      very efficiently using only a tiny amount (tens of megabytes at most) of runtime memory.\n\nextra:\n  recipe-maintainers:\n    - SylvainCorlay\n    - JohanMabille\n    - wolfv\n    - lgritz\n",
 "rendered_recipe": {
  "about": {
   "description": "OpenImageIO consists of:\n- Simple but powerful ImageInput and ImageOutput APIs that provide an abstraction\n  for reading and writing image files of nearly any format, without the calling\n  application needing to know any of the details of these file formats, and indeed\n  without the calling application needing to be aware of which formats are available.\n- Plugins implementing I/O for several popular image file formats, including TIFF,\n  JPEG/JFIF, OpenEXR, PNG, HDR/RGBE, ICO, BMP, Targa, JPEG-2000, RMan Zfile, FITS, DDS,\n  Softimage PIC, PNM, DPX, Cineon, IFF, Field3D, Ptex, Photoshop PSD, Wavefront RLA, SGI,\n  WebP, GIF, DICOM, many \\\"RAW\\\" digital camera formats, and a variety of movie formats\n  (readable as individual frames). More are being developed all the time.\n- An ImageCache class that transparently manages a cache so that it can access truly\n  vast amounts of image data (tens of thousands of image files totaling multiple TB)\n  very efficiently using only a tiny amount (tens of megabytes at most) of runtime memory.\n",
   "home": "https://sites.google.com/site/openimageio/home",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE.md",
   "summary": "Simple but powerful APIs for reading & writing many image formats"
  },
  "build": {
   "number": "2",
   "run_exports": [
    "openimageio >=2.2.18,<2.3.0a0"
   ],
   "string": "h9d18401_2"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "JohanMabille",
    "SylvainCorlay",
    "lgritz",
    "wolfv"
   ]
  },
  "package": {
   "name": "openimageio",
   "version": "2.2.18"
  },
  "requirements": {
   "build": [
    "_openmp_mutex 4.5 1_gnu",
    "binutils_impl_linux-aarch64 2.36.1 h026399b_2",
    "binutils_linux-aarch64 2.36 h7854541_9",
    "bzip2 1.0.8 hf897c2e_4",
    "c-ares 1.18.1 hf897c2e_0",
    "ca-certificates 2021.10.8 h4fd8a4c_0",
    "cmake 3.22.3 hcad14f8_0",
    "expat 2.4.7 ha18d298_0",
    "gcc_impl_linux-aarch64 10.3.0 ha07e0e6_14",
    "gcc_linux-aarch64 10.3.0 h4e3e293_9",
    "gxx_impl_linux-aarch64 10.3.0 ha07e0e6_14",
    "gxx_linux-aarch64 10.3.0 h72ff769_9",
    "kernel-headers_linux-aarch64 4.18.0 h5b4a56d_13",
    "keyutils 1.6.1 h4e544f5_0",
    "krb5 1.19.3 h750e270_0",
    "ld_impl_linux-aarch64 2.36.1 h02ad14f_2",
    "libcurl 7.82.0 h22f3f83_0",
    "libedit 3.1.20191231 he28a2e2_2",
    "libev 4.33 h516909a_1",
    "libgcc-devel_linux-aarch64 10.3.0 h8e480ec_14",
    "libgcc-ng 11.2.0 hf1cc4e7_14",
    "libgomp 11.2.0 hf1cc4e7_14",
    "libnghttp2 1.47.0 h2b6b862_0",
    "libsanitizer 10.3.0 h971684a_14",
    "libssh2 1.10.0 hd8c4cff_2",
    "libstdcxx-devel_linux-aarch64 10.3.0 h8e480ec_14",
    "libstdcxx-ng 11.2.0 h0d0a5bb_14",
    "libuv 1.43.0 hf897c2e_0",
    "libzlib 1.2.11 h4e544f5_1014",
    "lz4-c 1.9.3 h01db608_1",
    "make 4.3 h309ac5b_1",
    "ncurses 6.3 h01db608_0",
    "openssl 3.0.2 h4e544f5_1",
    "rhash 1.4.1 hf897c2e_0",
    "sysroot_linux-aarch64 2.17 h43d7e78_13",
    "xz 5.2.5 h6dd45c4_1",
    "zlib 1.2.11 h4e544f5_1014",
    "zstd 1.5.2 h41fb7a4_0"
   ],
   "host": [
    "_openmp_mutex 4.5 1_gnu",
    "aom 3.3.0 headf329_1",
    "boost 1.74.0 py39ha253240_5",
    "boost-cpp 1.74.0 h0980f12_7",
    "bzip2 1.0.8 hf897c2e_4",
    "ca-certificates 2021.10.8 h4fd8a4c_0",
    "ffmpeg 4.4.1 h6e4b094_2",
    "freetype 2.10.4 hdf53a3c_1",
    "giflib 5.2.1 hb9de7d4_2",
    "gmp 6.2.1 h7fd3ca4_0",
    "gnutls 3.6.13 h5fb5790_1",
    "icu 69.1 h3621d8e_0",
    "imath 3.1.4 h7866ba4_0",
    "jbig 2.1 hf897c2e_2003",
    "jpeg 9e h3557bc0_0",
    "lame 3.100 hf897c2e_1001",
    "lcms2 2.12 h012adcb_0",
    "ld_impl_linux-aarch64 2.36.1 h02ad14f_2",
    "lerc 3.0 h01db608_0",
    "libblas 3.9.0 13_linuxaarch64_openblas",
    "libcblas 3.9.0 13_linuxaarch64_openblas",
    "libdeflate 1.10 hf897c2e_0",
    "libffi 3.4.2 h3557bc0_5",
    "libgcc-ng 11.2.0 hf1cc4e7_14",
    "libgfortran-ng 11.2.0 he9431aa_14",
    "libgfortran5 11.2.0 h440fb59_14",
    "libgomp 11.2.0 hf1cc4e7_14",
    "libiconv 1.16 h6dd45c4_0",
    "liblapack 3.9.0 13_linuxaarch64_openblas",
    "libnsl 2.0.0 hf897c2e_0",
    "libopenblas 0.3.18 pthreads_h775ce2d_0",
    "libpng 1.6.37 hbd635b3_2",
    "libraw 0.20.2 hc8204c4_1",
    "libstdcxx-ng 11.2.0 h0d0a5bb_14",
    "libtiff 4.3.0 hdea21e4_3",
    "libuuid 2.32.1 hf897c2e_1000",
    "libvpx 1.11.0 h01db608_3",
    "libwebp 1.2.2 h21830e5_0",
    "libwebp-base 1.2.2 hf897c2e_1",
    "libxml2 2.9.12 h1e2ce75_1",
    "libzlib 1.2.11 h4e544f5_1014",
    "lz4-c 1.9.3 h01db608_1",
    "ncurses 6.3 h01db608_0",
    "nettle 3.6 ha0d5d3d_0",
    "numpy 1.22.3 py39h80965e7_0",
    "openexr 3.1.4 hb2805f8_0",
    "openh264 2.1.1 h469bdbd_0",
    "openssl 3.0.2 h4e544f5_1",
    "pybind11 2.9.1 py39hb300cb6_0",
    "pybind11-global 2.9.1 py39hb300cb6_0",
    "python 3.9.12 h5016f1d_1_cpython",
    "python_abi 3.9 2_cp39",
    "readline 8.1 h1a49cc3_0",
    "sqlite 3.37.1 hc74f5b8_0",
    "svt-av1 0.9.1 h4de3ea5_0",
    "tk 8.6.12 hd8af866_0",
    "tzdata 2022a h191b570_0",
    "x264 1!161.3030 hf897c2e_1",
    "x265 3.5 hdd96247_3",
    "xz 5.2.5 h6dd45c4_1",
    "zlib 1.2.11 h4e544f5_1014",
    "zstd 1.5.2 h41fb7a4_0"
   ],
   "run": [
    "boost >=1.74.0,<1.74.1.0a0",
    "ffmpeg >=4.4.1,<4.5.0a0",
    "ffmpeg >=4.4.1,<5.0a0",
    "giflib >=5.2.1,<5.3.0a0",
    "jpeg >=9e,<10a",
    "libgcc-ng >=10.3.0",
    "libpng >=1.6.37,<1.7.0a0",
    "libraw >=0.20.2,<0.21.0a0",
    "libstdcxx-ng >=10.3.0",
    "libtiff >=4.3.0,<5.0a0",
    "libwebp >=1.2.2,<1.3.0a0",
    "libwebp-base >=1.2.2,<2.0a0",
    "openexr >=3.1.4,<3.2.0a0",
    "python_abi 3.9.* *_cp39"
   ]
  },
  "source": {
   "fn": "Release-2.2.18.tar.gz",
   "sha256": "b8dd189fbc97f1b172528e324daa904f74a166bad62c32e7166ca6c866734a29",
   "url": "https://github.com/OpenImageIO/oiio/archive/Release-2.2.18.0.tar.gz"
  }
 },
 "version": "2.2.18"
}
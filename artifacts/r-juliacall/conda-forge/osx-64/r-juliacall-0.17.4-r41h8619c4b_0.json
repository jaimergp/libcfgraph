{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.21.8",
  "conda_private": false,
  "conda_version": "4.12.0",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "conda-forge/r",
    "l2dy"
   ]
  },
  "home": "https://github.com/Non-Contradiction/JuliaCall",
  "identifiers": [],
  "keywords": [],
  "license": "MIT",
  "license_family": "MIT",
  "license_file": [
   "/Users/runner/miniforge3/conda-bld/r-juliacall_1650787317518/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeho/lib/R/share/licenses/MIT",
   "LICENSE"
  ],
  "root_pkgs": [
   "requests 2.27.1 pyhd8ed1ab_0",
   "gettext 0.19.8.1 hd1a6beb_1008",
   "conda-env 2.6.0 1",
   "six 1.16.0 pyh6c4a22f_0",
   "icu 69.1 he49afe7_0",
   "charset-normalizer 2.0.12 pyhd8ed1ab_0",
   "liblief 0.11.5 he49afe7_1",
   "libcurl 7.82.0 h9f20792_0",
   "jinja2 3.1.1 pyhd8ed1ab_0",
   "jq 1.6 hc929b4f_1000",
   "expat 2.4.8 h96cf925_0",
   "yaml 0.2.5 h0d85af4_2",
   "typing_extensions 4.2.0 pyha770c72_1",
   "pyyaml 6.0 py39h63b48b0_4",
   "jsonschema 4.4.0 pyhd8ed1ab_0",
   "watchgod 0.8.2 pyhd8ed1ab_0",
   "attrs 21.4.0 pyhd8ed1ab_0",
   "importlib-metadata 4.11.3 py39h6e9494a_1",
   "future 0.18.2 py39h6e9494a_5",
   "sqlite 3.37.1 hb516253_0",
   "git 2.35.3 pl5321h33a4a8a_0",
   "openssl 1.1.1n h6c3fc93_0",
   "reproc-cpp 14.2.3 he49afe7_0",
   "reproc 14.2.3 h0d85af4_0",
   "cryptography 36.0.2 py39h1644bb1_0",
   "certifi 2021.10.8 py39h6e9494a_2",
   "glob2 0.7 py_0",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "filelock 3.6.0 pyhd8ed1ab_0",
   "zlib 1.2.11 h9173be1_1013",
   "zipp 3.8.0 pyhd8ed1ab_0",
   "libedit 3.1.20191231 h0678c8f_2",
   "commonmark 0.9.1 py_0",
   "pygments 2.11.2 pyhd8ed1ab_0",
   "py-lief 0.11.5 py39h9fcab8e_1",
   "perl 5.32.1 2_h0d85af4_perl5",
   "tzdata 2022a h191b570_0",
   "cffi 1.15.0 py39he338e87_0",
   "urllib3 1.26.9 pyhd8ed1ab_0",
   "libiconv 1.16 haf1e3a3_0",
   "wheel 0.37.1 pyhd8ed1ab_0",
   "chardet 4.0.0 py39h6e9494a_3",
   "curl 7.82.0 h9f20792_0",
   "backports 1.0 py_2",
   "markupsafe 2.1.1 py39h63b48b0_1",
   "boa 0.10.0 pyha770c72_0",
   "xz 5.2.5 haf1e3a3_1",
   "joblib 1.1.0 pyhd8ed1ab_0",
   "sniffio 1.2.0 py39h6e9494a_3",
   "cctools 949.0.1 hd9211c8_23",
   "zstd 1.5.2 h582d3a0_0",
   "jupyter_core 4.9.2 py39h6e9494a_0",
   "python-libarchive-c 4.0 py39h6e9494a_1",
   "colorama 0.4.4 pyh9f0ad1d_0",
   "mamba 0.22.1 py39ha435c47_0",
   "conda-forge-ci-setup 3.20.0 py39hb0a6171_100",
   "libmambapy 0.22.1 py39h434a9b6_0",
   "ripgrep 13.0.0 hbbacdb1_2",
   "ld64_osx-64 530 he8994da_23",
   "psutil 5.9.0 py39h63b48b0_1",
   "ruamel.yaml 0.17.21 py39h63b48b0_1",
   "soupsieve 2.3.1 pyhd8ed1ab_0",
   "prompt_toolkit 3.0.29 hd8ed1ab_0",
   "nbformat 5.3.0 pyhd8ed1ab_0",
   "libcxx 13.0.1 hc203e6f_0",
   "pyrsistent 0.18.1 py39h63b48b0_1",
   "brotlipy 0.7.0 py39h89e85a6_1003",
   "libffi 3.4.2 h0d85af4_5",
   "pyopenssl 22.0.0 pyhd8ed1ab_0",
   "ruamel_yaml 0.15.80 py39h89e85a6_1006",
   "libsolv 0.7.19 hcf210ce_5",
   "libxml2 2.9.12 h7e28ab6_1",
   "importlib_resources 5.7.1 pyhd8ed1ab_0",
   "libarchive 3.5.2 h2b60450_1",
   "tapi 1100.0.11 h9ce4665_0",
   "beautifulsoup4 4.11.1 pyha770c72_0",
   "pycosat 0.6.3 py39h89e85a6_1009",
   "krb5 1.19.3 hb49756b_0",
   "idna 3.3 pyhd8ed1ab_0",
   "readline 8.1 h05e3726_0",
   "anyio 3.5.0 py39h6e9494a_0",
   "ncurses 6.3 he49afe7_0",
   "anaconda-client 1.8.0 pyhd8ed1ab_0",
   "libzlib 1.2.11 h9173be1_1013",
   "bzip2 1.0.8 h0d85af4_4",
   "python-fastjsonschema 2.15.3 pyhd8ed1ab_0",
   "c-ares 1.18.1 h0d85af4_0",
   "json5 0.9.5 pyh9f0ad1d_0",
   "ruamel.yaml.clib 0.2.6 py39h63b48b0_1",
   "pytz 2022.1 pyhd8ed1ab_0",
   "pkginfo 1.8.2 pyhd8ed1ab_0",
   "conda 4.12.0 py39h6e9494a_0",
   "tqdm 4.63.0 pyhd8ed1ab_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "libssh2 1.10.0 h52ee1ee_2",
   "wcwidth 0.2.5 pyh9f0ad1d_2",
   "yaml-cpp 0.6.3 hb1e8313_4",
   "clyent 1.2.2 py_1",
   "pcre2 10.37 ha16e1b2_0",
   "ld64 530 hd2e7500_23",
   "setuptools 60.10.0 py39h6e9494a_0",
   "python_abi 3.9 2_cp39",
   "lz4-c 1.9.3 he49afe7_1",
   "libmamba 0.22.1 hf91a703_0",
   "python 3.9.10 h1dd9edd_2_cpython",
   "ca-certificates 2021.10.8 h033912b_0",
   "cctools_osx-64 949.0.1 h6407bdd_23",
   "click 8.1.2 py39h6e9494a_0",
   "pysocks 1.7.1 py39h6e9494a_4",
   "ldid 2.1.2 h6a69015_3",
   "prompt-toolkit 3.0.29 pyha770c72_0",
   "conda-package-handling 1.8.0 py39h63b48b0_0",
   "dataclasses 0.8 pyhc8e2a94_3",
   "pip 22.0.4 pyhd8ed1ab_0",
   "lzo 2.10 haf1e3a3_1000",
   "libllvm12 12.0.1 hd011deb_2",
   "conda-build 3.21.8 py39h6e9494a_0",
   "pybind11-abi 4 hd8ed1ab_3",
   "rich 12.2.0 pyhd8ed1ab_0",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "pycparser 2.21 pyhd8ed1ab_0",
   "libnghttp2 1.47.0 h942079c_0",
   "tk 8.6.12 h5dbffcc_0",
   "libev 4.33 haf1e3a3_1",
   "traitlets 5.1.1 pyhd8ed1ab_0",
   "oniguruma 6.9.7.1 h0d85af4_0"
  ],
  "summary": "Provides an R interface to 'Julia', which is a high-level, high-performance dynamic programming language for numerical computing, see <https://julialang.org/> for more information. It provides a high-level interface as well as a low-level interface. Using the high level interface, you could call any 'Julia' function just like any R function with automatic type conversion. Using the low level interface, you could deal with C-level SEXP directly while enjoying the convenience of using a high-level programming language like 'Julia'.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "CONDA_BUILD_SYSROOT": "/Applications/Xcode_12.4.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk",
  "MACOSX_DEPLOYMENT_TARGET": "10.9",
  "c_compiler": "clang",
  "c_compiler_version": "13",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "clangxx",
  "cxx_compiler_version": "13",
  "extend_keys": [
   "pin_run_as_build",
   "ignore_version",
   "ignore_build_only_deps",
   "extend_keys"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "macos_machine": "x86_64-apple-darwin13.4.0",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.9",
  "r_base": "4.1",
  "target_platform": "osx-64",
  "zip_keys": [
   [
    "c_compiler_version",
    "cxx_compiler_version"
   ]
  ]
 },
 "files": [
  "lib/R/library/JuliaCall/CITATION",
  "lib/R/library/JuliaCall/DESCRIPTION",
  "lib/R/library/JuliaCall/INDEX",
  "lib/R/library/JuliaCall/LICENSE",
  "lib/R/library/JuliaCall/Meta/Rd.rds",
  "lib/R/library/JuliaCall/Meta/features.rds",
  "lib/R/library/JuliaCall/Meta/hsearch.rds",
  "lib/R/library/JuliaCall/Meta/links.rds",
  "lib/R/library/JuliaCall/Meta/nsInfo.rds",
  "lib/R/library/JuliaCall/Meta/package.rds",
  "lib/R/library/JuliaCall/Meta/vignette.rds",
  "lib/R/library/JuliaCall/NAMESPACE",
  "lib/R/library/JuliaCall/NEWS.md",
  "lib/R/library/JuliaCall/R/JuliaCall",
  "lib/R/library/JuliaCall/R/JuliaCall.rdb",
  "lib/R/library/JuliaCall/R/JuliaCall.rdx",
  "lib/R/library/JuliaCall/doc/JuliaCall_in_Jupyter_R_Notebook.R",
  "lib/R/library/JuliaCall/doc/JuliaCall_in_Jupyter_R_Notebook.Rmd",
  "lib/R/library/JuliaCall/doc/JuliaCall_in_Jupyter_R_Notebook.html",
  "lib/R/library/JuliaCall/doc/Julia_in_RMarkdown.R",
  "lib/R/library/JuliaCall/doc/Julia_in_RMarkdown.Rmd",
  "lib/R/library/JuliaCall/doc/Julia_in_RMarkdown.html",
  "lib/R/library/JuliaCall/doc/index.html",
  "lib/R/library/JuliaCall/help/AnIndex",
  "lib/R/library/JuliaCall/help/JuliaCall.rdb",
  "lib/R/library/JuliaCall/help/JuliaCall.rdx",
  "lib/R/library/JuliaCall/help/aliases.rds",
  "lib/R/library/JuliaCall/help/paths.rds",
  "lib/R/library/JuliaCall/html/00Index.html",
  "lib/R/library/JuliaCall/html/R.css",
  "lib/R/library/JuliaCall/include/JuliaObject.h",
  "lib/R/library/JuliaCall/include/JuliaObject/JuliaObject.hpp",
  "lib/R/library/JuliaCall/js/plotly-latest.min.js",
  "lib/R/library/JuliaCall/julia/JuliaObject.jl",
  "lib/R/library/JuliaCall/julia/REPLhook.jl",
  "lib/R/library/JuliaCall/julia/RmdStd.jl",
  "lib/R/library/JuliaCall/julia/asR.jl",
  "lib/R/library/JuliaCall/julia/convert.jl",
  "lib/R/library/JuliaCall/julia/dispatch.jl",
  "lib/R/library/JuliaCall/julia/display/IRjulia.jl",
  "lib/R/library/JuliaCall/julia/display/RmdJulia.jl",
  "lib/R/library/JuliaCall/julia/display/basic.jl",
  "lib/R/library/JuliaCall/julia/display/plotsViewer.jl",
  "lib/R/library/JuliaCall/julia/incomplete_console.jl",
  "lib/R/library/JuliaCall/julia/install_dependency.jl",
  "lib/R/library/JuliaCall/julia/interface1.jl",
  "lib/R/library/JuliaCall/julia/libjulia.jl",
  "lib/R/library/JuliaCall/julia/rebuildRCall.jl",
  "lib/R/library/JuliaCall/julia/setup.jl",
  "lib/R/library/JuliaCall/libs/JuliaCall.dylib"
 ],
 "index": {
  "arch": "x86_64",
  "build": "r41h8619c4b_0",
  "build_number": 0,
  "depends": [
   "julia",
   "libcxx >=13.0.1",
   "r-base >=4.1,<4.2.0a0",
   "r-knitr >=1.28",
   "r-rcpp >=0.12.7"
  ],
  "license": "MIT",
  "license_family": "MIT",
  "name": "r-juliacall",
  "platform": "osx",
  "subdir": "osx-64",
  "timestamp": 1650787663552,
  "version": "0.17.4"
 },
 "metadata_version": 1,
 "name": "r-juliacall",
 "raw_recipe": "{% set version = '0.17.4' %}\n\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-juliacall\n  version: {{ version }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/JuliaCall_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/JuliaCall/JuliaCall_{{ version }}.tar.gz\n  sha256: 41d88228c004bbf7288200f391381a232f34f1dc8aa5cff7c43f10e751d5427b\n\nbuild:\n  merge_build_host: True  # [win]\n  # If this is a new build for the same version, increment the build number.\n  number: 0\n  # no skip\n\n  # This is required to make R link correctly on Linux.\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\n# Suggests: testthat, rmarkdown, rappdirs\nrequirements:\n  build:\n    - {{ compiler('c') }}              # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ compiler('cxx') }}            # [not win]\n    - {{ compiler('m2w64_cxx') }}      # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n\n  host:\n    - r-base\n    - r-rcpp >=0.12.7\n    - r-knitr >=1.28\n\n  run:\n    - julia                        # [not win]\n    - r-base\n    - r-rcpp >=0.12.7\n    - r-knitr >=1.28\n\ntest:\n  commands:\n    # You can put additional test commands to be run here.\n    - $R -e \"library('JuliaCall')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('JuliaCall')\\\"\"  # [win]\n\n  # You can also put a file called run_test.py, run_test.sh, or run_test.bat\n  # in the recipe that will be run at test time.\n\n  # requires:\n    # Put any additional test requirements here.\n\nabout:\n  home: https://github.com/Non-Contradiction/JuliaCall\n  license: MIT\n  summary: Provides an R interface to 'Julia', which is a high-level, high-performance dynamic\n    programming language for numerical computing, see <https://julialang.org/> for more\n    information. It provides a high-level interface as well as a low-level interface.\n    Using the high level interface, you could call any 'Julia' function just like any\n    R function with automatic type conversion. Using the low level interface, you could\n    deal with C-level SEXP directly while enjoying the convenience of using a high-level\n    programming language like 'Julia'.\n  license_family: MIT\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/MIT'\n    - LICENSE\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - l2dy\n\n# The original CRAN metadata for this package was:\n\n# Package: JuliaCall\n# Type: Package\n# Title: Seamless Integration Between R and 'Julia'\n# Version: 0.17.4\n# Date: 2021-05-14\n# Authors@R: c( person(\"Changcheng\", \"Li\", , \"cxl508@psu.edu\", c(\"aut\", \"cre\")), person(\"Randy\", \"Lai\", role = \"ctb\"), person(\"Dmitri\", \"Grominski\", role = \"ctb\"), person(\"Nagi\", \"Teramo\", role = \"ctb\") )\n# Description: Provides an R interface to 'Julia', which is a high-level, high-performance dynamic programming language for numerical computing, see <https://julialang.org/> for more information. It provides a high-level interface as well as a low-level interface. Using the high level interface, you could call any 'Julia' function just like any R function with automatic type conversion. Using the low level interface, you could deal with C-level SEXP directly while enjoying the convenience of using a high-level programming language like 'Julia'.\n# Depends: R (>= 3.4.0)\n# License: MIT + file LICENSE\n# URL: https://github.com/Non-Contradiction/JuliaCall\n# BugReports: https://github.com/Non-Contradiction/JuliaCall/issues\n# Encoding: UTF-8\n# Imports: utils, Rcpp (>= 0.12.7), knitr (>= 1.28)\n# RoxygenNote: 7.1.1\n# LinkingTo: Rcpp\n# NeedsCompilation: yes\n# ByteCompile: yes\n# SystemRequirements: Julia >= 0.6.0, RCall.jl\n# Suggests: testthat, rmarkdown, rappdirs\n# VignetteBuilder: knitr\n# Packaged: 2021-05-15 04:45:07 UTC; lch34\n# Author: Changcheng Li [aut, cre], Randy Lai [ctb], Dmitri Grominski [ctb], Nagi Teramo [ctb]\n# Maintainer: Changcheng Li <cxl508@psu.edu>\n# Repository: CRAN\n# Date/Publication: 2021-05-16 14:10:16 UTC\n\n# See\n# https://docs.conda.io/projects/conda-build for\n# more information about meta.yaml\n",
 "rendered_recipe": {
  "about": {
   "home": "https://github.com/Non-Contradiction/JuliaCall",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": [
    "/Users/runner/miniforge3/conda-bld/r-juliacall_1650787317518/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeho/lib/R/share/licenses/MIT",
    "LICENSE"
   ],
   "summary": "Provides an R interface to 'Julia', which is a high-level, high-performance dynamic programming language for numerical computing, see <https://julialang.org/> for more information. It provides a high-level interface as well as a low-level interface. Using the high level interface, you could call any 'Julia' function just like any R function with automatic type conversion. Using the low level interface, you could deal with C-level SEXP directly while enjoying the convenience of using a high-level programming language like 'Julia'."
  },
  "build": {
   "number": "0",
   "rpaths": [
    "lib/",
    "lib/R/lib/"
   ],
   "string": "r41h8619c4b_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "conda-forge/r",
    "l2dy"
   ]
  },
  "package": {
   "name": "r-juliacall",
   "version": "0.17.4"
  },
  "requirements": {
   "build": [
    "ca-certificates 2021.10.8 h033912b_0",
    "cctools_osx-64 973.0.1 h2b735b3_10",
    "clang 13.0.1 h694c41f_0",
    "clang-13 13.0.1 default_he082bbe_0",
    "clang_osx-64 13.0.1 h71a8856_0",
    "clangxx 13.0.1 default_he082bbe_0",
    "clangxx_osx-64 13.0.1 heae0f87_0",
    "compiler-rt 13.0.1 he01351e_0",
    "compiler-rt_osx-64 13.0.1 hd3f61c9_0",
    "ld64_osx-64 609 hd77a64a_10",
    "libclang-cpp13 13.0.1 default_he082bbe_0",
    "libcxx 13.0.1 hc203e6f_0",
    "libllvm13 13.0.1 h64f94b2_2",
    "libzlib 1.2.11 h6c3fc93_1014",
    "llvm-tools 13.0.1 h64f94b2_2",
    "make 4.3 h22f3db7_1",
    "openssl 3.0.2 h6c3fc93_1",
    "sigtool 0.1.3 h88f4db0_0",
    "tapi 1100.0.11 h9ce4665_0"
   ],
   "host": [
    "_r-mutex 1.0.1 anacondar_1",
    "bwidget 1.9.14 h694c41f_1",
    "bzip2 1.0.8 h0d85af4_4",
    "c-ares 1.18.1 h0d85af4_0",
    "ca-certificates 2021.10.8 h033912b_0",
    "cairo 1.16.0 h1680b09_1011",
    "cctools_osx-64 973.0.1 h2b735b3_10",
    "clang 13.0.1 h694c41f_0",
    "clang-13 13.0.1 default_he082bbe_0",
    "clang_osx-64 13.0.1 h71a8856_0",
    "clangxx 13.0.1 default_he082bbe_0",
    "clangxx_osx-64 13.0.1 heae0f87_0",
    "compiler-rt 13.0.1 he01351e_0",
    "compiler-rt_osx-64 13.0.1 hd3f61c9_0",
    "curl 7.82.0 h9dce1e3_0",
    "expat 2.4.8 h96cf925_0",
    "font-ttf-dejavu-sans-mono 2.37 hab24e00_0",
    "font-ttf-inconsolata 3.000 h77eed37_0",
    "font-ttf-source-code-pro 2.038 h77eed37_0",
    "font-ttf-ubuntu 0.83 hab24e00_0",
    "fontconfig 2.14.0 h676cef8_0",
    "fonts-conda-ecosystem 1 0",
    "fonts-conda-forge 1 0",
    "freetype 2.10.4 h4cff582_1",
    "fribidi 1.0.10 hbcb3906_0",
    "gettext 0.19.8.1 hd1a6beb_1008",
    "gfortran_impl_osx-64 9.3.0 h9cc0e5e_23",
    "gfortran_osx-64 9.3.0 h18f7dce_15",
    "gmp 6.2.1 h2e338ed_0",
    "graphite2 1.3.13 h2e338ed_1001",
    "gsl 2.7 h93259b0_0",
    "harfbuzz 4.2.0 hd338e84_1",
    "icu 70.1 h96cf925_0",
    "isl 0.22.1 hb1e8313_2",
    "jbig 2.1 h0d85af4_2003",
    "jpeg 9e h5eb16cf_1",
    "krb5 1.19.3 hb98e516_0",
    "ld64_osx-64 609 hd77a64a_10",
    "lerc 3.0 he49afe7_0",
    "libblas 3.9.0 14_osx64_openblas",
    "libcblas 3.9.0 14_osx64_openblas",
    "libclang-cpp13 13.0.1 default_he082bbe_0",
    "libcurl 7.82.0 h9dce1e3_0",
    "libcxx 13.0.1 hc203e6f_0",
    "libdeflate 1.10 h0d85af4_0",
    "libedit 3.1.20191231 h0678c8f_2",
    "libev 4.33 haf1e3a3_1",
    "libffi 3.4.2 h0d85af4_5",
    "libgfortran 5.0.0 9_3_0_h6c81a4c_23",
    "libgfortran-devel_osx-64 9.3.0 h6c81a4c_23",
    "libgfortran5 9.3.0 h6c81a4c_23",
    "libglib 2.70.2 hf1fb8c0_4",
    "libiconv 1.16 haf1e3a3_0",
    "liblapack 3.9.0 14_osx64_openblas",
    "libllvm13 13.0.1 h64f94b2_2",
    "libnghttp2 1.47.0 hca56917_0",
    "libopenblas 0.3.20 openmp_hb3cd9ec_0",
    "libpng 1.6.37 h7cec526_2",
    "libssh2 1.10.0 hd3787cc_2",
    "libtiff 4.3.0 h17f2ce3_3",
    "libwebp-base 1.2.2 h0d85af4_1",
    "libxml2 2.9.13 he03b247_0",
    "libzlib 1.2.11 h6c3fc93_1014",
    "llvm-openmp 13.0.1 hcb1a161_1",
    "llvm-tools 13.0.1 h64f94b2_2",
    "lz4-c 1.9.3 he49afe7_1",
    "make 4.3 h22f3db7_1",
    "mpc 1.2.1 hbb51d92_0",
    "mpfr 4.1.0 h0f52abe_1",
    "ncurses 6.3 h96cf925_1",
    "openssl 3.0.2 h6c3fc93_1",
    "pango 1.50.7 hc4a7b6d_0",
    "pcre 8.45 he49afe7_0",
    "pcre2 10.37 ha16e1b2_0",
    "pixman 0.40.0 hbcb3906_0",
    "r-base 4.1.3 h234e2ac_1",
    "r-evaluate 0.15 r41hc72bb7e_0",
    "r-glue 1.6.2 r41h0f1d5c4_0",
    "r-highr 0.9 r41hc72bb7e_0",
    "r-knitr 1.38 r41hc72bb7e_0",
    "r-magrittr 2.0.3 r41h0f1d5c4_0",
    "r-rcpp 1.0.8.3 r41hc4bb905_0",
    "r-stringi 1.7.6 r41ha37f9d2_2",
    "r-stringr 1.4.0 r41hc72bb7e_2",
    "r-xfun 0.30 r41hc4bb905_0",
    "r-yaml 2.3.5 r41h0f1d5c4_0",
    "readline 8.1 h05e3726_0",
    "sigtool 0.1.3 h88f4db0_0",
    "tapi 1100.0.11 h9ce4665_0",
    "tk 8.6.12 h5dbffcc_0",
    "tktable 2.10 h49f0cf7_3",
    "xz 5.2.5 haf1e3a3_1",
    "zlib 1.2.11 h6c3fc93_1014",
    "zstd 1.5.2 h582d3a0_0"
   ],
   "run": [
    "julia",
    "libcxx >=13.0.1",
    "r-base >=4.1,<4.2.0a0",
    "r-knitr >=1.28",
    "r-rcpp >=0.12.7"
   ]
  },
  "source": {
   "sha256": "41d88228c004bbf7288200f391381a232f34f1dc8aa5cff7c43f10e751d5427b",
   "url": [
    "https://cran.r-project.org/src/contrib/Archive/JuliaCall/JuliaCall_0.17.4.tar.gz",
    "https://cran.r-project.org/src/contrib/JuliaCall_0.17.4.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "$R -e \"library('JuliaCall')\""
   ]
  }
 },
 "version": "0.17.4"
}
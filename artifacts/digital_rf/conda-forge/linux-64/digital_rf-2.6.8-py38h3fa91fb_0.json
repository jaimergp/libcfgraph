{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.23.3",
  "conda_version": "22.9.0",
  "description": "The Digital RF project encompasses a standardized HDF5 format for reading\nand writing of radio frequency data and the software for doing so. The\nformat is designed to be self-documenting for data archive and to allow\nrapid random access for data processing. For details on the format, refer\nto the documentation.\n\nThis suite of software includes libraries for reading and writing data in\nthe Digital RF HDF5 format in C (``libdigital_rf``), Python\n(``digital_rf``) with blocks for GNU Radio (``gr_digital_rf``), and\nMATLAB. It also contains the `thor` UHD radio recorder script, Python\ntools for managing and processing Digital RF data, example scripts that\ndemonstrate basic usage, and example applications that encompass a\ncomplete data recording and processing chain for various use cases.\n",
  "dev_url": "https://github.com/MITHaystack/digital_rf",
  "doc_url": "https://github.com/MITHaystack/digital_rf/tree/master/docs",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "ryanvolz"
   ]
  },
  "home": "https://github.com/MITHaystack/digital_rf",
  "identifiers": [],
  "keywords": [],
  "license": "BSD-3-Clause",
  "license_family": "BSD",
  "license_file": "LICENSE",
  "root_pkgs": [
   "importlib-metadata 5.1.0 pyha770c72_0",
   "ncurses 6.3 h27087fc_1",
   "charset-normalizer 2.1.1 pyhd8ed1ab_0",
   "icu 70.1 h27087fc_0",
   "certifi 2022.9.24 pyhd8ed1ab_0",
   "zstd 1.5.2 h6239696_4",
   "reproc-cpp 14.2.3 h9c3ff4c_0",
   "rich 12.6.0 pyhd8ed1ab_0",
   "pyopenssl 22.1.0 pyhd8ed1ab_0",
   "lz4-c 1.9.3 h9c3ff4c_1",
   "commonmark 0.9.1 py_0",
   "libsqlite 3.40.0 h753d276_0",
   "python 3.10.8 h4a9ceb5_0_cpython",
   "ruamel.yaml.clib 0.2.7 py310h5764c6d_0",
   "conda-package-streaming 0.7.0 pyhd8ed1ab_1",
   "lzo 2.10 h516909a_1000",
   "expat 2.5.0 h27087fc_0",
   "_libgcc_mutex 0.1 conda_forge",
   "wcwidth 0.2.5 pyh9f0ad1d_2",
   "pycparser 2.21 pyhd8ed1ab_0",
   "pytz 2022.6 pyhd8ed1ab_0",
   "libiconv 1.17 h166bdaf_0",
   "bzip2 1.0.8 h7f98852_4",
   "brotlipy 0.7.0 py310h5764c6d_1005",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "fmt 9.1.0 h924138e_0",
   "prompt_toolkit 3.0.33 hd8ed1ab_0",
   "libuuid 2.32.1 h7f98852_1000",
   "ld_impl_linux-64 2.39 hcc3a1bd_1",
   "curl 7.86.0 h2283fc2_1",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "libxml2 2.10.3 h7463322_0",
   "chardet 5.1.0 py310hff52083_0",
   "libgcc-ng 12.2.0 h65d4601_19",
   "libssh2 1.10.0 hf14f497_3",
   "pygments 2.13.0 pyhd8ed1ab_0",
   "ca-certificates 2022.9.24 ha878542_0",
   "jinja2 3.1.2 pyhd8ed1ab_1",
   "glob2 0.7 py_0",
   "filelock 3.8.0 pyhd8ed1ab_0",
   "tini 0.19.0 h166bdaf_1",
   "python-fastjsonschema 2.16.2 pyhd8ed1ab_0",
   "libffi 3.4.2 h7f98852_5",
   "traitlets 5.6.0 pyhd8ed1ab_0",
   "libsolv 0.7.22 h6239696_0",
   "json5 0.9.5 pyh9f0ad1d_0",
   "clyent 1.2.2 py_1",
   "yaml-cpp 0.7.0 h27087fc_2",
   "wheel 0.38.4 pyhd8ed1ab_0",
   "toml 0.10.2 pyhd8ed1ab_0",
   "prompt-toolkit 3.0.33 pyha770c72_0",
   "pysocks 1.7.1 pyha2e5f31_6",
   "platformdirs 2.5.2 pyhd8ed1ab_1",
   "cffi 1.15.1 py310h255011f_2",
   "ripgrep 13.0.0 h2f28480_2",
   "pyyaml 6.0 py310h5764c6d_5",
   "psutil 5.9.4 py310h5764c6d_0",
   "_openmp_mutex 4.5 2_gnu",
   "yaml 0.2.5 h7f98852_2",
   "readline 8.1.2 h0f457ee_0",
   "backports 1.0 pyhd8ed1ab_3",
   "pycosat 0.6.4 py310h5764c6d_1",
   "anaconda-client 1.11.0 pyhd8ed1ab_1",
   "pkginfo 1.9.2 pyhd8ed1ab_0",
   "pkgutil-resolve-name 1.3.10 pyhd8ed1ab_0",
   "keyutils 1.6.1 h166bdaf_0",
   "libmamba 1.0.0 h9eff5f0_2",
   "python_abi 3.10 3_cp310",
   "xz 5.2.6 h166bdaf_0",
   "libzlib 1.2.13 h166bdaf_4",
   "colorama 0.4.6 pyhd8ed1ab_0",
   "c-ares 1.18.1 h7f98852_0",
   "joblib 1.2.0 pyhd8ed1ab_0",
   "typing_extensions 4.4.0 pyha770c72_0",
   "zstandard 0.19.0 py310hdeb6495_1",
   "setuptools 65.5.1 pyhd8ed1ab_0",
   "git 2.38.1 pl5321h8df7355_1",
   "gettext 0.21.1 h27087fc_0",
   "ruamel.yaml 0.17.21 py310h5764c6d_2",
   "sniffio 1.3.0 pyhd8ed1ab_0",
   "six 1.16.0 pyh6c4a22f_0",
   "conda 22.9.0 py310hff52083_2",
   "nbformat 5.7.0 pyhd8ed1ab_0",
   "pip 22.3.1 pyhd8ed1ab_0",
   "patchelf 0.17.0 h58526e2_0",
   "libnghttp2 1.47.0 hff17c54_1",
   "dataclasses 0.8 pyhc8e2a94_3",
   "patch 2.7.6 h7f98852_1002",
   "zipp 3.11.0 pyhd8ed1ab_0",
   "pcre2 10.40 hc3806b6_0",
   "mamba 1.0.0 py310h51d5547_2",
   "jupyter_core 5.1.0 py310hff52083_0",
   "cryptography 38.0.4 py310h600f1e7_0",
   "libedit 3.1.20191231 he28a2e2_2",
   "su-exec 0.2 h166bdaf_1003",
   "soupsieve 2.3.2.post1 pyhd8ed1ab_0",
   "libgomp 12.2.0 h65d4601_19",
   "tqdm 4.64.1 pyhd8ed1ab_0",
   "jsonschema 4.17.3 pyhd8ed1ab_0",
   "toolz 0.12.0 pyhd8ed1ab_0",
   "tzdata 2022g h191b570_0",
   "libarchive 3.5.2 hada088e_3",
   "python-libarchive-c 4.0 py310hff52083_2",
   "perl 5.32.1 2_h7f98852_perl5",
   "beautifulsoup4 4.11.1 pyha770c72_0",
   "libnsl 2.0.0 h7f98852_0",
   "tk 8.6.12 h27826a3_0",
   "importlib_resources 5.10.0 pyhd8ed1ab_0",
   "pybind11-abi 4 hd8ed1ab_3",
   "urllib3 1.26.13 pyhd8ed1ab_0",
   "markupsafe 2.1.1 py310h5764c6d_2",
   "watchgod 0.8.2 pyhd8ed1ab_0",
   "idna 3.4 pyhd8ed1ab_0",
   "pyrsistent 0.19.2 py310h5764c6d_0",
   "requests 2.28.1 pyhd8ed1ab_1",
   "libcurl 7.86.0 h2283fc2_1",
   "libmambapy 1.0.0 py310hd5a56e8_2",
   "conda-package-handling 2.0.2 pyh38be061_0",
   "future 0.18.2 pyhd8ed1ab_6",
   "libstdcxx-ng 12.2.0 h46fd767_19",
   "libev 4.33 h516909a_1",
   "anyio 3.6.2 pyhd8ed1ab_0",
   "krb5 1.19.3 h08a2579_0",
   "ruamel_yaml 0.15.80 py310h5764c6d_1008",
   "reproc 14.2.3 h7f98852_0",
   "attrs 22.1.0 pyh71513ae_1",
   "conda-env 2.6.0 1",
   "conda-build 3.23.3 py310hff52083_0",
   "click 8.1.3 unix_pyhd8ed1ab_2",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "jq 1.6 h36c2ea0_1000",
   "py-lief 0.11.5 py310h122e73d_1",
   "openssl 3.0.7 h0b41bf4_1",
   "oniguruma 6.9.8 h166bdaf_0",
   "conda-forge-ci-setup 3.24.6 py310hce54274_100",
   "liblief 0.11.5 h9c3ff4c_1",
   "boa 0.14.0 pyhd8ed1ab_0"
  ],
  "summary": "Work with data in the Digital RF and Digital Metadata formats.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "c_compiler_version": "11",
  "cdt_name": "cos6",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "docker_image": "quay.io/condaforge/linux-anvil-cos7-x86_64",
  "extend_keys": [
   "ignore_build_only_deps",
   "ignore_version",
   "pin_run_as_build",
   "extend_keys"
  ],
  "fortran_compiler": "gfortran",
  "gnuradio_core": "3.10.4",
  "hdf5": "1.12.2",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "numpy": "1.20",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.8.* *_cpython",
  "r_base": "3.5",
  "target_platform": "linux-64",
  "zip_keys": [
   [
    "python",
    "numpy"
   ]
  ]
 },
 "conda_pkg_format": "2",
 "files": [
  "bin/digital_metadata_archive.py",
  "bin/digital_rf_archive.py",
  "bin/digital_rf_upconvert.py",
  "bin/digital_rf_update_properties.py",
  "bin/drf",
  "bin/drf_cross_sti.py",
  "bin/drf_plot.py",
  "bin/drf_sound.py",
  "bin/drf_sti.py",
  "bin/thor.py",
  "bin/thorosmo.py",
  "bin/thorpluto.py",
  "bin/uhdtodrf.py",
  "bin/verify_digital_rf_upconvert.py",
  "include/digital_rf/digital_rf.h",
  "include/digital_rf/digital_rf_version.h",
  "lib/cmake/libdigital_rf/libdigital_rfConfig.cmake",
  "lib/cmake/libdigital_rf/libdigital_rfConfigVersion.cmake",
  "lib/cmake/libdigital_rf/libdigital_rfTargets-release.cmake",
  "lib/cmake/libdigital_rf/libdigital_rfTargets.cmake",
  "lib/libdigital_rf.so",
  "lib/libdigital_rf.so.2",
  "lib/libdigital_rf.so.2.6.0",
  "lib/pkgconfig/digital_rf.pc",
  "lib/python3.8/site-packages/digital_rf-2.6.8-py3.8.egg-info/PKG-INFO",
  "lib/python3.8/site-packages/digital_rf/__init__.py",
  "lib/python3.8/site-packages/digital_rf/_py_rf_write_hdf5.cpython-38-x86_64-linux-gnu.so",
  "lib/python3.8/site-packages/digital_rf/_version.py",
  "lib/python3.8/site-packages/digital_rf/digital_metadata.py",
  "lib/python3.8/site-packages/digital_rf/digital_rf_deprecated_hdf5.py",
  "lib/python3.8/site-packages/digital_rf/digital_rf_hdf5.py",
  "lib/python3.8/site-packages/digital_rf/drf_command.py",
  "lib/python3.8/site-packages/digital_rf/list_drf.py",
  "lib/python3.8/site-packages/digital_rf/mirror.py",
  "lib/python3.8/site-packages/digital_rf/ringbuffer.py",
  "lib/python3.8/site-packages/digital_rf/util.py",
  "lib/python3.8/site-packages/digital_rf/watchdog_drf.py",
  "lib/python3.8/site-packages/gr_digital_rf/__init__.py",
  "lib/python3.8/site-packages/gr_digital_rf/digital_rf_sink.py",
  "lib/python3.8/site-packages/gr_digital_rf/digital_rf_source.py",
  "lib/python3.8/site-packages/gr_digital_rf/raster.py",
  "lib/python3.8/site-packages/gr_digital_rf/vector.py",
  "share/doc/digital_rf_project/DigitalRF2.0.pdf",
  "share/gnuradio/grc/blocks/gr_digital_rf.tree.yml",
  "share/gnuradio/grc/blocks/gr_digital_rf_digital_rf_channel_sink.block.yml",
  "share/gnuradio/grc/blocks/gr_digital_rf_digital_rf_channel_sink.xml",
  "share/gnuradio/grc/blocks/gr_digital_rf_digital_rf_channel_source.block.yml",
  "share/gnuradio/grc/blocks/gr_digital_rf_digital_rf_channel_source.xml",
  "share/gnuradio/grc/blocks/gr_digital_rf_digital_rf_sink.block.yml",
  "share/gnuradio/grc/blocks/gr_digital_rf_digital_rf_sink.xml",
  "share/gnuradio/grc/blocks/gr_digital_rf_digital_rf_source.block.yml",
  "share/gnuradio/grc/blocks/gr_digital_rf_digital_rf_source.xml",
  "share/gnuradio/grc/blocks/gr_digital_rf_raster_aggregate.block.yml",
  "share/gnuradio/grc/blocks/gr_digital_rf_raster_aggregate.xml",
  "share/gnuradio/grc/blocks/gr_digital_rf_raster_chunk.block.yml",
  "share/gnuradio/grc/blocks/gr_digital_rf_raster_chunk.xml",
  "share/gnuradio/grc/blocks/gr_digital_rf_raster_select.block.yml",
  "share/gnuradio/grc/blocks/gr_digital_rf_raster_select.xml",
  "share/gnuradio/grc/blocks/gr_digital_rf_raster_tag.block.yml",
  "share/gnuradio/grc/blocks/gr_digital_rf_raster_tag.xml",
  "share/gnuradio/grc/blocks/gr_digital_rf_vector_aggregate.block.yml",
  "share/gnuradio/grc/blocks/gr_digital_rf_vector_aggregate.xml"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py38h3fa91fb_0",
  "build_number": 0,
  "depends": [
   "h5py",
   "hdf5 >=1.12.2,<1.12.3.0a0",
   "libgcc-ng >=12",
   "numpy >=1.20.3,<2.0a0",
   "packaging",
   "python >=3.8,<3.9.0a0",
   "python-dateutil",
   "python_abi 3.8.* *_cp38",
   "pytz",
   "six",
   "watchdog"
  ],
  "license": "BSD-3-Clause",
  "license_family": "BSD",
  "name": "digital_rf",
  "platform": "linux",
  "subdir": "linux-64",
  "timestamp": 1670453197942,
  "version": "2.6.8"
 },
 "metadata_version": 1,
 "name": "digital_rf",
 "raw_recipe": "{% set version = \"2.6.8\" %}\n\npackage:\n  name: digital_rf\n  version: {{ version }}\n\nsource:\n  url: https://github.com/MITHaystack/digital_rf/releases/download/{{ version }}/digital_rf-{{ version }}.tar.gz\n  sha256: 62fd998abbdffcf406524d66a54385cede270349af695b0b0e9e24c0488ac5a0\n\nbuild:\n  number: 0\n  # there are dependency conflicts for Python 2 on Windows\n  skip: true  # [win and py2k]\n  run_exports:\n    - {{ pin_subpackage('digital_rf') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - cmake >=3.15\n    - make  # [not win]\n    # cross-compilation dependencies\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n\n  host:\n    - hdf5\n    - mako\n    - numpy\n    - pkgconfig\n    - python\n    - setuptools\n\n  run:\n    - h5py\n    - hdf5\n    - {{ pin_compatible('numpy') }}\n    - packaging\n    - python\n    - python-dateutil\n    - pytz\n    - six\n    - watchdog\n\ntest:\n  requires:\n    - gnuradio-core\n    - pytest >=3.6\n  imports:\n    - digital_rf\n    - digital_rf.digital_rf_hdf5\n    - gr_digital_rf\n  source_files:\n    - python/tests/*.py\n    - python/examples/*.py\n  commands:\n    - pytest\n    - python python/examples/example_write_digital_metadata.py\n    - python python/examples/example_read_digital_metadata.py\n\nabout:\n  home: https://github.com/MITHaystack/digital_rf\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: Work with data in the Digital RF and Digital Metadata formats.\n  description: |\n    The Digital RF project encompasses a standardized HDF5 format for reading\n    and writing of radio frequency data and the software for doing so. The\n    format is designed to be self-documenting for data archive and to allow\n    rapid random access for data processing. For details on the format, refer\n    to the documentation.\n\n    This suite of software includes libraries for reading and writing data in\n    the Digital RF HDF5 format in C (``libdigital_rf``), Python\n    (``digital_rf``) with blocks for GNU Radio (``gr_digital_rf``), and\n    MATLAB. It also contains the `thor` UHD radio recorder script, Python\n    tools for managing and processing Digital RF data, example scripts that\n    demonstrate basic usage, and example applications that encompass a\n    complete data recording and processing chain for various use cases.\n\n  doc_url: https://github.com/MITHaystack/digital_rf/tree/master/docs\n  dev_url: https://github.com/MITHaystack/digital_rf\n\nextra:\n  recipe-maintainers:\n    - ryanvolz\n",
 "rendered_recipe": {
  "about": {
   "description": "The Digital RF project encompasses a standardized HDF5 format for reading\nand writing of radio frequency data and the software for doing so. The\nformat is designed to be self-documenting for data archive and to allow\nrapid random access for data processing. For details on the format, refer\nto the documentation.\n\nThis suite of software includes libraries for reading and writing data in\nthe Digital RF HDF5 format in C (``libdigital_rf``), Python\n(``digital_rf``) with blocks for GNU Radio (``gr_digital_rf``), and\nMATLAB. It also contains the `thor` UHD radio recorder script, Python\ntools for managing and processing Digital RF data, example scripts that\ndemonstrate basic usage, and example applications that encompass a\ncomplete data recording and processing chain for various use cases.\n",
   "dev_url": "https://github.com/MITHaystack/digital_rf",
   "doc_url": "https://github.com/MITHaystack/digital_rf/tree/master/docs",
   "home": "https://github.com/MITHaystack/digital_rf",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Work with data in the Digital RF and Digital Metadata formats."
  },
  "build": {
   "number": "0",
   "run_exports": [
    "digital_rf >=2.6.8,<3.0a0"
   ],
   "string": "py38h3fa91fb_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "ryanvolz"
   ]
  },
  "package": {
   "name": "digital_rf",
   "version": "2.6.8"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 2_gnu",
    "binutils_impl_linux-64 2.39 he00db2b_1",
    "binutils_linux-64 2.39 h5fc0e48_11",
    "bzip2 1.0.8 h7f98852_4",
    "c-ares 1.18.1 h7f98852_0",
    "ca-certificates 2022.9.24 ha878542_0",
    "cmake 3.25.1 h816a3e0_0",
    "expat 2.5.0 h27087fc_0",
    "gcc_impl_linux-64 11.3.0 hab1b70f_19",
    "gcc_linux-64 11.3.0 he6f903b_11",
    "kernel-headers_linux-64 2.6.32 he073ed8_15",
    "keyutils 1.6.1 h166bdaf_0",
    "krb5 1.19.3 h08a2579_0",
    "ld_impl_linux-64 2.39 hcc3a1bd_1",
    "libcurl 7.86.0 h2283fc2_1",
    "libedit 3.1.20191231 he28a2e2_2",
    "libev 4.33 h516909a_1",
    "libgcc-devel_linux-64 11.3.0 h210ce93_19",
    "libgcc-ng 12.2.0 h65d4601_19",
    "libgomp 12.2.0 h65d4601_19",
    "libnghttp2 1.47.0 hff17c54_1",
    "libsanitizer 11.3.0 h239ccf8_19",
    "libssh2 1.10.0 hf14f497_3",
    "libstdcxx-ng 12.2.0 h46fd767_19",
    "libuv 1.44.2 h166bdaf_0",
    "libzlib 1.2.13 h166bdaf_4",
    "make 4.3 hd18ef5c_1",
    "ncurses 6.3 h27087fc_1",
    "openssl 3.0.7 h0b41bf4_1",
    "rhash 1.4.3 h166bdaf_0",
    "sysroot_linux-64 2.12 he073ed8_15",
    "xz 5.2.6 h166bdaf_0",
    "zlib 1.2.13 h166bdaf_4",
    "zstd 1.5.2 h6239696_4"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 2_gnu",
    "bzip2 1.0.8 h7f98852_4",
    "c-ares 1.18.1 h7f98852_0",
    "ca-certificates 2022.9.24 ha878542_0",
    "hdf5 1.12.2 nompi_h4df4325_100",
    "importlib-metadata 5.1.0 pyha770c72_0",
    "keyutils 1.6.1 h166bdaf_0",
    "krb5 1.19.3 h08a2579_0",
    "ld_impl_linux-64 2.39 hcc3a1bd_1",
    "libblas 3.9.0 16_linux64_openblas",
    "libcblas 3.9.0 16_linux64_openblas",
    "libcurl 7.86.0 h2283fc2_1",
    "libedit 3.1.20191231 he28a2e2_2",
    "libev 4.33 h516909a_1",
    "libffi 3.4.2 h7f98852_5",
    "libgcc-ng 12.2.0 h65d4601_19",
    "libgfortran-ng 12.2.0 h69a702a_19",
    "libgfortran5 12.2.0 h337968e_19",
    "libgomp 12.2.0 h65d4601_19",
    "liblapack 3.9.0 16_linux64_openblas",
    "libnghttp2 1.47.0 hff17c54_1",
    "libnsl 2.0.0 h7f98852_0",
    "libopenblas 0.3.21 pthreads_h78a6416_3",
    "libsqlite 3.40.0 h753d276_0",
    "libssh2 1.10.0 hf14f497_3",
    "libstdcxx-ng 12.2.0 h46fd767_19",
    "libuuid 2.32.1 h7f98852_1000",
    "libzlib 1.2.13 h166bdaf_4",
    "mako 1.2.4 pyhd8ed1ab_0",
    "markupsafe 2.1.1 py38h0a891b7_2",
    "ncurses 6.3 h27087fc_1",
    "numpy 1.20.3 py38h8246c76_2",
    "openssl 3.0.7 h0b41bf4_1",
    "pkg-config 0.29.2 h36c2ea0_1008",
    "pkgconfig 1.5.5 pyhd8ed1ab_4",
    "python 3.8.15 h4a9ceb5_0_cpython",
    "python_abi 3.8 3_cp38",
    "readline 8.1.2 h0f457ee_0",
    "setuptools 65.5.1 pyhd8ed1ab_0",
    "tk 8.6.12 h27826a3_0",
    "xz 5.2.6 h166bdaf_0",
    "zipp 3.11.0 pyhd8ed1ab_0"
   ],
   "run": [
    "h5py",
    "hdf5 >=1.12.2,<1.12.3.0a0",
    "libgcc-ng >=12",
    "numpy >=1.20.3,<2.0a0",
    "packaging",
    "python >=3.8,<3.9.0a0",
    "python-dateutil",
    "python_abi 3.8.* *_cp38",
    "pytz",
    "six",
    "watchdog"
   ]
  },
  "source": {
   "sha256": "62fd998abbdffcf406524d66a54385cede270349af695b0b0e9e24c0488ac5a0",
   "url": "https://github.com/MITHaystack/digital_rf/releases/download/2.6.8/digital_rf-2.6.8.tar.gz"
  },
  "test": {
   "commands": [
    "pytest",
    "python python/examples/example_write_digital_metadata.py",
    "python python/examples/example_read_digital_metadata.py"
   ],
   "imports": [
    "digital_rf",
    "digital_rf.digital_rf_hdf5",
    "gr_digital_rf"
   ],
   "requires": [
    "gnuradio-core",
    "pytest >=3.6"
   ],
   "source_files": [
    "python/examples/*.py",
    "python/tests/*.py"
   ]
  }
 },
 "version": "2.6.8"
}
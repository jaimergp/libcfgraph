{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.21.9",
  "conda_private": false,
  "conda_version": "4.13.0",
  "description": "This plugin implements the Alchemical Transfer Potential (ATM) for the calculation\nof absolute and relative binding free energies of molecular complexes\nin OpenMM, a high performance toolkit for molecular simulation.\n",
  "dev_url": "https://github.com/Gallicchio-Lab/openmm-atmmetaforce-plugin.git",
  "doc_url": "https://github.com/Gallicchio-Lab/async_re-openmm/tree/master/examples",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "egallicc"
   ]
  },
  "home": "https://github.com/Gallicchio-Lab/openmm-atmmetaforce-plugin.git",
  "identifiers": [],
  "keywords": [],
  "license": "LGPL-2.0-only",
  "license_family": "LGPL",
  "license_file": [
   "LICENSE"
  ],
  "root_pkgs": [
   "pyrsistent 0.18.1 py39hb9d737c_1",
   "conda-package-handling 1.8.1 py39hb9d737c_1",
   "expat 2.4.8 h27087fc_0",
   "pybind11-abi 4 hd8ed1ab_3",
   "pyopenssl 22.0.0 pyhd8ed1ab_0",
   "xz 5.2.5 h516909a_1",
   "py-lief 0.11.5 py39he80948d_1",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "pysocks 1.7.1 py39hf3d152e_5",
   "krb5 1.19.3 h3790be6_0",
   "attrs 21.4.0 pyhd8ed1ab_0",
   "jinja2 3.1.2 pyhd8ed1ab_1",
   "git 2.35.3 pl5321h36853c3_0",
   "wheel 0.37.1 pyhd8ed1ab_0",
   "python_abi 3.9 2_cp39",
   "cffi 1.15.0 py39h4bc2ebd_0",
   "markupsafe 2.1.1 py39hb9d737c_1",
   "anyio 3.6.1 py39hf3d152e_0",
   "bzip2 1.0.8 h7f98852_4",
   "filelock 3.7.1 pyhd8ed1ab_0",
   "requests 2.28.0 pyhd8ed1ab_0",
   "conda 4.13.0 py39hf3d152e_1",
   "openssl 1.1.1o h166bdaf_0",
   "future 0.18.2 py39hf3d152e_5",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "libmamba 0.24.0 hd8a31e3_1",
   "pyyaml 6.0 py39hb9d737c_4",
   "pkginfo 1.8.3 pyhd8ed1ab_0",
   "reproc 14.2.3 h7f98852_0",
   "libgcc-ng 12.1.0 h8d9b700_16",
   "json5 0.9.5 pyh9f0ad1d_0",
   "backports 1.0 py_2",
   "zipp 3.8.0 pyhd8ed1ab_0",
   "icu 70.1 h27087fc_0",
   "importlib-metadata 4.11.4 py39hf3d152e_0",
   "traitlets 5.2.2.post1 pyhd8ed1ab_0",
   "six 1.16.0 pyh6c4a22f_0",
   "cryptography 37.0.2 py39hd97740a_0",
   "watchgod 0.8.2 pyhd8ed1ab_0",
   "rich 12.4.4 pyhd8ed1ab_0",
   "libgomp 12.1.0 h8d9b700_16",
   "sqlite 3.38.5 h4ff8645_0",
   "zlib 1.2.12 h166bdaf_0",
   "python-libarchive-c 4.0 py39hf3d152e_1",
   "python-fastjsonschema 2.15.3 pyhd8ed1ab_0",
   "reproc-cpp 14.2.3 h9c3ff4c_0",
   "beautifulsoup4 4.11.1 pyha770c72_0",
   "libcurl 7.83.1 h7bff187_0",
   "pip 22.1.2 pyhd8ed1ab_0",
   "tqdm 4.64.0 pyhd8ed1ab_0",
   "libsolv 0.7.22 h6239696_0",
   "perl 5.32.1 2_h7f98852_perl5",
   "libnghttp2 1.47.0 h727a467_0",
   "c-ares 1.18.1 h7f98852_0",
   "libmambapy 0.24.0 py39hd55135b_1",
   "ruamel.yaml.clib 0.2.6 py39hb9d737c_1",
   "lz4-c 1.9.3 h9c3ff4c_1",
   "wcwidth 0.2.5 pyh9f0ad1d_2",
   "importlib_resources 5.7.1 pyhd8ed1ab_1",
   "su-exec 0.2 h516909a_1002",
   "curl 7.83.1 h7bff187_0",
   "clyent 1.2.2 py_1",
   "libstdcxx-ng 12.1.0 ha89aaad_16",
   "libzlib 1.2.12 h166bdaf_0",
   "commonmark 0.9.1 py_0",
   "charset-normalizer 2.0.12 pyhd8ed1ab_0",
   "_openmp_mutex 4.5 2_gnu",
   "brotlipy 0.7.0 py39hb9d737c_1004",
   "keyutils 1.6.1 h166bdaf_0",
   "yaml-cpp 0.7.0 h27087fc_1",
   "jsonschema 4.6.0 pyhd8ed1ab_0",
   "patch 2.7.6 h7f98852_1002",
   "tini 0.19.0 h7f98852_0",
   "mamba 0.24.0 py39hfa8f2c8_1",
   "ruamel_yaml 0.15.80 py39hb9d737c_1007",
   "ncurses 6.3 h27087fc_1",
   "jupyter_core 4.10.0 py39hf3d152e_0",
   "ruamel.yaml 0.17.21 py39hb9d737c_1",
   "chardet 4.0.0 py39hf3d152e_3",
   "urllib3 1.26.9 pyhd8ed1ab_0",
   "libssh2 1.10.0 ha56f1ee_2",
   "sniffio 1.2.0 py39hf3d152e_3",
   "libffi 3.4.2 h7f98852_5",
   "libuuid 2.32.1 h7f98852_1000",
   "boa 0.11.0 pyha770c72_1",
   "glob2 0.7 py_0",
   "libedit 3.1.20191231 he28a2e2_2",
   "idna 3.3 pyhd8ed1ab_0",
   "zstd 1.5.2 h8a70e8d_1",
   "pytz 2022.1 pyhd8ed1ab_0",
   "pycosat 0.6.3 py39hb9d737c_1010",
   "yaml 0.2.5 h7f98852_2",
   "setuptools 62.3.4 py39hf3d152e_0",
   "pygments 2.12.0 pyhd8ed1ab_0",
   "nbformat 5.4.0 pyhd8ed1ab_0",
   "dataclasses 0.8 pyhc8e2a94_3",
   "lzo 2.10 h516909a_1000",
   "pcre2 10.37 h032f7d1_0",
   "tk 8.6.12 h27826a3_0",
   "libnsl 2.0.0 h7f98852_0",
   "anaconda-client 1.8.0 pyhd8ed1ab_0",
   "joblib 1.1.0 pyhd8ed1ab_0",
   "libarchive 3.5.2 hb890918_2",
   "ripgrep 13.0.0 h2f28480_2",
   "libxml2 2.9.14 h22db469_0",
   "typing_extensions 4.2.0 pyha770c72_1",
   "soupsieve 2.3.1 pyhd8ed1ab_0",
   "tzdata 2022a h191b570_0",
   "gettext 0.19.8.1 h73d1719_1008",
   "psutil 5.9.1 py39hb9d737c_0",
   "python 3.9.13 h9a8a25e_0_cpython",
   "colorama 0.4.4 pyh9f0ad1d_0",
   "prompt_toolkit 3.0.29 hd8ed1ab_0",
   "pycparser 2.21 pyhd8ed1ab_0",
   "liblief 0.11.5 h9c3ff4c_1",
   "readline 8.1.2 h0f457ee_0",
   "prompt-toolkit 3.0.29 pyha770c72_0",
   "_libgcc_mutex 0.1 conda_forge",
   "patchelf 0.14.5 h58526e2_0",
   "libev 4.33 h516909a_1",
   "conda-build 3.21.9 py39hf3d152e_0",
   "libiconv 1.16 h516909a_0",
   "ld_impl_linux-64 2.36.1 hea4e1c9_2",
   "conda-forge-ci-setup 3.21.0 py39h69ce9fc_100",
   "jq 1.6 h36c2ea0_1000",
   "ca-certificates 2022.6.15 ha878542_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "click 8.1.3 py39hf3d152e_0",
   "certifi 2022.6.15 py39hf3d152e_0",
   "conda-env 2.6.0 1",
   "oniguruma 6.9.8 h166bdaf_0"
  ],
  "summary": "The Alchemical Transfer Method Plugin for OpenMM",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "c_compiler_version": "10",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cuda_compiler": "nvcc",
  "cuda_compiler_version": "11.2",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "10",
  "docker_image": "quay.io/condaforge/linux-anvil-cuda:11.2",
  "extend_keys": [
   "pin_run_as_build",
   "ignore_build_only_deps",
   "ignore_version",
   "extend_keys"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.10.* *_cpython",
  "r_base": "3.5",
  "target_platform": "linux-64",
  "zip_keys": [
   [
    "c_compiler_version",
    "cxx_compiler_version",
    "cuda_compiler_version",
    "cdt_name",
    "docker_image"
   ]
  ]
 },
 "files": [
  "include/ATMMetaForce.h",
  "include/ATMMetaForceKernels.h",
  "include/ATMMetaForceVersion.h",
  "include/internal/ATMMetaForceImpl.h",
  "include/internal/windowsExportATMMetaForce.h",
  "lib/libATMMetaForcePlugin.so",
  "lib/libATMMetaForcePluginCUDA.so",
  "lib/libATMMetaForcePluginOpenCL.so",
  "lib/libATMMetaForcePluginReference.so",
  "lib/plugins/libATMMetaForcePluginCUDA.so",
  "lib/plugins/libATMMetaForcePluginOpenCL.so",
  "lib/plugins/libATMMetaForcePluginReference.so",
  "lib/python3.10/site-packages/_atmmetaforce.cpython-310-x86_64-linux-gnu.so",
  "lib/python3.10/site-packages/atmmetaforce-0.3-py3.10.egg-info",
  "lib/python3.10/site-packages/atmmetaforce.py"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py310hbe3ad0c_0",
  "build_number": 0,
  "depends": [
   "__glibc >=2.17",
   "cudatoolkit >=11.2,<12",
   "libgcc-ng >=12",
   "libstdcxx-ng >=12",
   "numpy",
   "openmm >=7.7.0,<8.0a0",
   "python >=3.10,<3.11.0a0",
   "python_abi 3.10.* *_cp310"
  ],
  "license": "LGPL-2.0-only",
  "license_family": "LGPL",
  "name": "openmm-atmmetaforce-plugin",
  "platform": "linux",
  "subdir": "linux-64",
  "timestamp": 1655518685855,
  "version": "0.3.0"
 },
 "metadata_version": 1,
 "name": "openmm-atmmetaforce-plugin",
 "raw_recipe": "{% set name = \"openmm-atmmetaforce-plugin\" %}\n{% set version = \"0.3.0\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/Gallicchio-Lab/{{ name }}/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: d63f7cb8cbfd82d00058abc4cd598ce8e5a989ff2e9efec1674aa26661a7f341\n\nbuild:\n  number: 0\n  skip: true  # [not linux64]\n  skip: true  # [cuda_compiler_version in (undefined, 'None')]\n  run_exports:\n    # TODO: Relax max_pin at version 1.0 / stable API\n    - {{ pin_subpackage(name, max_pin='x.x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}  # [linux]\n    - cmake\n    - swig\n\n  host:\n    - python\n    - openmm\n    - pthread-stubs\n    - lxml\n    \n  run:\n    - python\n    - numpy\n    # openmm package is missing a run_export as of 9 June 2022\n    - {{ pin_compatible('openmm') }}\n\ntest:\n  requires:\n    - pocl  # [unix]\n    - pip\n  imports:\n    - simtk\n    - openmm\n    - numpy\n  commands:\n    - pip check\n    - test -f $PREFIX/lib/plugins/libATMMetaForcePluginCUDA$SHLIB_EXT  # [unix]\n    - test -f $PREFIX/lib/plugins/libATMMetaForcePluginOpenCL$SHLIB_EXT  # [unix]\n    - test -f $PREFIX/lib/plugins/libATMMetaForcePluginReference$SHLIB_EXT  # [unix]\n    - test -f $PREFIX/include/ATMMetaForce.h  # [unix]\n    - test -f $PREFIX/include/internal/ATMMetaForceImpl.h  # [unix]\n\nabout:\n  home: https://github.com/Gallicchio-Lab/openmm-atmmetaforce-plugin.git\n  license: LGPL-2.0-only\n  license_family: LGPL\n  license_file:\n    - LICENSE\n  summary: The Alchemical Transfer Method Plugin for OpenMM\n  description: |\n     This plugin implements the Alchemical Transfer Potential (ATM) for the calculation\n     of absolute and relative binding free energies of molecular complexes\n     in OpenMM, a high performance toolkit for molecular simulation.\n  doc_url: https://github.com/Gallicchio-Lab/async_re-openmm/tree/master/examples\n  dev_url: https://github.com/Gallicchio-Lab/openmm-atmmetaforce-plugin.git\n\nextra:\n  recipe-maintainers:\n    - egallicc\n",
 "rendered_recipe": {
  "about": {
   "description": "This plugin implements the Alchemical Transfer Potential (ATM) for the calculation\nof absolute and relative binding free energies of molecular complexes\nin OpenMM, a high performance toolkit for molecular simulation.\n",
   "dev_url": "https://github.com/Gallicchio-Lab/openmm-atmmetaforce-plugin.git",
   "doc_url": "https://github.com/Gallicchio-Lab/async_re-openmm/tree/master/examples",
   "home": "https://github.com/Gallicchio-Lab/openmm-atmmetaforce-plugin.git",
   "license": "LGPL-2.0-only",
   "license_family": "LGPL",
   "license_file": [
    "LICENSE"
   ],
   "summary": "The Alchemical Transfer Method Plugin for OpenMM"
  },
  "build": {
   "number": "0",
   "run_exports": [
    "openmm-atmmetaforce-plugin >=0.3.0,<0.3.1.0a0"
   ],
   "string": "py310hbe3ad0c_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "egallicc"
   ]
  },
  "package": {
   "name": "openmm-atmmetaforce-plugin",
   "version": "0.3.0"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 2_gnu",
    "_sysroot_linux-64_curr_repodata_hack 3 h5bd9786_13",
    "binutils_impl_linux-64 2.36.1 h193b22a_2",
    "binutils_linux-64 2.36 hf3e587d_10",
    "bzip2 1.0.8 h7f98852_4",
    "c-ares 1.18.1 h7f98852_0",
    "ca-certificates 2022.6.15 ha878542_0",
    "cmake 3.23.2 h5432695_0",
    "expat 2.4.8 h27087fc_0",
    "gcc_impl_linux-64 10.3.0 hf2f2afa_16",
    "gcc_linux-64 10.3.0 hc39de41_10",
    "gxx_impl_linux-64 10.3.0 hf2f2afa_16",
    "gxx_linux-64 10.3.0 h2593f52_10",
    "kernel-headers_linux-64 3.10.0 h4a8ded7_13",
    "keyutils 1.6.1 h166bdaf_0",
    "krb5 1.19.3 h08a2579_0",
    "ld_impl_linux-64 2.36.1 hea4e1c9_2",
    "libcurl 7.83.1 h2283fc2_0",
    "libedit 3.1.20191231 he28a2e2_2",
    "libev 4.33 h516909a_1",
    "libgcc-devel_linux-64 10.3.0 he6cfe16_16",
    "libgcc-ng 12.1.0 h8d9b700_16",
    "libgomp 12.1.0 h8d9b700_16",
    "libnghttp2 1.47.0 he49606f_0",
    "libsanitizer 10.3.0 h26c7422_16",
    "libssh2 1.10.0 ha35d2d1_2",
    "libstdcxx-devel_linux-64 10.3.0 he6cfe16_16",
    "libstdcxx-ng 12.1.0 ha89aaad_16",
    "libuv 1.43.0 h7f98852_0",
    "libzlib 1.2.12 h166bdaf_1",
    "lz4-c 1.9.3 h9c3ff4c_1",
    "ncurses 6.3 h27087fc_1",
    "nvcc_linux-64 11.2 h309498c_19",
    "openssl 3.0.3 h166bdaf_0",
    "pcre 8.45 h9c3ff4c_0",
    "rhash 1.4.3 h166bdaf_0",
    "sed 4.8 he412f7d_0",
    "swig 4.0.2 hd3c618e_2",
    "sysroot_linux-64 2.17 h4a8ded7_13",
    "xz 5.2.5 h516909a_1",
    "zlib 1.2.12 h166bdaf_1",
    "zstd 1.5.2 h8a70e8d_1"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 2_gnu",
    "bzip2 1.0.8 h7f98852_4",
    "ca-certificates 2022.6.15 ha878542_0",
    "cudatoolkit 11.7.0 hd8887f6_10",
    "fftw 3.3.10 nompi_h77c792f_102",
    "icu 70.1 h27087fc_0",
    "ld_impl_linux-64 2.36.1 hea4e1c9_2",
    "libblas 3.9.0 15_linux64_openblas",
    "libcblas 3.9.0 15_linux64_openblas",
    "libffi 3.4.2 h7f98852_5",
    "libgcc-ng 12.1.0 h8d9b700_16",
    "libgfortran-ng 12.1.0 h69a702a_16",
    "libgfortran5 12.1.0 hdcd56e2_16",
    "libgomp 12.1.0 h8d9b700_16",
    "libiconv 1.16 h516909a_0",
    "liblapack 3.9.0 15_linux64_openblas",
    "libnsl 2.0.0 h7f98852_0",
    "libopenblas 0.3.20 pthreads_h78a6416_0",
    "libstdcxx-ng 12.1.0 ha89aaad_16",
    "libuuid 2.32.1 h7f98852_1000",
    "libxml2 2.9.14 h22db469_0",
    "libxslt 1.1.35 h8affb1d_0",
    "libzlib 1.2.12 h166bdaf_1",
    "lxml 4.9.0 py310h5764c6d_0",
    "ncurses 6.3 h27087fc_1",
    "numpy 1.22.4 py310h4ef5377_0",
    "ocl-icd 2.3.1 h7f98852_0",
    "ocl-icd-system 1.0.0 1",
    "openmm 7.7.0 py310hccf1d78_1",
    "openssl 3.0.3 h166bdaf_0",
    "pthread-stubs 0.4 h36c2ea0_1001",
    "python 3.10.5 ha86cf86_0_cpython",
    "python_abi 3.10 2_cp310",
    "readline 8.1.2 h0f457ee_0",
    "sqlite 3.38.5 h4ff8645_0",
    "tk 8.6.12 h27826a3_0",
    "tzdata 2022a h191b570_0",
    "xz 5.2.5 h516909a_1",
    "zlib 1.2.12 h166bdaf_1"
   ],
   "run": [
    "__glibc >=2.17",
    "cudatoolkit >=11.2,<12",
    "libgcc-ng >=12",
    "libstdcxx-ng >=12",
    "numpy",
    "openmm >=7.7.0,<8.0a0",
    "python >=3.10,<3.11.0a0",
    "python_abi 3.10.* *_cp310"
   ]
  },
  "source": {
   "sha256": "d63f7cb8cbfd82d00058abc4cd598ce8e5a989ff2e9efec1674aa26661a7f341",
   "url": "https://github.com/Gallicchio-Lab/openmm-atmmetaforce-plugin/archive/refs/tags/v0.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "test -f $PREFIX/lib/plugins/libATMMetaForcePluginCUDA$SHLIB_EXT",
    "test -f $PREFIX/lib/plugins/libATMMetaForcePluginOpenCL$SHLIB_EXT",
    "test -f $PREFIX/lib/plugins/libATMMetaForcePluginReference$SHLIB_EXT",
    "test -f $PREFIX/include/ATMMetaForce.h",
    "test -f $PREFIX/include/internal/ATMMetaForceImpl.h"
   ],
   "imports": [
    "numpy",
    "openmm",
    "simtk"
   ],
   "requires": [
    "pip",
    "pocl"
   ]
  }
 },
 "version": "0.3.0"
}
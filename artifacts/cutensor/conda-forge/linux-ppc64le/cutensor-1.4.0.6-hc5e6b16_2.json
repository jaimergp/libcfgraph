{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.21.7",
  "conda_private": false,
  "conda_version": "4.11.0",
  "description": "The cuTENSOR Library is a first-of-its-kind GPU-accelerated tensor linear\nalgebra library providing tensor contraction, reduction and elementwise\noperations. cuTENSOR is used to accelerate applications in the areas of\ndeep learning training and inference, computer vision, quantum chemistry\nand computational physics.\n\nLicense Agreements:- The packages are governed by the NVIDIA cuTENSOR\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuTENSOR EULA -\nhttps://docs.nvidia.com/cuda/cutensor/license.html\n",
  "dev_url": "https://developer.nvidia.com/cutensor/downloads",
  "doc_url": "https://docs.nvidia.com/cuda/cutensor/index.html",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "leofang",
    "jakirkham"
   ]
  },
  "home": "https://developer.nvidia.com/cutensor",
  "identifiers": [],
  "keywords": [],
  "license": "LicenseRef-cuTENSOR-Software-License-Agreement",
  "license_file": "LICENSE",
  "license_url": "https://docs.nvidia.com/cuda/cutensor/license.html",
  "root_pkgs": [
   "libcurl 7.81.0 he415e40_0",
   "attrs 21.4.0 pyhd8ed1ab_0",
   "libiconv 1.16 h6eb9509_0",
   "libuuid 2.32.1 h4e0d66e_1000",
   "dataclasses 0.8 pyhc8e2a94_3",
   "future 0.18.2 py39hc1b9086_4",
   "jinja2 3.0.3 pyhd8ed1ab_0",
   "icu 69.1 h3b4ca64_0",
   "typing_extensions 4.0.1 pyha770c72_0",
   "inotify_simple 1.3.5 pyha770c72_3",
   "filelock 3.4.2 pyhd8ed1ab_1",
   "wcwidth 0.2.5 pyh9f0ad1d_2",
   "ruamel_yaml 0.15.80 py39ha810350_1006",
   "bzip2 1.0.8 h4e0d66e_4",
   "zipp 3.7.0 pyhd8ed1ab_0",
   "conda-build 3.21.7 py39h0b1cf3c_0",
   "json5 0.9.5 pyh9f0ad1d_0",
   "liblief 0.11.5 h3b9df90_1",
   "python 3.9.9 h3e5bdd0_0_cpython",
   "libev 4.33 h6eb9509_1",
   "libedit 3.1.20191231 h41a240f_2",
   "krb5 1.19.2 haf43566_3",
   "pygments 2.11.2 pyhd8ed1ab_0",
   "wheel 0.37.1 pyhd8ed1ab_0",
   "commonmark 0.9.1 py_0",
   "pycparser 2.21 pyhd8ed1ab_0",
   "markupsafe 2.0.1 py39ha810350_1",
   "certifi 2021.10.8 py39hc1b9086_1",
   "c-ares 1.18.1 h4e0d66e_0",
   "pyrsistent 0.18.1 py39ha810350_0",
   "libsolv 0.7.19 h690f14c_5",
   "jupyter_core 4.9.1 py39h0b1cf3c_1",
   "ruamel.yaml.clib 0.2.6 py39hf1a8857_0",
   "libstdcxx-ng 11.2.0 habdf983_12",
   "git 2.35.0 pl5321h29e2a4d_0",
   "jsonschema 4.4.0 pyhd8ed1ab_0",
   "tqdm 4.62.3 pyhd8ed1ab_0",
   "zlib 1.2.11 h339bb43_1013",
   "curl 7.81.0 he415e40_0",
   "readline 8.1 h5c45dff_0",
   "tzdata 2021e he74cb21_0",
   "beautifulsoup4 4.10.0 pyha770c72_0",
   "xz 5.2.5 h6eb9509_1",
   "six 1.16.0 pyh6c4a22f_0",
   "ld_impl_linux-ppc64le 2.36.1 ha35d02b_2",
   "expat 2.4.3 h3b9df90_0",
   "zstd 1.5.1 h65c4b1a_0",
   "importlib_resources 5.4.0 pyhd8ed1ab_0",
   "patch 2.7.6 h4e0d66e_1002",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "libzlib 1.2.11 h339bb43_1013",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "setuptools 60.5.0 py39hc1b9086_0",
   "rich 11.0.0 pyhd8ed1ab_0",
   "libgcc-ng 11.2.0 h7698a5e_12",
   "yaml-cpp 0.6.3 hb209c28_4",
   "libxml2 2.9.12 h1876533_1",
   "libssh2 1.10.0 ha5a9321_2",
   "ruamel.yaml 0.17.19 py39hf1a8857_0",
   "lz4-c 1.9.3 h3b9df90_1",
   "traitlets 5.1.1 pyhd8ed1ab_0",
   "importlib-metadata 4.10.1 py39hc1b9086_0",
   "glob2 0.7 py_0",
   "python_abi 3.9 2_cp39",
   "prompt-toolkit 3.0.24 pyha770c72_0",
   "py-lief 0.11.5 py39h4c72827_1",
   "backports 1.0 py_2",
   "prompt_toolkit 3.0.24 hd8ed1ab_0",
   "joblib 1.1.0 pyhd8ed1ab_0",
   "lzo 2.10 h6eb9509_1000",
   "cryptography 36.0.1 py39hbd557f1_0",
   "idna 3.3 pyhd8ed1ab_0",
   "libnghttp2 1.43.0 h42039ad_1",
   "python-libarchive-c 4.0 py39h0b1cf3c_0",
   "urllib3 1.26.8 pyhd8ed1ab_1",
   "libnsl 2.0.0 h4e0d66e_0",
   "anaconda-client 1.8.0 pyhd8ed1ab_0",
   "_libgcc_mutex 0.1 conda_forge",
   "conda-package-handling 1.7.3 py39ha810350_1",
   "pycosat 0.6.3 py39ha810350_1009",
   "chardet 4.0.0 py39hc1b9086_2",
   "conda 4.11.0 py39h0b1cf3c_0",
   "libarchive 3.5.2 h3281d6a_1",
   "openssl 1.1.1l h4e0d66e_0",
   "libgomp 11.2.0 h7698a5e_12",
   "perl 5.32.1 1_h4e0d66e_perl5",
   "pytz 2021.3 pyhd8ed1ab_0",
   "pysocks 1.7.1 py39hc1b9086_4",
   "ipython_genutils 0.2.0 py_1",
   "reproc-cpp 14.2.3 h3b9df90_0",
   "pyyaml 6.0 py39ha810350_3",
   "soupsieve 2.3.1 pyhd8ed1ab_0",
   "clyent 1.2.2 py_1",
   "tini 0.19.0 h4e0d66e_0",
   "_openmp_mutex 4.5 1_gnu",
   "psutil 5.9.0 py39ha810350_0",
   "reproc 14.2.3 h4e0d66e_0",
   "charset-normalizer 2.0.10 pyhd8ed1ab_0",
   "pyopenssl 21.0.0 pyhd8ed1ab_0",
   "colorama 0.4.4 pyh9f0ad1d_0",
   "nbformat 5.1.3 pyhd8ed1ab_0",
   "libffi 3.4.2 h4e0d66e_5",
   "su-exec 0.2 h6eb9509_1002",
   "pybind11-abi 4 hd8ed1ab_3",
   "pkginfo 1.8.2 pyhd8ed1ab_0",
   "pip 21.3.1 pyhd8ed1ab_0",
   "sqlite 3.37.0 h4e2196e_0",
   "cffi 1.15.0 py39h7bf629d_0",
   "tk 8.6.11 h41c6715_1",
   "pcre2 10.37 h32277c3_0",
   "ca-certificates 2021.10.8 h1084571_0",
   "ncurses 6.3 h3b9df90_0",
   "yaml 0.2.5 h4e0d66e_2",
   "ripgrep 13.0.0 ha57a3a6_1",
   "gettext 0.19.8.1 h6603d1e_1008",
   "requests 2.27.1 pyhd8ed1ab_0",
   "patchelf 0.14.3 hea85c5d_0",
   "brotlipy 0.7.0 py39ha810350_1003",
   "conda-forge-ci-setup 3.18.1 py39ha7e1dda_0",
   "boa 0.8.1 pyha770c72_0",
   "mamba 0.19.1 py39h3651b5a_0",
   "libmambapy 0.19.1 py39h038a47e_0",
   "click 8.0.3 py39hc1b9086_1",
   "libmamba 0.19.1 hd0e580a_0",
   "oniguruma 6.9.7.1 h4e0d66e_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "jq 1.6 h339bb43_1000",
   "conda-env 2.6.0 1",
   "watchgod 0.7 pyhd8ed1ab_0"
  ],
  "summary": "Tensor Linear Algebra on NVIDIA GPUs",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "c_compiler_version": "9",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cuda_compiler": "nvcc",
  "cuda_compiler_version": "11.1",
  "cudnn": "8",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "9",
  "docker_image": "quay.io/condaforge/linux-anvil-ppc64le-cuda:11.1",
  "extend_keys": [
   "ignore_version",
   "pin_run_as_build",
   "ignore_build_only_deps",
   "extend_keys"
  ],
  "fortran_compiler": "gfortran",
  "fortran_compiler_version": "8",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.9",
  "r_base": "3.5",
  "target_platform": "linux-ppc64le",
  "zip_keys": [
   [
    "c_compiler_version",
    "cxx_compiler_version",
    "cuda_compiler_version",
    "cdt_name",
    "docker_image"
   ]
  ]
 },
 "files": [
  "bin/.cutensor-post-link.sh",
  "include/cutensor.h",
  "include/cutensor/types.h",
  "include/cutensorMg.h",
  "lib/libcutensor.so",
  "lib/libcutensor.so.1",
  "lib/libcutensor.so.1.4.0",
  "lib/libcutensorMg.so",
  "lib/libcutensorMg.so.1",
  "lib/libcutensorMg.so.1.4.0"
 ],
 "index": {
  "arch": "ppc64le",
  "build": "hc5e6b16_2",
  "build_number": 2,
  "constrains": [
   "__glibc >=2.17"
  ],
  "depends": [
   "__glibc >=2.17",
   "__glibc >=2.17,<3.0.a0",
   "cudatoolkit >=11.1,<12",
   "libgcc-ng >=9.4.0",
   "libstdcxx-ng >=9.4.0"
  ],
  "license": "LicenseRef-cuTENSOR-Software-License-Agreement",
  "name": "cutensor",
  "platform": "linux",
  "subdir": "linux-ppc64le",
  "timestamp": 1643392368130,
  "version": "1.4.0.6"
 },
 "metadata_version": 1,
 "name": "cutensor",
 "raw_recipe": "{% set version = \"1.4.0\" %}\n{% set patch_version = \"6\" %}\n\npackage:\n  name: cutensor\n  version: {{ version }}.{{ patch_version }}\n\nsource:\n  url: https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/linux-x86_64/libcutensor-linux-x86_64-{{ version }}.{{ patch_version }}-archive.tar.xz     # [linux64]\n  url: https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/linux-ppc64le/libcutensor-linux-ppc64le-{{ version }}.{{ patch_version }}-archive.tar.xz   # [ppc64le]\n  url: https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/linux-sbsa/libcutensor-linux-sbsa-{{ version }}.{{ patch_version }}-archive.tar.xz         # [aarch64]\n  url: https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/windows-x86_64/libcutensor-windows-x86_64-{{ version }}.{{ patch_version }}-archive.zip    # [win64]\n\n  sha256: 467ba189195fcc4b868334fc16a0ae1e51574139605975cc8004cedebf595964  # [linux64]\n  sha256: 5da44ff2562ab7b9286122653e54f28d2222c8aab4bb02e9bdd4cf7e4b7809be  # [ppc64le]\n  sha256: 6b06d63a5bc49c1660be8c307795f8a901c93dcde7b064455a6c81333c7327f4  # [aarch64]\n  sha256: 4f01a8aac2c25177e928c63381a80e3342f214ec86ad66965dcbfe81fc5c901d  # [win64]\n\nbuild:\n  number: 2\n  # cuTENSOR v1.3.1 supports CUDA 10.2, 11.0, and 11.1+\n  skip: True  # [win32 or cuda_compiler_version not in (\"10.2\", \"11.0\", \"11.1\")]\n  script_env:\n    # for some reason /usr/local/cuda is not added to $PATH in ppc64le's docker image\n    - CUDA_HOME  # [ppc64le or aarch64]\n  script:\n    - mkdir -p $PREFIX/include                                             # [linux]\n    - mv include/* $PREFIX/include/                                        # [linux]\n    - mkdir -p $PREFIX/lib                                                 # [linux]\n    - mv lib/{{ cuda_compiler_version }}/*.so* $PREFIX/lib/                # [linux and cuda_compiler_version in (\"10.2\", \"11.0\")]\n    - mv lib/11/*.so* $PREFIX/lib/                                         # [linux and cuda_compiler_version == \"11.1\"]\n    - patchelf --add-needed libcudart.so $PREFIX/lib/libcutensor.so        # [ppc64le]\n\n    - copy include\\\\cutensor.h %LIBRARY_INC%\\\\                             # [win64]\n    - copy include\\\\cutensorMg.h %LIBRARY_INC%\\\\                           # [win64]\n    - mkdir %LIBRARY_INC%\\\\cutensor                                        # [win64]\n    - copy include\\\\cutensor\\\\types.h %LIBRARY_INC%\\\\cutensor              # [win64]\n    - del lib\\\\{{ cuda_compiler_version }}\\\\*static*                       # [win64 and cuda_compiler_version in (\"10.2\", \"11.0\")]\n    - copy lib\\\\{{ cuda_compiler_version }}\\\\*.dll %LIBRARY_BIN%\\\\         # [win64 and cuda_compiler_version in (\"10.2\", \"11.0\")]\n    - copy lib\\\\{{ cuda_compiler_version }}\\\\*.lib %LIBRARY_LIB%\\\\         # [win64 and cuda_compiler_version in (\"10.2\", \"11.0\")]\n    - del lib\\\\11\\\\*static*                                                # [win64 and cuda_compiler_version in (\"11.1\", )]\n    - copy lib\\\\11\\\\*.dll %LIBRARY_BIN%\\\\                                  # [win64 and cuda_compiler_version in (\"11.1\", )]\n    - copy lib\\\\11\\\\*.lib %LIBRARY_LIB%\\\\                                  # [win64 and cuda_compiler_version in (\"11.1\", )]\n  ignore_run_exports:\n    - cudatoolkit\n  run_exports:\n    - {{ pin_subpackage('cutensor') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}\n    - sysroot_linux-64 2.17  # [linux]\n  host:\n    - patchelf >=0.12  # [linux]\n  run:\n    - cudatoolkit {{ cuda_compiler_version }}  # [cuda_compiler_version in (\"10.2\", \"11.0\")]\n    - cudatoolkit >=11.1,<12                   # [cuda_compiler_version == \"11.1\"]\n  run_constrained:\n    # Only GLIBC_2.17 or older symbols present\n    - __glibc >=2.17      # [linux]\n\ntest:\n  requires:\n    - git\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}\n    - sysroot_linux-64 2.17  # [linux]\n    # make sure we pick up the version matching the docker,\n    # or the linker would complain \n    - cudatoolkit {{ cuda_compiler_version }}\n  files:\n    - test_load_elf.c        # [linux]\n\nabout:\n  home: https://developer.nvidia.com/cutensor\n  license: LicenseRef-cuTENSOR-Software-License-Agreement\n  license_url: https://docs.nvidia.com/cuda/cutensor/license.html\n  license_file: LICENSE\n  summary: \"Tensor Linear Algebra on NVIDIA GPUs\"\n  description: |\n    The cuTENSOR Library is a first-of-its-kind GPU-accelerated tensor linear\n    algebra library providing tensor contraction, reduction and elementwise\n    operations. cuTENSOR is used to accelerate applications in the areas of\n    deep learning training and inference, computer vision, quantum chemistry\n    and computational physics.\n\n    License Agreements:- The packages are governed by the NVIDIA cuTENSOR\n    Software License Agreement (EULA). By downloading and using the packages,\n    you accept the terms and conditions of the NVIDIA cuTENSOR EULA -\n    https://docs.nvidia.com/cuda/cutensor/license.html\n  doc_url: https://docs.nvidia.com/cuda/cutensor/index.html\n  dev_url: https://developer.nvidia.com/cutensor/downloads\n\nextra:\n  recipe-maintainers:\n    - leofang\n    - jakirkham\n",
 "rendered_recipe": {
  "about": {
   "description": "The cuTENSOR Library is a first-of-its-kind GPU-accelerated tensor linear\nalgebra library providing tensor contraction, reduction and elementwise\noperations. cuTENSOR is used to accelerate applications in the areas of\ndeep learning training and inference, computer vision, quantum chemistry\nand computational physics.\n\nLicense Agreements:- The packages are governed by the NVIDIA cuTENSOR\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuTENSOR EULA -\nhttps://docs.nvidia.com/cuda/cutensor/license.html\n",
   "dev_url": "https://developer.nvidia.com/cutensor/downloads",
   "doc_url": "https://docs.nvidia.com/cuda/cutensor/index.html",
   "home": "https://developer.nvidia.com/cutensor",
   "license": "LicenseRef-cuTENSOR-Software-License-Agreement",
   "license_file": "LICENSE",
   "license_url": "https://docs.nvidia.com/cuda/cutensor/license.html",
   "summary": "Tensor Linear Algebra on NVIDIA GPUs"
  },
  "build": {
   "ignore_run_exports": [
    "cudatoolkit"
   ],
   "number": "2",
   "run_exports": [
    "cutensor >=1.4.0.6,<2.0a0"
   ],
   "script": [
    "mkdir -p $PREFIX/include",
    "mv include/* $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/11/*.so* $PREFIX/lib/",
    "patchelf --add-needed libcudart.so $PREFIX/lib/libcutensor.so"
   ],
   "script_env": [
    "CUDA_HOME"
   ],
   "string": "hc5e6b16_2"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "jakirkham",
    "leofang"
   ]
  },
  "package": {
   "name": "cutensor",
   "version": "1.4.0.6"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "_sysroot_linux-64_curr_repodata_hack 3 h5bd9786_13",
    "binutils_impl_linux-ppc64le 2.36.1 h5836da8_2",
    "binutils_linux-ppc64le 2.36 he035471_4",
    "gcc_impl_linux-ppc64le 9.4.0 hcbd312b_12",
    "gcc_linux-ppc64le 9.4.0 h2449294_4",
    "gxx_impl_linux-ppc64le 9.4.0 hcbd312b_12",
    "gxx_linux-ppc64le 9.4.0 h64afa7a_4",
    "kernel-headers_linux-64 3.10.0 h4a8ded7_13",
    "kernel-headers_linux-ppc64le 3.10.0 h23d7e6c_13",
    "ld_impl_linux-ppc64le 2.36.1 ha35d02b_2",
    "libgcc-devel_linux-ppc64le 9.4.0 he021ec0_12",
    "libgcc-ng 11.2.0 h7698a5e_12",
    "libgomp 11.2.0 h7698a5e_12",
    "libsanitizer 9.4.0 h106b142_12",
    "libstdcxx-devel_linux-ppc64le 9.4.0 he021ec0_12",
    "libstdcxx-ng 11.2.0 habdf983_12",
    "nvcc_linux-ppc64le 11.1 h40cd4b9_16",
    "sed 4.8 ha07698b_0",
    "sysroot_linux-64 2.17 h4a8ded7_13",
    "sysroot_linux-ppc64le 2.17 h395ec9b_13"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "libgcc-ng 11.2.0 h7698a5e_12",
    "libgomp 11.2.0 h7698a5e_12",
    "libstdcxx-ng 11.2.0 habdf983_12",
    "patchelf 0.14.3 hea85c5d_0"
   ],
   "run": [
    "__glibc >=2.17",
    "__glibc >=2.17,<3.0.a0",
    "cudatoolkit >=11.1,<12",
    "libgcc-ng >=9.4.0",
    "libstdcxx-ng >=9.4.0"
   ],
   "run_constrained": [
    "__glibc >=2.17"
   ]
  },
  "source": {
   "sha256": "5da44ff2562ab7b9286122653e54f28d2222c8aab4bb02e9bdd4cf7e4b7809be",
   "url": "https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/linux-ppc64le/libcutensor-linux-ppc64le-1.4.0.6-archive.tar.xz"
  },
  "test": {
   "files": [
    "test_load_elf.c"
   ],
   "requires": [
    "cudatoolkit 11.1.*",
    "gcc_linux-ppc64le 9.*",
    "git",
    "gxx_linux-ppc64le 9.*",
    "nvcc_linux-ppc64le 11.1.*",
    "sysroot_linux-64 2.17.*"
   ]
  }
 },
 "version": "1.4.0.6"
}
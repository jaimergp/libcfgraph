{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.23.3",
  "conda_version": "22.9.0",
  "description": "The cuTENSOR Library is a first-of-its-kind GPU-accelerated tensor linear\nalgebra library providing tensor contraction, reduction and elementwise\noperations. cuTENSOR is used to accelerate applications in the areas of\ndeep learning training and inference, computer vision, quantum chemistry\nand computational physics.\n\nLicense Agreements:- The packages are governed by the NVIDIA cuTENSOR\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuTENSOR EULA -\nhttps://docs.nvidia.com/cuda/cutensor/license.html\n",
  "dev_url": "https://developer.nvidia.com/cutensor/downloads",
  "doc_url": "https://docs.nvidia.com/cuda/cutensor/index.html",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider"
   ]
  },
  "home": "https://developer.nvidia.com/cutensor",
  "identifiers": [],
  "keywords": [],
  "license": "LicenseRef-cuTENSOR-Software-License-Agreement",
  "license_file": "LICENSE",
  "license_url": "https://docs.nvidia.com/cuda/cutensor/license.html",
  "root_pkgs": [
   "charset-normalizer 2.1.1 pyhd8ed1ab_0",
   "libmambapy 1.0.0 py310h1d3c3c8_2",
   "bzip2 1.0.8 h4e0d66e_4",
   "icu 70.1 h3b4ca64_0",
   "libiconv 1.17 hb283c62_0",
   "libsqlite 3.39.4 hcc10993_0",
   "pkgutil-resolve-name 1.3.10 pyhd8ed1ab_0",
   "pkginfo 1.9.2 pyhd8ed1ab_0",
   "glob2 0.7 py_0",
   "libzlib 1.2.13 hb283c62_4",
   "prompt_toolkit 3.0.33 hd8ed1ab_0",
   "c-ares 1.18.1 h4e0d66e_0",
   "ripgrep 13.0.0 h0cb23b2_2",
   "requests 2.28.1 pyhd8ed1ab_1",
   "ld_impl_linux-ppc64le 2.39 hea198f4_1",
   "future 0.18.2 pyhd8ed1ab_6",
   "ruamel_yaml 0.15.80 py310h939259b_1008",
   "ruamel.yaml.clib 0.2.7 py310h939259b_0",
   "pip 22.3.1 pyhd8ed1ab_0",
   "tqdm 4.64.1 pyhd8ed1ab_0",
   "joblib 1.2.0 pyhd8ed1ab_0",
   "toolz 0.12.0 pyhd8ed1ab_0",
   "reproc-cpp 14.2.3 h3b9df90_0",
   "libffi 3.4.2 h4e0d66e_5",
   "urllib3 1.26.13 pyhd8ed1ab_0",
   "libssh2 1.10.0 hc6ee4b3_3",
   "_openmp_mutex 4.5 2_gnu",
   "clyent 1.2.2 py_1",
   "reproc 14.2.3 h4e0d66e_0",
   "colorama 0.4.6 pyhd8ed1ab_0",
   "sniffio 1.3.0 pyhd8ed1ab_0",
   "setuptools 65.5.1 pyhd8ed1ab_0",
   "lz4-c 1.9.3 h3b9df90_1",
   "traitlets 5.6.0 pyhd8ed1ab_0",
   "libuuid 2.32.1 h4e0d66e_1000",
   "beautifulsoup4 4.11.1 pyha770c72_0",
   "pyrsistent 0.19.2 py310h93ff066_0",
   "keyutils 1.6.1 hb283c62_0",
   "python_abi 3.10 3_cp310",
   "pyyaml 6.0 py310h939259b_5",
   "json5 0.9.5 pyh9f0ad1d_0",
   "tzdata 2022g h191b570_0",
   "dataclasses 0.8 pyhc8e2a94_3",
   "chardet 5.1.0 py310hd032262_0",
   "libarchive 3.5.2 h7ab535a_3",
   "commonmark 0.9.1 py_0",
   "psutil 5.9.4 py310h939259b_0",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "ruamel.yaml 0.17.21 py310h939259b_2",
   "libgcc-ng 12.2.0 hbc1322c_19",
   "git 2.38.1 pl5321h3daccb8_1",
   "markupsafe 2.1.1 py310h93ff066_2",
   "gettext 0.21.1 hbbae597_0",
   "anyio 3.6.2 pyhd8ed1ab_0",
   "jsonschema 4.17.3 pyhd8ed1ab_0",
   "pycparser 2.21 pyhd8ed1ab_0",
   "conda-package-handling 2.0.2 pyh38be061_0",
   "libxml2 2.10.3 h3010393_0",
   "brotlipy 0.7.0 py310h939259b_1005",
   "importlib-metadata 5.1.0 pyha770c72_0",
   "watchgod 0.8.2 pyhd8ed1ab_0",
   "yaml-cpp 0.7.0 hbbae597_2",
   "platformdirs 2.5.2 pyhd8ed1ab_1",
   "_libgcc_mutex 0.1 conda_forge",
   "libedit 3.1.20191231 h41a240f_2",
   "anaconda-client 1.11.0 pyhd8ed1ab_1",
   "su-exec 0.2 hb283c62_1003",
   "libnsl 2.0.0 h4e0d66e_0",
   "cffi 1.15.1 py310h8b509f7_2",
   "libsolv 0.7.22 ha72a2fa_0",
   "tini 0.19.0 hb283c62_1",
   "lzo 2.10 h6eb9509_1000",
   "pyopenssl 22.1.0 pyhd8ed1ab_0",
   "yaml 0.2.5 h4e0d66e_2",
   "rich 12.6.0 pyhd8ed1ab_0",
   "pysocks 1.7.1 pyha2e5f31_6",
   "jupyter_core 5.1.0 py310h194a6c8_0",
   "idna 3.4 pyhd8ed1ab_0",
   "pygments 2.13.0 pyhd8ed1ab_0",
   "zstandard 0.19.0 py310hcc13191_1",
   "xz 5.2.6 hb283c62_0",
   "cryptography 38.0.4 py310hba3a939_0",
   "zipp 3.11.0 pyhd8ed1ab_0",
   "libcurl 7.86.0 h1ac174b_1",
   "pycosat 0.6.4 py310h939259b_1",
   "jinja2 3.1.2 pyhd8ed1ab_1",
   "nbformat 5.7.0 pyhd8ed1ab_0",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "curl 7.86.0 h1ac174b_1",
   "libnghttp2 1.47.0 h7a83b9a_1",
   "conda-package-streaming 0.7.0 pyhd8ed1ab_1",
   "python-fastjsonschema 2.16.2 pyhd8ed1ab_0",
   "libgomp 12.2.0 hbc1322c_19",
   "libstdcxx-ng 12.2.0 h99369c6_19",
   "patch 2.7.6 h4e0d66e_1002",
   "attrs 22.1.0 pyh71513ae_1",
   "conda 22.9.0 py310h194a6c8_2",
   "wcwidth 0.2.5 pyh9f0ad1d_2",
   "prompt-toolkit 3.0.33 pyha770c72_0",
   "six 1.16.0 pyh6c4a22f_0",
   "wheel 0.38.4 pyhd8ed1ab_0",
   "python-libarchive-c 4.0 py310h194a6c8_2",
   "mamba 1.0.0 py310h400a96e_2",
   "soupsieve 2.3.2.post1 pyhd8ed1ab_0",
   "expat 2.5.0 hbbae597_0",
   "readline 8.1.2 h6828edc_0",
   "libev 4.33 h6eb9509_1",
   "ncurses 6.3 hab78ccb_1",
   "krb5 1.19.3 ha6b4ebd_0",
   "python 3.10.8 h736889e_0_cpython",
   "toml 0.10.2 pyhd8ed1ab_0",
   "typing_extensions 4.4.0 pyha770c72_0",
   "fmt 9.1.0 h06f31f1_0",
   "libmamba 1.0.0 h8940822_2",
   "pytz 2022.6 pyhd8ed1ab_0",
   "zstd 1.5.2 h581a010_4",
   "tk 8.6.12 h41c6715_0",
   "perl 5.32.1 2_h4e0d66e_perl5",
   "filelock 3.8.0 pyhd8ed1ab_0",
   "importlib_resources 5.10.0 pyhd8ed1ab_0",
   "backports 1.0 pyhd8ed1ab_3",
   "pybind11-abi 4 hd8ed1ab_3",
   "pcre2 10.40 h02375f6_0",
   "patchelf 0.17.0 hea85c5d_0",
   "jq 1.6 h339bb43_1000",
   "ca-certificates 2022.12.7 h1084571_0",
   "oniguruma 6.9.8 hb283c62_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "certifi 2022.12.7 pyhd8ed1ab_0",
   "conda-forge-ci-setup 3.24.6 py310he5b63f5_100",
   "conda-env 2.6.0 1",
   "click 8.1.3 unix_pyhd8ed1ab_2",
   "boa 0.14.0 pyhd8ed1ab_0",
   "conda-build 3.23.3 py310h194a6c8_0",
   "liblief 0.11.5 h3b9df90_1",
   "py-lief 0.11.5 py310hdab34cc_1",
   "openssl 3.0.7 h4194056_1"
  ],
  "summary": "Tensor Linear Algebra on NVIDIA GPUs",
  "tags": []
 },
 "conda_build_config": {
  "CI": "travis",
  "c_compiler": "gcc",
  "c_compiler_version": "9",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cuda_compiler": "nvcc",
  "cuda_compiler_version": "11.1",
  "cudnn": "undefined",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "9",
  "docker_image": "quay.io/condaforge/linux-anvil-ppc64le-cuda:11.1",
  "extend_keys": [
   "ignore_version",
   "ignore_build_only_deps",
   "pin_run_as_build",
   "extend_keys"
  ],
  "fortran_compiler": "gfortran",
  "fortran_compiler_version": "8",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.10",
  "r_base": "3.5",
  "target_platform": "linux-ppc64le",
  "zip_keys": [
   [
    "c_compiler_version",
    "cxx_compiler_version",
    "cuda_compiler_version",
    "cdt_name",
    "docker_image"
   ]
  ]
 },
 "conda_pkg_format": "2",
 "files": [
  "bin/.cutensor-post-link.sh",
  "include/cutensor.h",
  "include/cutensor/types.h",
  "include/cutensorMg.h",
  "lib/libcutensor.so",
  "lib/libcutensor.so.1",
  "lib/libcutensor.so.1.6.2",
  "lib/libcutensorMg.so",
  "lib/libcutensorMg.so.1",
  "lib/libcutensorMg.so.1.6.2"
 ],
 "index": {
  "arch": "ppc64le",
  "build": "hc5e6b16_0",
  "build_number": 0,
  "constrains": [
   "__glibc >=2.17"
  ],
  "depends": [
   "__glibc >=2.17",
   "cudatoolkit >=11.1,<12",
   "libgcc-ng >=12"
  ],
  "license": "LicenseRef-cuTENSOR-Software-License-Agreement",
  "name": "cutensor",
  "platform": "linux",
  "subdir": "linux-ppc64le",
  "timestamp": 1670504168440,
  "version": "1.6.2.3"
 },
 "metadata_version": 1,
 "name": "cutensor",
 "raw_recipe": "{% set version = \"1.6.2.3\" %}\n\npackage:\n  name: cutensor\n  version: {{ version }}\n\nsource:\n  url: https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/linux-x86_64/libcutensor-linux-x86_64-{{ version }}-archive.tar.xz  # [linux64]\n  url: https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/linux-ppc64le/libcutensor-linux-ppc64le-{{ version }}-archive.tar.xz  # [ppc64le]\n  url: https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/linux-sbsa/libcutensor-linux-sbsa-{{ version }}-archive.tar.xz  # [aarch64]\n  url: https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/windows-x86_64/libcutensor-windows-x86_64-{{ version }}-archive.zip  # [win64]\n\n  sha256: 0f2745681b1d0556f9f46ff6af4937662793498d7367b5f8f6b8625ac051629e  # [linux64]\n  sha256: 558329fa05409f914ebbe218a1cf7c9ccffdb7aa2642b96db85fd78b5ad534d1  # [ppc64le]\n  sha256: 7d4d9088c892bb692ffd70750b49625d1ccbb85390f6eb7c70d6cf582df6d935  # [aarch64]\n  sha256: 07cb312d7cafc7bb2f33d775e1ef5fffd1703d5c6656e785a7a8f0f01939907e  # [win64]\n\nbuild:\n  number: 0\n  # cuTENSOR v1.3.1 supports CUDA 10.2, 11.0, and 11.1+\n  skip: true  # [win32 or cuda_compiler_version not in (\"10.2\", \"11.0\", \"11.1\")]\n  script_env:\n    # for some reason /usr/local/cuda is not added to $PATH in ppc64le's docker image\n    - CUDA_HOME  # [ppc64le or aarch64]\n  script:\n    - mkdir -p $PREFIX/include                                             # [linux]\n    - mv include/* $PREFIX/include/                                        # [linux]\n    - mkdir -p $PREFIX/lib                                                 # [linux]\n    - mv lib/{{ cuda_compiler_version }}/*.so* $PREFIX/lib/                # [linux and cuda_compiler_version in (\"10.2\", \"11.0\")]\n    - mv lib/11/*.so* $PREFIX/lib/                                         # [linux and cuda_compiler_version == \"11.1\"]\n    - patchelf --add-needed libcudart.so $PREFIX/lib/libcutensor.so        # [ppc64le]\n\n    - copy include\\\\cutensor.h %LIBRARY_INC%\\\\                             # [win64]\n    - copy include\\\\cutensorMg.h %LIBRARY_INC%\\\\                           # [win64]\n    - mkdir %LIBRARY_INC%\\\\cutensor                                        # [win64]\n    - copy include\\\\cutensor\\\\types.h %LIBRARY_INC%\\\\cutensor              # [win64]\n    - del lib\\\\{{ cuda_compiler_version }}\\\\*static*                       # [win64 and cuda_compiler_version in (\"10.2\", \"11.0\")]\n    - copy lib\\\\{{ cuda_compiler_version }}\\\\*.dll %LIBRARY_BIN%\\\\         # [win64 and cuda_compiler_version in (\"10.2\", \"11.0\")]\n    - copy lib\\\\{{ cuda_compiler_version }}\\\\*.lib %LIBRARY_LIB%\\\\         # [win64 and cuda_compiler_version in (\"10.2\", \"11.0\")]\n    - del lib\\\\11\\\\*static*                                                # [win64 and cuda_compiler_version in (\"11.1\", )]\n    - copy lib\\\\11\\\\*.dll %LIBRARY_BIN%\\\\                                  # [win64 and cuda_compiler_version in (\"11.1\", )]\n    - copy lib\\\\11\\\\*.lib %LIBRARY_LIB%\\\\                                  # [win64 and cuda_compiler_version in (\"11.1\", )]\n  ignore_run_exports:\n    - cudatoolkit\n  run_exports:\n    - {{ pin_subpackage('cutensor') }}\n  missing_dso_whitelist:\n    # suppress warning, as these are included in the run dependency\n    - '*/libcublasLt.so*'  # [linux and cuda_compiler_version in (\"11.0\", \"11.1\")]\n    - '*/cublasLt64*.dll'  # [win64 and cuda_compiler_version in (\"11.0\", \"11.1\")]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cuda') }}\n    - sysroot_linux-64 2.17  # [linux64]\n  host:\n    - patchelf >=0.12  # [linux]\n  run:\n    - cudatoolkit {{ cuda_compiler_version }}  # [cuda_compiler_version in (\"10.2\", \"11.0\")]\n    - cudatoolkit >=11.1,<12                   # [cuda_compiler_version == \"11.1\"]\n  run_constrained:\n    # Only GLIBC_2.17 or older symbols present\n    - __glibc >=2.17      # [linux]\n\ntest:\n  requires:\n    - git\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}\n    - sysroot_linux-64 2.17  # [linux]\n    # make sure we pick up the version matching the docker,\n    # or the linker would complain \n    - cudatoolkit {{ cuda_compiler_version }}\n  files:\n    - test_load_elf.c        # [linux]\n\nabout:\n  home: https://developer.nvidia.com/cutensor\n  license: LicenseRef-cuTENSOR-Software-License-Agreement\n  license_url: https://docs.nvidia.com/cuda/cutensor/license.html\n  license_file: LICENSE\n  summary: Tensor Linear Algebra on NVIDIA GPUs\n  description: |\n    The cuTENSOR Library is a first-of-its-kind GPU-accelerated tensor linear\n    algebra library providing tensor contraction, reduction and elementwise\n    operations. cuTENSOR is used to accelerate applications in the areas of\n    deep learning training and inference, computer vision, quantum chemistry\n    and computational physics.\n\n    License Agreements:- The packages are governed by the NVIDIA cuTENSOR\n    Software License Agreement (EULA). By downloading and using the packages,\n    you accept the terms and conditions of the NVIDIA cuTENSOR EULA -\n    https://docs.nvidia.com/cuda/cutensor/license.html\n  doc_url: https://docs.nvidia.com/cuda/cutensor/index.html\n  dev_url: https://developer.nvidia.com/cutensor/downloads\n\nextra:\n  recipe-maintainers:\n    - JeremyWangNVDA\n    - leofang\n    - jakirkham\n    - mtjrider\n",
 "rendered_recipe": {
  "about": {
   "description": "The cuTENSOR Library is a first-of-its-kind GPU-accelerated tensor linear\nalgebra library providing tensor contraction, reduction and elementwise\noperations. cuTENSOR is used to accelerate applications in the areas of\ndeep learning training and inference, computer vision, quantum chemistry\nand computational physics.\n\nLicense Agreements:- The packages are governed by the NVIDIA cuTENSOR\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuTENSOR EULA -\nhttps://docs.nvidia.com/cuda/cutensor/license.html\n",
   "dev_url": "https://developer.nvidia.com/cutensor/downloads",
   "doc_url": "https://docs.nvidia.com/cuda/cutensor/index.html",
   "home": "https://developer.nvidia.com/cutensor",
   "license": "LicenseRef-cuTENSOR-Software-License-Agreement",
   "license_file": "LICENSE",
   "license_url": "https://docs.nvidia.com/cuda/cutensor/license.html",
   "summary": "Tensor Linear Algebra on NVIDIA GPUs"
  },
  "build": {
   "ignore_run_exports": [
    "cudatoolkit"
   ],
   "missing_dso_whitelist": [
    "*/libcublasLt.so*"
   ],
   "number": "0",
   "run_exports": [
    "cutensor >=1.6.2.3,<2.0a0"
   ],
   "script": [
    "mkdir -p $PREFIX/include",
    "mv include/* $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/11/*.so* $PREFIX/lib/",
    "patchelf --add-needed libcudart.so $PREFIX/lib/libcutensor.so"
   ],
   "script_env": [
    "CUDA_HOME"
   ],
   "string": "hc5e6b16_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "JeremyWangNVDA",
    "jakirkham",
    "leofang",
    "mtjrider"
   ]
  },
  "package": {
   "name": "cutensor",
   "version": "1.6.2.3"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 2_gnu",
    "binutils_impl_linux-ppc64le 2.39 heb37b50_1",
    "binutils_linux-ppc64le 2.39 h5e55cfe_11",
    "gcc_impl_linux-ppc64le 9.5.0 hc811b3d_19",
    "gcc_linux-ppc64le 9.5.0 hc4a5e14_11",
    "kernel-headers_linux-ppc64le 3.10.0 h23d7e6c_13",
    "ld_impl_linux-ppc64le 2.39 hea198f4_1",
    "libgcc-devel_linux-ppc64le 9.5.0 hf42553c_19",
    "libgcc-ng 12.2.0 hbc1322c_19",
    "libgomp 12.2.0 hbc1322c_19",
    "libsanitizer 9.5.0 hc139d62_19",
    "libstdcxx-ng 12.2.0 h99369c6_19",
    "nvcc_linux-ppc64le 11.1 h40cd4b9_22",
    "sed 4.8 ha07698b_0",
    "sysroot_linux-ppc64le 2.17 h395ec9b_13"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 2_gnu",
    "libgcc-ng 12.2.0 hbc1322c_19",
    "libgomp 12.2.0 hbc1322c_19",
    "libstdcxx-ng 12.2.0 h99369c6_19",
    "patchelf 0.17.0 hea85c5d_0"
   ],
   "run": [
    "__glibc >=2.17",
    "cudatoolkit >=11.1,<12",
    "libgcc-ng >=12"
   ],
   "run_constrained": [
    "__glibc >=2.17"
   ]
  },
  "source": {
   "sha256": "558329fa05409f914ebbe218a1cf7c9ccffdb7aa2642b96db85fd78b5ad534d1",
   "url": "https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/linux-ppc64le/libcutensor-linux-ppc64le-1.6.2.3-archive.tar.xz"
  },
  "test": {
   "files": [
    "test_load_elf.c"
   ],
   "requires": [
    "cudatoolkit 11.1.*",
    "gcc_linux-ppc64le 9.*",
    "git",
    "gxx_linux-ppc64le 9.*",
    "nvcc_linux-ppc64le 11.1.*",
    "sysroot_linux-64 2.17.*"
   ]
  }
 },
 "version": "1.6.2.3"
}
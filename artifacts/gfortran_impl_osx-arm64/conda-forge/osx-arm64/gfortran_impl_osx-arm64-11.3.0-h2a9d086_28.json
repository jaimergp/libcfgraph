{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.23.3",
  "conda_version": "22.11.1",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "beckermr",
    "isuruf"
   ]
  },
  "home": "http://gcc.gnu.org/",
  "identifiers": [],
  "keywords": [],
  "license": "GPL-3.0-only WITH GCC-exception-3.1",
  "license_family": "GPL",
  "license_file": "COPYING3",
  "root_pkgs": [
   "typing-extensions 4.4.0 hd8ed1ab_0",
   "anaconda-client 1.11.0 pyhd8ed1ab_1",
   "gettext 0.21.1 h8a4c099_0",
   "markupsafe 2.1.2 py310h90acd4f_0",
   "requests 2.28.2 pyhd8ed1ab_0",
   "conda-env 2.6.0 1",
   "six 1.16.0 pyh6c4a22f_0",
   "psutil 5.9.4 py310h90acd4f_0",
   "attrs 22.2.0 pyh71513ae_0",
   "importlib-metadata 6.0.0 pyha770c72_0",
   "libcxx 14.0.6 hccf4f1f_0",
   "libsolv 0.7.23 hbc0c0cd_0",
   "liblief 0.11.5 he49afe7_1",
   "colorama 0.4.6 pyhd8ed1ab_0",
   "toml 0.10.2 pyhd8ed1ab_0",
   "typing_extensions 4.4.0 pyha770c72_0",
   "jq 1.6 hc929b4f_1000",
   "yaml 0.2.5 h0d85af4_2",
   "tzdata 2022g h191b570_0",
   "ld64 609 hc6ad406_11",
   "ruamel.yaml 0.17.21 py310h90acd4f_2",
   "pyopenssl 23.0.0 pyhd8ed1ab_0",
   "pyyaml 6.0 py310h90acd4f_5",
   "libzlib 1.2.13 hfd90126_4",
   "urllib3 1.26.14 pyhd8ed1ab_0",
   "cffi 1.15.1 py310ha78151a_3",
   "git 2.39.2 pl5321h0195497_0",
   "chardet 5.1.0 py310h2ec42d9_0",
   "conda-package-handling 2.0.2 pyh38be061_0",
   "reproc 14.2.4 hb7f2c08_0",
   "pcre2 10.40 h1c4e4bc_0",
   "glob2 0.7 py_0",
   "nbformat 5.7.3 pyhd8ed1ab_0",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "wheel 0.38.4 pyhd8ed1ab_0",
   "toolz 0.12.0 pyhd8ed1ab_0",
   "ncurses 6.3 h96cf925_1",
   "expat 2.5.0 hf0c8a7f_0",
   "mamba 1.1.0 py310h6bde348_3",
   "cctools 973.0.1 h76f1dac_11",
   "libnghttp2 1.51.0 he2ab024_0",
   "libedit 3.1.20191231 h0678c8f_2",
   "perl 5.32.1 2_h0d85af4_perl5",
   "sigtool 0.1.3 h88f4db0_0",
   "libmamba 1.1.0 hdec3fd3_3",
   "conda 22.11.1 py310h2ec42d9_1",
   "pysocks 1.7.1 pyha2e5f31_6",
   "soupsieve 2.3.2.post1 pyhd8ed1ab_0",
   "jinja2 3.1.2 pyhd8ed1ab_1",
   "lz4-c 1.9.4 hf0c8a7f_0",
   "ld64_osx-64 609 hfd63004_11",
   "filelock 3.9.0 pyhd8ed1ab_0",
   "libllvm14 14.0.6 h5b596cc_1",
   "ca-certificates 2022.12.7 h033912b_0",
   "ripgrep 13.0.0 hbbacdb1_2",
   "conda-forge-ci-setup 3.29.1 py310h22f808f_100",
   "fmt 9.1.0 hb8565cd_0",
   "zstandard 0.19.0 py310h3cf44b0_1",
   "patch 2.7.6 hbcf498f_1002",
   "pkginfo 1.9.6 pyhd8ed1ab_0",
   "libffi 3.4.2 h0d85af4_5",
   "python_abi 3.10 3_cp310",
   "traitlets 5.9.0 pyhd8ed1ab_0",
   "readline 8.1.2 h3899abd_0",
   "python-fastjsonschema 2.16.2 pyhd8ed1ab_0",
   "pluggy 1.0.0 pyhd8ed1ab_5",
   "charset-normalizer 2.1.1 pyhd8ed1ab_0",
   "libcurl 7.87.0 h6df9250_0",
   "reproc-cpp 14.2.4 hf0c8a7f_0",
   "tapi 1100.0.11 h9ce4665_0",
   "setuptools 65.6.3 pyhd8ed1ab_0",
   "conda-build 3.23.3 py310h2ec42d9_1",
   "jupyter_core 5.2.0 py310h2ec42d9_0",
   "cryptography 39.0.1 py310hdd0c95c_0",
   "libssh2 1.10.0 h47af595_3",
   "python-libarchive-c 4.0 py310h2ec42d9_2",
   "zipp 3.13.0 pyhd8ed1ab_0",
   "xz 5.2.6 h775f41a_0",
   "python 3.10.9 he7542f4_0_cpython",
   "yaml-cpp 0.7.0 hf0c8a7f_2",
   "tqdm 4.64.1 pyhd8ed1ab_0",
   "zstd 1.5.2 hbc0c0cd_6",
   "bzip2 1.0.8 h0d85af4_4",
   "pkgutil-resolve-name 1.3.10 pyhd8ed1ab_0",
   "c-ares 1.18.1 h0d85af4_0",
   "pip 23.0 pyhd8ed1ab_0",
   "libsqlite 3.40.0 ha978bb4_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "icu 70.1 h96cf925_0",
   "pycosat 0.6.4 py310h90acd4f_1",
   "clyent 1.2.2 py_1",
   "brotlipy 0.7.0 py310h90acd4f_1005",
   "click 8.1.3 unix_pyhd8ed1ab_2",
   "curl 7.87.0 h6df9250_0",
   "conda-package-streaming 0.7.0 pyhd8ed1ab_1",
   "jsonschema 4.17.3 pyhd8ed1ab_0",
   "libmambapy 1.1.0 py310hb15139c_3",
   "ruamel_yaml 0.15.80 py310h90acd4f_1008",
   "platformdirs 3.0.0 pyhd8ed1ab_0",
   "py-lief 0.11.5 py310hba3363e_1",
   "openssl 3.0.8 hfd90126_0",
   "oniguruma 6.9.8 hac89ed1_0",
   "libxml2 2.10.3 hb9e07b5_0",
   "cctools_osx-64 973.0.1 hcc6d90d_11",
   "libiconv 1.17 hac89ed1_0",
   "lzo 2.10 haf1e3a3_1000",
   "krb5 1.20.1 h049b76e_0",
   "pybind11-abi 4 hd8ed1ab_3",
   "ruamel.yaml.clib 0.2.7 py310h90acd4f_1",
   "pytz 2022.7.1 pyhd8ed1ab_0",
   "libarchive 3.6.2 h6d8d9f1_0",
   "importlib_resources 5.10.2 pyhd8ed1ab_0",
   "certifi 2022.12.7 pyhd8ed1ab_0",
   "pyrsistent 0.19.3 py310h90acd4f_0",
   "pycparser 2.21 pyhd8ed1ab_0",
   "tk 8.6.12 h5dbffcc_0",
   "libev 4.33 haf1e3a3_1",
   "idna 3.4 pyhd8ed1ab_0",
   "beautifulsoup4 4.11.2 pyha770c72_0"
  ],
  "summary": "Fortran compiler and libraries from the GNU Compiler Collection",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "CONDA_BUILD_SYSROOT": "/Applications/Xcode_13.2.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.0.sdk",
  "MACOSX_DEPLOYMENT_TARGET": "11.0",
  "build_platform": "osx-64",
  "c_compiler": "clang",
  "c_compiler_version": "14",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cross_target_platform": "osx-arm64",
  "cxx_compiler": "clangxx",
  "cxx_compiler_version": "14",
  "extend_keys": [
   "ignore_version",
   "extend_keys",
   "pin_run_as_build",
   "ignore_build_only_deps"
  ],
  "fortran_compiler": "gfortran",
  "gfortran_version": "11.3.0",
  "gmp": "6",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "isl": "0.25",
  "libgfortran_version": "5.0.0",
  "libiconv": "1",
  "lua": "5",
  "macos_machine": "arm64-apple-darwin20.0.0",
  "mpfr": "4",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.10",
  "r_base": "3.5",
  "target_platform": "osx-arm64",
  "zip_keys": [
   [
    "gfortran_version",
    "libgfortran_version",
    "cross_target_platform",
    "macos_machine"
   ],
   [
    "c_compiler_version",
    "cxx_compiler_version"
   ]
  ],
  "zlib": "1.2"
 },
 "conda_pkg_format": "2",
 "files": [
  "bin/arm64-apple-darwin20.0.0-gfortran",
  "bin/gfortran",
  "lib/gcc/arm64-apple-darwin20.0.0/11.3.0/include-fixed/README",
  "lib/gcc/arm64-apple-darwin20.0.0/11.3.0/include-fixed/limits.h",
  "lib/gcc/arm64-apple-darwin20.0.0/11.3.0/include-fixed/syslimits.h",
  "lib/gcc/arm64-apple-darwin20.0.0/11.3.0/include/ISO_Fortran_binding.h",
  "lib/gcc/arm64-apple-darwin20.0.0/11.3.0/include/acc_prof.h",
  "lib/gcc/arm64-apple-darwin20.0.0/11.3.0/include/arm_acle.h",
  "lib/gcc/arm64-apple-darwin20.0.0/11.3.0/include/arm_bf16.h",
  "lib/gcc/arm64-apple-darwin20.0.0/11.3.0/include/arm_fp16.h",
  "lib/gcc/arm64-apple-darwin20.0.0/11.3.0/include/arm_neon.h",
  "lib/gcc/arm64-apple-darwin20.0.0/11.3.0/include/arm_sve.h",
  "lib/gcc/arm64-apple-darwin20.0.0/11.3.0/include/float.h",
  "lib/gcc/arm64-apple-darwin20.0.0/11.3.0/include/gcov.h",
  "lib/gcc/arm64-apple-darwin20.0.0/11.3.0/include/iso646.h",
  "lib/gcc/arm64-apple-darwin20.0.0/11.3.0/include/omp.h",
  "lib/gcc/arm64-apple-darwin20.0.0/11.3.0/include/openacc.h",
  "lib/gcc/arm64-apple-darwin20.0.0/11.3.0/include/quadmath.h",
  "lib/gcc/arm64-apple-darwin20.0.0/11.3.0/include/quadmath_weak.h",
  "lib/gcc/arm64-apple-darwin20.0.0/11.3.0/include/stdalign.h",
  "lib/gcc/arm64-apple-darwin20.0.0/11.3.0/include/stdarg.h",
  "lib/gcc/arm64-apple-darwin20.0.0/11.3.0/include/stdatomic.h",
  "lib/gcc/arm64-apple-darwin20.0.0/11.3.0/include/stdbool.h",
  "lib/gcc/arm64-apple-darwin20.0.0/11.3.0/include/stddef.h",
  "lib/gcc/arm64-apple-darwin20.0.0/11.3.0/include/stdfix.h",
  "lib/gcc/arm64-apple-darwin20.0.0/11.3.0/include/stdint-gcc.h",
  "lib/gcc/arm64-apple-darwin20.0.0/11.3.0/include/stdint.h",
  "lib/gcc/arm64-apple-darwin20.0.0/11.3.0/include/stdnoreturn.h",
  "lib/gcc/arm64-apple-darwin20.0.0/11.3.0/include/tgmath.h",
  "lib/gcc/arm64-apple-darwin20.0.0/11.3.0/include/unwind.h",
  "lib/gcc/arm64-apple-darwin20.0.0/11.3.0/include/varargs.h",
  "lib/libgfortran.a",
  "lib/libgfortran.spec",
  "lib/libgomp.a",
  "lib/libgomp.spec",
  "libexec/gcc/arm64-apple-darwin20.0.0/11.3.0/cc1",
  "libexec/gcc/arm64-apple-darwin20.0.0/11.3.0/cc1.bin",
  "libexec/gcc/arm64-apple-darwin20.0.0/11.3.0/collect2",
  "libexec/gcc/arm64-apple-darwin20.0.0/11.3.0/f951",
  "libexec/gcc/arm64-apple-darwin20.0.0/11.3.0/lto-wrapper"
 ],
 "index": {
  "arch": "arm64",
  "build": "h2a9d086_28",
  "build_number": 28,
  "depends": [
   "gmp >=6.2.1,<7.0a0",
   "isl >=0.25,<0.26.0a0",
   "libcxx >=14.0.6",
   "libgfortran-devel_osx-arm64 11.3.0.*",
   "libgfortran5 >=11.3.0",
   "libiconv >=1.17,<2.0a0",
   "libzlib >=1.2.13,<1.3.0a0",
   "mpc >=1.3.1,<2.0a0",
   "mpfr >=4.1.0,<5.0a0",
   "zlib"
  ],
  "license": "GPL-3.0-only WITH GCC-exception-3.1",
  "license_family": "GPL",
  "name": "gfortran_impl_osx-arm64",
  "platform": "osx",
  "subdir": "osx-arm64",
  "timestamp": 1676702616331,
  "version": "11.3.0"
 },
 "metadata_version": 1,
 "name": "gfortran_impl_osx-arm64",
 "raw_recipe": "{% set chost = macos_machine %}\n{% set build_number = 28 %}\n{% set version_suffix = \"\" %}\n\n{% if gfortran_version is undefined %}\n{% set gfortran_version = \"9.5.0\" %}\n{% set libgfortran_version = \"5.0.0\" %}\n{% endif %}\n\n{% set libgfortran_major_version = libgfortran_version.split(\".\")[0] %}\n{% set libgfortran_next_major = (libgfortran_version|int +1)|string %}\n{% set max_libgfortran_version = libgfortran_next_major + \".0.0.a0\" %}\n\n{% if gfortran_version == \"9.5.0\" %}\n    {% set url = \"https://ftp.gnu.org/gnu/gcc/gcc-9.5.0/gcc-9.5.0.tar.gz\" %}\n    {% set source_sha = \"15b34072105272a3eb37f6927409f7ce9aa0dd1498efebc35f851d6e6f029a4d\" %}\n{% elif gfortran_version == \"10.4.0\" and cross_target_platform == \"osx-64\" %}\n    {% set url = \"https://ftp.gnu.org/gnu/gcc/gcc-10.4.0/gcc-10.4.0.tar.gz\" %}\n    {% set source_sha = \"ab1974017834430de27fd803ade4389602a7d6ca1362496c57bef384b2a4cb07\" %}\n{% elif gfortran_version == \"10.3.0\" and cross_target_platform == \"osx-arm64\" %}\n    {% set url = \"https://github.com/fxcoudert/gcc/archive/refs/tags/gcc-10.3-arm-20210410.tar.gz\" %}\n    {% set source_sha = \"48b1ec3e09ad3fde2eeeebab6ce5aa17c7c58f74723e18090bc1c79f7b06d4d7\" %}\n{% elif gfortran_version == \"11.3.0\" %}\n    {% set url = \"https://ftp.gnu.org/gnu/gcc/gcc-11.3.0/gcc-11.3.0.tar.gz  \" %}\n    {% set source_sha = \"98438e6cc7294298b474cf0da7655d9a8c8b796421bb0210531c294a950374ed\" %}\n{% endif %}\n\n{% set gfortran_major_version = gfortran_version.split('.')[0]|int %}\n\npackage:\n  name: gfortran_impl_{{ cross_target_platform }}\n  version: {{ gfortran_version }}{{ version_suffix }}\n\nsource:\n  url: {{ url }}\n  sha256: {{ source_sha }}\n  patches:\n    - libgcc_macosx_min_version.patch  # [gfortran_version == \"9.5.0\"]\n    - gcc-11.3.0-arm.diff              # [cross_target_platform == \"osx-arm64\" and gfortran_version == \"11.3.0\"]\n    - gcc-11.3.0-arm-cross.diff        # [cross_target_platform == \"osx-64\" and gfortran_version == \"11.3.0\"]\n    - gcc-11.3-ventura.diff            # [gfortran_version == \"11.3.0\"]\n    - gcc-11.3-ventura2.diff           # [cross_target_platform != \"osx-arm64\" and gfortran_version == \"11.3.0\"]\n\nbuild:\n  number: {{ build_number }}\n  skip: True  # [win or (osx and arm64 and gfortran_version == \"10.3.0\")]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - make\n    - flex\n    - bison\n    - libiconv  # [build_platform != target_platform]\n    - zlib      # [build_platform != target_platform]\n    - gmp       # [build_platform != target_platform]\n    - mpfr      # [build_platform != target_platform]\n    - isl       # [build_platform != target_platform]\n    - mpc       # [build_platform != target_platform]\n    - coreutils  # [osx]\n  host:\n    - libiconv\n    - zlib\n    - gmp\n    - mpfr\n    - isl\n    - mpc\n\ntest:\n  files:\n    - hello.f90\n    - maths.f90\n    - omp-threadprivate.f90\n    - gfortran_test.sh\n  commands:\n    - echo \"CONDA_BUILD_SYSROOT=${CONDA_BUILD_SYSROOT}\"\n    - export SDKROOT=\"${CONDA_BUILD_SYSROOT}\"\n    - echo \"SDKROOT=${SDKROOT}\"\n    - set -ex\n    - export target_platform={{ target_platform }}\n    - export cross_target_platform={{ cross_target_platform }}\n    - bash gfortran_test.sh\n\noutputs:\n  - name: libgfortran-devel_{{ target_platform }}\n    version: {{ gfortran_version }}{{ version_suffix }}\n    build:\n      skip: True  # [target_platform != cross_target_platform]\n      noarch: generic\n    files:\n      # these are not generated for the cross compiler\n      - lib/gcc/{{ chost }}/{{ gfortran_version }}/libgomp.spec\n      - lib/gcc/{{ chost }}/{{ gfortran_version }}/libgfortran.spec\n      # fortran module files\n      - lib/gcc/{{ chost }}/{{ gfortran_version }}/finclude/**\n      # Static libraries and object files\n      #- lib/gcc/{{ chost }}/{{ gfortran_version }}/libgomp.a\n      #- lib/gcc/{{ chost }}/{{ gfortran_version }}/libgfortran.a\n      - lib/gcc/{{ chost }}/{{ gfortran_version }}/libgcc.a\n      - lib/gcc/{{ chost }}/{{ gfortran_version }}/libemutls_w.a\n      - lib/gcc/{{ chost }}/{{ gfortran_version }}/libgcc_eh.a\n      - lib/gcc/{{ chost }}/{{ gfortran_version }}/crtfastmath.o\n      - lib/gcc/{{ chost }}/{{ gfortran_version }}/crt3.o\n      - lib/gcc/{{ chost }}/{{ gfortran_version }}/d10-uwfef.o\n      - lib/gcc/{{ chost }}/{{ gfortran_version }}/crttms.o\n      - lib/gcc/{{ chost }}/{{ gfortran_version }}/crttme.o\n      - lib/gcc/{{ chost }}/{{ gfortran_version }}/libgcov.a\n      - lib/gcc/{{ chost }}/{{ gfortran_version }}/libcaf_single.a\n\n    test:\n      commands:\n        - test -f \"${PREFIX}/lib/gcc/{{ chost }}/{{ gfortran_version }}/libgomp.spec\"\n        - test -f \"${PREFIX}/lib/gcc/{{ chost }}/{{ gfortran_version }}/libgfortran.spec\"\n        - test -f \"${PREFIX}/lib/gcc/{{ chost }}/{{ gfortran_version }}/finclude/openacc_lib.h\"\n        - test -f \"${PREFIX}/lib/gcc/{{ chost }}/{{ gfortran_version }}/finclude/openacc.f90\"\n        - test -f \"${PREFIX}/lib/gcc/{{ chost }}/{{ gfortran_version }}/finclude/openacc.mod\"\n        - test -f \"${PREFIX}/lib/gcc/{{ chost }}/{{ gfortran_version }}/finclude/omp_lib.h\"\n        - test -f \"${PREFIX}/lib/gcc/{{ chost }}/{{ gfortran_version }}/finclude/omp_lib.f90\"\n        - test -f \"${PREFIX}/lib/gcc/{{ chost }}/{{ gfortran_version }}/finclude/omp_lib.mod\"\n        - test -f \"${PREFIX}/lib/gcc/{{ chost }}/{{ gfortran_version }}/finclude/ieee_features.mod\"\n\n  - name: gfortran_impl_{{ cross_target_platform }}\n    version: {{ gfortran_version }}{{ version_suffix }}\n    build:\n      activate_in_script: True\n      skip: True  # [win]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - make\n        - flex\n        - bison\n        - libiconv  # [build_platform != target_platform]\n        - zlib      # [build_platform != target_platform]\n        - gmp       # [build_platform != target_platform]\n        - mpfr      # [build_platform != target_platform]\n        - isl       # [build_platform != target_platform]\n        - mpc       # [build_platform != target_platform]\n      host:\n        - libiconv\n        - zlib\n        - gmp\n        - mpfr\n        - isl\n        - mpc\n      run:\n        - libgfortran{{ libgfortran_major_version }} >={{ gfortran_version }}{{ version_suffix }}  # [target_platform == cross_target_platform]\n        - libgfortran-devel_{{ target_platform }} {{ gfortran_version }}{{ version_suffix }}       # [target_platform == cross_target_platform]\n        - isl\n        - mpfr\n        - mpc\n        - gmp\n        - zlib\n        - libiconv\n    files:\n      - bin/gfortran   # [target_platform == cross_target_platform]\n      - bin/{{ chost }}-gfortran\n\n      - libexec/gcc/{{ chost }}/{{ gfortran_version }}/collect2\n      - libexec/gcc/{{ chost }}/{{ gfortran_version }}/f951\n      - libexec/gcc/{{ chost }}/{{ gfortran_version }}/lto-wrapper\n      - libexec/gcc/{{ chost }}/{{ gfortran_version }}/cc1\n      - libexec/gcc/{{ chost }}/{{ gfortran_version }}/cc1.bin\n      - lib/libgfortran.spec\n\n      # For -fopenmp\n      - lib/libgomp.spec\n\n      # For -static\n      - lib/libgfortran.a\n      - lib/libgomp.a\n\n      # include{,-fixed} may not be needed unless -fopenmp is passed (not sure on that)\n      - lib/gcc/{{ chost }}/{{ gfortran_version }}/include-fixed/**\n      - lib/gcc/{{ chost }}/{{ gfortran_version }}/include/**\n\n      # Stub libraries\n      - lib/libgcc_ext.10.4.dylib\n      - lib/libgcc_ext.10.5.dylib\n\n\n  - name: libgfortran\n    version: {{ libgfortran_version }}{{ version_suffix }}\n    target: {{ cross_target_platform }}\n    build:\n      skip: True  # [target_platform != cross_target_platform]\n      string: {{ gfortran_version.replace(\".\", \"_\") }}_h{{ PKG_HASH }}_{{ build_number }}\n    requirements:\n      run:\n        - libgfortran{{ libgfortran_major_version }}\n\n  - name: libgfortran{{ libgfortran_major_version }}\n    version: {{ gfortran_version }}{{ version_suffix }}\n    target: {{ cross_target_platform }}\n    build:\n      skip: True  # [target_platform != cross_target_platform]\n      run_exports:\n        - libgfortran{{ libgfortran_major_version }} >={{ gfortran_version }}{{ version_suffix }}\n    files:\n      - lib/libgfortran.dylib\n      - lib/libgfortran.{{ libgfortran_major_version }}.dylib\n      - lib/libgomp.dylib\n      - lib/libgomp.1.dylib\n\n      # Including libquadmath for the time\n      # being. This will need to be broken\n      # out in the long term.\n      - lib/libquadmath.dylib\n      - lib/libquadmath.0.dylib\n\n      # Including libgcc_s for the time\n      # being. This will need to be broken\n      # out in the long term.\n      - lib/libgcc_s.1.dylib            # [cross_target_platform == \"osx-64\"]\n      {% if gfortran_major_version <= 9 %}\n      - lib/libgcc_s_ppc64.1.dylib      # [cross_target_platform == \"osx-64\"]\n      - lib/libgcc_s_x86_64.1.dylib     # [cross_target_platform == \"osx-64\"]\n      {% else %}\n      - lib/libgcc_s.1.1.dylib          # [cross_target_platform == \"osx-64\"]\n      {% endif %}\n      - lib/libgcc_s.1.1.dylib          # [cross_target_platform == \"osx-arm64\"]\n\n    requirements:\n      run:\n        - llvm-openmp >=8.0.0\n      run_constrained:\n        - libgfortran {{ libgfortran_version }}{{ version_suffix }} *_{{ build_number }}\n\n    test:\n      commands:\n        - test -f \"${PREFIX}/lib/libgfortran.dylib\"\n        - test -f \"${PREFIX}/lib/libgfortran.{{ libgfortran_major_version }}.dylib\"\n\n        - test -f \"${PREFIX}/lib/libgomp.dylib\"\n        - test -f \"${PREFIX}/lib/libgomp.1.dylib\"\n\n        - test -f \"${PREFIX}/lib/libquadmath.dylib\"\n        - test -f \"${PREFIX}/lib/libquadmath.0.dylib\"\n\n        - test -f \"${PREFIX}/lib/libgcc_s.1.dylib\"          # [cross_target_platform == \"osx-64\"]\n        {% if gfortran_major_version <= 9 %}\n        - test -f \"${PREFIX}/lib/libgcc_s_ppc64.1.dylib\"    # [cross_target_platform == \"osx-64\"]\n        - test -f \"${PREFIX}/lib/libgcc_s_x86_64.1.dylib\"   # [cross_target_platform == \"osx-64\"]\n        {% else %}\n        - test -f \"${PREFIX}/lib/libgcc_s.1.1.dylib\"        # [cross_target_platform == \"osx-64\"]\n        {% endif %}\n\n        - test -f \"${PREFIX}/lib/libgcc_s.2.dylib\"          # [cross_target_platform == \"osx-arm64\"]\n\nabout:\n  home: http://gcc.gnu.org/\n  license: GPL-3.0-only WITH GCC-exception-3.1\n  license_family: GPL\n  license_file: COPYING3\n  summary: Fortran compiler and libraries from the GNU Compiler Collection\n\nextra:\n  recipe-maintainers:\n    - beckermr\n    - isuruf\n",
 "rendered_recipe": {
  "about": {
   "home": "http://gcc.gnu.org/",
   "license": "GPL-3.0-only WITH GCC-exception-3.1",
   "license_family": "GPL",
   "license_file": "COPYING3",
   "summary": "Fortran compiler and libraries from the GNU Compiler Collection"
  },
  "build": {
   "activate_in_script": true,
   "number": "28",
   "string": "h2a9d086_28"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "beckermr",
    "isuruf"
   ]
  },
  "package": {
   "name": "gfortran_impl_osx-arm64",
   "version": "11.3.0"
  },
  "requirements": {
   "build": [
    "bison 3.8 he49afe7_0",
    "ca-certificates 2022.12.7 h033912b_0",
    "cctools_osx-64 973.0.1 hcc6d90d_11",
    "cctools_osx-arm64 973.0.1 hfd1dfa6_11",
    "clang 14.0.6 h694c41f_0",
    "clang-14 14.0.6 default_h55ffa42_0",
    "clang_osx-arm64 14.0.6 he41d1a2_4",
    "clangxx 14.0.6 default_h55ffa42_0",
    "clangxx_osx-arm64 14.0.6 h748fd88_4",
    "compiler-rt 14.0.6 h613da45_0",
    "compiler-rt_osx-64 14.0.6 hab78ec2_0",
    "flex 2.6.4 hcc69e7b_1004",
    "gmp 6.2.1 h2e338ed_0",
    "isl 0.25 hb486fe8_0",
    "ld64_osx-64 609 hfd63004_11",
    "ld64_osx-arm64 609 h566df06_11",
    "libclang-cpp14 14.0.6 default_h55ffa42_0",
    "libcxx 14.0.6 hccf4f1f_0",
    "libiconv 1.17 hac89ed1_0",
    "libllvm14 14.0.6 h5b596cc_1",
    "libzlib 1.2.13 hfd90126_4",
    "llvm-tools 14.0.6 h5b596cc_1",
    "m4 1.4.18 haf1e3a3_1001",
    "make 4.3 h22f3db7_1",
    "mpc 1.3.1 h81bd1dd_0",
    "mpfr 4.1.0 h0f52abe_1",
    "openssl 3.0.8 hfd90126_0",
    "sigtool 0.1.3 h88f4db0_0",
    "tapi 1100.0.11 h9ce4665_0",
    "zlib 1.2.13 hfd90126_4"
   ],
   "host": [
    "gmp 6.2.1 h9f76cd9_0",
    "isl 0.25 h9a09cb3_0",
    "libcxx 14.0.6 h2692d47_0",
    "libiconv 1.17 he4db4b2_0",
    "libzlib 1.2.13 h03a7124_4",
    "mpc 1.3.1 h91ba8db_0",
    "mpfr 4.1.0 h6d7a090_1",
    "zlib 1.2.13 h03a7124_4"
   ],
   "run": [
    "gmp >=6.2.1,<7.0a0",
    "isl >=0.25,<0.26.0a0",
    "libcxx >=14.0.6",
    "libgfortran-devel_osx-arm64 11.3.0.*",
    "libgfortran5 >=11.3.0",
    "libiconv >=1.17,<2.0a0",
    "libzlib >=1.2.13,<1.3.0a0",
    "mpc >=1.3.1,<2.0a0",
    "mpfr >=4.1.0,<5.0a0",
    "zlib"
   ]
  },
  "source": {
   "patches": [
    "gcc-11.3-ventura.diff",
    "gcc-11.3.0-arm.diff"
   ],
   "sha256": "98438e6cc7294298b474cf0da7655d9a8c8b796421bb0210531c294a950374ed",
   "url": "https://ftp.gnu.org/gnu/gcc/gcc-11.3.0/gcc-11.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "echo \"CONDA_BUILD_SYSROOT=${CONDA_BUILD_SYSROOT}\"",
    "export SDKROOT=\"${CONDA_BUILD_SYSROOT}\"",
    "echo \"SDKROOT=${SDKROOT}\"",
    "set -ex",
    "export target_platform=osx-arm64",
    "export cross_target_platform=osx-arm64",
    "bash gfortran_test.sh"
   ],
   "files": [
    "gfortran_test.sh",
    "hello.f90",
    "maths.f90",
    "omp-threadprivate.f90"
   ]
  }
 },
 "version": "11.3.0"
}
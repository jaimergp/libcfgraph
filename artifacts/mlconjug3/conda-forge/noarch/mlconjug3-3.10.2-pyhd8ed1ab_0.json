{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.23.3",
  "conda_version": "22.11.1",
  "description": "A Command Line application and Python library to conjugate verbs in French, English, Spanish, Italian, Portuguese and Romanian (more soon) using Machine Learning techniques.\n\nConjugate any verb in one of the supported languages, even completely new or made-up verbs, with the help of a pre-trained Machine Learning model.\nThe pre-trained models are composed of a binary feature extractor, a feature selector using Linear Support Vector Classification, and a classifier using Stochastic Gradient Descent.\nEasily modify and retrain the models using any compatible classifiers from scikit-learn.\nUses Verbiste as the training data for the French model, and unsupervised learning techniques to generate the data for the English, Spanish, Italian, Portuguese and Romanian models.\n\n\nFree software: MIT license\n\nDocumentation: https://mlconjug3.readthedocs.io.\n\nSUPPORTED LANGUAGES:\n\n-   French\n-   English\n-   Spanish\n-   Italian\n-   Portuguese\n-   Romanian\n\nFEATURES:\n\n-   Command Line Interface tool.\n-   Easy to use and intuitive API.\n-   Includes pre-trained models with 99% + accuracy in predicting conjugation class of unknown verbs.\n-   Easily train new models or add new languages.\n-   Uses caching and multiprocessing for maximum performance.\n-   Easily integrate mlconjug3 in your own projects.\n-   Extensive documentation.\n-   Powerful machine learning algorithms for accurate verb conjugation predictions.\n-   Support for multiple languages including English, Spanish, French, and German.\n-   Customizable settings to fine-tune performance and adapt to different use cases.\n-   Robust error handling and troubleshooting capabilities.\n-   Regular updates and improvements to ensure optimal performance.\n-   Community support and contributions to continuously expand the library\u2019s capabilities.\n-   Integration with popular libraries such as scikit-learn and numpy for machine learning tasks.\n\n\nUsage\n=====\n\n> **note**\n>\n> The default language is French.\n> :   When called without specifying a language, the library will try to\n>     conjugate the verb in French.\n>\nTo use MLConjug3 from the command line:\n\n    $ mlconjug3 manger\n\n    $ mlconjug3 bring -l en\n\n    $ mlconjug3 gallofar --language es\n\n    $ mlconjug3 -o, --output (Path of the filename for storing the conjugation tables.)\n\n    $ mlconjug3 -s, --subject (The subject format type for the conjugated forms). The\n                       values can be 'abbrev' or 'pronoun'. The default value\n                       is 'abbrev'.\n\n    $ mlconjug3 -h Show the help menu\n",
  "dev_url": "https://github.com/SekouDiaoNlp/mlconjug3",
  "doc_url": "https://mlconjug3.readthedocs.io/en/latest/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "SekouDiaoNlp"
   ]
  },
  "home": "https://github.com/SekouDiaoNlp/mlconjug3",
  "identifiers": [],
  "keywords": [],
  "license": "MIT",
  "license_file": "LICENSE",
  "root_pkgs": [
   "watchgod 0.8.2 pyhd8ed1ab_0",
   "pysocks 1.7.1 pyha2e5f31_6",
   "ripgrep 13.0.0 h2f28480_2",
   "su-exec 0.2 h166bdaf_1003",
   "libnghttp2 1.51.0 hff17c54_0",
   "xz 5.2.6 h166bdaf_0",
   "mdurl 0.1.0 pyhd8ed1ab_0",
   "libzlib 1.2.13 h166bdaf_4",
   "chardet 5.1.0 py310hff52083_0",
   "setuptools 65.6.3 pyhd8ed1ab_0",
   "c-ares 1.18.1 h7f98852_0",
   "pkginfo 1.9.6 pyhd8ed1ab_0",
   "openssl 3.0.7 h0b41bf4_2",
   "reproc-cpp 14.2.4 hcb278e6_0",
   "conda-package-streaming 0.7.0 pyhd8ed1ab_1",
   "libffi 3.4.2 h7f98852_5",
   "platformdirs 2.6.2 pyhd8ed1ab_0",
   "joblib 1.2.0 pyhd8ed1ab_0",
   "charset-normalizer 2.1.1 pyhd8ed1ab_0",
   "pytz 2022.7.1 pyhd8ed1ab_0",
   "pluggy 1.0.0 pyhd8ed1ab_5",
   "python-fastjsonschema 2.16.2 pyhd8ed1ab_0",
   "python 3.10.8 h4a9ceb5_0_cpython",
   "requests 2.28.2 pyhd8ed1ab_0",
   "fmt 9.1.0 h924138e_0",
   "jsonschema 4.17.3 pyhd8ed1ab_0",
   "patchelf 0.17.2 h58526e2_0",
   "importlib-metadata 6.0.0 pyha770c72_0",
   "conda-build 3.23.3 py310hff52083_1",
   "dataclasses 0.8 pyhc8e2a94_3",
   "libmambapy 1.1.0 py310h1428755_3",
   "boa 0.14.0 pyhd8ed1ab_0",
   "wheel 0.38.4 pyhd8ed1ab_0",
   "gettext 0.21.1 h27087fc_0",
   "libgcc-ng 12.2.0 h65d4601_19",
   "conda 22.11.1 py310hff52083_1",
   "python-libarchive-c 4.0 py310hff52083_2",
   "soupsieve 2.3.2.post1 pyhd8ed1ab_0",
   "rich 13.3.1 pyhd8ed1ab_1",
   "colorama 0.4.6 pyhd8ed1ab_0",
   "wcwidth 0.2.6 pyhd8ed1ab_0",
   "anaconda-client 1.11.0 pyhd8ed1ab_1",
   "zipp 3.12.0 pyhd8ed1ab_0",
   "lz4-c 1.9.4 hcb278e6_0",
   "tk 8.6.12 h27826a3_0",
   "libnsl 2.0.0 h7f98852_0",
   "typing-extensions 4.4.0 hd8ed1ab_0",
   "libcurl 7.87.0 hdc1c0ab_0",
   "idna 3.4 pyhd8ed1ab_0",
   "prompt-toolkit 3.0.36 pyha770c72_0",
   "yaml 0.2.5 h7f98852_2",
   "toolz 0.12.0 pyhd8ed1ab_0",
   "pybind11-abi 4 hd8ed1ab_3",
   "pycosat 0.6.4 py310h5764c6d_1",
   "python_abi 3.10 3_cp310",
   "tzdata 2022g h191b570_0",
   "libarchive 3.6.2 h3d51595_0",
   "prompt_toolkit 3.0.36 hd8ed1ab_0",
   "_libgcc_mutex 0.1 conda_forge",
   "json5 0.9.5 pyh9f0ad1d_0",
   "yaml-cpp 0.7.0 h27087fc_2",
   "curl 7.87.0 hdc1c0ab_0",
   "glob2 0.7 py_0",
   "perl 5.32.1 2_h7f98852_perl5",
   "jinja2 3.1.2 pyhd8ed1ab_1",
   "libuuid 2.32.1 h7f98852_1000",
   "icu 70.1 h27087fc_0",
   "cffi 1.15.1 py310h255011f_3",
   "toml 0.10.2 pyhd8ed1ab_0",
   "mamba 1.1.0 py310h51d5547_3",
   "typing_extensions 4.4.0 pyha770c72_0",
   "libgomp 12.2.0 h65d4601_19",
   "libev 4.33 h516909a_1",
   "libedit 3.1.20191231 he28a2e2_2",
   "_openmp_mutex 4.5 2_gnu",
   "readline 8.1.2 h0f457ee_0",
   "expat 2.5.0 h27087fc_0",
   "pyrsistent 0.19.3 py310h1fa729e_0",
   "conda-package-handling 2.0.2 pyh38be061_0",
   "pyyaml 6.0 py310h5764c6d_5",
   "filelock 3.9.0 pyhd8ed1ab_0",
   "traitlets 5.8.1 pyhd8ed1ab_0",
   "pygments 2.14.0 pyhd8ed1ab_0",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "krb5 1.20.1 h81ceb04_0",
   "ruamel.yaml.clib 0.2.7 py310h1fa729e_1",
   "jupyter_core 5.1.5 py310hff52083_0",
   "zstd 1.5.2 h3eb15da_6",
   "urllib3 1.26.14 pyhd8ed1ab_0",
   "nbformat 5.7.3 pyhd8ed1ab_0",
   "git 2.39.1 pl5321h693f4a3_0",
   "ruamel.yaml 0.17.21 py310h5764c6d_2",
   "six 1.16.0 pyh6c4a22f_0",
   "pkgutil-resolve-name 1.3.10 pyhd8ed1ab_0",
   "markdown-it-py 2.1.0 pyhd8ed1ab_0",
   "importlib_resources 5.10.2 pyhd8ed1ab_0",
   "libssh2 1.10.0 hf14f497_3",
   "psutil 5.9.4 py310h5764c6d_0",
   "libiconv 1.17 h166bdaf_0",
   "clyent 1.2.2 py_1",
   "reproc 14.2.4 h0b41bf4_0",
   "libsolv 0.7.23 h3eb15da_0",
   "keyutils 1.6.1 h166bdaf_0",
   "ca-certificates 2022.12.7 ha878542_0",
   "pcre2 10.40 hc3806b6_0",
   "ruamel_yaml 0.15.80 py310h5764c6d_1008",
   "tini 0.19.0 h166bdaf_1",
   "attrs 22.2.0 pyh71513ae_0",
   "patch 2.7.6 h7f98852_1002",
   "brotlipy 0.7.0 py310h5764c6d_1005",
   "pyopenssl 23.0.0 pyhd8ed1ab_0",
   "libstdcxx-ng 12.2.0 h46fd767_19",
   "bzip2 1.0.8 h7f98852_4",
   "ld_impl_linux-64 2.40 h41732ed_0",
   "cryptography 39.0.0 py310h34c0648_0",
   "certifi 2022.12.7 pyhd8ed1ab_0",
   "lzo 2.10 h516909a_1000",
   "libsqlite 3.40.0 h753d276_0",
   "libxml2 2.10.3 h7463322_0",
   "tqdm 4.64.1 pyhd8ed1ab_0",
   "backports 1.0 pyhd8ed1ab_3",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "zstandard 0.19.0 py310hdeb6495_1",
   "ncurses 6.3 h27087fc_1",
   "markupsafe 2.1.2 py310h1fa729e_0",
   "libmamba 1.1.0 hde2b089_3",
   "pycparser 2.21 pyhd8ed1ab_0",
   "beautifulsoup4 4.11.1 pyha770c72_0",
   "anyio 3.6.2 pyhd8ed1ab_0",
   "sniffio 1.3.0 pyhd8ed1ab_0",
   "liblief 0.11.5 h9c3ff4c_1",
   "click 8.1.3 unix_pyhd8ed1ab_2",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "jq 1.6 h36c2ea0_1000",
   "oniguruma 6.9.8 h166bdaf_0",
   "conda-forge-ci-setup 3.27.0 py310hce54274_100",
   "pip 23.0 pyhd8ed1ab_0",
   "conda-env 2.6.0 1",
   "py-lief 0.11.5 py310h122e73d_1"
  ],
  "summary": "A Python library to conjugate French, English, Spanish, Italian, Portuguese and Romanian verbs using Machine Learning techniques.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "cdt_name": "cos6",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "docker_image": "quay.io/condaforge/linux-anvil-cos7-x86_64",
  "extend_keys": [
   "extend_keys",
   "pin_run_as_build",
   "ignore_build_only_deps",
   "ignore_version"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.10",
  "r_base": "3.5",
  "target_platform": "linux-64"
 },
 "conda_pkg_format": "2",
 "files": [
  "site-packages/mlconjug3-3.10.2.dist-info/INSTALLER",
  "site-packages/mlconjug3-3.10.2.dist-info/LICENSE",
  "site-packages/mlconjug3-3.10.2.dist-info/METADATA",
  "site-packages/mlconjug3-3.10.2.dist-info/RECORD",
  "site-packages/mlconjug3-3.10.2.dist-info/REQUESTED",
  "site-packages/mlconjug3-3.10.2.dist-info/WHEEL",
  "site-packages/mlconjug3-3.10.2.dist-info/direct_url.json",
  "site-packages/mlconjug3/PyVerbiste/PyVerbiste.py",
  "site-packages/mlconjug3/PyVerbiste/PyVerbiste.pyi",
  "site-packages/mlconjug3/PyVerbiste/__init__.py",
  "site-packages/mlconjug3/__init__.py",
  "site-packages/mlconjug3/__init__.pyi",
  "site-packages/mlconjug3/cli.py",
  "site-packages/mlconjug3/cli.pyi",
  "site-packages/mlconjug3/config/config.yaml",
  "site-packages/mlconjug3/conjug_manager/__init__.py",
  "site-packages/mlconjug3/conjug_manager/conjug_manager.py",
  "site-packages/mlconjug3/conjug_manager/conjug_manager.pyi",
  "site-packages/mlconjug3/constants/__init__.py",
  "site-packages/mlconjug3/constants/constants.py",
  "site-packages/mlconjug3/constants/constants.pyi",
  "site-packages/mlconjug3/data/conjug_manager/conjugation-en.json",
  "site-packages/mlconjug3/data/conjug_manager/conjugation-en.xml",
  "site-packages/mlconjug3/data/conjug_manager/conjugation-es.json",
  "site-packages/mlconjug3/data/conjug_manager/conjugation-es.xml",
  "site-packages/mlconjug3/data/conjug_manager/conjugation-fr.json",
  "site-packages/mlconjug3/data/conjug_manager/conjugation-fr.xml",
  "site-packages/mlconjug3/data/conjug_manager/conjugation-it.json",
  "site-packages/mlconjug3/data/conjug_manager/conjugation-it.xml",
  "site-packages/mlconjug3/data/conjug_manager/conjugation-pt.json",
  "site-packages/mlconjug3/data/conjug_manager/conjugation-pt.xml",
  "site-packages/mlconjug3/data/conjug_manager/conjugation-ro.json",
  "site-packages/mlconjug3/data/conjug_manager/conjugation-ro.xml",
  "site-packages/mlconjug3/data/conjug_manager/verbiste-es-en-it-pt-ro.zip",
  "site-packages/mlconjug3/data/conjug_manager/verbs-en.json",
  "site-packages/mlconjug3/data/conjug_manager/verbs-en.xml",
  "site-packages/mlconjug3/data/conjug_manager/verbs-es.json",
  "site-packages/mlconjug3/data/conjug_manager/verbs-es.xml",
  "site-packages/mlconjug3/data/conjug_manager/verbs-fr.json",
  "site-packages/mlconjug3/data/conjug_manager/verbs-fr.xml",
  "site-packages/mlconjug3/data/conjug_manager/verbs-it.json",
  "site-packages/mlconjug3/data/conjug_manager/verbs-it.xml",
  "site-packages/mlconjug3/data/conjug_manager/verbs-pt.json",
  "site-packages/mlconjug3/data/conjug_manager/verbs-pt.xml",
  "site-packages/mlconjug3/data/conjug_manager/verbs-ro.json",
  "site-packages/mlconjug3/data/conjug_manager/verbs-ro.xml",
  "site-packages/mlconjug3/data/models/trained_model-en-final.zip",
  "site-packages/mlconjug3/data/models/trained_model-es-final.zip",
  "site-packages/mlconjug3/data/models/trained_model-fr-final.zip",
  "site-packages/mlconjug3/data/models/trained_model-it-final.zip",
  "site-packages/mlconjug3/data/models/trained_model-pt-final.zip",
  "site-packages/mlconjug3/data/models/trained_model-ro-final.zip",
  "site-packages/mlconjug3/dataset/__init__.py",
  "site-packages/mlconjug3/dataset/dataset.py",
  "site-packages/mlconjug3/dataset/dataset.pyi",
  "site-packages/mlconjug3/feature_extractor/__init__.py",
  "site-packages/mlconjug3/feature_extractor/feature_extractor.py",
  "site-packages/mlconjug3/feature_extractor/feature_extractor.pyi",
  "site-packages/mlconjug3/locale/es/LC_MESSAGES/PyVerbiste.mo",
  "site-packages/mlconjug3/locale/es/LC_MESSAGES/PyVerbiste.po",
  "site-packages/mlconjug3/locale/es/LC_MESSAGES/cli.mo",
  "site-packages/mlconjug3/locale/es/LC_MESSAGES/cli.po",
  "site-packages/mlconjug3/locale/es/LC_MESSAGES/mlconjug.mo",
  "site-packages/mlconjug3/locale/es/LC_MESSAGES/mlconjug.po",
  "site-packages/mlconjug3/locale/fr/LC_MESSAGES/PyVerbiste.mo",
  "site-packages/mlconjug3/locale/fr/LC_MESSAGES/PyVerbiste.po",
  "site-packages/mlconjug3/locale/fr/LC_MESSAGES/cli.mo",
  "site-packages/mlconjug3/locale/fr/LC_MESSAGES/cli.po",
  "site-packages/mlconjug3/locale/fr/LC_MESSAGES/mlconjug.mo",
  "site-packages/mlconjug3/locale/fr/LC_MESSAGES/mlconjug.po",
  "site-packages/mlconjug3/locale/it/LC_MESSAGES/PyVerbiste.mo",
  "site-packages/mlconjug3/locale/it/LC_MESSAGES/PyVerbiste.po",
  "site-packages/mlconjug3/locale/it/LC_MESSAGES/cli.mo",
  "site-packages/mlconjug3/locale/it/LC_MESSAGES/cli.po",
  "site-packages/mlconjug3/locale/it/LC_MESSAGES/mlconjug.mo",
  "site-packages/mlconjug3/locale/it/LC_MESSAGES/mlconjug.po",
  "site-packages/mlconjug3/locale/pt/LC_MESSAGES/PyVerbiste.mo",
  "site-packages/mlconjug3/locale/pt/LC_MESSAGES/PyVerbiste.po",
  "site-packages/mlconjug3/locale/pt/LC_MESSAGES/cli.mo",
  "site-packages/mlconjug3/locale/pt/LC_MESSAGES/cli.po",
  "site-packages/mlconjug3/locale/pt/LC_MESSAGES/mlconjug.mo",
  "site-packages/mlconjug3/locale/pt/LC_MESSAGES/mlconjug.po",
  "site-packages/mlconjug3/locale/ro/LC_MESSAGES/PyVerbiste.mo",
  "site-packages/mlconjug3/locale/ro/LC_MESSAGES/PyVerbiste.po",
  "site-packages/mlconjug3/locale/ro/LC_MESSAGES/cli.mo",
  "site-packages/mlconjug3/locale/ro/LC_MESSAGES/cli.po",
  "site-packages/mlconjug3/locale/ro/LC_MESSAGES/mlconjug.mo",
  "site-packages/mlconjug3/locale/ro/LC_MESSAGES/mlconjug.po",
  "site-packages/mlconjug3/mlconjug.py",
  "site-packages/mlconjug3/mlconjug.pyi",
  "site-packages/mlconjug3/models/__init__.py",
  "site-packages/mlconjug3/models/models.py",
  "site-packages/mlconjug3/models/models.pyi",
  "site-packages/mlconjug3/py.typed",
  "site-packages/mlconjug3/utils/__init__.py",
  "site-packages/mlconjug3/utils/logger.py",
  "site-packages/mlconjug3/utils/logger.pyi",
  "site-packages/mlconjug3/utils/model_trainer.py",
  "site-packages/mlconjug3/utils/model_trainer.pyi",
  "site-packages/mlconjug3/verbs/__init__.py",
  "site-packages/mlconjug3/verbs/verbs.py",
  "site-packages/mlconjug3/verbs/verbs.pyi",
  "site-packages/tests/__init__.py",
  "site-packages/tests/config.toml",
  "site-packages/tests/config.yaml",
  "site-packages/tests/models/.model",
  "site-packages/tests/test_mlconjug.py"
 ],
 "index": {
  "arch": null,
  "build": "pyhd8ed1ab_0",
  "build_number": 0,
  "depends": [
   "click >=8.1.3",
   "defusedxml",
   "joblib",
   "numpy",
   "python >=3.8",
   "pyyaml",
   "rich <13.3",
   "scikit-learn 1.2.1",
   "tomlkit"
  ],
  "license": "MIT",
  "name": "mlconjug3",
  "noarch": "python",
  "platform": null,
  "subdir": "noarch",
  "timestamp": 1675499424396,
  "version": "3.10.2"
 },
 "metadata_version": 1,
 "name": "mlconjug3",
 "raw_recipe": "{% set name = \"mlconjug3\" %}\n{% set version = \"3.10.2\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/mlconjug3-{{ version }}.tar.gz\n  sha256: feac567bbc7efd033aefb62a310bb53f4cc1b8bd5773c8021459a4d09d121478\n\nbuild:\n  number: 0\n  noarch: python\n  entry_points:\n    - mlconjug3=mlconjug3.cli:main\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - pytest-runner\n    - python >=3.8\n    - poetry\n  run:\n    - click >=8.1.3\n    - defusedxml\n    - joblib\n    - numpy\n    - python >=3.8\n    - scikit-learn ==1.2.1\n    - rich <13.3\n    - pyyaml\n    - tomlkit\n\ntest:\n  imports:\n    - mlconjug3\n  commands:\n    - pip check\n    - mlconjug3 --help\n  requires:\n    - pip\n    - poetry\n\nabout:\n  home: https://github.com/SekouDiaoNlp/mlconjug3\n  summary: A Python library to conjugate French, English, Spanish, Italian, Portuguese and Romanian verbs using Machine Learning techniques.\n  license: MIT\n  license_file: LICENSE\n  description: |\n    A Command Line application and Python library to conjugate verbs in French, English, Spanish, Italian, Portuguese and Romanian (more soon) using Machine Learning techniques.\n\n    Conjugate any verb in one of the supported languages, even completely new or made-up verbs, with the help of a pre-trained Machine Learning model.\n    The pre-trained models are composed of a binary feature extractor, a feature selector using Linear Support Vector Classification, and a classifier using Stochastic Gradient Descent.\n    Easily modify and retrain the models using any compatible classifiers from scikit-learn.\n    Uses Verbiste as the training data for the French model, and unsupervised learning techniques to generate the data for the English, Spanish, Italian, Portuguese and Romanian models.\n\n\n    Free software: MIT license\n\n    Documentation: https://mlconjug3.readthedocs.io.\n\n    SUPPORTED LANGUAGES:\n\n    -   French\n    -   English\n    -   Spanish\n    -   Italian\n    -   Portuguese\n    -   Romanian\n\n    FEATURES:\n\n    -   Command Line Interface tool.\n    -   Easy to use and intuitive API.\n    -   Includes pre-trained models with 99% + accuracy in predicting conjugation class of unknown verbs.\n    -   Easily train new models or add new languages.\n    -   Uses caching and multiprocessing for maximum performance.\n    -   Easily integrate mlconjug3 in your own projects.\n    -   Extensive documentation.\n    -   Powerful machine learning algorithms for accurate verb conjugation predictions.\n    -   Support for multiple languages including English, Spanish, French, and German.\n    -   Customizable settings to fine-tune performance and adapt to different use cases.\n    -   Robust error handling and troubleshooting capabilities.\n    -   Regular updates and improvements to ensure optimal performance.\n    -   Community support and contributions to continuously expand the library\u2019s capabilities.\n    -   Integration with popular libraries such as scikit-learn and numpy for machine learning tasks.\n\n\n    Usage\n    =====\n\n    > **note**\n    >\n    > The default language is French.\n    > :   When called without specifying a language, the library will try to\n    >     conjugate the verb in French.\n    >\n    To use MLConjug3 from the command line:\n\n        $ mlconjug3 manger\n\n        $ mlconjug3 bring -l en\n\n        $ mlconjug3 gallofar --language es\n\n        $ mlconjug3 -o, --output (Path of the filename for storing the conjugation tables.)\n\n        $ mlconjug3 -s, --subject (The subject format type for the conjugated forms). The\n                           values can be 'abbrev' or 'pronoun'. The default value\n                           is 'abbrev'.\n\n        $ mlconjug3 -h Show the help menu\n  doc_url: https://mlconjug3.readthedocs.io/en/latest/\n  dev_url: https://github.com/SekouDiaoNlp/mlconjug3\n\nextra:\n  recipe-maintainers:\n    - SekouDiaoNlp\n",
 "rendered_recipe": {
  "about": {
   "description": "A Command Line application and Python library to conjugate verbs in French, English, Spanish, Italian, Portuguese and Romanian (more soon) using Machine Learning techniques.\n\nConjugate any verb in one of the supported languages, even completely new or made-up verbs, with the help of a pre-trained Machine Learning model.\nThe pre-trained models are composed of a binary feature extractor, a feature selector using Linear Support Vector Classification, and a classifier using Stochastic Gradient Descent.\nEasily modify and retrain the models using any compatible classifiers from scikit-learn.\nUses Verbiste as the training data for the French model, and unsupervised learning techniques to generate the data for the English, Spanish, Italian, Portuguese and Romanian models.\n\n\nFree software: MIT license\n\nDocumentation: https://mlconjug3.readthedocs.io.\n\nSUPPORTED LANGUAGES:\n\n-   French\n-   English\n-   Spanish\n-   Italian\n-   Portuguese\n-   Romanian\n\nFEATURES:\n\n-   Command Line Interface tool.\n-   Easy to use and intuitive API.\n-   Includes pre-trained models with 99% + accuracy in predicting conjugation class of unknown verbs.\n-   Easily train new models or add new languages.\n-   Uses caching and multiprocessing for maximum performance.\n-   Easily integrate mlconjug3 in your own projects.\n-   Extensive documentation.\n-   Powerful machine learning algorithms for accurate verb conjugation predictions.\n-   Support for multiple languages including English, Spanish, French, and German.\n-   Customizable settings to fine-tune performance and adapt to different use cases.\n-   Robust error handling and troubleshooting capabilities.\n-   Regular updates and improvements to ensure optimal performance.\n-   Community support and contributions to continuously expand the library\u2019s capabilities.\n-   Integration with popular libraries such as scikit-learn and numpy for machine learning tasks.\n\n\nUsage\n=====\n\n> **note**\n>\n> The default language is French.\n> :   When called without specifying a language, the library will try to\n>     conjugate the verb in French.\n>\nTo use MLConjug3 from the command line:\n\n    $ mlconjug3 manger\n\n    $ mlconjug3 bring -l en\n\n    $ mlconjug3 gallofar --language es\n\n    $ mlconjug3 -o, --output (Path of the filename for storing the conjugation tables.)\n\n    $ mlconjug3 -s, --subject (The subject format type for the conjugated forms). The\n                       values can be 'abbrev' or 'pronoun'. The default value\n                       is 'abbrev'.\n\n    $ mlconjug3 -h Show the help menu\n",
   "dev_url": "https://github.com/SekouDiaoNlp/mlconjug3",
   "doc_url": "https://mlconjug3.readthedocs.io/en/latest/",
   "home": "https://github.com/SekouDiaoNlp/mlconjug3",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "A Python library to conjugate French, English, Spanish, Italian, Portuguese and Romanian verbs using Machine Learning techniques."
  },
  "build": {
   "entry_points": [
    "mlconjug3=mlconjug3.cli:main"
   ],
   "noarch": "python",
   "number": "0",
   "script": "/home/conda/feedstock_root/build_artifacts/mlconjug3_1675499311052/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_p/bin/python -m pip install . -vv",
   "string": "pyhd8ed1ab_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "SekouDiaoNlp"
   ]
  },
  "package": {
   "name": "mlconjug3",
   "version": "3.10.2"
  },
  "requirements": {
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 2_gnu",
    "attrs 22.2.0 pyh71513ae_0",
    "brotlipy 0.7.0 py311hd4cff14_1005",
    "bzip2 1.0.8 h7f98852_4",
    "ca-certificates 2022.12.7 ha878542_0",
    "cachecontrol 0.12.11 pyhd8ed1ab_1",
    "certifi 2022.12.7 pyhd8ed1ab_0",
    "cffi 1.15.1 py311h409f033_3",
    "charset-normalizer 2.1.1 pyhd8ed1ab_0",
    "cleo 2.0.1 pyhd8ed1ab_0",
    "colorama 0.4.6 pyhd8ed1ab_0",
    "crashtest 0.4.1 pyhd8ed1ab_0",
    "cryptography 39.0.0 py311h9b4c7bb_0",
    "dbus 1.13.6 h5008d03_3",
    "distlib 0.3.6 pyhd8ed1ab_0",
    "dulwich 0.20.50 py311h2582759_0",
    "exceptiongroup 1.1.0 pyhd8ed1ab_0",
    "expat 2.5.0 h27087fc_0",
    "filelock 3.9.0 pyhd8ed1ab_0",
    "gettext 0.21.1 h27087fc_0",
    "html5lib 1.1 pyh9f0ad1d_0",
    "idna 3.4 pyhd8ed1ab_0",
    "importlib-metadata 6.0.0 pyha770c72_0",
    "importlib_metadata 6.0.0 hd8ed1ab_0",
    "importlib_resources 5.10.2 pyhd8ed1ab_0",
    "iniconfig 2.0.0 pyhd8ed1ab_0",
    "jaraco.classes 3.2.3 pyhd8ed1ab_0",
    "jeepney 0.8.0 pyhd8ed1ab_0",
    "jsonschema 4.17.3 pyhd8ed1ab_0",
    "keyring 23.13.1 py311h38be061_0",
    "ld_impl_linux-64 2.40 h41732ed_0",
    "libblas 3.9.0 16_linux64_openblas",
    "libcblas 3.9.0 16_linux64_openblas",
    "libffi 3.4.2 h7f98852_5",
    "libgcc-ng 12.2.0 h65d4601_19",
    "libgfortran-ng 12.2.0 h69a702a_19",
    "libgfortran5 12.2.0 h337968e_19",
    "libglib 2.74.1 h606061b_1",
    "libgomp 12.2.0 h65d4601_19",
    "libiconv 1.17 h166bdaf_0",
    "liblapack 3.9.0 16_linux64_openblas",
    "libnsl 2.0.0 h7f98852_0",
    "libopenblas 0.3.21 pthreads_h78a6416_3",
    "libsqlite 3.40.0 h753d276_0",
    "libstdcxx-ng 12.2.0 h46fd767_19",
    "libuuid 2.32.1 h7f98852_1000",
    "libzlib 1.2.13 h166bdaf_4",
    "lockfile 0.12.2 py_1",
    "more-itertools 9.0.0 pyhd8ed1ab_0",
    "msgpack-python 1.0.4 py311h4dd048b_1",
    "ncurses 6.3 h27087fc_1",
    "numpy 1.24.1 py311h8e6699e_0",
    "openssl 3.0.7 h0b41bf4_2",
    "packaging 23.0 pyhd8ed1ab_0",
    "pcre2 10.40 hc3806b6_0",
    "pexpect 4.8.0 pyh1a96a4e_2",
    "pip 23.0 pyhd8ed1ab_0",
    "pkginfo 1.9.6 pyhd8ed1ab_0",
    "pkgutil-resolve-name 1.3.10 pyhd8ed1ab_0",
    "platformdirs 2.6.2 pyhd8ed1ab_0",
    "pluggy 1.0.0 pyhd8ed1ab_5",
    "poetry 1.3.1 py311h38be061_0",
    "poetry-core 1.4.0 pyhd8ed1ab_0",
    "poetry-plugin-export 1.3.0 pyhd8ed1ab_0",
    "ptyprocess 0.7.0 pyhd3deb0d_0",
    "pycparser 2.21 pyhd8ed1ab_0",
    "pyopenssl 23.0.0 pyhd8ed1ab_0",
    "pyrsistent 0.19.3 py311h2582759_0",
    "pysocks 1.7.1 pyha2e5f31_6",
    "pytest 7.2.1 pyhd8ed1ab_0",
    "pytest-runner 6.0.0 pyhd8ed1ab_0",
    "python 3.11.0 he550d4f_1_cpython",
    "python_abi 3.11 3_cp311",
    "rapidfuzz 2.13.7 py311hcafe171_0",
    "readline 8.1.2 h0f457ee_0",
    "requests 2.28.2 pyhd8ed1ab_0",
    "requests-toolbelt 0.10.1 pyhd8ed1ab_0",
    "secretstorage 3.3.3 py311h38be061_1",
    "setuptools 67.1.0 pyhd8ed1ab_0",
    "shellingham 1.5.0.post1 pyhd8ed1ab_0",
    "six 1.16.0 pyh6c4a22f_0",
    "tk 8.6.12 h27826a3_0",
    "tomli 2.0.1 pyhd8ed1ab_0",
    "tomlkit 0.11.6 pyha770c72_0",
    "trove-classifiers 2023.1.20 pyhd8ed1ab_0",
    "typing 3.10.0.0 pyhd8ed1ab_0",
    "typing-extensions 4.4.0 hd8ed1ab_0",
    "typing_extensions 4.4.0 pyha770c72_0",
    "tzdata 2022g h191b570_0",
    "urllib3 1.26.14 pyhd8ed1ab_0",
    "virtualenv 20.17.1 py311h38be061_0",
    "webencodings 0.5.1 py_1",
    "wheel 0.38.4 pyhd8ed1ab_0",
    "xz 5.2.6 h166bdaf_0",
    "zipp 3.12.0 pyhd8ed1ab_0"
   ],
   "run": [
    "click >=8.1.3",
    "defusedxml",
    "joblib",
    "numpy",
    "python >=3.8",
    "pyyaml",
    "rich <13.3",
    "scikit-learn ==1.2.1",
    "tomlkit"
   ]
  },
  "source": {
   "sha256": "feac567bbc7efd033aefb62a310bb53f4cc1b8bd5773c8021459a4d09d121478",
   "url": "https://pypi.io/packages/source/m/mlconjug3/mlconjug3-3.10.2.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "mlconjug3 --help"
   ],
   "imports": [
    "mlconjug3"
   ],
   "requires": [
    "pip",
    "poetry"
   ]
  }
 },
 "version": "3.10.2"
}
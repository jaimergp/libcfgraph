{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.22.0",
  "conda_private": false,
  "conda_version": "4.13.0",
  "description": "A library of immutable and grow-only Pandas-like DataFrames with a more explicit and consistent interface. StaticFrame is suitable for applications in data science, data engineering, finance, scientific computing, and related fields where reducing opportunities for error by prohibiting in-place mutation is critical.\n\nWhile many interfaces are similar to Pandas, StaticFrame deviates from Pandas in many ways: all data is immutable, and all indices are unique; the full range of NumPy data types is preserved, and date-time indices use discrete NumPy types; hierarchical indices are seamlessly integrated; and uniform approaches to element, row, and column iteration and function application are provided. Core StaticFrame depends only on NumPy and two C-extension packages (maintained by the StaticFrame team): Pandas is not a dependency.\n\nA wide variety of table formats are supported, including input from and output to CSV, TSV, JSON, MessagePack, Excel XLSX, SQLite, HDF5, NumPy, Pandas, Arrow, and Parquet; additionally, output to xarray, VisiData, HTML, RST, Markdown, and LaTeX is supported, as well as HTML representations in Jupyter notebooks. Full serialization is also available via custom NPZ and NPY encodings, the latter supporting memory mapping.\n\nStaticFrame features a family of multi-table containers: the Bus is a lazily-loaded container of tables, the Batch is a deferred processor of tables, the Yarn is virtual concatenation of many Buses, and the Quilt is a virtual concatenation of all tables within a single Bus or Yarn. All permit operating on large collections of tables with minimal memory overhead, as well as writing too and reading from zipped bundles of pickles, NPZ, Parquet, or delimited files, as well as XLSX workbooks, SQLite, and HDF5.\n",
  "dev_url": "https://github.com/InvestmentSystems/static-frame",
  "doc_url": "https://static-frame.readthedocs.io",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "flexatone",
    "brandtbucher"
   ]
  },
  "home": "https://github.com/InvestmentSystems/static-frame",
  "identifiers": [],
  "keywords": [],
  "license": "MIT",
  "license_family": "MIT",
  "license_file": "LICENSE.txt",
  "root_pkgs": [
   "pkginfo 1.8.3 pyhd8ed1ab_0",
   "pyyaml 6.0 py39hb9d737c_4",
   "libstdcxx-ng 12.1.0 ha89aaad_16",
   "glob2 0.7 py_0",
   "reproc 14.2.3 h7f98852_0",
   "urllib3 1.26.10 pyhd8ed1ab_0",
   "chardet 5.0.0 py39hf3d152e_0",
   "ruamel_yaml 0.15.80 py39hb9d737c_1007",
   "certifi 2022.6.15 py39hf3d152e_0",
   "libnsl 2.0.0 h7f98852_0",
   "libuuid 2.32.1 h7f98852_1000",
   "ca-certificates 2022.6.15 ha878542_0",
   "reproc-cpp 14.2.3 h9c3ff4c_0",
   "idna 3.3 pyhd8ed1ab_0",
   "patchelf 0.15.0 h58526e2_0",
   "python-fastjsonschema 2.16.1 pyhd8ed1ab_0",
   "zipp 3.8.0 pyhd8ed1ab_0",
   "wheel 0.37.1 pyhd8ed1ab_0",
   "conda-package-handling 1.8.1 py39hb9d737c_1",
   "libxml2 2.9.14 h22db469_3",
   "filelock 3.7.1 pyhd8ed1ab_0",
   "zlib 1.2.12 h166bdaf_2",
   "tini 0.19.0 h7f98852_0",
   "setuptools 63.2.0 py39hf3d152e_0",
   "json5 0.9.5 pyh9f0ad1d_0",
   "anyio 3.6.1 py39hf3d152e_0",
   "pycparser 2.21 pyhd8ed1ab_0",
   "mamba 0.24.0 py39hfa8f2c8_1",
   "nbformat 5.4.0 pyhd8ed1ab_0",
   "python-libarchive-c 4.0 py39hf3d152e_1",
   "jsonschema 4.7.2 pyhd8ed1ab_0",
   "cffi 1.15.1 py39he91dace_0",
   "libmamba 0.24.0 hd8a31e3_1",
   "liblief 0.11.5 h9c3ff4c_1",
   "libnghttp2 1.47.0 h727a467_0",
   "pybind11-abi 4 hd8ed1ab_3",
   "ripgrep 13.0.0 h2f28480_2",
   "c-ares 1.18.1 h7f98852_0",
   "beautifulsoup4 4.11.1 pyha770c72_0",
   "six 1.16.0 pyh6c4a22f_0",
   "clyent 1.2.2 py_1",
   "brotlipy 0.7.0 py39hb9d737c_1004",
   "ld_impl_linux-64 2.36.1 hea4e1c9_2",
   "joblib 1.1.0 pyhd8ed1ab_0",
   "conda 4.13.0 py39hf3d152e_1",
   "tqdm 4.64.0 pyhd8ed1ab_0",
   "zstd 1.5.2 h8a70e8d_2",
   "curl 7.83.1 h7bff187_0",
   "gettext 0.19.8.1 h73d1719_1008",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "bzip2 1.0.8 h7f98852_4",
   "libev 4.33 h516909a_1",
   "prompt_toolkit 3.0.30 hd8ed1ab_0",
   "ncurses 6.3 h27087fc_1",
   "git 2.37.1 pl5321h36853c3_0",
   "importlib_resources 5.8.0 pyhd8ed1ab_0",
   "prompt-toolkit 3.0.30 pyha770c72_0",
   "libgomp 12.1.0 h8d9b700_16",
   "sniffio 1.2.0 py39hf3d152e_3",
   "libffi 3.4.2 h7f98852_5",
   "_libgcc_mutex 0.1 conda_forge",
   "sqlite 3.39.2 h4ff8645_0",
   "requests 2.28.1 pyhd8ed1ab_0",
   "jupyter_core 4.11.1 py39hf3d152e_0",
   "keyutils 1.6.1 h166bdaf_0",
   "anaconda-client 1.8.0 pyhd8ed1ab_0",
   "python 3.9.13 h9a8a25e_0_cpython",
   "yaml-cpp 0.7.0 h27087fc_1",
   "ruamel.yaml 0.17.21 py39hb9d737c_1",
   "cryptography 37.0.4 py39hd97740a_0",
   "pygments 2.12.0 pyhd8ed1ab_0",
   "lz4-c 1.9.3 h9c3ff4c_1",
   "pyopenssl 22.0.0 pyhd8ed1ab_0",
   "psutil 5.9.1 py39hb9d737c_0",
   "perl 5.32.1 2_h7f98852_perl5",
   "watchgod 0.8.2 pyhd8ed1ab_0",
   "markupsafe 2.1.1 py39hb9d737c_1",
   "wcwidth 0.2.5 pyh9f0ad1d_2",
   "readline 8.1.2 h0f457ee_0",
   "pyrsistent 0.18.1 py39hb9d737c_1",
   "ruamel.yaml.clib 0.2.6 py39hb9d737c_1",
   "libsolv 0.7.22 h6239696_0",
   "pysocks 1.7.1 py39hf3d152e_5",
   "libedit 3.1.20191231 he28a2e2_2",
   "python_abi 3.9 2_cp39",
   "libiconv 1.16 h516909a_0",
   "tzdata 2022a h191b570_0",
   "lzo 2.10 h516909a_1000",
   "future 0.18.2 py39hf3d152e_5",
   "su-exec 0.2 h516909a_1002",
   "openssl 1.1.1q h166bdaf_0",
   "dataclasses 0.8 pyhc8e2a94_3",
   "libgcc-ng 12.1.0 h8d9b700_16",
   "charset-normalizer 2.1.0 pyhd8ed1ab_0",
   "libcurl 7.83.1 h7bff187_0",
   "jinja2 3.1.2 pyhd8ed1ab_1",
   "rich 12.5.1 pyhd8ed1ab_0",
   "traitlets 5.3.0 pyhd8ed1ab_0",
   "typing_extensions 4.3.0 pyha770c72_0",
   "xz 5.2.5 h516909a_1",
   "libarchive 3.5.2 hb890918_3",
   "krb5 1.19.3 h3790be6_0",
   "importlib-metadata 4.11.4 py39hf3d152e_0",
   "pycosat 0.6.3 py39hb9d737c_1010",
   "pytz 2022.1 pyhd8ed1ab_0",
   "commonmark 0.9.1 py_0",
   "pcre2 10.37 h032f7d1_0",
   "colorama 0.4.5 pyhd8ed1ab_0",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "attrs 21.4.0 pyhd8ed1ab_0",
   "_openmp_mutex 4.5 2_gnu",
   "patch 2.7.6 h7f98852_1002",
   "expat 2.4.8 h27087fc_0",
   "libssh2 1.10.0 ha56f1ee_2",
   "py-lief 0.11.5 py39he80948d_1",
   "libzlib 1.2.12 h166bdaf_2",
   "yaml 0.2.5 h7f98852_2",
   "libmambapy 0.24.0 py39hd55135b_1",
   "backports 1.0 py_2",
   "tk 8.6.12 h27826a3_0",
   "soupsieve 2.3.2.post1 pyhd8ed1ab_0",
   "icu 70.1 h27087fc_0",
   "conda-build 3.22.0 py39hf3d152e_1",
   "conda-forge-ci-setup 3.21.0 py39h69ce9fc_100",
   "jq 1.6 h36c2ea0_1000",
   "toml 0.10.2 pyhd8ed1ab_0",
   "pip 22.2.2 pyhd8ed1ab_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "boa 0.11.0 pyha770c72_2",
   "conda-env 2.6.0 1",
   "click 8.1.3 py39hf3d152e_0",
   "oniguruma 6.9.8 h166bdaf_0"
  ],
  "summary": "Immutable and grow-only Pandas-like DataFrames with a more explicit and consistent interface",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "cdt_name": "cos6",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "docker_image": "quay.io/condaforge/linux-anvil-cos7-x86_64",
  "extend_keys": [
   "pin_run_as_build",
   "ignore_version",
   "extend_keys",
   "ignore_build_only_deps"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.9",
  "r_base": "3.5",
  "target_platform": "linux-64"
 },
 "files": [
  "site-packages/static_frame-0.9.11.dist-info/INSTALLER",
  "site-packages/static_frame-0.9.11.dist-info/METADATA",
  "site-packages/static_frame-0.9.11.dist-info/RECORD",
  "site-packages/static_frame-0.9.11.dist-info/REQUESTED",
  "site-packages/static_frame-0.9.11.dist-info/WHEEL",
  "site-packages/static_frame-0.9.11.dist-info/direct_url.json",
  "site-packages/static_frame/__init__.py",
  "site-packages/static_frame/__main__.py",
  "site-packages/static_frame/core/__init__.py",
  "site-packages/static_frame/core/archive_npy.py",
  "site-packages/static_frame/core/assign.py",
  "site-packages/static_frame/core/axis_map.py",
  "site-packages/static_frame/core/batch.py",
  "site-packages/static_frame/core/bus.py",
  "site-packages/static_frame/core/container.py",
  "site-packages/static_frame/core/container_util.py",
  "site-packages/static_frame/core/display.py",
  "site-packages/static_frame/core/display_color.py",
  "site-packages/static_frame/core/display_config.py",
  "site-packages/static_frame/core/display_html_datatables.py",
  "site-packages/static_frame/core/display_visidata.py",
  "site-packages/static_frame/core/doc_str.py",
  "site-packages/static_frame/core/exception.py",
  "site-packages/static_frame/core/fill_value_auto.py",
  "site-packages/static_frame/core/frame.py",
  "site-packages/static_frame/core/hloc.py",
  "site-packages/static_frame/core/index.py",
  "site-packages/static_frame/core/index_auto.py",
  "site-packages/static_frame/core/index_base.py",
  "site-packages/static_frame/core/index_correspondence.py",
  "site-packages/static_frame/core/index_datetime.py",
  "site-packages/static_frame/core/index_hierarchy.py",
  "site-packages/static_frame/core/interface.py",
  "site-packages/static_frame/core/interface_meta.py",
  "site-packages/static_frame/core/loc_map.py",
  "site-packages/static_frame/core/node_dt.py",
  "site-packages/static_frame/core/node_fill_value.py",
  "site-packages/static_frame/core/node_iter.py",
  "site-packages/static_frame/core/node_re.py",
  "site-packages/static_frame/core/node_selector.py",
  "site-packages/static_frame/core/node_str.py",
  "site-packages/static_frame/core/node_transpose.py",
  "site-packages/static_frame/core/node_values.py",
  "site-packages/static_frame/core/pivot.py",
  "site-packages/static_frame/core/platform.py",
  "site-packages/static_frame/core/quilt.py",
  "site-packages/static_frame/core/rank.py",
  "site-packages/static_frame/core/series.py",
  "site-packages/static_frame/core/store.py",
  "site-packages/static_frame/core/store_client_mixin.py",
  "site-packages/static_frame/core/store_filter.py",
  "site-packages/static_frame/core/store_hdf5.py",
  "site-packages/static_frame/core/store_sqlite.py",
  "site-packages/static_frame/core/store_xlsx.py",
  "site-packages/static_frame/core/store_zip.py",
  "site-packages/static_frame/core/style_config.py",
  "site-packages/static_frame/core/type_blocks.py",
  "site-packages/static_frame/core/util.py",
  "site-packages/static_frame/core/yarn.py",
  "site-packages/static_frame/py.typed",
  "site-packages/static_frame/test/__init__.py",
  "site-packages/static_frame/test/test_case.py",
  "site-packages/static_frame/test/unit/__init__.py",
  "site-packages/static_frame/test/unit/test_archive_npy.py",
  "site-packages/static_frame/test/unit/test_axis_map.py",
  "site-packages/static_frame/test/unit/test_batch.py",
  "site-packages/static_frame/test/unit/test_bus.py",
  "site-packages/static_frame/test/unit/test_container.py",
  "site-packages/static_frame/test/unit/test_container_util.py",
  "site-packages/static_frame/test/unit/test_display.py",
  "site-packages/static_frame/test/unit/test_display_color.py",
  "site-packages/static_frame/test/unit/test_display_config.py",
  "site-packages/static_frame/test/unit/test_doc.py",
  "site-packages/static_frame/test/unit/test_fill_value_auto.py",
  "site-packages/static_frame/test/unit/test_frame.py",
  "site-packages/static_frame/test/unit/test_frame_he.py",
  "site-packages/static_frame/test/unit/test_frame_iter.py",
  "site-packages/static_frame/test/unit/test_frame_via_fill_value.py",
  "site-packages/static_frame/test/unit/test_frame_via_re.py",
  "site-packages/static_frame/test/unit/test_index.py",
  "site-packages/static_frame/test/unit/test_index_auto.py",
  "site-packages/static_frame/test/unit/test_index_base.py",
  "site-packages/static_frame/test/unit/test_index_correspondence.py",
  "site-packages/static_frame/test/unit/test_index_datetime.py",
  "site-packages/static_frame/test/unit/test_index_hierarchy.py",
  "site-packages/static_frame/test/unit/test_interface.py",
  "site-packages/static_frame/test/unit/test_loc_map.py",
  "site-packages/static_frame/test/unit/test_pivot.py",
  "site-packages/static_frame/test/unit/test_platform.py",
  "site-packages/static_frame/test/unit/test_quilt.py",
  "site-packages/static_frame/test/unit/test_rank.py",
  "site-packages/static_frame/test/unit/test_series.py",
  "site-packages/static_frame/test/unit/test_series_he.py",
  "site-packages/static_frame/test/unit/test_store.py",
  "site-packages/static_frame/test/unit/test_store_filter.py",
  "site-packages/static_frame/test/unit/test_store_hdf5.py",
  "site-packages/static_frame/test/unit/test_store_sqlite.py",
  "site-packages/static_frame/test/unit/test_store_xlsx.py",
  "site-packages/static_frame/test/unit/test_store_zip.py",
  "site-packages/static_frame/test/unit/test_style_config.py",
  "site-packages/static_frame/test/unit/test_type_blocks.py",
  "site-packages/static_frame/test/unit/test_util.py",
  "site-packages/static_frame/test/unit/test_yarn.py"
 ],
 "index": {
  "arch": null,
  "build": "pyhd8ed1ab_0",
  "build_number": 0,
  "depends": [
   "arraykit >=0.1.8",
   "automap >=0.5.1",
   "numpy >=1.17.4",
   "python >=3.7"
  ],
  "license": "MIT",
  "license_family": "MIT",
  "name": "static-frame",
  "noarch": "python",
  "platform": null,
  "subdir": "noarch",
  "timestamp": 1660520522413,
  "version": "0.9.11"
 },
 "metadata_version": 1,
 "name": "static-frame",
 "raw_recipe": "{% set name = \"static-frame\" %}\n{% set version = \"0.9.11\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: a497562daa2e5228aa4714ac4ffda9e7cd73b138da2a4074d41e32ae7be59952\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  host:\n    - python >=3.7\n    - pip\n  run:\n    - python >=3.7\n    - numpy >=1.17.4\n    - automap >=0.5.1\n    - arraykit >=0.1.8\n\ntest:\n  imports:\n    - static_frame\n\nabout:\n  home: https://github.com/InvestmentSystems/static-frame\n  license: MIT\n  license_file: LICENSE.txt\n  license_family: MIT\n  summary: Immutable and grow-only Pandas-like DataFrames with a more explicit and consistent interface\n\n  description: |\n    A library of immutable and grow-only Pandas-like DataFrames with a more explicit and consistent interface. StaticFrame is suitable for applications in data science, data engineering, finance, scientific computing, and related fields where reducing opportunities for error by prohibiting in-place mutation is critical.\n\n    While many interfaces are similar to Pandas, StaticFrame deviates from Pandas in many ways: all data is immutable, and all indices are unique; the full range of NumPy data types is preserved, and date-time indices use discrete NumPy types; hierarchical indices are seamlessly integrated; and uniform approaches to element, row, and column iteration and function application are provided. Core StaticFrame depends only on NumPy and two C-extension packages (maintained by the StaticFrame team): Pandas is not a dependency.\n\n    A wide variety of table formats are supported, including input from and output to CSV, TSV, JSON, MessagePack, Excel XLSX, SQLite, HDF5, NumPy, Pandas, Arrow, and Parquet; additionally, output to xarray, VisiData, HTML, RST, Markdown, and LaTeX is supported, as well as HTML representations in Jupyter notebooks. Full serialization is also available via custom NPZ and NPY encodings, the latter supporting memory mapping.\n\n    StaticFrame features a family of multi-table containers: the Bus is a lazily-loaded container of tables, the Batch is a deferred processor of tables, the Yarn is virtual concatenation of many Buses, and the Quilt is a virtual concatenation of all tables within a single Bus or Yarn. All permit operating on large collections of tables with minimal memory overhead, as well as writing too and reading from zipped bundles of pickles, NPZ, Parquet, or delimited files, as well as XLSX workbooks, SQLite, and HDF5.\n  doc_url: https://static-frame.readthedocs.io\n  dev_url: https://github.com/InvestmentSystems/static-frame\n\nextra:\n  recipe-maintainers:\n    - flexatone\n    - brandtbucher\n",
 "rendered_recipe": {
  "about": {
   "description": "A library of immutable and grow-only Pandas-like DataFrames with a more explicit and consistent interface. StaticFrame is suitable for applications in data science, data engineering, finance, scientific computing, and related fields where reducing opportunities for error by prohibiting in-place mutation is critical.\n\nWhile many interfaces are similar to Pandas, StaticFrame deviates from Pandas in many ways: all data is immutable, and all indices are unique; the full range of NumPy data types is preserved, and date-time indices use discrete NumPy types; hierarchical indices are seamlessly integrated; and uniform approaches to element, row, and column iteration and function application are provided. Core StaticFrame depends only on NumPy and two C-extension packages (maintained by the StaticFrame team): Pandas is not a dependency.\n\nA wide variety of table formats are supported, including input from and output to CSV, TSV, JSON, MessagePack, Excel XLSX, SQLite, HDF5, NumPy, Pandas, Arrow, and Parquet; additionally, output to xarray, VisiData, HTML, RST, Markdown, and LaTeX is supported, as well as HTML representations in Jupyter notebooks. Full serialization is also available via custom NPZ and NPY encodings, the latter supporting memory mapping.\n\nStaticFrame features a family of multi-table containers: the Bus is a lazily-loaded container of tables, the Batch is a deferred processor of tables, the Yarn is virtual concatenation of many Buses, and the Quilt is a virtual concatenation of all tables within a single Bus or Yarn. All permit operating on large collections of tables with minimal memory overhead, as well as writing too and reading from zipped bundles of pickles, NPZ, Parquet, or delimited files, as well as XLSX workbooks, SQLite, and HDF5.\n",
   "dev_url": "https://github.com/InvestmentSystems/static-frame",
   "doc_url": "https://static-frame.readthedocs.io",
   "home": "https://github.com/InvestmentSystems/static-frame",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "Immutable and grow-only Pandas-like DataFrames with a more explicit and consistent interface"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/home/conda/feedstock_root/build_artifacts/static-frame_1660520419512/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehol/bin/python -m pip install . --no-deps -vv",
   "string": "pyhd8ed1ab_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "brandtbucher",
    "flexatone"
   ]
  },
  "package": {
   "name": "static-frame",
   "version": "0.9.11"
  },
  "requirements": {
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 2_gnu",
    "bzip2 1.0.8 h7f98852_4",
    "ca-certificates 2022.6.15 ha878542_0",
    "ld_impl_linux-64 2.36.1 hea4e1c9_2",
    "libffi 3.4.2 h7f98852_5",
    "libgcc-ng 12.1.0 h8d9b700_16",
    "libgomp 12.1.0 h8d9b700_16",
    "libnsl 2.0.0 h7f98852_0",
    "libsqlite 3.39.2 h753d276_1",
    "libuuid 2.32.1 h7f98852_1000",
    "libzlib 1.2.12 h166bdaf_2",
    "ncurses 6.3 h27087fc_1",
    "openssl 3.0.5 h166bdaf_1",
    "pip 22.2.2 pyhd8ed1ab_0",
    "python 3.10.5 ha86cf86_0_cpython",
    "python_abi 3.10 2_cp310",
    "readline 8.1.2 h0f457ee_0",
    "setuptools 64.0.3 py310hff52083_0",
    "sqlite 3.39.2 h4ff8645_1",
    "tk 8.6.12 h27826a3_0",
    "tzdata 2022b h191b570_0",
    "wheel 0.37.1 pyhd8ed1ab_0",
    "xz 5.2.6 h166bdaf_0"
   ],
   "run": [
    "arraykit >=0.1.8",
    "automap >=0.5.1",
    "numpy >=1.17.4",
    "python >=3.7"
   ]
  },
  "source": {
   "sha256": "a497562daa2e5228aa4714ac4ffda9e7cd73b138da2a4074d41e32ae7be59952",
   "url": "https://pypi.io/packages/source/s/static-frame/static-frame-0.9.11.tar.gz"
  },
  "test": {
   "imports": [
    "static_frame"
   ]
  }
 },
 "version": "0.9.11"
}
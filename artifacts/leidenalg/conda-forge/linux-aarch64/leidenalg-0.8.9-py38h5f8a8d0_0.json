{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.21.8",
  "conda_private": false,
  "conda_version": "4.11.0",
  "description": "This package implements the Leiden algorithm in C++ and\nexposes it to python. It relies on (python-)igraph for it to\nfunction. Besides the relative flexibility of the\nimplementation, it also scales well, and can be run on graphs\nof millions of nodes (as long as they can fit in memory).\nThe core function is find_partition which is able to optimize a\nvariety of quality functions using the Leiden algorithm.\n",
  "dev_url": "https://github.com/vtraag/leidenalg",
  "doc_url": "http://leidenalg.readthedocs.io/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "vtraag"
   ]
  },
  "home": "https://github.com/vtraag/leidenalg",
  "identifiers": [],
  "keywords": [],
  "license": "GPL-3.0-or-later",
  "license_family": "GPL",
  "license_file": "LICENSE",
  "root_pkgs": [
   "tzdata 2021e he74cb21_0",
   "commonmark 0.9.1 py_0",
   "libedit 3.1.20191231 he28a2e2_2",
   "libnsl 2.0.0 h7f98852_0",
   "patchelf 0.14.3 h58526e2_0",
   "ld_impl_linux-64 2.36.1 hea4e1c9_2",
   "six 1.16.0 pyh6c4a22f_0",
   "colorama 0.4.4 pyh9f0ad1d_0",
   "wcwidth 0.2.5 pyh9f0ad1d_2",
   "liblief 0.11.5 h9c3ff4c_1",
   "psutil 5.9.0 py39h3811e60_0",
   "conda-package-handling 1.7.3 py39h3811e60_1",
   "pkginfo 1.8.2 pyhd8ed1ab_0",
   "future 0.18.2 py39hf3d152e_4",
   "lz4-c 1.9.3 h9c3ff4c_1",
   "pyrsistent 0.18.1 py39h3811e60_0",
   "gettext 0.19.8.1 h73d1719_1008",
   "importlib-metadata 4.11.1 py39hf3d152e_0",
   "openssl 1.1.1l h7f98852_0",
   "xz 5.2.5 h516909a_1",
   "libnghttp2 1.46.0 h812cca2_0",
   "ripgrep 13.0.0 habb4d0f_1",
   "anaconda-client 1.8.0 pyhd8ed1ab_0",
   "libstdcxx-ng 11.2.0 he4da1e4_12",
   "curl 7.81.0 h2574ce0_0",
   "pybind11-abi 4 hd8ed1ab_3",
   "attrs 21.4.0 pyhd8ed1ab_0",
   "beautifulsoup4 4.10.0 pyha770c72_0",
   "cffi 1.15.0 py39h4bc2ebd_0",
   "ruamel_yaml 0.15.80 py39h3811e60_1006",
   "yaml 0.2.5 h7f98852_2",
   "_openmp_mutex 4.5 1_gnu",
   "json5 0.9.5 pyh9f0ad1d_0",
   "libgcc-ng 11.2.0 h1d223b6_12",
   "certifi 2021.10.8 py39hf3d152e_1",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "py-lief 0.11.5 py39he80948d_1",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "backports 1.0 py_2",
   "python 3.9.10 h85951f9_2_cpython",
   "filelock 3.6.0 pyhd8ed1ab_0",
   "pip 22.0.3 pyhd8ed1ab_0",
   "wheel 0.37.1 pyhd8ed1ab_0",
   "chardet 4.0.0 py39hf3d152e_2",
   "su-exec 0.2 h516909a_1002",
   "sqlite 3.37.0 h9cd32fc_0",
   "libiconv 1.16 h516909a_0",
   "perl 5.32.1 2_h7f98852_perl5",
   "dataclasses 0.8 pyhc8e2a94_3",
   "watchgod 0.7 pyhd8ed1ab_0",
   "libffi 3.4.2 h7f98852_5",
   "markupsafe 2.1.0 py39hb9d737c_0",
   "reproc 14.2.3 h7f98852_0",
   "pytz 2021.3 pyhd8ed1ab_0",
   "charset-normalizer 2.0.12 pyhd8ed1ab_0",
   "clyent 1.2.2 py_1",
   "glob2 0.7 py_0",
   "libev 4.33 h516909a_1",
   "libgomp 11.2.0 h1d223b6_12",
   "tini 0.19.0 h7f98852_0",
   "jinja2 3.0.3 pyhd8ed1ab_0",
   "rich 11.2.0 pyhd8ed1ab_0",
   "readline 8.1 h46c0cb4_0",
   "ipython_genutils 0.2.0 py_1",
   "pyyaml 6.0 py39h3811e60_3",
   "setuptools 60.9.3 py39hf3d152e_0",
   "python_abi 3.9 2_cp39",
   "_libgcc_mutex 0.1 conda_forge",
   "ca-certificates 2021.10.8 ha878542_0",
   "libxml2 2.9.12 h885dcf4_1",
   "tqdm 4.62.3 pyhd8ed1ab_0",
   "idna 3.3 pyhd8ed1ab_0",
   "urllib3 1.26.8 pyhd8ed1ab_1",
   "libarchive 3.5.2 hccf745f_1",
   "ruamel.yaml.clib 0.2.6 py39h3811e60_0",
   "zstd 1.5.2 ha95c52a_0",
   "soupsieve 2.3.1 pyhd8ed1ab_0",
   "reproc-cpp 14.2.3 h9c3ff4c_0",
   "brotlipy 0.7.0 py39h3811e60_1003",
   "libcurl 7.81.0 h2574ce0_0",
   "requests 2.27.1 pyhd8ed1ab_0",
   "ncurses 6.3 h9c3ff4c_0",
   "pygments 2.11.2 pyhd8ed1ab_0",
   "cryptography 36.0.1 py39h95dcef6_0",
   "traitlets 5.1.1 pyhd8ed1ab_0",
   "pysocks 1.7.1 py39hf3d152e_4",
   "typing_extensions 4.1.1 pyha770c72_0",
   "conda-build 3.21.8 py39hf3d152e_0",
   "pcre2 10.37 h032f7d1_0",
   "jsonschema 4.4.0 pyhd8ed1ab_0",
   "ruamel.yaml 0.17.21 py39h3811e60_0",
   "libssh2 1.10.0 ha56f1ee_2",
   "zipp 3.7.0 pyhd8ed1ab_1",
   "joblib 1.1.0 pyhd8ed1ab_0",
   "pyopenssl 22.0.0 pyhd8ed1ab_0",
   "lzo 2.10 h516909a_1000",
   "pycparser 2.21 pyhd8ed1ab_0",
   "expat 2.4.4 h9c3ff4c_0",
   "icu 69.1 h9c3ff4c_0",
   "conda 4.11.0 py39hf3d152e_0",
   "git 2.35.0 pl5321hc30692c_0",
   "bzip2 1.0.8 h7f98852_4",
   "jupyter_core 4.9.2 py39hf3d152e_0",
   "pycosat 0.6.3 py39h3811e60_1009",
   "python-libarchive-c 4.0 py39hf3d152e_0",
   "tk 8.6.12 h27826a3_0",
   "importlib_resources 5.4.0 pyhd8ed1ab_0",
   "libzlib 1.2.11 h36c2ea0_1013",
   "prompt_toolkit 3.0.27 hd8ed1ab_0",
   "patch 2.7.6 h7f98852_1002",
   "libsolv 0.7.19 h780b84a_5",
   "krb5 1.19.2 hcc1bbae_3",
   "prompt-toolkit 3.0.27 pyha770c72_0",
   "c-ares 1.18.1 h7f98852_0",
   "libuuid 2.32.1 h7f98852_1000",
   "zlib 1.2.11 h36c2ea0_1013",
   "yaml-cpp 0.6.3 he1b5a44_4",
   "nbformat 5.1.3 pyhd8ed1ab_0",
   "mamba 0.19.1 py39hfa8f2c8_0",
   "conda-forge-ci-setup 3.18.4 py39h69ce9fc_100",
   "jq 1.6 h36c2ea0_1000",
   "conda-env 2.6.0 1",
   "libmambapy 0.19.1 py39h8bfa403_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "boa 0.8.2 pyha770c72_0",
   "libmamba 0.19.1 h3985d26_0",
   "click 8.0.4 py39hf3d152e_0",
   "oniguruma 6.9.7.1 h7f98852_0"
  ],
  "summary": "Implementation of the Leiden algorithm for various methods for use with igraph in python.",
  "tags": []
 },
 "conda_build_config": {
  "BUILD": "aarch64-conda_cos7-linux-gnu",
  "CI": "azure",
  "CMAKE_CROSSCOMPILING_EMULATOR": "/usr/bin/qemu-aarch64-static",
  "CROSSCOMPILING_EMULATOR": "/usr/bin/qemu-aarch64-static",
  "build_platform": "linux-64",
  "c_compiler": "gcc",
  "c_compiler_version": "10",
  "cdt_arch": "aarch64",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "10",
  "docker_image": "quay.io/condaforge/linux-anvil-cos7-x86_64",
  "extend_keys": [
   "ignore_build_only_deps",
   "pin_run_as_build",
   "ignore_version",
   "extend_keys"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.8.* *_cpython",
  "r_base": "3.5",
  "target_platform": "linux-aarch64",
  "zip_keys": [
   [
    "c_compiler_version",
    "cxx_compiler_version"
   ]
  ]
 },
 "files": [
  "lib/python3.8/site-packages/leidenalg-0.8.9-py3.8.egg-info/PKG-INFO",
  "lib/python3.8/site-packages/leidenalg/Optimiser.py",
  "lib/python3.8/site-packages/leidenalg/VertexPartition.py",
  "lib/python3.8/site-packages/leidenalg/__init__.py",
  "lib/python3.8/site-packages/leidenalg/_c_leiden.cpython-38-aarch64-linux-gnu.so",
  "lib/python3.8/site-packages/leidenalg/functions.py",
  "lib/python3.8/site-packages/leidenalg/version.py"
 ],
 "index": {
  "arch": "aarch64",
  "build": "py38h5f8a8d0_0",
  "build_number": 0,
  "depends": [
   "igraph >=0.9.6,<0.10.0a0",
   "libgcc-ng >=10.3.0",
   "libstdcxx-ng >=10.3.0",
   "pip",
   "python >=3.8,<3.9.0a0",
   "python >=3.8,<3.9.0a0 *_cpython",
   "python-igraph",
   "python_abi 3.8.* *_cp38"
  ],
  "license": "GPL-3.0-or-later",
  "license_family": "GPL",
  "name": "leidenalg",
  "platform": "linux",
  "subdir": "linux-aarch64",
  "timestamp": 1645569618049,
  "version": "0.8.9"
 },
 "metadata_version": 1,
 "name": "leidenalg",
 "raw_recipe": "{% set name = \"leidenalg\" %}\n{% set version = \"0.8.9\" %}\n{% set sha256 = \"37779372f1ae1fd1a5570aabb625b708c82ea87858e9b7d1e4c768f934ae1180\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  skip: true  # [win and vc<14]\n\n  run_exports:\n    - {{ pin_subpackage(\"leidenalg\", max_pin=\"x.x\") }}\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - vs2017_{{ target_platform }}  # [win]\n  host:\n    - igraph\n    - python\n    - setuptools\n    - setuptools_scm\n    - pip\n  run:\n    - igraph\n    - python-igraph\n    - python\n    - pip\n\ntest:\n  requires:\n    - ddt\n  source_files:\n    - tests\n  imports:\n    - leidenalg\n  commands:\n    - python -m unittest\n\nabout:\n  home: https://github.com/vtraag/leidenalg\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: Implementation of the Leiden algorithm for various methods for use with igraph in python.\n  description: |\n    This package implements the Leiden algorithm in C++ and\n    exposes it to python. It relies on (python-)igraph for it to\n    function. Besides the relative flexibility of the\n    implementation, it also scales well, and can be run on graphs\n    of millions of nodes (as long as they can fit in memory).\n    The core function is find_partition which is able to optimize a\n    variety of quality functions using the Leiden algorithm.\n  doc_url: http://leidenalg.readthedocs.io/\n  dev_url: https://github.com/vtraag/leidenalg\n\nextra:\n  recipe-maintainers:\n    - vtraag\n",
 "rendered_recipe": {
  "about": {
   "description": "This package implements the Leiden algorithm in C++ and\nexposes it to python. It relies on (python-)igraph for it to\nfunction. Besides the relative flexibility of the\nimplementation, it also scales well, and can be run on graphs\nof millions of nodes (as long as they can fit in memory).\nThe core function is find_partition which is able to optimize a\nvariety of quality functions using the Leiden algorithm.\n",
   "dev_url": "https://github.com/vtraag/leidenalg",
   "doc_url": "http://leidenalg.readthedocs.io/",
   "home": "https://github.com/vtraag/leidenalg",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Implementation of the Leiden algorithm for various methods for use with igraph in python."
  },
  "build": {
   "number": "0",
   "run_exports": [
    "leidenalg >=0.8.9,<0.9.0a0"
   ],
   "string": "py38h5f8a8d0_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "vtraag"
   ]
  },
  "package": {
   "name": "leidenalg",
   "version": "0.8.9"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "binutils_impl_linux-64 2.36.1 h193b22a_2",
    "binutils_impl_linux-aarch64 2.36.1 he24a65f_2",
    "binutils_linux-aarch64 2.36 h38357a0_5",
    "ca-certificates 2021.10.8 ha878542_0",
    "cross-python_linux-aarch64 3.8 21_cpython",
    "crossenv 1.2.0 pyhd8ed1ab_4",
    "gcc_impl_linux-64 10.3.0 hf2f2afa_12",
    "gcc_impl_linux-aarch64 10.3.0 h3721c86_12",
    "gcc_linux-aarch64 10.3.0 hd47fc70_5",
    "gxx_impl_linux-64 10.3.0 hf2f2afa_12",
    "gxx_impl_linux-aarch64 10.3.0 h3721c86_12",
    "gxx_linux-aarch64 10.3.0 hab23ad4_5",
    "kernel-headers_linux-64 2.6.32 he073ed8_15",
    "kernel-headers_linux-aarch64 4.18.0 h5b4a56d_13",
    "ld_impl_linux-64 2.36.1 hea4e1c9_2",
    "ld_impl_linux-aarch64 2.36.1 h4e2ea54_2",
    "libffi 3.4.2 h7f98852_5",
    "libgcc-devel_linux-64 10.3.0 he6cfe16_12",
    "libgcc-devel_linux-aarch64 10.3.0 hfaf2395_12",
    "libgcc-ng 11.2.0 h1d223b6_12",
    "libgomp 11.2.0 h1d223b6_12",
    "libiconv 1.16 h516909a_0",
    "libnsl 2.0.0 h7f98852_0",
    "libsanitizer 10.3.0 h26c7422_12",
    "libstdcxx-devel_linux-64 10.3.0 he6cfe16_12",
    "libstdcxx-devel_linux-aarch64 10.3.0 hfaf2395_12",
    "libstdcxx-ng 11.2.0 he4da1e4_12",
    "libzlib 1.2.11 h36c2ea0_1013",
    "lz4-c 1.9.3 h9c3ff4c_1",
    "ncurses 6.3 h9c3ff4c_0",
    "openssl 3.0.0 h7f98852_2",
    "popt 1.16 h0b475e3_2002",
    "python 3.8.12 h0744224_3_cpython",
    "readline 8.1 h46c0cb4_0",
    "rsync 3.2.3 ha014df6_3",
    "sed 4.8 he412f7d_0",
    "sqlite 3.37.0 h9cd32fc_0",
    "sysroot_linux-64 2.12 he073ed8_15",
    "sysroot_linux-aarch64 2.17 h43d7e78_13",
    "tk 8.6.12 h27826a3_0",
    "xxhash 0.8.0 h7f98852_3",
    "xz 5.2.5 h516909a_1",
    "zlib 1.2.11 h36c2ea0_1013",
    "zstd 1.5.2 ha95c52a_0"
   ],
   "host": [
    "_openmp_mutex 4.5 1_gnu",
    "arpack 3.7.0 hf862f49_2",
    "ca-certificates 2021.10.8 h4fd8a4c_0",
    "glpk 4.65 h719063d_1004",
    "gmp 6.2.1 h7fd3ca4_0",
    "icu 69.1 h3621d8e_0",
    "igraph 0.9.6 hf1a871e_0",
    "ld_impl_linux-aarch64 2.36.1 h02ad14f_2",
    "libblas 3.9.0 13_linuxaarch64_openblas",
    "libcblas 3.9.0 13_linuxaarch64_openblas",
    "libffi 3.4.2 h3557bc0_5",
    "libgcc-ng 11.2.0 hf1cc4e7_12",
    "libgfortran-ng 11.2.0 he9431aa_12",
    "libgfortran5 11.2.0 h440fb59_12",
    "libgomp 11.2.0 hf1cc4e7_12",
    "libiconv 1.16 h6dd45c4_0",
    "liblapack 3.9.0 13_linuxaarch64_openblas",
    "libnsl 2.0.0 hf897c2e_0",
    "libopenblas 0.3.18 pthreads_h775ce2d_0",
    "libstdcxx-ng 11.2.0 h0d0a5bb_12",
    "libxml2 2.9.12 h1e2ce75_1",
    "libzlib 1.2.11 hb9de7d4_1013",
    "metis 5.1.0 h7fd3ca4_1006",
    "mpfr 4.1.0 h719063d_1",
    "ncurses 6.3 h01db608_0",
    "openssl 3.0.0 hf897c2e_1",
    "packaging 21.3 pyhd8ed1ab_0",
    "pip 22.0.3 pyhd8ed1ab_0",
    "pyparsing 3.0.7 pyhd8ed1ab_0",
    "python 3.8.12 h47f6e27_2_cpython",
    "python_abi 3.8 2_cp38",
    "readline 8.1 h1a49cc3_0",
    "setuptools 60.9.3 py38h2063c64_0",
    "setuptools-scm 6.4.2 pyhd8ed1ab_0",
    "setuptools_scm 6.4.2 hd8ed1ab_0",
    "sqlite 3.37.0 hc164836_0",
    "suitesparse 5.10.1 h1404dd6_1",
    "tbb 2021.5.0 hd62202e_0",
    "tk 8.6.12 hd8af866_0",
    "tomli 2.0.1 pyhd8ed1ab_0",
    "wheel 0.37.1 pyhd8ed1ab_0",
    "xz 5.2.5 h6dd45c4_1",
    "zlib 1.2.11 hb9de7d4_1013"
   ],
   "run": [
    "igraph >=0.9.6,<0.10.0a0",
    "libgcc-ng >=10.3.0",
    "libstdcxx-ng >=10.3.0",
    "pip",
    "python >=3.8,<3.9.0a0",
    "python >=3.8,<3.9.0a0 *_cpython",
    "python-igraph",
    "python_abi 3.8.* *_cp38"
   ]
  },
  "source": {
   "fn": "leidenalg-0.8.9.tar.gz",
   "sha256": "37779372f1ae1fd1a5570aabb625b708c82ea87858e9b7d1e4c768f934ae1180",
   "url": "https://pypi.io/packages/source/l/leidenalg/leidenalg-0.8.9.tar.gz"
  },
  "test": {
   "commands": [
    "python -m unittest"
   ],
   "imports": [
    "leidenalg"
   ],
   "requires": [
    "ddt"
   ],
   "source_files": [
    "tests"
   ]
  }
 },
 "version": "0.8.9"
}
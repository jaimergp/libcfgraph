{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.22.0",
  "conda_private": false,
  "conda_version": "4.13.0",
  "description": "This package implements the Leiden algorithm in C++ and\nexposes it to python. It relies on (python-)igraph for it to\nfunction. Besides the relative flexibility of the\nimplementation, it also scales well, and can be run on graphs\nof millions of nodes (as long as they can fit in memory).\nThe core function is find_partition which is able to optimize a\nvariety of quality functions using the Leiden algorithm.\n",
  "dev_url": "https://github.com/vtraag/leidenalg",
  "doc_url": "http://leidenalg.readthedocs.io/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "vtraag"
   ]
  },
  "home": "https://github.com/vtraag/leidenalg",
  "identifiers": [],
  "keywords": [],
  "license": "GPL-3.0-or-later",
  "license_family": "GPL",
  "license_file": "LICENSE",
  "root_pkgs": [
   "chardet 5.0.0 py39hf3d152e_0",
   "lzo 2.10 h516909a_1000",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "tk 8.6.12 h27826a3_0",
   "ripgrep 13.0.0 h2f28480_2",
   "libuuid 2.32.1 h7f98852_1000",
   "libxml2 2.9.14 h22db469_3",
   "reproc-cpp 14.2.3 h9c3ff4c_0",
   "psutil 5.9.1 py39hb9d737c_0",
   "c-ares 1.18.1 h7f98852_0",
   "prompt_toolkit 3.0.30 hd8ed1ab_0",
   "wcwidth 0.2.5 pyh9f0ad1d_2",
   "py-lief 0.11.5 py39he80948d_1",
   "glob2 0.7 py_0",
   "nbformat 5.4.0 pyhd8ed1ab_0",
   "dataclasses 0.8 pyhc8e2a94_3",
   "pytz 2022.1 pyhd8ed1ab_0",
   "_libgcc_mutex 0.1 conda_forge",
   "charset-normalizer 2.1.0 pyhd8ed1ab_0",
   "tini 0.19.0 h7f98852_0",
   "idna 3.3 pyhd8ed1ab_0",
   "libedit 3.1.20191231 he28a2e2_2",
   "pyrsistent 0.18.1 py39hb9d737c_1",
   "conda 4.13.0 py39hf3d152e_1",
   "libssh2 1.10.0 ha56f1ee_2",
   "libsolv 0.7.22 h6239696_0",
   "anaconda-client 1.8.0 pyhd8ed1ab_0",
   "prompt-toolkit 3.0.30 pyha770c72_0",
   "jinja2 3.1.2 pyhd8ed1ab_1",
   "pkginfo 1.8.3 pyhd8ed1ab_0",
   "patchelf 0.15.0 h58526e2_0",
   "pybind11-abi 4 hd8ed1ab_3",
   "traitlets 5.3.0 pyhd8ed1ab_0",
   "gettext 0.19.8.1 h73d1719_1008",
   "libzlib 1.2.12 h166bdaf_2",
   "libev 4.33 h516909a_1",
   "commonmark 0.9.1 py_0",
   "pygments 2.12.0 pyhd8ed1ab_0",
   "clyent 1.2.2 py_1",
   "libnghttp2 1.47.0 h727a467_0",
   "sniffio 1.2.0 py39hf3d152e_3",
   "pycosat 0.6.3 py39hb9d737c_1010",
   "krb5 1.19.3 h3790be6_0",
   "future 0.18.2 py39hf3d152e_5",
   "importlib-metadata 4.11.4 py39hf3d152e_0",
   "su-exec 0.2 h516909a_1002",
   "beautifulsoup4 4.11.1 pyha770c72_0",
   "conda-package-handling 1.8.1 py39hb9d737c_1",
   "mamba 0.24.0 py39hfa8f2c8_1",
   "attrs 21.4.0 pyhd8ed1ab_0",
   "lz4-c 1.9.3 h9c3ff4c_1",
   "jupyter_core 4.11.1 py39hf3d152e_0",
   "libnsl 2.0.0 h7f98852_0",
   "libgomp 12.1.0 h8d9b700_16",
   "pyopenssl 22.0.0 pyhd8ed1ab_0",
   "ncurses 6.3 h27087fc_1",
   "ld_impl_linux-64 2.36.1 hea4e1c9_2",
   "reproc 14.2.3 h7f98852_0",
   "libiconv 1.16 h516909a_0",
   "xz 5.2.5 h516909a_1",
   "bzip2 1.0.8 h7f98852_4",
   "readline 8.1.2 h0f457ee_0",
   "icu 70.1 h27087fc_0",
   "python-libarchive-c 4.0 py39hf3d152e_1",
   "libffi 3.4.2 h7f98852_5",
   "python-fastjsonschema 2.16.1 pyhd8ed1ab_0",
   "zstd 1.5.2 h8a70e8d_2",
   "backports 1.0 py_2",
   "pcre2 10.37 h032f7d1_0",
   "python_abi 3.9 2_cp39",
   "importlib_resources 5.8.0 pyhd8ed1ab_0",
   "libarchive 3.5.2 hb890918_3",
   "liblief 0.11.5 h9c3ff4c_1",
   "tzdata 2022a h191b570_0",
   "filelock 3.7.1 pyhd8ed1ab_0",
   "cryptography 37.0.4 py39hd97740a_0",
   "cffi 1.15.1 py39he91dace_0",
   "pyyaml 6.0 py39hb9d737c_4",
   "libmamba 0.24.0 hd8a31e3_1",
   "zipp 3.8.0 pyhd8ed1ab_0",
   "anyio 3.6.1 py39hf3d152e_0",
   "libgcc-ng 12.1.0 h8d9b700_16",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "brotlipy 0.7.0 py39hb9d737c_1004",
   "ruamel_yaml 0.15.80 py39hb9d737c_1007",
   "libmambapy 0.24.0 py39hd55135b_1",
   "keyutils 1.6.1 h166bdaf_0",
   "_openmp_mutex 4.5 2_gnu",
   "ruamel.yaml.clib 0.2.6 py39hb9d737c_1",
   "python 3.9.13 h9a8a25e_0_cpython",
   "json5 0.9.5 pyh9f0ad1d_0",
   "colorama 0.4.5 pyhd8ed1ab_0",
   "pysocks 1.7.1 py39hf3d152e_5",
   "yaml 0.2.5 h7f98852_2",
   "rich 12.5.1 pyhd8ed1ab_0",
   "typing_extensions 4.3.0 pyha770c72_0",
   "jsonschema 4.7.2 pyhd8ed1ab_0",
   "openssl 1.1.1q h166bdaf_0",
   "wheel 0.37.1 pyhd8ed1ab_0",
   "pycparser 2.21 pyhd8ed1ab_0",
   "soupsieve 2.3.2.post1 pyhd8ed1ab_0",
   "markupsafe 2.1.1 py39hb9d737c_1",
   "patch 2.7.6 h7f98852_1002",
   "six 1.16.0 pyh6c4a22f_0",
   "yaml-cpp 0.7.0 h27087fc_1",
   "zlib 1.2.12 h166bdaf_2",
   "expat 2.4.8 h27087fc_0",
   "curl 7.83.1 h7bff187_0",
   "tqdm 4.64.0 pyhd8ed1ab_0",
   "joblib 1.1.0 pyhd8ed1ab_0",
   "setuptools 63.2.0 py39hf3d152e_0",
   "git 2.37.1 pl5321h36853c3_0",
   "libstdcxx-ng 12.1.0 ha89aaad_16",
   "perl 5.32.1 2_h7f98852_perl5",
   "urllib3 1.26.10 pyhd8ed1ab_0",
   "sqlite 3.39.2 h4ff8645_0",
   "ruamel.yaml 0.17.21 py39hb9d737c_1",
   "watchgod 0.8.2 pyhd8ed1ab_0",
   "libcurl 7.83.1 h7bff187_0",
   "requests 2.28.1 pyhd8ed1ab_0",
   "toml 0.10.2 pyhd8ed1ab_0",
   "ca-certificates 2022.9.24 ha878542_0",
   "conda-forge-ci-setup 3.21.0 py39h69ce9fc_100",
   "conda-build 3.22.0 py39hf3d152e_2",
   "oniguruma 6.9.8 h166bdaf_0",
   "pip 22.2.2 pyhd8ed1ab_0",
   "click 8.1.3 py39hf3d152e_0",
   "boa 0.11.0 pyha770c72_3",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "jq 1.6 h36c2ea0_1000",
   "conda-env 2.6.0 1",
   "certifi 2022.9.24 pyhd8ed1ab_0"
  ],
  "summary": "Implementation of the Leiden algorithm for various methods for use with igraph in python.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "c_compiler_version": "10",
  "cdt_name": "cos6",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "10",
  "docker_image": "quay.io/condaforge/linux-anvil-cos7-x86_64",
  "extend_keys": [
   "extend_keys",
   "pin_run_as_build",
   "ignore_build_only_deps",
   "ignore_version"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.7.* *_cpython",
  "r_base": "3.5",
  "target_platform": "linux-64",
  "zip_keys": [
   [
    "c_compiler_version",
    "cxx_compiler_version"
   ]
  ]
 },
 "files": [
  "lib/python3.7/site-packages/leidenalg-0.9.0-py3.7.egg-info/PKG-INFO",
  "lib/python3.7/site-packages/leidenalg/Optimiser.py",
  "lib/python3.7/site-packages/leidenalg/VertexPartition.py",
  "lib/python3.7/site-packages/leidenalg/__init__.py",
  "lib/python3.7/site-packages/leidenalg/_c_leiden.cpython-37m-x86_64-linux-gnu.so",
  "lib/python3.7/site-packages/leidenalg/functions.py",
  "lib/python3.7/site-packages/leidenalg/version.py"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py37hd23a5d3_0",
  "build_number": 0,
  "depends": [
   "igraph >=0.10.1,<0.11.0a0",
   "libgcc-ng >=12",
   "libstdcxx-ng >=12",
   "pip",
   "python >=3.7,<3.8.0a0",
   "python-igraph",
   "python_abi 3.7.* *_cp37m"
  ],
  "license": "GPL-3.0-or-later",
  "license_family": "GPL",
  "name": "leidenalg",
  "platform": "linux",
  "subdir": "linux-64",
  "timestamp": 1664878191166,
  "version": "0.9.0"
 },
 "metadata_version": 1,
 "name": "leidenalg",
 "raw_recipe": "{% set name = \"leidenalg\" %}\n{% set version = \"0.9.0\" %}\n{% set sha256 = \"4878f85b63c4df5632b2bf646e4f9760898ac1f55160dec26b8709b7bee2783c\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  skip: true  # [win and vc<14]\n\n  run_exports:\n    - {{ pin_subpackage(\"leidenalg\", max_pin=\"x.x\") }}\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n\n  host:\n    - igraph >=0.10,<0.11\n    - python\n    - setuptools\n    - setuptools_scm\n    - pip\n  run:\n    - igraph\n    - python-igraph\n    - python\n    - pip\n\ntest:\n  requires:\n    - ddt\n  source_files:\n    - tests\n  imports:\n    - leidenalg\n  commands:\n    - python -m unittest -v --locals\n\nabout:\n  home: https://github.com/vtraag/leidenalg\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: Implementation of the Leiden algorithm for various methods for use with igraph in python.\n  description: |\n    This package implements the Leiden algorithm in C++ and\n    exposes it to python. It relies on (python-)igraph for it to\n    function. Besides the relative flexibility of the\n    implementation, it also scales well, and can be run on graphs\n    of millions of nodes (as long as they can fit in memory).\n    The core function is find_partition which is able to optimize a\n    variety of quality functions using the Leiden algorithm.\n  doc_url: http://leidenalg.readthedocs.io/\n  dev_url: https://github.com/vtraag/leidenalg\n\nextra:\n  recipe-maintainers:\n    - vtraag\n",
 "rendered_recipe": {
  "about": {
   "description": "This package implements the Leiden algorithm in C++ and\nexposes it to python. It relies on (python-)igraph for it to\nfunction. Besides the relative flexibility of the\nimplementation, it also scales well, and can be run on graphs\nof millions of nodes (as long as they can fit in memory).\nThe core function is find_partition which is able to optimize a\nvariety of quality functions using the Leiden algorithm.\n",
   "dev_url": "https://github.com/vtraag/leidenalg",
   "doc_url": "http://leidenalg.readthedocs.io/",
   "home": "https://github.com/vtraag/leidenalg",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Implementation of the Leiden algorithm for various methods for use with igraph in python."
  },
  "build": {
   "number": "0",
   "run_exports": [
    "leidenalg >=0.9.0,<0.10.0a0"
   ],
   "string": "py37hd23a5d3_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "vtraag"
   ]
  },
  "package": {
   "name": "leidenalg",
   "version": "0.9.0"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 2_gnu",
    "binutils_impl_linux-64 2.36.1 h193b22a_2",
    "binutils_linux-64 2.36 hf3e587d_10",
    "gcc_impl_linux-64 10.4.0 h7ee1905_16",
    "gcc_linux-64 10.4.0 h9215b83_10",
    "gxx_impl_linux-64 10.4.0 h7ee1905_16",
    "gxx_linux-64 10.4.0 h6e491c6_10",
    "kernel-headers_linux-64 2.6.32 he073ed8_15",
    "ld_impl_linux-64 2.36.1 hea4e1c9_2",
    "libgcc-devel_linux-64 10.4.0 h74af60c_16",
    "libgcc-ng 12.1.0 h8d9b700_16",
    "libgomp 12.1.0 h8d9b700_16",
    "libsanitizer 10.4.0 hde28e3b_16",
    "libstdcxx-devel_linux-64 10.4.0 h74af60c_16",
    "libstdcxx-ng 12.1.0 ha89aaad_16",
    "sysroot_linux-64 2.12 he073ed8_15"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 2_gnu",
    "arpack 3.7.0 hdefa2d7_2",
    "ca-certificates 2022.9.24 ha878542_0",
    "glpk 5.0 h445213a_0",
    "gmp 6.2.1 h58526e2_0",
    "icu 70.1 h27087fc_0",
    "igraph 0.10.1 ha1f048c_3",
    "importlib-metadata 4.11.4 py37h89c1867_0",
    "ld_impl_linux-64 2.36.1 hea4e1c9_2",
    "libblas 3.9.0 16_linux64_openblas",
    "libcblas 3.9.0 16_linux64_openblas",
    "libffi 3.4.2 h7f98852_5",
    "libgcc-ng 12.1.0 h8d9b700_16",
    "libgfortran-ng 12.1.0 h69a702a_16",
    "libgfortran5 12.1.0 hdcd56e2_16",
    "libgomp 12.1.0 h8d9b700_16",
    "libiconv 1.17 h166bdaf_0",
    "liblapack 3.9.0 16_linux64_openblas",
    "libnsl 2.0.0 h7f98852_0",
    "libopenblas 0.3.21 pthreads_h78a6416_3",
    "libsqlite 3.39.4 h753d276_0",
    "libstdcxx-ng 12.1.0 ha89aaad_16",
    "libxml2 2.9.14 h22db469_4",
    "libzlib 1.2.12 h166bdaf_4",
    "metis 5.1.0 h58526e2_1006",
    "mpfr 4.1.0 h9202a9a_1",
    "ncurses 6.3 h27087fc_1",
    "openssl 3.0.5 h166bdaf_2",
    "packaging 21.3 pyhd8ed1ab_0",
    "pip 22.2.2 pyhd8ed1ab_0",
    "pyparsing 3.0.9 pyhd8ed1ab_0",
    "python 3.7.12 hf930737_100_cpython",
    "python_abi 3.7 2_cp37m",
    "readline 8.1.2 h0f457ee_0",
    "setuptools 65.4.1 pyhd8ed1ab_0",
    "setuptools-scm 7.0.5 pyhd8ed1ab_0",
    "setuptools_scm 7.0.5 hd8ed1ab_0",
    "sqlite 3.39.4 h4ff8645_0",
    "suitesparse 5.10.1 h9e50725_1",
    "tbb 2021.6.0 h924138e_0",
    "tk 8.6.12 h27826a3_0",
    "tomli 2.0.1 pyhd8ed1ab_0",
    "typing-extensions 4.3.0 hd8ed1ab_0",
    "typing_extensions 4.3.0 pyha770c72_0",
    "wheel 0.37.1 pyhd8ed1ab_0",
    "xz 5.2.6 h166bdaf_0",
    "zipp 3.8.1 pyhd8ed1ab_0"
   ],
   "run": [
    "igraph >=0.10.1,<0.11.0a0",
    "libgcc-ng >=12",
    "libstdcxx-ng >=12",
    "pip",
    "python >=3.7,<3.8.0a0",
    "python-igraph",
    "python_abi 3.7.* *_cp37m"
   ]
  },
  "source": {
   "fn": "leidenalg-0.9.0.tar.gz",
   "sha256": "4878f85b63c4df5632b2bf646e4f9760898ac1f55160dec26b8709b7bee2783c",
   "url": "https://pypi.io/packages/source/l/leidenalg/leidenalg-0.9.0.tar.gz"
  },
  "test": {
   "commands": [
    "python -m unittest -v --locals"
   ],
   "imports": [
    "leidenalg"
   ],
   "requires": [
    "ddt"
   ],
   "source_files": [
    "tests"
   ]
  }
 },
 "version": "0.9.0"
}
{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.21.8",
  "conda_private": false,
  "conda_version": "4.12.0",
  "description": "NVIDIA cuSPARSELt is a high-performance CUDA library dedicated to general\nmatrix-matrix operations in which at least one operand is a sparse matrix.\nThe cuSPARSELt APIs allow flexibility in the algorithm/operation selection,\nepilogue, and matrix characteristics, including memory layout,\nalignment, and data types.\nLicense Agreements:- The packages are governed by the NVIDIA cuSPARSELt\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuSPARSELt EULA -\nhttps://docs.nvidia.com/cuda/cusparselt/license.html\n",
  "dev_url": "https://developer.nvidia.com/cusparselt/downloads",
  "doc_url": "https://docs.nvidia.com/cuda/cusparselt/index.html",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "mnicely",
    "leofang"
   ]
  },
  "home": "https://developer.nvidia.com/cusparse",
  "identifiers": [],
  "keywords": [],
  "license": "LicenseRef-cuSPARSELt-Software-License-Agreement",
  "license_file": "LICENSE.txt",
  "license_url": "https://docs.nvidia.com/cuda/cusparselt/license.html",
  "root_pkgs": [
   "libsolv 0.7.22 h7866ba4_0",
   "keyutils 1.6.1 h4e544f5_0",
   "nbformat 5.4.0 pyhd8ed1ab_0",
   "ca-certificates 2022.5.18.1 h4fd8a4c_0",
   "pyopenssl 22.0.0 pyhd8ed1ab_0",
   "yaml-cpp 0.7.0 h4de3ea5_1",
   "su-exec 0.2 h516909a_1002",
   "libmambapy 0.23.3 py39hdaab871_1",
   "zipp 3.8.0 pyhd8ed1ab_0",
   "libzlib 1.2.11 h4e544f5_1014",
   "cryptography 37.0.2 py39h32042e6_0",
   "zlib 1.2.11 h4e544f5_1014",
   "pycparser 2.21 pyhd8ed1ab_0",
   "pyrsistent 0.18.1 py39hb9a1dbb_1",
   "importlib-metadata 4.11.3 py39ha65689a_1",
   "zstd 1.5.2 haad177d_1",
   "krb5 1.19.3 h7c456eb_0",
   "glob2 0.7 py_0",
   "filelock 3.7.0 pyhd8ed1ab_0",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "pycosat 0.6.3 py39h0fd3b05_1010",
   "ruamel.yaml.clib 0.2.6 py39h0fd3b05_1",
   "colorama 0.4.4 pyh9f0ad1d_0",
   "anyio 3.6.1 py39ha65689a_0",
   "reproc 14.2.3 hf897c2e_0",
   "brotlipy 0.7.0 py39h0fd3b05_1004",
   "ld_impl_linux-aarch64 2.36.1 h02ad14f_2",
   "perl 5.32.1 2_hf897c2e_perl5",
   "python 3.9.12 h2eada40_1_cpython",
   "libnsl 2.0.0 hf897c2e_0",
   "yaml 0.2.5 hf897c2e_2",
   "_openmp_mutex 4.5 2_gnu",
   "git 2.35.3 pl5321hd6c143b_0",
   "traitlets 5.2.1.post0 pyhd8ed1ab_0",
   "wcwidth 0.2.5 pyh9f0ad1d_2",
   "importlib_resources 5.7.1 pyhd8ed1ab_1",
   "libxml2 2.9.14 h370961a_0",
   "libgcc-ng 12.1.0 h3242a24_16",
   "clyent 1.2.2 py_1",
   "patchelf 0.14.5 h884eca8_0",
   "libnghttp2 1.47.0 h75cb1c7_0",
   "prompt_toolkit 3.0.29 hd8ed1ab_0",
   "backports 1.0 py_2",
   "xz 5.2.5 h6dd45c4_1",
   "json5 0.9.5 pyh9f0ad1d_0",
   "idna 3.3 pyhd8ed1ab_0",
   "libmamba 0.23.3 h8683862_1",
   "boa 0.11.0 pyha770c72_0",
   "pcre2 10.37 h73360fb_0",
   "sniffio 1.2.0 py39h4420490_3",
   "psutil 5.9.1 py39h0fd3b05_0",
   "pysocks 1.7.1 py39ha65689a_5",
   "ruamel_yaml 0.15.80 py39h14843e3_1006",
   "libev 4.33 h516909a_1",
   "liblief 0.11.5 h01db608_1",
   "tzdata 2022a h191b570_0",
   "mamba 0.23.3 py39hc9db4b5_1",
   "py-lief 0.11.5 py39h7ab65be_1",
   "ncurses 6.3 headf329_1",
   "wheel 0.37.1 pyhd8ed1ab_0",
   "cffi 1.15.0 py39hab139ec_0",
   "future 0.18.2 py39ha65689a_5",
   "prompt-toolkit 3.0.29 pyha770c72_0",
   "certifi 2022.5.18.1 py39h4420490_0",
   "python-fastjsonschema 2.15.3 pyhd8ed1ab_0",
   "openssl 1.1.1o h4e544f5_0",
   "conda-build 3.21.8 py39h4420490_0",
   "jsonschema 4.5.1 pyhd8ed1ab_0",
   "curl 7.83.1 h8fd98b7_0",
   "libstdcxx-ng 12.1.0 hd01590b_16",
   "setuptools 62.3.2 py39ha65689a_0",
   "commonmark 0.9.1 py_0",
   "libcurl 7.83.1 h8fd98b7_0",
   "pybind11-abi 4 hd8ed1ab_3",
   "pip 22.1.1 pyhd8ed1ab_0",
   "bzip2 1.0.8 hf897c2e_4",
   "typing_extensions 4.2.0 pyha770c72_1",
   "requests 2.27.1 pyhd8ed1ab_0",
   "libuuid 2.32.1 hf897c2e_1000",
   "lz4-c 1.9.3 h01db608_1",
   "dataclasses 0.8 pyhc8e2a94_3",
   "pytz 2022.1 pyhd8ed1ab_0",
   "libiconv 1.16 h6dd45c4_0",
   "pkginfo 1.8.2 pyhd8ed1ab_0",
   "ripgrep 13.0.0 hc770f70_2",
   "sqlite 3.38.5 hc74f5b8_0",
   "jupyter_core 4.10.0 py39h4420490_0",
   "anaconda-client 1.8.0 pyhd8ed1ab_0",
   "tini 0.19.0 hf897c2e_0",
   "beautifulsoup4 4.11.1 pyha770c72_0",
   "tk 8.6.12 hd8af866_0",
   "charset-normalizer 2.0.12 pyhd8ed1ab_0",
   "tqdm 4.64.0 pyhd8ed1ab_0",
   "joblib 1.1.0 pyhd8ed1ab_0",
   "ruamel.yaml 0.17.21 py39h0fd3b05_1",
   "gettext 0.19.8.1 h6edf1e2_1008",
   "pyyaml 6.0 py39h0fd3b05_4",
   "libedit 3.1.20191231 he28a2e2_2",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "watchgod 0.8.2 pyhd8ed1ab_0",
   "expat 2.4.8 ha18d298_0",
   "reproc-cpp 14.2.3 h01db608_0",
   "six 1.16.0 pyh6c4a22f_0",
   "c-ares 1.18.1 hf897c2e_0",
   "lzo 2.10 h516909a_1000",
   "python_abi 3.9 2_cp39",
   "chardet 4.0.0 py39ha65689a_3",
   "conda-package-handling 1.8.1 py39h0fd3b05_1",
   "icu 70.1 ha18d298_0",
   "readline 8.1 h1a49cc3_0",
   "rich 12.4.1 pyhd8ed1ab_1",
   "attrs 21.4.0 pyhd8ed1ab_0",
   "soupsieve 2.3.1 pyhd8ed1ab_0",
   "conda 4.12.0 py39h4420490_0",
   "jinja2 3.1.2 pyhd8ed1ab_0",
   "libgomp 12.1.0 h3242a24_16",
   "libffi 3.4.2 h3557bc0_5",
   "urllib3 1.26.9 pyhd8ed1ab_0",
   "patch 2.7.6 hf897c2e_1002",
   "markupsafe 2.1.1 py39hb9a1dbb_1",
   "libarchive 3.5.2 h610d84a_2",
   "python-libarchive-c 4.0 py39h4420490_1",
   "pygments 2.12.0 pyhd8ed1ab_0",
   "libssh2 1.10.0 h1ab2c7b_2",
   "oniguruma 6.9.7.1 hf897c2e_0",
   "conda-forge-ci-setup 3.20.1 py39hbe0ec15_100",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "conda-env 2.6.0 1",
   "click 8.1.3 py39h4420490_0",
   "jq 1.6 hb9de7d4_1000"
  ],
  "summary": "Basic Linear Algebra for Sparse Matrices on NVIDIA GPUs",
  "tags": []
 },
 "conda_build_config": {
  "BUILD": "aarch64-conda_cos7-linux-gnu",
  "CI": "travis",
  "c_compiler": "gcc",
  "c_compiler_version": "10",
  "cdt_arch": "aarch64",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cuda_compiler": "nvcc",
  "cuda_compiler_version": "11.2",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "10",
  "docker_image": "quay.io/condaforge/linux-anvil-aarch64-cuda:11.2",
  "extend_keys": [
   "extend_keys",
   "ignore_build_only_deps",
   "ignore_version",
   "pin_run_as_build"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.9",
  "r_base": "3.5",
  "target_platform": "linux-aarch64",
  "zip_keys": [
   [
    "c_compiler_version",
    "cxx_compiler_version",
    "cuda_compiler_version",
    "cdt_name",
    "docker_image"
   ]
  ]
 },
 "files": [
  "bin/.cusparselt-post-link.sh",
  "include/cusparseLt.h",
  "lib/libcusparseLt.so",
  "lib/libcusparseLt.so.0",
  "lib/libcusparseLt.so.0.2.0.1"
 ],
 "index": {
  "arch": "aarch64",
  "build": "h1212f3d_1",
  "build_number": 1,
  "constrains": [
   "__glibc >=2.17"
  ],
  "depends": [
   "__glibc >=2.17",
   "cudatoolkit >=11.2,<12",
   "libgcc-ng >=12",
   "libstdcxx-ng >=12"
  ],
  "license": "LicenseRef-cuSPARSELt-Software-License-Agreement",
  "name": "cusparselt",
  "platform": "linux",
  "subdir": "linux-aarch64",
  "timestamp": 1653365293622,
  "version": "0.2.0.1"
 },
 "metadata_version": 1,
 "name": "cusparselt",
 "raw_recipe": "{% set version = \"0.2.0\" %}\n{% set patch_version = \"1\" %}\n\npackage:\n  name: cusparselt\n  version: {{ version }}.{{ patch_version }}\n\nsource:\n  url: https://developer.download.nvidia.com/compute/libcusparse-lt/{{ version }}/local_installers/libcusparse_lt-linux-x86_64-{{ version }}.{{ patch_version }}.tar.gz  # [linux64]\n  url: https://developer.download.nvidia.com/compute/libcusparse-lt/{{ version }}/local_installers/libcusparse_lt-linux-sbsa-{{ version }}.{{ patch_version }}.tar.gz  # [aarch64]\n  url: https://developer.download.nvidia.com/compute/libcusparse-lt/{{ version }}/local_installers/libcusparse_lt-windows-x86_64-{{ version }}.{{ patch_version }}.zip  # [win64]\n  sha256: a2d724d44fc20ebd1ee481aee444cef0a803338c69208f7c70e2556920705541  # [linux64]\n  sha256: 09a0d5afbc804ff2dabb65c012a59352a22a1596223929e4fd35e602c0df7b4c  # [aarch64]\n  sha256: 6379fddb2b8922a62510781b1a478986cf3dbdb8026fcd121c49e929ccf192c2  # [win64]\n\nbuild:\n  number: 1\n  skip: true  # [ppc64le or (cuda_compiler_version != \"11.2\")]\n  script:\n    - mkdir -p $PREFIX/include                                                # [unix]\n    - cp -r include/* $PREFIX/include/                                        # [unix]\n    - mkdir -p $PREFIX/lib                                                    # [unix]\n    - mv lib64/libcusparseLt.so* $PREFIX/lib/                                 # [unix]\n\n    - copy include\\\\cusparseLt.h %LIBRARY_INC%\\\\                           # [win64]\n    - copy lib\\\\cusparseLt.dll %LIBRARY_BIN%\\\\                             # [win64]\n    - copy lib\\\\cusparseLt.lib %LIBRARY_LIB%\\\\                             # [win64]\n  run_exports:\n    - {{ pin_subpackage('cusparselt', exact=True) }}\n  missing_dso_whitelist:\n    - '*/libgomp.*'  # [linux]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}\n    - sysroot_linux-64 2.17  # [linux64]\n  run:\n  run_constrained:\n    # Only GLIBC_2.17 or older symbols present\n    - __glibc >=2.17      # [linux]\n\ntest:\n  requires:\n    - git\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}\n    - sysroot_linux-64 2.17  # [linux64]\n    # make sure we pick up the version matching the docker,\n    # or the linker would complain\n    - cudatoolkit 11.2\n  files:\n    - test_load_elf.c        # [linux]\n\nabout:\n  home: https://developer.nvidia.com/cusparse\n  license: LicenseRef-cuSPARSELt-Software-License-Agreement\n  license_url: https://docs.nvidia.com/cuda/cusparselt/license.html\n  license_file: LICENSE.txt\n  summary: \"Basic Linear Algebra for Sparse Matrices on NVIDIA GPUs\"\n  description: |\n    NVIDIA cuSPARSELt is a high-performance CUDA library dedicated to general\n    matrix-matrix operations in which at least one operand is a sparse matrix.\n    The cuSPARSELt APIs allow flexibility in the algorithm/operation selection,\n    epilogue, and matrix characteristics, including memory layout,\n    alignment, and data types.\n    License Agreements:- The packages are governed by the NVIDIA cuSPARSELt\n    Software License Agreement (EULA). By downloading and using the packages,\n    you accept the terms and conditions of the NVIDIA cuSPARSELt EULA -\n    https://docs.nvidia.com/cuda/cusparselt/license.html\n  doc_url: https://docs.nvidia.com/cuda/cusparselt/index.html\n  dev_url: https://developer.nvidia.com/cusparselt/downloads\n\nextra:\n  recipe-maintainers:\n    - mnicely\n    - leofang\n",
 "rendered_recipe": {
  "about": {
   "description": "NVIDIA cuSPARSELt is a high-performance CUDA library dedicated to general\nmatrix-matrix operations in which at least one operand is a sparse matrix.\nThe cuSPARSELt APIs allow flexibility in the algorithm/operation selection,\nepilogue, and matrix characteristics, including memory layout,\nalignment, and data types.\nLicense Agreements:- The packages are governed by the NVIDIA cuSPARSELt\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuSPARSELt EULA -\nhttps://docs.nvidia.com/cuda/cusparselt/license.html\n",
   "dev_url": "https://developer.nvidia.com/cusparselt/downloads",
   "doc_url": "https://docs.nvidia.com/cuda/cusparselt/index.html",
   "home": "https://developer.nvidia.com/cusparse",
   "license": "LicenseRef-cuSPARSELt-Software-License-Agreement",
   "license_file": "LICENSE.txt",
   "license_url": "https://docs.nvidia.com/cuda/cusparselt/license.html",
   "summary": "Basic Linear Algebra for Sparse Matrices on NVIDIA GPUs"
  },
  "build": {
   "missing_dso_whitelist": [
    "*/libgomp.*"
   ],
   "number": "1",
   "run_exports": [
    "cusparselt 0.2.0.1 1"
   ],
   "script": [
    "mkdir -p $PREFIX/include",
    "cp -r include/* $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib64/libcusparseLt.so* $PREFIX/lib/"
   ],
   "string": "h1212f3d_1"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "leofang",
    "mnicely"
   ]
  },
  "package": {
   "name": "cusparselt",
   "version": "0.2.0.1"
  },
  "requirements": {
   "build": [
    "_openmp_mutex 4.5 2_gnu",
    "binutils_impl_linux-aarch64 2.36.1 h026399b_2",
    "binutils_linux-aarch64 2.36 h7854541_10",
    "gcc_impl_linux-aarch64 10.3.0 ha07e0e6_16",
    "gcc_linux-aarch64 10.3.0 h4e3e293_10",
    "gxx_impl_linux-aarch64 10.3.0 ha07e0e6_16",
    "gxx_linux-aarch64 10.3.0 h72ff769_10",
    "kernel-headers_linux-aarch64 4.18.0 h5b4a56d_13",
    "ld_impl_linux-aarch64 2.36.1 h02ad14f_2",
    "libgcc-devel_linux-aarch64 10.3.0 h8e480ec_16",
    "libgcc-ng 12.1.0 h3242a24_16",
    "libgomp 12.1.0 h3242a24_16",
    "libsanitizer 10.3.0 h971684a_16",
    "libstdcxx-devel_linux-aarch64 10.3.0 h8e480ec_16",
    "libstdcxx-ng 12.1.0 hd01590b_16",
    "nvcc_linux-aarch64 11.2 h8127329_18",
    "sed 4.8 ha0d5d3d_0",
    "sysroot_linux-aarch64 2.17 h43d7e78_13"
   ],
   "host": [
    "_openmp_mutex 4.5 2_gnu",
    "cudatoolkit 11.7.0 h254b3b0_10",
    "libgcc-ng 12.1.0 h3242a24_16",
    "libgomp 12.1.0 h3242a24_16",
    "libstdcxx-ng 12.1.0 hd01590b_16"
   ],
   "run": [
    "__glibc >=2.17",
    "cudatoolkit >=11.2,<12",
    "libgcc-ng >=12",
    "libstdcxx-ng >=12"
   ],
   "run_constrained": [
    "__glibc >=2.17"
   ]
  },
  "source": {
   "sha256": "09a0d5afbc804ff2dabb65c012a59352a22a1596223929e4fd35e602c0df7b4c",
   "url": "https://developer.download.nvidia.com/compute/libcusparse-lt/0.2.0/local_installers/libcusparse_lt-linux-sbsa-0.2.0.1.tar.gz"
  },
  "test": {
   "files": [
    "test_load_elf.c"
   ],
   "requires": [
    "cudatoolkit 11.2.*",
    "gcc_linux-aarch64 10.*",
    "git",
    "gxx_linux-aarch64 10.*",
    "nvcc_linux-aarch64 11.2.*"
   ]
  }
 },
 "version": "0.2.0.1"
}
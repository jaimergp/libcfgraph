{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.21.8",
  "conda_private": false,
  "conda_version": "4.11.0",
  "description": "Apache TVM (incubating) is a compiler stack for deep learning systems.\nIt is designed to close the gap between the productivity-focused deep\nlearning frameworks, and the performance- and efficiency-focused hardware\nbackends. TVM works with deep learning frameworks to provide end to end\ncompilation to different backends.\n",
  "dev_url": "https://github.com/apache/incubator-tvm",
  "doc_url": "https://tvm.apache.org/docs/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "ngam",
    "marcelotrevisani"
   ]
  },
  "home": "https://tvm.apache.org/",
  "identifiers": [],
  "keywords": [],
  "license": "Apache-2.0",
  "license_family": "Apache",
  "license_file": "LICENSE",
  "root_pkgs": [
   "tzdata 2021e he74cb21_0",
   "commonmark 0.9.1 py_0",
   "libedit 3.1.20191231 he28a2e2_2",
   "libnsl 2.0.0 h7f98852_0",
   "ripgrep 13.0.0 h2f28480_2",
   "ld_impl_linux-64 2.36.1 hea4e1c9_2",
   "six 1.16.0 pyh6c4a22f_0",
   "colorama 0.4.4 pyh9f0ad1d_0",
   "wcwidth 0.2.5 pyh9f0ad1d_2",
   "liblief 0.11.5 h9c3ff4c_1",
   "psutil 5.9.0 py39h3811e60_0",
   "conda-package-handling 1.7.3 py39h3811e60_1",
   "pkginfo 1.8.2 pyhd8ed1ab_0",
   "future 0.18.2 py39hf3d152e_4",
   "lz4-c 1.9.3 h9c3ff4c_1",
   "pyrsistent 0.18.1 py39h3811e60_0",
   "gettext 0.19.8.1 h73d1719_1008",
   "importlib-metadata 4.11.2 py39hf3d152e_0",
   "openssl 1.1.1l h7f98852_0",
   "xz 5.2.5 h516909a_1",
   "anaconda-client 1.8.0 pyhd8ed1ab_0",
   "curl 7.81.0 h2574ce0_0",
   "pybind11-abi 4 hd8ed1ab_3",
   "attrs 21.4.0 pyhd8ed1ab_0",
   "expat 2.4.6 h27087fc_0",
   "beautifulsoup4 4.10.0 pyha770c72_0",
   "cffi 1.15.0 py39h4bc2ebd_0",
   "ruamel_yaml 0.15.80 py39h3811e60_1006",
   "yaml 0.2.5 h7f98852_2",
   "_openmp_mutex 4.5 1_gnu",
   "json5 0.9.5 pyh9f0ad1d_0",
   "certifi 2021.10.8 py39hf3d152e_1",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "py-lief 0.11.5 py39he80948d_1",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "backports 1.0 py_2",
   "python 3.9.10 h85951f9_2_cpython",
   "filelock 3.6.0 pyhd8ed1ab_0",
   "wheel 0.37.1 pyhd8ed1ab_0",
   "krb5 1.19.2 h3790be6_4",
   "chardet 4.0.0 py39hf3d152e_2",
   "su-exec 0.2 h516909a_1002",
   "sqlite 3.37.0 h9cd32fc_0",
   "libiconv 1.16 h516909a_0",
   "tqdm 4.63.0 pyhd8ed1ab_0",
   "perl 5.32.1 2_h7f98852_perl5",
   "dataclasses 0.8 pyhc8e2a94_3",
   "libffi 3.4.2 h7f98852_5",
   "markupsafe 2.1.0 py39hb9d737c_0",
   "reproc 14.2.3 h7f98852_0",
   "pytz 2021.3 pyhd8ed1ab_0",
   "charset-normalizer 2.0.12 pyhd8ed1ab_0",
   "clyent 1.2.2 py_1",
   "glob2 0.7 py_0",
   "libev 4.33 h516909a_1",
   "tini 0.19.0 h7f98852_0",
   "jinja2 3.0.3 pyhd8ed1ab_0",
   "rich 11.2.0 pyhd8ed1ab_0",
   "readline 8.1 h46c0cb4_0",
   "ipython_genutils 0.2.0 py_1",
   "pyyaml 6.0 py39h3811e60_3",
   "setuptools 60.9.3 py39hf3d152e_0",
   "inotify_simple 1.3.5 pyha770c72_3",
   "python_abi 3.9 2_cp39",
   "_libgcc_mutex 0.1 conda_forge",
   "ca-certificates 2021.10.8 ha878542_0",
   "libxml2 2.9.12 h885dcf4_1",
   "keyutils 1.6.1 h166bdaf_0",
   "idna 3.3 pyhd8ed1ab_0",
   "urllib3 1.26.8 pyhd8ed1ab_1",
   "libarchive 3.5.2 hccf745f_1",
   "ruamel.yaml.clib 0.2.6 py39h3811e60_0",
   "zstd 1.5.2 ha95c52a_0",
   "soupsieve 2.3.1 pyhd8ed1ab_0",
   "reproc-cpp 14.2.3 h9c3ff4c_0",
   "brotlipy 0.7.0 py39h3811e60_1003",
   "libcurl 7.81.0 h2574ce0_0",
   "patchelf 0.14.5 h58526e2_0",
   "requests 2.27.1 pyhd8ed1ab_0",
   "ncurses 6.3 h9c3ff4c_0",
   "pygments 2.11.2 pyhd8ed1ab_0",
   "libgomp 11.2.0 h1d223b6_13",
   "cryptography 36.0.1 py39h95dcef6_0",
   "traitlets 5.1.1 pyhd8ed1ab_0",
   "pysocks 1.7.1 py39hf3d152e_4",
   "typing_extensions 4.1.1 pyha770c72_0",
   "conda-build 3.21.8 py39hf3d152e_0",
   "pcre2 10.37 h032f7d1_0",
   "jsonschema 4.4.0 pyhd8ed1ab_0",
   "ruamel.yaml 0.17.21 py39h3811e60_0",
   "libssh2 1.10.0 ha56f1ee_2",
   "zipp 3.7.0 pyhd8ed1ab_1",
   "libnghttp2 1.47.0 h727a467_0",
   "joblib 1.1.0 pyhd8ed1ab_0",
   "pyopenssl 22.0.0 pyhd8ed1ab_0",
   "lzo 2.10 h516909a_1000",
   "pycparser 2.21 pyhd8ed1ab_0",
   "git 2.35.1 pl5321h36853c3_0",
   "icu 69.1 h9c3ff4c_0",
   "conda 4.11.0 py39hf3d152e_0",
   "libstdcxx-ng 11.2.0 he4da1e4_13",
   "bzip2 1.0.8 h7f98852_4",
   "jupyter_core 4.9.2 py39hf3d152e_0",
   "pycosat 0.6.3 py39h3811e60_1009",
   "python-libarchive-c 4.0 py39hf3d152e_0",
   "tk 8.6.12 h27826a3_0",
   "importlib_resources 5.4.0 pyhd8ed1ab_0",
   "libzlib 1.2.11 h36c2ea0_1013",
   "prompt_toolkit 3.0.27 hd8ed1ab_0",
   "patch 2.7.6 h7f98852_1002",
   "libsolv 0.7.19 h780b84a_5",
   "prompt-toolkit 3.0.27 pyha770c72_0",
   "c-ares 1.18.1 h7f98852_0",
   "libuuid 2.32.1 h7f98852_1000",
   "zlib 1.2.11 h36c2ea0_1013",
   "yaml-cpp 0.6.3 he1b5a44_4",
   "nbformat 5.1.3 pyhd8ed1ab_0",
   "libgcc-ng 11.2.0 h1d223b6_13",
   "conda-env 2.6.0 0",
   "mamba 0.19.1 py39hfa8f2c8_0",
   "conda-forge-ci-setup 3.18.4 py39h69ce9fc_100",
   "jq 1.6 h36c2ea0_1000",
   "watchgod 0.7 pyhd8ed1ab_0",
   "libmambapy 0.19.1 py39h8bfa403_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "boa 0.8.2 pyha770c72_0",
   "libmamba 0.19.1 h3985d26_0",
   "pip 22.0.4 pyhd8ed1ab_0",
   "click 8.0.4 py39hf3d152e_0",
   "oniguruma 6.9.7.1 h7f98852_0"
  ],
  "summary": "Open Deep Learning Compiler Stack",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "c_compiler_version": "10",
  "cdt_name": "cos6",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cuda_compiler": "nvcc",
  "cuda_compiler_version": "None",
  "cudnn": "undefined",
  "cutensor": "1",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "10",
  "docker_image": "quay.io/condaforge/linux-anvil-cos7-x86_64",
  "extend_keys": [
   "ignore_version",
   "extend_keys",
   "pin_run_as_build",
   "ignore_build_only_deps"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "nccl": "2",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.9",
  "r_base": "3.5",
  "target_platform": "linux-64",
  "zip_keys": [
   [
    "c_compiler_version",
    "cxx_compiler_version",
    "cudnn",
    "cuda_compiler_version",
    "cdt_name",
    "docker_image"
   ]
  ]
 },
 "files": [
  "include/tvm/arith/analyzer.h",
  "include/tvm/arith/bound.h",
  "include/tvm/arith/int_set.h",
  "include/tvm/arith/int_solver.h",
  "include/tvm/arith/iter_affine_map.h",
  "include/tvm/arith/pattern.h",
  "include/tvm/auto_scheduler/auto_schedule.h",
  "include/tvm/auto_scheduler/compute_dag.h",
  "include/tvm/auto_scheduler/cost_model.h",
  "include/tvm/auto_scheduler/feature.h",
  "include/tvm/auto_scheduler/loop_state.h",
  "include/tvm/auto_scheduler/measure.h",
  "include/tvm/auto_scheduler/measure_record.h",
  "include/tvm/auto_scheduler/search_policy.h",
  "include/tvm/auto_scheduler/search_task.h",
  "include/tvm/auto_scheduler/transform_step.h",
  "include/tvm/driver/driver_api.h",
  "include/tvm/ir/adt.h",
  "include/tvm/ir/affine_type.h",
  "include/tvm/ir/attrs.h",
  "include/tvm/ir/diagnostic.h",
  "include/tvm/ir/env_func.h",
  "include/tvm/ir/error.h",
  "include/tvm/ir/expr.h",
  "include/tvm/ir/function.h",
  "include/tvm/ir/instrument.h",
  "include/tvm/ir/module.h",
  "include/tvm/ir/op.h",
  "include/tvm/ir/span.h",
  "include/tvm/ir/tensor_type.h",
  "include/tvm/ir/transform.h",
  "include/tvm/ir/type.h",
  "include/tvm/ir/type_functor.h",
  "include/tvm/ir/type_relation.h",
  "include/tvm/meta_schedule/arg_info.h",
  "include/tvm/meta_schedule/builder.h",
  "include/tvm/meta_schedule/database.h",
  "include/tvm/meta_schedule/integration.h",
  "include/tvm/meta_schedule/runner.h",
  "include/tvm/meta_schedule/search_strategy.h",
  "include/tvm/meta_schedule/space_generator.h",
  "include/tvm/meta_schedule/task_scheduler.h",
  "include/tvm/meta_schedule/tune_context.h",
  "include/tvm/node/attr_registry_map.h",
  "include/tvm/node/functor.h",
  "include/tvm/node/node.h",
  "include/tvm/node/reflection.h",
  "include/tvm/node/repr_printer.h",
  "include/tvm/node/serialization.h",
  "include/tvm/node/structural_equal.h",
  "include/tvm/node/structural_hash.h",
  "include/tvm/parser/parser.h",
  "include/tvm/parser/source_map.h",
  "include/tvm/relay/adt.h",
  "include/tvm/relay/analysis.h",
  "include/tvm/relay/attrs/algorithm.h",
  "include/tvm/relay/attrs/annotation.h",
  "include/tvm/relay/attrs/bitserial.h",
  "include/tvm/relay/attrs/call.h",
  "include/tvm/relay/attrs/debug.h",
  "include/tvm/relay/attrs/device_copy.h",
  "include/tvm/relay/attrs/image.h",
  "include/tvm/relay/attrs/memory.h",
  "include/tvm/relay/attrs/nn.h",
  "include/tvm/relay/attrs/random.h",
  "include/tvm/relay/attrs/reduce.h",
  "include/tvm/relay/attrs/transform.h",
  "include/tvm/relay/attrs/vision.h",
  "include/tvm/relay/attrs/vm.h",
  "include/tvm/relay/base.h",
  "include/tvm/relay/dataflow_matcher.h",
  "include/tvm/relay/dataflow_pattern.h",
  "include/tvm/relay/dataflow_pattern_functor.h",
  "include/tvm/relay/executor.h",
  "include/tvm/relay/expr.h",
  "include/tvm/relay/expr_functor.h",
  "include/tvm/relay/feature.h",
  "include/tvm/relay/function.h",
  "include/tvm/relay/interpreter.h",
  "include/tvm/relay/op.h",
  "include/tvm/relay/op_attr_types.h",
  "include/tvm/relay/op_strategy.h",
  "include/tvm/relay/pattern_functor.h",
  "include/tvm/relay/qnn/attrs.h",
  "include/tvm/relay/qnn/transform.h",
  "include/tvm/relay/runtime.h",
  "include/tvm/relay/transform.h",
  "include/tvm/relay/type.h",
  "include/tvm/runtime/c_backend_api.h",
  "include/tvm/runtime/c_runtime_api.h",
  "include/tvm/runtime/container/adt.h",
  "include/tvm/runtime/container/array.h",
  "include/tvm/runtime/container/base.h",
  "include/tvm/runtime/container/closure.h",
  "include/tvm/runtime/container/map.h",
  "include/tvm/runtime/container/optional.h",
  "include/tvm/runtime/container/shape_tuple.h",
  "include/tvm/runtime/container/string.h",
  "include/tvm/runtime/contrib/papi.h",
  "include/tvm/runtime/crt/crt.h",
  "include/tvm/runtime/crt/error_codes.h",
  "include/tvm/runtime/crt/func_registry.h",
  "include/tvm/runtime/crt/graph_executor.h",
  "include/tvm/runtime/crt/graph_executor_module.h",
  "include/tvm/runtime/crt/logging.h",
  "include/tvm/runtime/crt/microtvm_rpc_server.h",
  "include/tvm/runtime/crt/module.h",
  "include/tvm/runtime/crt/packed_func.h",
  "include/tvm/runtime/crt/page_allocator.h",
  "include/tvm/runtime/crt/platform.h",
  "include/tvm/runtime/crt/rpc_common/frame_buffer.h",
  "include/tvm/runtime/crt/rpc_common/framing.h",
  "include/tvm/runtime/crt/rpc_common/session.h",
  "include/tvm/runtime/crt/rpc_common/write_stream.h",
  "include/tvm/runtime/crt/stack_allocator.h",
  "include/tvm/runtime/data_type.h",
  "include/tvm/runtime/device_api.h",
  "include/tvm/runtime/executor_info.h",
  "include/tvm/runtime/logging.h",
  "include/tvm/runtime/memory.h",
  "include/tvm/runtime/micro/standalone/microtvm_runtime.h",
  "include/tvm/runtime/module.h",
  "include/tvm/runtime/ndarray.h",
  "include/tvm/runtime/object.h",
  "include/tvm/runtime/packed_func.h",
  "include/tvm/runtime/profiling.h",
  "include/tvm/runtime/registry.h",
  "include/tvm/runtime/serializer.h",
  "include/tvm/runtime/threading_backend.h",
  "include/tvm/runtime/vm/bytecode.h",
  "include/tvm/runtime/vm/executable.h",
  "include/tvm/runtime/vm/memory_manager.h",
  "include/tvm/runtime/vm/vm.h",
  "include/tvm/support/parallel_for.h",
  "include/tvm/support/random_engine.h",
  "include/tvm/support/with.h",
  "include/tvm/target/codegen.h",
  "include/tvm/target/compilation_config.h",
  "include/tvm/target/generic_func.h",
  "include/tvm/target/se_scope.h",
  "include/tvm/target/tag.h",
  "include/tvm/target/target.h",
  "include/tvm/target/target_info.h",
  "include/tvm/target/target_kind.h",
  "include/tvm/te/autodiff.h",
  "include/tvm/te/operation.h",
  "include/tvm/te/schedule.h",
  "include/tvm/te/schedule_pass.h",
  "include/tvm/te/tensor.h",
  "include/tvm/te/tensor_intrin.h",
  "include/tvm/tir/analysis.h",
  "include/tvm/tir/buffer.h",
  "include/tvm/tir/builtin.h",
  "include/tvm/tir/data_layout.h",
  "include/tvm/tir/expr.h",
  "include/tvm/tir/expr_functor.h",
  "include/tvm/tir/function.h",
  "include/tvm/tir/op.h",
  "include/tvm/tir/op_attr_types.h",
  "include/tvm/tir/schedule/block_scope.h",
  "include/tvm/tir/schedule/instruction.h",
  "include/tvm/tir/schedule/schedule.h",
  "include/tvm/tir/schedule/state.h",
  "include/tvm/tir/schedule/trace.h",
  "include/tvm/tir/stmt.h",
  "include/tvm/tir/stmt_functor.h",
  "include/tvm/tir/transform.h",
  "include/tvm/tir/var.h",
  "include/tvm/topi/broadcast.h",
  "include/tvm/topi/contrib/cublas.h",
  "include/tvm/topi/contrib/rocblas.h",
  "include/tvm/topi/cuda/dense.h",
  "include/tvm/topi/cuda/injective.h",
  "include/tvm/topi/cuda/pooling.h",
  "include/tvm/topi/cuda/reduction.h",
  "include/tvm/topi/cuda/softmax.h",
  "include/tvm/topi/detail/array_utils.h",
  "include/tvm/topi/detail/broadcast.h",
  "include/tvm/topi/detail/constant_utils.h",
  "include/tvm/topi/detail/extern.h",
  "include/tvm/topi/detail/fuse.h",
  "include/tvm/topi/detail/pad_utils.h",
  "include/tvm/topi/detail/ravel_unravel.h",
  "include/tvm/topi/detail/strided_slice.h",
  "include/tvm/topi/detail/tensor_utils.h",
  "include/tvm/topi/einsum.h",
  "include/tvm/topi/elemwise.h",
  "include/tvm/topi/generic/default.h",
  "include/tvm/topi/generic/extern.h",
  "include/tvm/topi/generic/injective.h",
  "include/tvm/topi/nn.h",
  "include/tvm/topi/nn/bias_add.h",
  "include/tvm/topi/nn/bnn.h",
  "include/tvm/topi/nn/dense.h",
  "include/tvm/topi/nn/dilate.h",
  "include/tvm/topi/nn/flatten.h",
  "include/tvm/topi/nn/local_response_norm.h",
  "include/tvm/topi/nn/mapping.h",
  "include/tvm/topi/nn/pooling.h",
  "include/tvm/topi/nn/softmax.h",
  "include/tvm/topi/reduction.h",
  "include/tvm/topi/rocm/dense.h",
  "include/tvm/topi/rocm/injective.h",
  "include/tvm/topi/rocm/pooling.h",
  "include/tvm/topi/rocm/reduction.h",
  "include/tvm/topi/rocm/softmax.h",
  "include/tvm/topi/tags.h",
  "include/tvm/topi/transform.h",
  "include/tvm/topi/utils.h",
  "include/tvm/topi/vision/reorg.h",
  "include/tvm/topi/x86/bnn.h",
  "include/tvm/topi/x86/default.h",
  "include/tvm/topi/x86/injective.h",
  "lib/libtvm.so",
  "lib/libtvm_runtime.so"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py39ha3b9936_2_cpu",
  "build_number": 2,
  "depends": [
   "dlpack >0.2",
   "dmlc >=0.4",
   "libgcc-ng >=10.3.0",
   "libstdcxx-ng >=10.3.0",
   "llvmdev >=13.0.1,<14.0a0",
   "rang >=3.1.0"
  ],
  "license": "Apache-2.0",
  "license_family": "Apache",
  "name": "libtvm",
  "platform": "linux",
  "subdir": "linux-64",
  "timestamp": 1646978652166,
  "version": "0.8.0"
 },
 "metadata_version": 1,
 "name": "libtvm",
 "raw_recipe": "{% set name = \"libtvm\" %}\n{% set version = \"0.8.0\" %}\n{% set proc_type = \"cuda\" if cuda_compiler_version != \"None\" else \"cpu\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/apache/incubator-tvm/archive/v{{ version }}.tar.gz\n    sha256: d950c5d159c1345d0727dfb3cabb456e6947a8cb80519feaeed8e0b35e6e913e\n  - url: https://github.com/tlc-pack/libbacktrace/archive/08f7c7e.tar.gz\n    folder: 3rdparty/libbacktrace\n    sha256: e0f439898046ef5f5657173c500ce6b8f8e955c12f9ba525cd9f224b15ddf6a6\n  - url: https://github.com/apache/tvm-vta/archive/36a9157.tar.gz\n    folder: 3rdparty/vta-hw\n    sha256: 400670d21fa40ebe8a034b18c35acf44743d54898d1606980aee4c338bb2e271\n\nbuild:\n  number: 2\n  skip: true  # [win]\n  skip: true  # [cuda_compiler_version in (\"10.2\", \"11.0\", \"11.1\")]\n  string: py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_{{ proc_type }}  # [cuda_compiler_version == \"None\"]\n  string: py{{ CONDA_PY }}{{ cuda_compiler_version|replace('.', '') }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_{{ proc_type }}  # [cuda_compiler_version != \"None\"]\n  missing_dso_whitelist:\n    # Follow: https://github.com/conda-forge/deno-feedstock/blob/49611827965b148b4e724b23d4077de17cf4f90b/recipe/meta.yaml#L13-L23\n    - /System/Library/Frameworks/Metal.framework/Versions/A/Metal  # [osx]\n\nrequirements:\n  build:\n    - gnuconfig  # [unix]\n    - {{ compiler('cxx') }}  # [not osx]\n    - {{ compiler('c') }}  # [not osx]\n    - {{ compiler('cuda') }}  # [cuda_compiler_version != \"None\"]\n    - cmake >=3.5\n    - make\n    - ccache\n    - pkgconfig\n    - pkg-config\n    - ninja\n    - python <3.9\n    - llvmdev  # [build_platform != target_platform]\n \n  host:\n    - llvmdev\n    - dlpack >0.2\n    - rang >=3.1.0\n    - dmlc >=0.4\n    - cudnn  # [cuda_compiler_version != \"None\"]\n    - nccl  # [cuda_compiler_version != \"None\"]\n    - cutensor  # [cuda_compiler_version != \"None\"]\n    - cutlass  # [cuda_compiler_version != \"None\"]\n    - git\n  run:\n    - {{ pin_compatible('llvmdev') }}\n    - dlpack >0.2\n    - dmlc >=0.4\n    - rang >=3.1.0\n    - {{ pin_compatible('cudnn') }}  # [cuda_compiler_version != \"None\"]\n    - {{ pin_compatible('nccl') }}  # [cuda_compiler_version != \"None\"]\n    - {{ pin_compatible('cutensor') }}  # [cuda_compiler_version != \"None\"]\n    - {{ pin_compatible('cutlass') }}  # [cuda_compiler_version != \"None\"]\n    - __cuda  # [cuda_compiler_version != \"None\"]\n\ntest:\n  commands:\n    - test -d ${PREFIX}/include/tvm\n    - test -f ${PREFIX}/lib/libtvm${SHLIB_EXT}\n    - test -f ${PREFIX}/lib/libtvm_runtime${SHLIB_EXT}\n\nabout:\n  home: https://tvm.apache.org/\n  license: Apache-2.0\n  license_family: Apache\n  license_file: LICENSE\n  summary: Open Deep Learning Compiler Stack\n  description: |\n    Apache TVM (incubating) is a compiler stack for deep learning systems. \n    It is designed to close the gap between the productivity-focused deep \n    learning frameworks, and the performance- and efficiency-focused hardware \n    backends. TVM works with deep learning frameworks to provide end to end \n    compilation to different backends.\n  doc_url: https://tvm.apache.org/docs/\n  dev_url: https://github.com/apache/incubator-tvm\n\nextra:\n  recipe-maintainers:\n    - ngam\n    - marcelotrevisani\n",
 "rendered_recipe": {
  "about": {
   "description": "Apache TVM (incubating) is a compiler stack for deep learning systems.\nIt is designed to close the gap between the productivity-focused deep\nlearning frameworks, and the performance- and efficiency-focused hardware\nbackends. TVM works with deep learning frameworks to provide end to end\ncompilation to different backends.\n",
   "dev_url": "https://github.com/apache/incubator-tvm",
   "doc_url": "https://tvm.apache.org/docs/",
   "home": "https://tvm.apache.org/",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE",
   "summary": "Open Deep Learning Compiler Stack"
  },
  "build": {
   "missing_dso_whitelist": null,
   "number": "2",
   "string": "py39ha3b9936_2_cpu"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "marcelotrevisani",
    "ngam"
   ]
  },
  "package": {
   "name": "libtvm",
   "version": "0.8.0"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "binutils_impl_linux-64 2.36.1 h193b22a_2",
    "binutils_linux-64 2.36 hf3e587d_6",
    "bzip2 1.0.8 h7f98852_4",
    "c-ares 1.18.1 h7f98852_0",
    "ca-certificates 2021.10.8 ha878542_0",
    "ccache 4.5.1 haef5404_0",
    "cmake 3.22.3 h5432695_0",
    "expat 2.4.7 h27087fc_0",
    "gcc_impl_linux-64 10.3.0 hf2f2afa_13",
    "gcc_linux-64 10.3.0 hc39de41_6",
    "gnuconfig 2020.11.07 hd8ed1ab_0",
    "gxx_impl_linux-64 10.3.0 hf2f2afa_13",
    "gxx_linux-64 10.3.0 h2593f52_6",
    "kernel-headers_linux-64 2.6.32 he073ed8_15",
    "keyutils 1.6.1 h166bdaf_0",
    "krb5 1.19.2 h08a2579_4",
    "ld_impl_linux-64 2.36.1 hea4e1c9_2",
    "libcurl 7.82.0 h2283fc2_0",
    "libedit 3.1.20191231 he28a2e2_2",
    "libev 4.33 h516909a_1",
    "libffi 3.4.2 h7f98852_5",
    "libgcc-devel_linux-64 10.3.0 he6cfe16_13",
    "libgcc-ng 11.2.0 h1d223b6_13",
    "libgfortran-ng 11.2.0 h69a702a_13",
    "libgfortran5 11.2.0 h5c6108e_13",
    "libgomp 11.2.0 h1d223b6_13",
    "libhiredis 1.0.2 h2cc385e_0",
    "libnghttp2 1.47.0 he49606f_0",
    "libnsl 2.0.0 h7f98852_0",
    "libsanitizer 10.3.0 h26c7422_13",
    "libssh2 1.10.0 ha35d2d1_2",
    "libstdcxx-devel_linux-64 10.3.0 he6cfe16_13",
    "libstdcxx-ng 11.2.0 he4da1e4_13",
    "libuv 1.43.0 h7f98852_0",
    "libzlib 1.2.11 h36c2ea0_1013",
    "lz4-c 1.9.3 h9c3ff4c_1",
    "make 4.3 hd18ef5c_1",
    "ncurses 6.3 h9c3ff4c_0",
    "ninja 1.10.2 h4bd325d_1",
    "openssl 3.0.0 h7f98852_2",
    "pkg-config 0.29.2 h36c2ea0_1008",
    "pkgconfig 1.5.5 py38h578d9bd_1",
    "python 3.8.12 h0744224_3_cpython",
    "python_abi 3.8 2_cp38",
    "readline 8.1 h46c0cb4_0",
    "rhash 1.4.1 h7f98852_0",
    "sqlite 3.37.0 h9cd32fc_0",
    "sysroot_linux-64 2.12 he073ed8_15",
    "tk 8.6.12 h27826a3_0",
    "xz 5.2.5 h516909a_1",
    "zlib 1.2.11 h36c2ea0_1013",
    "zstd 1.5.2 ha95c52a_0"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "bzip2 1.0.8 h7f98852_4",
    "c-ares 1.18.1 h7f98852_0",
    "ca-certificates 2021.10.8 ha878542_0",
    "curl 7.82.0 h2283fc2_0",
    "dlpack 0.6 h9c3ff4c_0",
    "dmlc 0.5 h9c3ff4c_0",
    "expat 2.4.7 h27087fc_0",
    "gettext 0.19.8.1 h73d1719_1008",
    "git 2.35.1 pl5321h04cb727_0",
    "keyutils 1.6.1 h166bdaf_0",
    "krb5 1.19.2 h08a2579_4",
    "libcurl 7.82.0 h2283fc2_0",
    "libedit 3.1.20191231 he28a2e2_2",
    "libev 4.33 h516909a_1",
    "libffi 3.4.2 h7f98852_5",
    "libgcc-ng 11.2.0 h1d223b6_13",
    "libgomp 11.2.0 h1d223b6_13",
    "libiconv 1.16 h516909a_0",
    "libllvm13 13.0.1 hf817b99_2",
    "libnghttp2 1.47.0 he49606f_0",
    "libnsl 2.0.0 h7f98852_0",
    "libssh2 1.10.0 ha35d2d1_2",
    "libstdcxx-ng 11.2.0 he4da1e4_13",
    "libzlib 1.2.11 h36c2ea0_1013",
    "llvm-tools 13.0.1 hf817b99_2",
    "llvmdev 13.0.1 hf817b99_2",
    "ncurses 6.3 h9c3ff4c_0",
    "openssl 3.0.0 h7f98852_2",
    "pcre2 10.37 h032f7d1_0",
    "perl 5.32.1 2_h7f98852_perl5",
    "rang 3.2 ha770c72_0",
    "tk 8.6.12 h27826a3_0",
    "zlib 1.2.11 h36c2ea0_1013"
   ],
   "run": [
    "dlpack >0.2",
    "dmlc >=0.4",
    "libgcc-ng >=10.3.0",
    "libstdcxx-ng >=10.3.0",
    "llvmdev >=13.0.1,<14.0a0",
    "rang >=3.1.0"
   ]
  },
  "source": [
   {
    "sha256": "d950c5d159c1345d0727dfb3cabb456e6947a8cb80519feaeed8e0b35e6e913e",
    "url": "https://github.com/apache/incubator-tvm/archive/v0.8.0.tar.gz"
   },
   {
    "folder": "3rdparty/libbacktrace",
    "sha256": "e0f439898046ef5f5657173c500ce6b8f8e955c12f9ba525cd9f224b15ddf6a6",
    "url": "https://github.com/tlc-pack/libbacktrace/archive/08f7c7e.tar.gz"
   },
   {
    "folder": "3rdparty/vta-hw",
    "sha256": "400670d21fa40ebe8a034b18c35acf44743d54898d1606980aee4c338bb2e271",
    "url": "https://github.com/apache/tvm-vta/archive/36a9157.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "test -d ${PREFIX}/include/tvm",
    "test -f ${PREFIX}/lib/libtvm${SHLIB_EXT}",
    "test -f ${PREFIX}/lib/libtvm_runtime${SHLIB_EXT}"
   ]
  }
 },
 "version": "0.8.0"
}
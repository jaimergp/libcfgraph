{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.24.0",
  "conda_version": "23.3.1",
  "description": "nvJitLink - Just-in-Time Link Time Optimization (JIT LTO)\n",
  "doc_url": "https://docs.nvidia.com/cuda/nvjitlink/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "adibbley"
   ]
  },
  "home": "https://developer.nvidia.com/cuda-toolkit",
  "identifiers": [],
  "keywords": [],
  "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
  "license_file": "LICENSE",
  "license_url": "https://docs.nvidia.com/cuda/eula/index.html",
  "root_pkgs": [
   "ruamel.yaml.clib 0.2.7 py310h82c586f_1",
   "cffi 1.15.1 py310h8b509f7_3",
   "libpng 1.6.39 hcc10993_0",
   "su-exec 0.2 hb283c62_1003",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "libcurl 7.88.1 hea9912c_1",
   "lzo 2.10 h6eb9509_1000",
   "xorg-libxau 1.0.9 h4e0d66e_0",
   "conda-build 3.24.0 py310h194a6c8_0",
   "zstandard 0.19.0 py310hcc13191_1",
   "py-lief 0.12.3 py310h76aa780_0",
   "importlib_resources 5.12.0 pyhd8ed1ab_0",
   "icu 72.1 h3b4ca64_0",
   "patchelf 0.17.2 hea85c5d_0",
   "c-ares 1.18.1 h4e0d66e_0",
   "six 1.16.0 pyh6c4a22f_0",
   "jupyter_core 5.2.0 py310h194a6c8_0",
   "packaging 23.0 pyhd8ed1ab_0",
   "pip 23.0.1 pyhd8ed1ab_0",
   "libxml2 2.10.3 hb30839d_6",
   "pkginfo 1.9.6 pyhd8ed1ab_0",
   "prompt_toolkit 3.0.38 hd8ed1ab_0",
   "freetype 2.12.1 h90753b0_1",
   "libedit 3.1.20191231 h41a240f_2",
   "fmt 9.1.0 h06f31f1_0",
   "pillow 9.4.0 py310h7a87a3e_2",
   "tqdm 4.65.0 pyhd8ed1ab_1",
   "conda-package-streaming 0.7.0 pyhd8ed1ab_1",
   "libmambapy 1.4.1 py310hd638ff3_0",
   "python 3.10.10 h062392f_0_cpython",
   "curl 7.88.1 hea9912c_1",
   "soupsieve 2.3.2.post1 pyhd8ed1ab_0",
   "git 2.40.0 pl5321hba03b63_1",
   "keyutils 1.6.1 hb283c62_0",
   "gettext 0.21.1 hbbae597_0",
   "importlib-metadata 6.1.0 pyha770c72_0",
   "patch 2.7.6 h4e0d66e_1002",
   "pyyaml 6.0 py310h939259b_5",
   "liblief 0.12.3 hbbae597_0",
   "pycparser 2.21 pyhd8ed1ab_0",
   "json5 0.9.5 pyh9f0ad1d_0",
   "jsonpatch 1.32 pyhd8ed1ab_0",
   "tornado 6.2 py310h93ff066_1",
   "anaconda-client 1.11.1 pyhd8ed1ab_0",
   "ld_impl_linux-ppc64le 2.39 hea198f4_1",
   "urllib3 1.26.15 pyhd8ed1ab_0",
   "openjpeg 2.5.0 hbcaec15_2",
   "setuptools 65.6.3 pyhd8ed1ab_0",
   "tzdata 2023c h71feb2d_0",
   "cryptography 40.0.1 py310hcae36c2_0",
   "idna 3.4 pyhd8ed1ab_0",
   "toolz 0.12.0 pyhd8ed1ab_0",
   "pthread-stubs 0.4 h339bb43_1001",
   "pyopenssl 23.1.1 pyhd8ed1ab_0",
   "libarchive 3.6.2 h5a2b0a6_0",
   "jinja2 3.1.2 pyhd8ed1ab_1",
   "yaml-cpp 0.7.0 hbbae597_2",
   "anaconda-project 0.11.1 pyhd8ed1ab_0",
   "boltons 23.0.0 pyhd8ed1ab_0",
   "zipp 3.15.0 pyhd8ed1ab_0",
   "libstdcxx-ng 12.2.0 h99369c6_19",
   "ripgrep 13.0.0 h0cb23b2_2",
   "libwebp-base 1.3.0 h4194056_0",
   "pluggy 1.0.0 pyhd8ed1ab_5",
   "colorama 0.4.6 pyhd8ed1ab_0",
   "reproc-cpp 14.2.4 h883269e_0",
   "libsqlite 3.39.4 hcc10993_0",
   "ncurses 6.3 hab78ccb_1",
   "pytz 2023.3 pyhd8ed1ab_0",
   "krb5 1.20.1 h5977a33_0",
   "python_abi 3.10 3_cp310",
   "typing-extensions 4.5.0 hd8ed1ab_0",
   "xz 5.2.6 hb283c62_0",
   "libdeflate 1.18 h4194056_0",
   "attrs 22.2.0 pyh71513ae_0",
   "readline 8.2 h0b9b154_1",
   "prompt-toolkit 3.0.38 pyha770c72_0",
   "libzlib 1.2.13 hb283c62_4",
   "markdown-it-py 2.2.0 pyhd8ed1ab_0",
   "lerc 4.0.0 hbbae597_0",
   "python-fastjsonschema 2.16.3 pyhd8ed1ab_0",
   "backports 1.0 pyhd8ed1ab_3",
   "python-libarchive-c 4.0 py310h194a6c8_2",
   "jsonschema 4.17.3 pyhd8ed1ab_0",
   "boa 0.14.0 pyhd8ed1ab_4",
   "reproc 14.2.4 h4194056_0",
   "chardet 5.1.0 py310hd032262_0",
   "nbformat 5.8.0 pyhd8ed1ab_0",
   "tk 8.6.12 h41c6715_0",
   "bzip2 1.0.8 h4e0d66e_4",
   "watchgod 0.8.2 pyhd8ed1ab_0",
   "libssh2 1.10.0 hc6ee4b3_3",
   "clyent 1.2.2 py_1",
   "conda-package-handling 2.0.2 pyh38be061_0",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "yaml 0.2.5 h4e0d66e_2",
   "filelock 3.10.7 pyhd8ed1ab_0",
   "pybind11-abi 4 hd8ed1ab_3",
   "jsonpointer 2.0 py_0",
   "libev 4.33 h6eb9509_1",
   "perl 5.32.1 2_h4e0d66e_perl5",
   "ruamel.yaml 0.17.21 py310h82c586f_3",
   "certifi 2022.12.7 pyhd8ed1ab_0",
   "ca-certificates 2022.12.7 h1084571_0",
   "charset-normalizer 3.1.0 pyhd8ed1ab_0",
   "typing_extensions 4.5.0 pyha770c72_0",
   "libsolv 0.7.23 h26001cd_0",
   "libgomp 12.2.0 hbc1322c_19",
   "tini 0.19.0 hb283c62_1",
   "ruamel_yaml 0.15.80 py310h939259b_1008",
   "beautifulsoup4 4.12.0 pyha770c72_0",
   "pkgutil-resolve-name 1.3.10 pyhd8ed1ab_0",
   "libuuid 2.38.1 h4194056_0",
   "zstd 1.5.2 h7affb48_6",
   "platformdirs 3.2.0 pyhd8ed1ab_0",
   "openssl 3.1.0 h4194056_0",
   "markupsafe 2.1.2 py310h3854833_0",
   "mamba 1.4.1 py310h400a96e_0",
   "dataclasses 0.8 pyhc8e2a94_3",
   "psutil 5.9.4 py310h939259b_0",
   "pygments 2.14.0 pyhd8ed1ab_0",
   "libiconv 1.17 hb283c62_0",
   "pyrsistent 0.19.3 py310h3854833_0",
   "libtiff 4.5.0 hb68b345_6",
   "tomli 2.0.1 pyhd8ed1ab_0",
   "libexpat 2.5.0 h883269e_1",
   "wheel 0.40.0 pyhd8ed1ab_0",
   "defusedxml 0.7.1 pyhd8ed1ab_0",
   "lz4-c 1.9.4 h883269e_0",
   "sniffio 1.3.0 pyhd8ed1ab_0",
   "lcms2 2.15 h0139fb3_1",
   "libffi 3.4.2 h4e0d66e_5",
   "conda 23.3.1 py310h194a6c8_0",
   "traitlets 5.9.0 pyhd8ed1ab_0",
   "pycosat 0.6.4 py310h939259b_1",
   "pysocks 1.7.1 pyha2e5f31_6",
   "requests 2.28.2 pyhd8ed1ab_1",
   "libnsl 2.0.0 h4e0d66e_0",
   "libmamba 1.4.1 h7b0afcb_0",
   "libjpeg-turbo 2.1.5.1 h4194056_0",
   "joblib 1.2.0 pyhd8ed1ab_0",
   "expat 2.5.0 h883269e_1",
   "brotlipy 0.7.0 py310h939259b_1005",
   "libgcc-ng 12.2.0 hbc1322c_19",
   "anyio 3.6.2 pyhd8ed1ab_0",
   "wcwidth 0.2.6 pyhd8ed1ab_0",
   "xorg-libxdmcp 1.1.3 h4e0d66e_0",
   "_openmp_mutex 4.5 2_gnu",
   "libxcb 1.13 h4e0d66e_1004",
   "libnghttp2 1.52.0 hb3a6636_0",
   "conda-pack 0.7.0 pyh6c4a22f_0",
   "glob2 0.7 py_0",
   "mdurl 0.1.0 pyhd8ed1ab_0",
   "pcre2 10.40 h02375f6_0",
   "rich 13.3.3 pyhd8ed1ab_0",
   "_libgcc_mutex 0.1 conda_forge",
   "jq 1.6 h339bb43_1000",
   "click 8.1.3 unix_pyhd8ed1ab_2",
   "oniguruma 6.9.8 hb283c62_0",
   "conda-forge-ci-setup 3.29.1 py310he5b63f5_100",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "conda-env 2.6.0 1"
  ],
  "summary": "CUDA nvJitLink library",
  "tags": []
 },
 "conda_build_config": {
  "CI": "travis",
  "c_compiler": "gcc",
  "c_compiler_version": "11",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "11",
  "docker_image": "quay.io/condaforge/linux-anvil-ppc64le",
  "extend_keys": [
   "extend_keys",
   "pin_run_as_build",
   "ignore_version",
   "ignore_build_only_deps"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.21",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.10",
  "r_base": "3.5",
  "target_platform": "linux-ppc64le",
  "zip_keys": [
   [
    "c_compiler_version",
    "cxx_compiler_version"
   ]
  ]
 },
 "conda_pkg_format": "2",
 "files": [
  "lib/libnvJitLink.so.12",
  "lib/libnvJitLink.so.12.0.76",
  "targets/ppc64le-linux/lib/libnvJitLink.so.12",
  "targets/ppc64le-linux/lib/libnvJitLink.so.12.0.76"
 ],
 "index": {
  "arch": "ppc64le",
  "build": "h883269e_0",
  "build_number": 0,
  "depends": [
   "cuda-version >=12.0.0,<12.1.0a0",
   "libgcc-ng >=12",
   "libstdcxx-ng >=12"
  ],
  "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
  "name": "libnvjitlink",
  "platform": "linux",
  "subdir": "linux-ppc64le",
  "timestamp": 1680892734647,
  "version": "12.0.76"
 },
 "metadata_version": 1,
 "name": "libnvjitlink",
 "raw_recipe": "{% set name = \"libnvjitlink\" %}\n{% set version = \"12.0.76\" %}\n{% set cuda_version = \"12.0\" %}\n{% set platform = \"linux-x86_64\" %}  # [linux64]\n{% set platform = \"linux-ppc64le\" %}  # [ppc64le]\n{% set platform = \"linux-sbsa\" %}  # [aarch64]\n{% set platform = \"windows-x86_64\" %}  # [win]\n{% set target_name = \"x86_64-linux\" %}  # [linux64]\n{% set target_name = \"ppc64le-linux\" %}  # [ppc64le]\n{% set target_name = \"sbsa-linux\" %}  # [aarch64]\n{% set target_name = \"x64\" %}  # [win]\n{% set extension = \"tar.xz\" %}  # [not win]\n{% set extension = \"zip\" %}  # [win]\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://developer.download.nvidia.com/compute/cuda/redist/{{ name }}/{{ platform }}/{{ name }}-{{ platform }}-{{ version }}-archive.{{ extension }}\n  sha256: 92a70db1ee90f1816a40d4d2019e0a59c43eebb9f3eb1208abedcc00a13e48be  # [linux64]\n  sha256: dd317e1d052b4231ab95d1b472105640f617f7d250aacc5bc1c952aab93d7483  # [ppc64le]\n  sha256: 9f18090f6587e95be0ee424f07358eeb0e15c5ab3f8636870f68dd84a92ed2e6  # [aarch64]\n  sha256: cae74b6790174b283d892bb20e1ff91bff13c8a2a8486de4f417e09675469372  # [win]\n\nbuild:\n  number: 0\n  skip: true  # [osx]\n\noutputs:\n  - name: libnvjitlink\n    files:\n      - lib/libnvJitLink.so.*                            # [linux]\n      - targets/{{ target_name }}/lib/libnvJitLink.so.*  # [linux]\n      - Library\\bin\\nvJitLink*.dll                       # [win]\n    requirements:\n      build:\n        - {{ compiler(\"c\") }}\n        - {{ compiler(\"cxx\") }}\n        - arm-variant * {{ arm_variant_type }}  # [aarch64]\n        - sysroot_{{ target_platform }} 2.17    # [linux]\n      host:\n        - cuda-version {{ cuda_version }}\n      run:\n        - {{ pin_compatible(\"cuda-version\", max_pin=\"x.x\") }}\n      run_constrained:\n        - arm-variant * {{ arm_variant_type }}  # [aarch64]\n    test:\n      commands:\n        - test -L $PREFIX/lib/libnvJitLink.so.{{ version }}                                          # [linux]\n        - test -L $PREFIX/lib/libnvJitLink.so.{{ version.split(\".\")[0] }}                            # [linux]\n        - test -L $PREFIX/targets/{{ target_name }}/lib/libnvJitLink.so.{{ version }}                # [linux]\n        - test -f $PREFIX/targets/{{ target_name }}/lib/libnvJitLink.so.{{ version.split(\".\")[0] }}  # [linux]\n        - if not exist %LIBRARY_BIN%\\nvJitLink*.dll exit 1                                           # [win]\n    about:\n      home: https://developer.nvidia.com/cuda-toolkit\n      license_file: LICENSE\n      license: LicenseRef-NVIDIA-End-User-License-Agreement\n      license_url: https://docs.nvidia.com/cuda/eula/index.html\n      summary: CUDA nvJitLink library\n      description: |\n        nvJitLink - Just-in-Time Link Time Optimization (JIT LTO)\n      doc_url: https://docs.nvidia.com/cuda/nvjitlink/\n\n  - name: libnvjitlink-dev\n    build:\n      run_exports:\n        - {{ pin_subpackage(\"libnvjitlink\", max_pin=\"x\") }}\n    files:\n      - lib/libnvJitLink*.so                            # [linux]\n      - lib/pkgconfig                                   # [linux]\n      - targets/{{ target_name }}/include/nvJitLink.h   # [linux]\n      - targets/{{ target_name }}/lib/libnvJitLink*.so  # [linux]\n      #- targets/{{ target_name }}/lib/stubs             # [linux]  # bug: currently missing\n      - Library\\include                                 # [win]\n      - Library\\lib\\nvJitLink.lib                       # [win]\n    requirements:\n      build:\n        - {{ compiler(\"c\") }}\n        - {{ compiler(\"cxx\") }}\n        - arm-variant * {{ arm_variant_type }}  # [aarch64]\n        - sysroot_{{ target_platform }} 2.17    # [linux]\n      host:\n        - cuda-version {{ cuda_version }}\n      run:\n        - {{ pin_compatible(\"cuda-version\", max_pin=\"x.x\") }}\n        - {{ pin_subpackage(\"libnvjitlink\", exact=True) }}\n      run_constrained:\n        - arm-variant * {{ arm_variant_type }}  # [aarch64]\n        - libnvjitlink-static >={{ version }}\n    test:\n      commands:\n        - test -L $PREFIX/lib/libnvJitLink.so                            # [linux]\n        - test -f $PREFIX/lib/pkgconfig/nvjitlink*.pc                    # [linux]\n        - test -f $PREFIX/targets/{{ target_name }}/include/nvJitLink.h  # [linux]\n        - test -L $PREFIX/targets/{{ target_name }}/lib/libnvJitLink.so  # [linux]\n        - if not exist %LIBRARY_INC%\\nvJitLink.h exit 1                  # [win]\n        - if not exist %LIBRARY_LIB%\\nvJitLink.lib exit 1                # [win]\n    about:\n      home: https://developer.nvidia.com/cuda-toolkit\n      license_file: LICENSE\n      license: LicenseRef-NVIDIA-End-User-License-Agreement\n      license_url: https://docs.nvidia.com/cuda/eula/index.html\n      summary: CUDA nvJitLink library\n      description: |\n        nvJitLink - Just-in-Time Link Time Optimization (JIT LTO)\n      doc_url: https://docs.nvidia.com/cuda/nvjitlink/index.html\n\n  - name: libnvjitlink-static\n    files:\n      - targets/{{ target_name }}/lib/libnvJitLink*_static.a  # [linux]\n      - Library\\lib\\nvJitLink_static.lib                      # [win]\n    requirements:\n      build:\n        - {{ compiler(\"c\") }}\n        - {{ compiler(\"cxx\") }}\n        - arm-variant * {{ arm_variant_type }}  # [aarch64]\n        - sysroot_{{ target_platform }} 2.17    # [linux]\n      host:\n        - cuda-version {{ cuda_version }}\n      run:\n        - {{ pin_compatible(\"cuda-version\", max_pin=\"x.x\") }}\n      run_constrained:\n        - arm-variant * {{ arm_variant_type }}  # [aarch64]\n    test:\n      commands:\n        - test -f $PREFIX/targets/{{ target_name }}/lib/libnvJitLink_static.a  # [linux]\n        - if not exist %LIBRARY_LIB%\\nvJitLink_static.lib exit 1               # [win]\n    about:\n      home: https://developer.nvidia.com/cuda-toolkit\n      license_file: LICENSE\n      license: LicenseRef-NVIDIA-End-User-License-Agreement\n      license_url: https://docs.nvidia.com/cuda/eula/index.html\n      summary: CUDA nvJitLink library\n      description: |\n        nvJitLink - Just-in-Time Link Time Optimization (JIT LTO)\n      doc_url: https://docs.nvidia.com/cuda/nvjitlink/index.html\n\nabout:\n  home: https://developer.nvidia.com/cuda-toolkit\n  license_file: LICENSE\n  license: LicenseRef-NVIDIA-End-User-License-Agreement\n  license_url: https://docs.nvidia.com/cuda/eula/index.html\n  summary: CUDA nvJitLink library\n  description: |\n    nvJitLink - Just-in-Time Link Time Optimization (JIT LTO)\n  doc_url: https://docs.nvidia.com/cuda/nvjitlink/index.html\n\nextra:\n  recipe-maintainers:\n    - adibbley\n",
 "rendered_recipe": {
  "about": {
   "description": "nvJitLink - Just-in-Time Link Time Optimization (JIT LTO)\n",
   "doc_url": "https://docs.nvidia.com/cuda/nvjitlink/",
   "home": "https://developer.nvidia.com/cuda-toolkit",
   "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
   "license_file": "LICENSE",
   "license_url": "https://docs.nvidia.com/cuda/eula/index.html",
   "summary": "CUDA nvJitLink library"
  },
  "build": {
   "number": "0",
   "string": "h883269e_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "adibbley"
   ]
  },
  "package": {
   "name": "libnvjitlink",
   "version": "12.0.76"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 2_gnu",
    "binutils_impl_linux-ppc64le 2.39 heb37b50_1",
    "binutils_linux-ppc64le 2.39 h5e55cfe_12",
    "gcc_impl_linux-ppc64le 11.3.0 h8f9c6bb_19",
    "gcc_linux-ppc64le 11.3.0 h89f38ce_12",
    "gxx_impl_linux-ppc64le 11.3.0 h8f9c6bb_19",
    "gxx_linux-ppc64le 11.3.0 h3c74164_12",
    "kernel-headers_linux-ppc64le 3.10.0 h23d7e6c_13",
    "ld_impl_linux-ppc64le 2.39 hea198f4_1",
    "libgcc-devel_linux-ppc64le 11.3.0 hcb32637_19",
    "libgcc-ng 12.2.0 hbc1322c_19",
    "libgomp 12.2.0 hbc1322c_19",
    "libsanitizer 11.3.0 hc94946d_19",
    "libstdcxx-devel_linux-ppc64le 11.3.0 hcb32637_19",
    "libstdcxx-ng 12.2.0 h99369c6_19",
    "sysroot_linux-ppc64le 2.17 h395ec9b_13"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 2_gnu",
    "cuda-version 12.0.0 hd8ed1ab_0",
    "libgcc-ng 12.2.0 hbc1322c_19",
    "libgomp 12.2.0 hbc1322c_19",
    "libstdcxx-ng 12.2.0 h99369c6_19"
   ],
   "run": [
    "cuda-version >=12.0.0,<12.1.0a0",
    "libgcc-ng >=12",
    "libstdcxx-ng >=12"
   ],
   "run_constrained": []
  },
  "source": {
   "sha256": "dd317e1d052b4231ab95d1b472105640f617f7d250aacc5bc1c952aab93d7483",
   "url": "https://developer.download.nvidia.com/compute/cuda/redist/libnvjitlink/linux-ppc64le/libnvjitlink-linux-ppc64le-12.0.76-archive.tar.xz"
  }
 },
 "version": "12.0.76"
}
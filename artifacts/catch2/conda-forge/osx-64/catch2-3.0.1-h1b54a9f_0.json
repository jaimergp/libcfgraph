{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.21.8",
  "conda_private": false,
  "conda_version": "4.12.0",
  "description": "Catch2 stands for C++ Automated Test Cases in a Header and is a multi-paradigm test framework\nfor C++. which also supports Objective-C (and maybe C). It is primarily distributed as a single\nheader file, although certain extensions may require additional headers.\n",
  "dev_url": "https://github.com/catchorg/Catch2",
  "doc_url": "https://github.com/catchorg/Catch2/blob/master/docs/Readme.md",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "mjscosta",
    "tdegeus"
   ]
  },
  "home": "https://github.com/catchorg/Catch2/",
  "identifiers": [],
  "keywords": [],
  "license": "BSL-1.0",
  "license_file": "LICENSE.txt",
  "root_pkgs": [
   "requests 2.27.1 pyhd8ed1ab_0",
   "libmambapy 0.23.0 py39h3f08081_1",
   "gettext 0.19.8.1 hd1a6beb_1008",
   "conda-env 2.6.0 1",
   "six 1.16.0 pyh6c4a22f_0",
   "icu 69.1 he49afe7_0",
   "charset-normalizer 2.0.12 pyhd8ed1ab_0",
   "liblief 0.11.5 he49afe7_1",
   "libcurl 7.82.0 h9f20792_0",
   "jq 1.6 hc929b4f_1000",
   "expat 2.4.8 h96cf925_0",
   "yaml 0.2.5 h0d85af4_2",
   "typing_extensions 4.2.0 pyha770c72_1",
   "pyyaml 6.0 py39h63b48b0_4",
   "watchgod 0.8.2 pyhd8ed1ab_0",
   "anyio 3.6.1 py39h6e9494a_0",
   "pygments 2.12.0 pyhd8ed1ab_0",
   "attrs 21.4.0 pyhd8ed1ab_0",
   "importlib-metadata 4.11.3 py39h6e9494a_1",
   "future 0.18.2 py39h6e9494a_5",
   "sqlite 3.37.1 hb516253_0",
   "git 2.35.3 pl5321h33a4a8a_0",
   "openssl 1.1.1o hfe4f2af_0",
   "reproc-cpp 14.2.3 he49afe7_0",
   "reproc 14.2.3 h0d85af4_0",
   "cryptography 36.0.2 py39h1644bb1_0",
   "libsolv 0.7.22 hd9580d2_0",
   "jupyter_core 4.10.0 py39h6e9494a_0",
   "certifi 2021.10.8 py39h6e9494a_2",
   "glob2 0.7 py_0",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "jsonschema 4.5.1 pyhd8ed1ab_0",
   "zlib 1.2.11 h9173be1_1013",
   "filelock 3.7.0 pyhd8ed1ab_0",
   "zipp 3.8.0 pyhd8ed1ab_0",
   "libedit 3.1.20191231 h0678c8f_2",
   "commonmark 0.9.1 py_0",
   "py-lief 0.11.5 py39h9fcab8e_1",
   "perl 5.32.1 2_h0d85af4_perl5",
   "tzdata 2022a h191b570_0",
   "cffi 1.15.0 py39he338e87_0",
   "urllib3 1.26.9 pyhd8ed1ab_0",
   "libiconv 1.16 haf1e3a3_0",
   "wheel 0.37.1 pyhd8ed1ab_0",
   "chardet 4.0.0 py39h6e9494a_3",
   "nbformat 5.4.0 pyhd8ed1ab_0",
   "curl 7.82.0 h9f20792_0",
   "backports 1.0 py_2",
   "markupsafe 2.1.1 py39h63b48b0_1",
   "xz 5.2.5 haf1e3a3_1",
   "libmamba 0.23.0 h2d3d89a_1",
   "joblib 1.1.0 pyhd8ed1ab_0",
   "sniffio 1.2.0 py39h6e9494a_3",
   "cctools 949.0.1 hd9211c8_23",
   "zstd 1.5.2 h582d3a0_0",
   "boa 0.11.0 pyha770c72_0",
   "python-libarchive-c 4.0 py39h6e9494a_1",
   "colorama 0.4.4 pyh9f0ad1d_0",
   "conda-forge-ci-setup 3.20.0 py39hb0a6171_100",
   "ripgrep 13.0.0 hbbacdb1_2",
   "jinja2 3.1.2 pyhd8ed1ab_0",
   "ld64_osx-64 530 he8994da_23",
   "psutil 5.9.0 py39h63b48b0_1",
   "ruamel.yaml 0.17.21 py39h63b48b0_1",
   "soupsieve 2.3.1 pyhd8ed1ab_0",
   "prompt_toolkit 3.0.29 hd8ed1ab_0",
   "libcxx 13.0.1 hc203e6f_0",
   "pyrsistent 0.18.1 py39h63b48b0_1",
   "brotlipy 0.7.0 py39h89e85a6_1003",
   "libffi 3.4.2 h0d85af4_5",
   "pyopenssl 22.0.0 pyhd8ed1ab_0",
   "ruamel_yaml 0.15.80 py39h89e85a6_1006",
   "libxml2 2.9.12 h7e28ab6_1",
   "pip 22.1 pyhd8ed1ab_0",
   "libarchive 3.5.2 h2b60450_1",
   "tapi 1100.0.11 h9ce4665_0",
   "beautifulsoup4 4.11.1 pyha770c72_0",
   "pycosat 0.6.3 py39h89e85a6_1009",
   "importlib_resources 5.7.1 pyhd8ed1ab_1",
   "krb5 1.19.3 hb49756b_0",
   "idna 3.3 pyhd8ed1ab_0",
   "readline 8.1 h05e3726_0",
   "ncurses 6.3 he49afe7_0",
   "anaconda-client 1.8.0 pyhd8ed1ab_0",
   "libzlib 1.2.11 h9173be1_1013",
   "bzip2 1.0.8 h0d85af4_4",
   "python-fastjsonschema 2.15.3 pyhd8ed1ab_0",
   "c-ares 1.18.1 h0d85af4_0",
   "json5 0.9.5 pyh9f0ad1d_0",
   "ruamel.yaml.clib 0.2.6 py39h63b48b0_1",
   "pytz 2022.1 pyhd8ed1ab_0",
   "pkginfo 1.8.2 pyhd8ed1ab_0",
   "conda 4.12.0 py39h6e9494a_0",
   "tqdm 4.63.0 pyhd8ed1ab_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "libssh2 1.10.0 h52ee1ee_2",
   "wcwidth 0.2.5 pyh9f0ad1d_2",
   "mamba 0.23.0 py39ha435c47_1",
   "yaml-cpp 0.6.3 hb1e8313_4",
   "clyent 1.2.2 py_1",
   "pcre2 10.37 ha16e1b2_0",
   "ld64 530 hd2e7500_23",
   "setuptools 60.10.0 py39h6e9494a_0",
   "traitlets 5.2.1.post0 pyhd8ed1ab_0",
   "python_abi 3.9 2_cp39",
   "lz4-c 1.9.3 he49afe7_1",
   "python 3.9.10 h1dd9edd_2_cpython",
   "ca-certificates 2021.10.8 h033912b_0",
   "rich 12.4.1 pyhd8ed1ab_1",
   "click 8.1.3 py39h6e9494a_0",
   "cctools_osx-64 949.0.1 h6407bdd_23",
   "pysocks 1.7.1 py39h6e9494a_4",
   "ldid 2.1.2 h6a69015_3",
   "prompt-toolkit 3.0.29 pyha770c72_0",
   "conda-package-handling 1.8.0 py39h63b48b0_0",
   "dataclasses 0.8 pyhc8e2a94_3",
   "lzo 2.10 haf1e3a3_1000",
   "libllvm12 12.0.1 hd011deb_2",
   "conda-build 3.21.8 py39h6e9494a_0",
   "pybind11-abi 4 hd8ed1ab_3",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "pycparser 2.21 pyhd8ed1ab_0",
   "libnghttp2 1.47.0 h942079c_0",
   "tk 8.6.12 h5dbffcc_0",
   "libev 4.33 haf1e3a3_1",
   "oniguruma 6.9.7.1 h0d85af4_0"
  ],
  "summary": "A modern, C++-native, header-only, test framework for unit-tests, TDD and BDD - using\nC++11, C++14, C++17 and later (or C++03 on the Catch1.x branch).\n",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "CONDA_BUILD_SYSROOT": "/Applications/Xcode_12.4.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk",
  "MACOSX_DEPLOYMENT_TARGET": "10.9",
  "c_compiler": "clang",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "clangxx",
  "cxx_compiler_version": "13",
  "extend_keys": [
   "ignore_version",
   "extend_keys",
   "ignore_build_only_deps",
   "pin_run_as_build"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "macos_machine": "x86_64-apple-darwin13.4.0",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.9",
  "r_base": "3.5",
  "target_platform": "osx-64"
 },
 "files": [
  "include/catch2/benchmark/catch_benchmark.hpp",
  "include/catch2/benchmark/catch_benchmark_all.hpp",
  "include/catch2/benchmark/catch_chronometer.hpp",
  "include/catch2/benchmark/catch_clock.hpp",
  "include/catch2/benchmark/catch_constructor.hpp",
  "include/catch2/benchmark/catch_environment.hpp",
  "include/catch2/benchmark/catch_estimate.hpp",
  "include/catch2/benchmark/catch_execution_plan.hpp",
  "include/catch2/benchmark/catch_optimizer.hpp",
  "include/catch2/benchmark/catch_outlier_classification.hpp",
  "include/catch2/benchmark/catch_sample_analysis.hpp",
  "include/catch2/benchmark/detail/catch_analyse.hpp",
  "include/catch2/benchmark/detail/catch_benchmark_function.hpp",
  "include/catch2/benchmark/detail/catch_complete_invoke.hpp",
  "include/catch2/benchmark/detail/catch_estimate_clock.hpp",
  "include/catch2/benchmark/detail/catch_measure.hpp",
  "include/catch2/benchmark/detail/catch_repeat.hpp",
  "include/catch2/benchmark/detail/catch_run_for_at_least.hpp",
  "include/catch2/benchmark/detail/catch_stats.hpp",
  "include/catch2/benchmark/detail/catch_timing.hpp",
  "include/catch2/catch_all.hpp",
  "include/catch2/catch_approx.hpp",
  "include/catch2/catch_assertion_info.hpp",
  "include/catch2/catch_assertion_result.hpp",
  "include/catch2/catch_config.hpp",
  "include/catch2/catch_message.hpp",
  "include/catch2/catch_section_info.hpp",
  "include/catch2/catch_session.hpp",
  "include/catch2/catch_tag_alias.hpp",
  "include/catch2/catch_tag_alias_autoregistrar.hpp",
  "include/catch2/catch_template_test_macros.hpp",
  "include/catch2/catch_test_case_info.hpp",
  "include/catch2/catch_test_macros.hpp",
  "include/catch2/catch_test_spec.hpp",
  "include/catch2/catch_timer.hpp",
  "include/catch2/catch_tostring.hpp",
  "include/catch2/catch_totals.hpp",
  "include/catch2/catch_translate_exception.hpp",
  "include/catch2/catch_user_config.hpp",
  "include/catch2/catch_version.hpp",
  "include/catch2/catch_version_macros.hpp",
  "include/catch2/generators/catch_generator_exception.hpp",
  "include/catch2/generators/catch_generators.hpp",
  "include/catch2/generators/catch_generators_adapters.hpp",
  "include/catch2/generators/catch_generators_all.hpp",
  "include/catch2/generators/catch_generators_random.hpp",
  "include/catch2/generators/catch_generators_range.hpp",
  "include/catch2/interfaces/catch_interfaces_all.hpp",
  "include/catch2/interfaces/catch_interfaces_capture.hpp",
  "include/catch2/interfaces/catch_interfaces_config.hpp",
  "include/catch2/interfaces/catch_interfaces_enum_values_registry.hpp",
  "include/catch2/interfaces/catch_interfaces_exception.hpp",
  "include/catch2/interfaces/catch_interfaces_generatortracker.hpp",
  "include/catch2/interfaces/catch_interfaces_registry_hub.hpp",
  "include/catch2/interfaces/catch_interfaces_reporter.hpp",
  "include/catch2/interfaces/catch_interfaces_reporter_factory.hpp",
  "include/catch2/interfaces/catch_interfaces_reporter_registry.hpp",
  "include/catch2/interfaces/catch_interfaces_tag_alias_registry.hpp",
  "include/catch2/interfaces/catch_interfaces_testcase.hpp",
  "include/catch2/internal/catch_assertion_handler.hpp",
  "include/catch2/internal/catch_case_insensitive_comparisons.hpp",
  "include/catch2/internal/catch_case_sensitive.hpp",
  "include/catch2/internal/catch_clara.hpp",
  "include/catch2/internal/catch_commandline.hpp",
  "include/catch2/internal/catch_compiler_capabilities.hpp",
  "include/catch2/internal/catch_config_android_logwrite.hpp",
  "include/catch2/internal/catch_config_counter.hpp",
  "include/catch2/internal/catch_config_uncaught_exceptions.hpp",
  "include/catch2/internal/catch_config_wchar.hpp",
  "include/catch2/internal/catch_console_colour.hpp",
  "include/catch2/internal/catch_console_width.hpp",
  "include/catch2/internal/catch_container_nonmembers.hpp",
  "include/catch2/internal/catch_context.hpp",
  "include/catch2/internal/catch_debug_console.hpp",
  "include/catch2/internal/catch_debugger.hpp",
  "include/catch2/internal/catch_decomposer.hpp",
  "include/catch2/internal/catch_enforce.hpp",
  "include/catch2/internal/catch_enum_values_registry.hpp",
  "include/catch2/internal/catch_errno_guard.hpp",
  "include/catch2/internal/catch_exception_translator_registry.hpp",
  "include/catch2/internal/catch_fatal_condition_handler.hpp",
  "include/catch2/internal/catch_floating_point_helpers.hpp",
  "include/catch2/internal/catch_istream.hpp",
  "include/catch2/internal/catch_lazy_expr.hpp",
  "include/catch2/internal/catch_leak_detector.hpp",
  "include/catch2/internal/catch_list.hpp",
  "include/catch2/internal/catch_message_info.hpp",
  "include/catch2/internal/catch_meta.hpp",
  "include/catch2/internal/catch_move_and_forward.hpp",
  "include/catch2/internal/catch_noncopyable.hpp",
  "include/catch2/internal/catch_optional.hpp",
  "include/catch2/internal/catch_output_redirect.hpp",
  "include/catch2/internal/catch_platform.hpp",
  "include/catch2/internal/catch_polyfills.hpp",
  "include/catch2/internal/catch_preprocessor.hpp",
  "include/catch2/internal/catch_preprocessor_remove_parens.hpp",
  "include/catch2/internal/catch_random_number_generator.hpp",
  "include/catch2/internal/catch_random_seed_generation.hpp",
  "include/catch2/internal/catch_reporter_registry.hpp",
  "include/catch2/internal/catch_reporter_spec_parser.hpp",
  "include/catch2/internal/catch_result_type.hpp",
  "include/catch2/internal/catch_reusable_string_stream.hpp",
  "include/catch2/internal/catch_run_context.hpp",
  "include/catch2/internal/catch_section.hpp",
  "include/catch2/internal/catch_sharding.hpp",
  "include/catch2/internal/catch_singletons.hpp",
  "include/catch2/internal/catch_source_line_info.hpp",
  "include/catch2/internal/catch_startup_exception_registry.hpp",
  "include/catch2/internal/catch_stdstreams.hpp",
  "include/catch2/internal/catch_stream_end_stop.hpp",
  "include/catch2/internal/catch_string_manip.hpp",
  "include/catch2/internal/catch_stringref.hpp",
  "include/catch2/internal/catch_tag_alias_registry.hpp",
  "include/catch2/internal/catch_template_test_registry.hpp",
  "include/catch2/internal/catch_test_case_info_hasher.hpp",
  "include/catch2/internal/catch_test_case_registry_impl.hpp",
  "include/catch2/internal/catch_test_case_tracker.hpp",
  "include/catch2/internal/catch_test_failure_exception.hpp",
  "include/catch2/internal/catch_test_macro_impl.hpp",
  "include/catch2/internal/catch_test_registry.hpp",
  "include/catch2/internal/catch_test_spec_parser.hpp",
  "include/catch2/internal/catch_textflow.hpp",
  "include/catch2/internal/catch_to_string.hpp",
  "include/catch2/internal/catch_uncaught_exceptions.hpp",
  "include/catch2/internal/catch_unique_name.hpp",
  "include/catch2/internal/catch_unique_ptr.hpp",
  "include/catch2/internal/catch_void_type.hpp",
  "include/catch2/internal/catch_wildcard_pattern.hpp",
  "include/catch2/internal/catch_windows_h_proxy.hpp",
  "include/catch2/internal/catch_xmlwriter.hpp",
  "include/catch2/matchers/catch_matchers.hpp",
  "include/catch2/matchers/catch_matchers_all.hpp",
  "include/catch2/matchers/catch_matchers_container_properties.hpp",
  "include/catch2/matchers/catch_matchers_contains.hpp",
  "include/catch2/matchers/catch_matchers_exception.hpp",
  "include/catch2/matchers/catch_matchers_floating_point.hpp",
  "include/catch2/matchers/catch_matchers_predicate.hpp",
  "include/catch2/matchers/catch_matchers_quantifiers.hpp",
  "include/catch2/matchers/catch_matchers_string.hpp",
  "include/catch2/matchers/catch_matchers_templated.hpp",
  "include/catch2/matchers/catch_matchers_vector.hpp",
  "include/catch2/matchers/internal/catch_matchers_impl.hpp",
  "include/catch2/reporters/catch_reporter_automake.hpp",
  "include/catch2/reporters/catch_reporter_common_base.hpp",
  "include/catch2/reporters/catch_reporter_compact.hpp",
  "include/catch2/reporters/catch_reporter_console.hpp",
  "include/catch2/reporters/catch_reporter_cumulative_base.hpp",
  "include/catch2/reporters/catch_reporter_event_listener.hpp",
  "include/catch2/reporters/catch_reporter_helpers.hpp",
  "include/catch2/reporters/catch_reporter_junit.hpp",
  "include/catch2/reporters/catch_reporter_multi.hpp",
  "include/catch2/reporters/catch_reporter_registrars.hpp",
  "include/catch2/reporters/catch_reporter_sonarqube.hpp",
  "include/catch2/reporters/catch_reporter_streaming_base.hpp",
  "include/catch2/reporters/catch_reporter_tap.hpp",
  "include/catch2/reporters/catch_reporter_teamcity.hpp",
  "include/catch2/reporters/catch_reporter_xml.hpp",
  "include/catch2/reporters/catch_reporters_all.hpp",
  "lib/cmake/Catch2/Catch.cmake",
  "lib/cmake/Catch2/Catch2Config.cmake",
  "lib/cmake/Catch2/Catch2ConfigVersion.cmake",
  "lib/cmake/Catch2/Catch2Targets-release.cmake",
  "lib/cmake/Catch2/Catch2Targets.cmake",
  "lib/cmake/Catch2/CatchAddTests.cmake",
  "lib/cmake/Catch2/ParseAndAddCatchTests.cmake",
  "lib/libCatch2.a",
  "lib/libCatch2Main.a",
  "share/Catch2/gdbinit",
  "share/Catch2/lldbinit",
  "share/doc/Catch2/Readme.md",
  "share/doc/Catch2/assertions.md",
  "share/doc/Catch2/benchmarks.md",
  "share/doc/Catch2/ci-and-misc.md",
  "share/doc/Catch2/cmake-integration.md",
  "share/doc/Catch2/command-line.md",
  "share/doc/Catch2/commercial-users.md",
  "share/doc/Catch2/configuration.md",
  "share/doc/Catch2/contributing.md",
  "share/doc/Catch2/deprecations.md",
  "share/doc/Catch2/event-listeners.md",
  "share/doc/Catch2/faq.md",
  "share/doc/Catch2/generators.md",
  "share/doc/Catch2/limitations.md",
  "share/doc/Catch2/list-of-examples.md",
  "share/doc/Catch2/logging.md",
  "share/doc/Catch2/matchers.md",
  "share/doc/Catch2/migrate-v2-to-v3.md",
  "share/doc/Catch2/opensource-users.md",
  "share/doc/Catch2/other-macros.md",
  "share/doc/Catch2/own-main.md",
  "share/doc/Catch2/release-notes.md",
  "share/doc/Catch2/release-process.md",
  "share/doc/Catch2/reporter-events.md",
  "share/doc/Catch2/reporters.md",
  "share/doc/Catch2/test-cases-and-sections.md",
  "share/doc/Catch2/test-fixtures.md",
  "share/doc/Catch2/tostring.md",
  "share/doc/Catch2/tutorial.md",
  "share/doc/Catch2/why-catch.md",
  "share/pkgconfig/catch2-with-main.pc",
  "share/pkgconfig/catch2.pc"
 ],
 "index": {
  "arch": "x86_64",
  "build": "h1b54a9f_0",
  "build_number": 0,
  "depends": [],
  "license": "BSL-1.0",
  "name": "catch2",
  "platform": "osx",
  "subdir": "osx-64",
  "timestamp": 1652874846613,
  "version": "3.0.1"
 },
 "metadata_version": 1,
 "name": "catch2",
 "raw_recipe": "{% set version = \"3.0.1\" %}\n{% set name = \"catch2\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tgz\n  url: https://github.com/catchorg/Catch2/archive/v{{ version }}.tar.gz\n  sha256: 8c4173c68ae7da1b5b505194a0c2d6f1b2aef4ec1e3e7463bde451f26bbaf4e7\n\nbuild:\n  skip: true  # [win and vc<14]\n  number: 0\n\n  ignore_run_exports:\n    - {{ compiler('cxx') }}\n    - libstdcxx-ng  # [linux]\n    - libcxx  # [osx]\n    - vc  # [win]\n\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja\n\ntest:\n  requires:\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja\n\nabout:\n  home: https://github.com/catchorg/Catch2/\n  license: BSL-1.0\n  license_file: LICENSE.txt\n  summary: |\n    A modern, C++-native, header-only, test framework for unit-tests, TDD and BDD - using\n    C++11, C++14, C++17 and later (or C++03 on the Catch1.x branch).\n  description: |\n    Catch2 stands for C++ Automated Test Cases in a Header and is a multi-paradigm test framework\n    for C++. which also supports Objective-C (and maybe C). It is primarily distributed as a single\n    header file, although certain extensions may require additional headers.\n  doc_url: https://github.com/catchorg/Catch2/blob/master/docs/Readme.md\n  dev_url: https://github.com/catchorg/Catch2\n\nextra:\n  recipe-maintainers:\n    - mjscosta\n    - tdegeus\n",
 "rendered_recipe": {
  "about": {
   "description": "Catch2 stands for C++ Automated Test Cases in a Header and is a multi-paradigm test framework\nfor C++. which also supports Objective-C (and maybe C). It is primarily distributed as a single\nheader file, although certain extensions may require additional headers.\n",
   "dev_url": "https://github.com/catchorg/Catch2",
   "doc_url": "https://github.com/catchorg/Catch2/blob/master/docs/Readme.md",
   "home": "https://github.com/catchorg/Catch2/",
   "license": "BSL-1.0",
   "license_file": "LICENSE.txt",
   "summary": "A modern, C++-native, header-only, test framework for unit-tests, TDD and BDD - using\nC++11, C++14, C++17 and later (or C++03 on the Catch1.x branch).\n"
  },
  "build": {
   "ignore_run_exports": [
    "clangxx_osx-64 13.*",
    "libcxx"
   ],
   "number": "0",
   "string": "h1b54a9f_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "mjscosta",
    "tdegeus"
   ]
  },
  "package": {
   "name": "catch2",
   "version": "3.0.1"
  },
  "requirements": {
   "build": [
    "bzip2 1.0.8 h0d85af4_4",
    "c-ares 1.18.1 h0d85af4_0",
    "ca-certificates 2021.10.8 h033912b_0",
    "cctools_osx-64 973.0.1 h2b735b3_10",
    "clang 13.0.1 h694c41f_0",
    "clang-13 13.0.1 default_he082bbe_0",
    "clang_osx-64 13.0.1 h71a8856_0",
    "clangxx 13.0.1 default_he082bbe_0",
    "clangxx_osx-64 13.0.1 heae0f87_0",
    "cmake 3.23.1 h35a7dd9_0",
    "compiler-rt 13.0.1 he01351e_0",
    "compiler-rt_osx-64 13.0.1 hd3f61c9_0",
    "expat 2.4.8 h96cf925_0",
    "krb5 1.19.3 hb98e516_0",
    "ld64_osx-64 609 hd77a64a_10",
    "libclang-cpp13 13.0.1 default_he082bbe_0",
    "libcurl 7.83.1 h23f1065_0",
    "libcxx 14.0.3 hc203e6f_0",
    "libedit 3.1.20191231 h0678c8f_2",
    "libev 4.33 haf1e3a3_1",
    "libllvm13 13.0.1 h64f94b2_2",
    "libnghttp2 1.47.0 hca56917_0",
    "libssh2 1.10.0 hd3787cc_2",
    "libuv 1.43.0 h0d85af4_0",
    "libzlib 1.2.11 h6c3fc93_1014",
    "llvm-tools 13.0.1 h64f94b2_2",
    "lz4-c 1.9.3 he49afe7_1",
    "ncurses 6.3 h96cf925_1",
    "ninja 1.11.0 h1b54a9f_0",
    "openssl 3.0.3 hfe4f2af_0",
    "rhash 1.4.1 h0d85af4_0",
    "sigtool 0.1.3 h88f4db0_0",
    "tapi 1100.0.11 h9ce4665_0",
    "xz 5.2.5 haf1e3a3_1",
    "zlib 1.2.11 h6c3fc93_1014",
    "zstd 1.5.2 ha9df2e0_1"
   ],
   "run": []
  },
  "source": {
   "fn": "catch2-3.0.1.tgz",
   "sha256": "8c4173c68ae7da1b5b505194a0c2d6f1b2aef4ec1e3e7463bde451f26bbaf4e7",
   "url": "https://github.com/catchorg/Catch2/archive/v3.0.1.tar.gz"
  },
  "test": {
   "requires": [
    "clangxx_osx-64 13.*",
    "cmake",
    "ninja"
   ]
  }
 },
 "version": "3.0.1"
}
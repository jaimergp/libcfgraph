{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.21.9",
  "conda_private": false,
  "conda_version": "4.12.0",
  "description": "NVIDIA CUDA Deep Neural Network (cuDNN) is a GPU-accelerated library of\nprimitives for deep neural networks. It provides highly tuned\nimplementations of routines arising frequently in DNN applications.\n\nLicense Agreements:- The packages are governed by the NVIDIA cuDNN\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuDNN EULA -\nhttps://docs.nvidia.com/deeplearning/cudnn/sla/index.html\n",
  "dev_url": "https://developer.nvidia.com/rdp/cudnn-download",
  "doc_url": "https://docs.nvidia.com/deeplearning/cudnn/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "ivanyashchuk",
    "kkraus14"
   ]
  },
  "home": "https://developer.nvidia.com/cudnn",
  "identifiers": [],
  "keywords": [],
  "license": "LicenseRef-cuDNN-Software-License-Agreement",
  "license_file": "LICENSE",
  "license_url": "https://docs.nvidia.com/deeplearning/cudnn/sla/index.html",
  "root_pkgs": [
   "anaconda-client 1.8.0 pyhd8ed1ab_0",
   "anyio 3.6.1 py39hcbf5309_0",
   "attrs 21.4.0 pyhd8ed1ab_0",
   "backports 1.0 py_2",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "beautifulsoup4 4.11.1 pyha770c72_0",
   "boa 0.11.0 pyha770c72_1",
   "brotlipy 0.7.0 py39hb82d6ee_1004",
   "bzip2 1.0.8 h8ffe710_4",
   "ca-certificates 2022.6.15 h5b45459_0",
   "certifi 2022.6.15 py39hcbf5309_0",
   "cffi 1.15.0 py39h0878f49_0",
   "chardet 4.0.0 py39hcbf5309_3",
   "charset-normalizer 2.0.12 pyhd8ed1ab_0",
   "click 8.1.3 py39hcbf5309_0",
   "clyent 1.2.2 py_1",
   "colorama 0.4.4 pyh9f0ad1d_0",
   "commonmark 0.9.1 py_0",
   "conda 4.12.0 py39hcbf5309_0",
   "conda-build 3.21.9 py39hcbf5309_0",
   "conda-env 2.6.0 1",
   "conda-forge-ci-setup 3.21.0 py39h8a92616_100",
   "conda-package-handling 1.8.1 py39hb3671d1_1",
   "cryptography 37.0.2 py39h7bc7c5c_0",
   "dataclasses 0.8 pyhc8e2a94_3",
   "filelock 3.7.1 pyhd8ed1ab_0",
   "future 0.18.2 py39hcbf5309_5",
   "glob2 0.7 py_0",
   "idna 3.3 pyhd8ed1ab_0",
   "importlib-metadata 4.11.4 py39hcbf5309_0",
   "importlib_resources 5.8.0 pyhd8ed1ab_0",
   "jinja2 3.1.2 pyhd8ed1ab_1",
   "joblib 1.1.0 pyhd8ed1ab_0",
   "json5 0.9.5 pyh9f0ad1d_0",
   "jsonschema 4.6.0 pyhd8ed1ab_0",
   "jupyter_core 4.10.0 py39hcbf5309_0",
   "krb5 1.19.3 h1176d77_0",
   "libarchive 3.5.2 hb45042f_2",
   "libcurl 7.83.1 h789b8ee_0",
   "libffi 3.4.2 h8ffe710_5",
   "libiconv 1.16 he774522_0",
   "liblief 0.11.5 h0e60522_1",
   "libmamba 0.24.0 h81a967f_1",
   "libmambapy 0.24.0 py39h4126fcf_1",
   "libsolv 0.7.22 h7755175_0",
   "libssh2 1.10.0 h680486a_2",
   "libxml2 2.9.14 hf5bbc77_0",
   "libzlib 1.2.12 h8ffe710_0",
   "lz4-c 1.9.3 h8ffe710_1",
   "lzo 2.10 he774522_1000",
   "m2-bash 4.3.042 5",
   "m2-ca-certificates 20150426 103",
   "m2-coreutils 8.25 102",
   "m2-curl 7.47.1 3",
   "m2-db 5.3.28 3",
   "m2-expat 2.1.1 2",
   "m2-findutils 4.6.0 2",
   "m2-gcc-libs 5.3.0 4",
   "m2-gdbm 1.11 4",
   "m2-git 2.8.1 2",
   "m2-gmp 6.1.0 3",
   "m2-gzip 1.7 2",
   "m2-heimdal 1.5.3 10",
   "m2-heimdal-libs 1.5.3 10",
   "m2-icu 56.1 2",
   "m2-info 6.0 2",
   "m2-less 481 2",
   "m2-libcrypt 1.3 2",
   "m2-libcurl 7.47.1 3",
   "m2-libdb 5.3.28 3",
   "m2-libedit 3.1 20150326",
   "m2-libexpat 2.1.1 2",
   "m2-libffi 3.2.1 2",
   "m2-libgdbm 1.11 4",
   "m2-libiconv 1.14 3",
   "m2-libidn 1.32 2",
   "m2-libintl 0.19.7 4",
   "m2-libmetalink 0.1.2 3",
   "m2-libopenssl 1.0.2.g 2",
   "m2-libp11-kit 0.23.2 2",
   "m2-libpcre 8.38 2",
   "m2-libreadline 6.3.008 8",
   "m2-libsqlite 3.10.0.0 2",
   "m2-libssh2 1.6.0 2",
   "m2-libtasn1 4.7 2",
   "m2-msys2-runtime 2.5.0.17080.65c939c 3",
   "m2-ncurses 6.0.20160220 2",
   "m2-openssh 7.1p2 2",
   "m2-openssl 1.0.2.g 2",
   "m2-p11-kit 0.23.2 2",
   "m2-patch 2.7.5 2",
   "m2-perl 5.22.1 2",
   "m2-perl-authen-sasl 2.16 3",
   "m2-perl-convert-binhex 1.123 3",
   "m2-perl-encode-locale 1.04 2",
   "m2-perl-error 0.17024 2",
   "m2-perl-file-listing 6.04 3",
   "m2-perl-html-parser 3.71 4",
   "m2-perl-html-tagset 3.20 3",
   "m2-perl-http-cookies 6.01 3",
   "m2-perl-http-daemon 6.01 3",
   "m2-perl-http-date 6.02 3",
   "m2-perl-http-message 6.06 3",
   "m2-perl-http-negotiate 6.01 3",
   "m2-perl-io-socket-ssl 2.016 2",
   "m2-perl-io-stringy 2.111 2",
   "m2-perl-libwww 6.13 2",
   "m2-perl-lwp-mediatypes 6.02 3",
   "m2-perl-mailtools 2.14 2",
   "m2-perl-mime-tools 5.506 2",
   "m2-perl-net-http 6.09 2",
   "m2-perl-net-smtp-ssl 1.02 2",
   "m2-perl-net-ssleay 1.72 2",
   "m2-perl-termreadkey 2.33 2",
   "m2-perl-timedate 2.30 3",
   "m2-perl-uri 1.68 2",
   "m2-perl-www-robotrules 6.02 3",
   "m2-sed 4.2.2 3",
   "m2-vim 7.4.1721 2",
   "m2-zlib 1.2.8 4",
   "m2w64-gcc-libgfortran 5.3.0 6",
   "m2w64-gcc-libs 5.3.0 7",
   "m2w64-gcc-libs-core 5.3.0 7",
   "m2w64-gmp 6.1.0 2",
   "m2w64-libwinpthread-git 5.0.0.4634.697f757 2",
   "mamba 0.24.0 py39hb3d9227_1",
   "markupsafe 2.1.1 py39hb82d6ee_1",
   "menuinst 1.4.18 py39hcbf5309_1",
   "miniforge_console_shortcut 1.0 h57928b3_0",
   "msys2-conda-epoch 20160418 1",
   "nbformat 5.4.0 pyhd8ed1ab_0",
   "openssl 1.1.1o h8ffe710_0",
   "pip 22.1.2 pyhd8ed1ab_0",
   "pkginfo 1.8.3 pyhd8ed1ab_0",
   "prompt-toolkit 3.0.29 pyha770c72_0",
   "prompt_toolkit 3.0.29 hd8ed1ab_0",
   "psutil 5.9.1 py39hb82d6ee_0",
   "py-lief 0.11.5 py39h415ef7b_1",
   "pybind11-abi 4 hd8ed1ab_3",
   "pycosat 0.6.3 py39hb82d6ee_1010",
   "pycparser 2.21 pyhd8ed1ab_0",
   "pygments 2.12.0 pyhd8ed1ab_0",
   "pyopenssl 22.0.0 pyhd8ed1ab_0",
   "pyrsistent 0.18.1 py39hb82d6ee_1",
   "pysocks 1.7.1 py39hcbf5309_5",
   "python 3.9.13 h9a09f29_0_cpython",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "python-fastjsonschema 2.15.3 pyhd8ed1ab_0",
   "python-libarchive-c 4.0 py39hcbf5309_1",
   "python_abi 3.9 2_cp39",
   "pytz 2022.1 pyhd8ed1ab_0",
   "pywin32 303 py39hb82d6ee_0",
   "pyyaml 6.0 py39hb82d6ee_4",
   "reproc 14.2.3 h8ffe710_0",
   "reproc-cpp 14.2.3 h0e60522_0",
   "requests 2.27.1 pyhd8ed1ab_0",
   "rich 12.4.4 pyhd8ed1ab_0",
   "ripgrep 13.0.0 h7f3b576_2",
   "ruamel.yaml 0.17.21 py39hb82d6ee_1",
   "ruamel.yaml.clib 0.2.6 py39hb82d6ee_1",
   "ruamel_yaml 0.15.80 py39hb82d6ee_1007",
   "setuptools 62.3.2 py39hcbf5309_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "six 1.16.0 pyh6c4a22f_0",
   "sniffio 1.2.0 py39hcbf5309_3",
   "soupsieve 2.3.1 pyhd8ed1ab_0",
   "sqlite 3.38.5 h8ffe710_0",
   "tk 8.6.12 h8ffe710_0",
   "tqdm 4.64.0 pyhd8ed1ab_0",
   "traitlets 5.3.0 pyhd8ed1ab_0",
   "typing_extensions 4.2.0 pyha770c72_1",
   "tzdata 2022a h191b570_0",
   "ucrt 10.0.20348.0 h57928b3_0",
   "urllib3 1.26.9 pyhd8ed1ab_0",
   "vc 14.2 hb210afc_6",
   "vs2015_runtime 14.29.30037 h902a5da_6",
   "watchgod 0.8.2 pyhd8ed1ab_0",
   "wcwidth 0.2.5 pyh9f0ad1d_2",
   "wheel 0.37.1 pyhd8ed1ab_0",
   "win_inet_pton 1.1.0 py39hcbf5309_4",
   "xz 5.2.5 h62dcd97_1",
   "yaml 0.2.5 h8ffe710_2",
   "yaml-cpp 0.7.0 h0e60522_1",
   "zipp 3.8.0 pyhd8ed1ab_0",
   "zlib 1.2.12 h8ffe710_0",
   "zstd 1.5.2 h6255e5f_1"
  ],
  "summary": "NVIDIA's cuDNN deep neural network acceleration library",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "vs2017",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cuda_compiler": "nvcc",
  "cuda_compiler_version": "11.2",
  "cudnn": "8",
  "cxx_compiler": "vs2017",
  "extend_keys": [
   "extend_keys",
   "ignore_build_only_deps",
   "ignore_version",
   "pin_run_as_build"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.9",
  "r_base": "3.4",
  "target_platform": "win-64",
  "vc": "14",
  "zip_keys": [
   [
    "cudnn",
    "cuda_compiler_version"
   ]
  ]
 },
 "files": [
  "Library/bin/cudnn64_8.dll",
  "Library/bin/cudnn_adv_infer64_8.dll",
  "Library/bin/cudnn_adv_train64_8.dll",
  "Library/bin/cudnn_cnn_infer64_8.dll",
  "Library/bin/cudnn_cnn_train64_8.dll",
  "Library/bin/cudnn_ops_infer64_8.dll",
  "Library/bin/cudnn_ops_train64_8.dll",
  "Library/include/cudnn.h",
  "Library/include/cudnn_adv_infer.h",
  "Library/include/cudnn_adv_train.h",
  "Library/include/cudnn_backend.h",
  "Library/include/cudnn_cnn_infer.h",
  "Library/include/cudnn_cnn_train.h",
  "Library/include/cudnn_ops_infer.h",
  "Library/include/cudnn_ops_train.h",
  "Library/include/cudnn_version.h",
  "Library/lib/cudnn.lib",
  "Library/lib/cudnn64_8.lib",
  "Library/lib/cudnn_adv_infer.lib",
  "Library/lib/cudnn_adv_infer64_8.lib",
  "Library/lib/cudnn_adv_train.lib",
  "Library/lib/cudnn_adv_train64_8.lib",
  "Library/lib/cudnn_cnn_infer.lib",
  "Library/lib/cudnn_cnn_infer64_8.lib",
  "Library/lib/cudnn_cnn_train.lib",
  "Library/lib/cudnn_cnn_train64_8.lib",
  "Library/lib/cudnn_ops_infer.lib",
  "Library/lib/cudnn_ops_infer64_8.lib",
  "Library/lib/cudnn_ops_train.lib",
  "Library/lib/cudnn_ops_train64_8.lib",
  "Scripts/.cudnn-post-link.bat"
 ],
 "index": {
  "arch": "x86_64",
  "build": "hf5f08ae_0",
  "build_number": 0,
  "depends": [
   "cudatoolkit 11.*",
   "libzlib-wapi >=1.2.12,<1.3.0a0",
   "vc >=14.1,<15",
   "vs2015_runtime >=14.16.27033"
  ],
  "license": "LicenseRef-cuDNN-Software-License-Agreement",
  "name": "cudnn",
  "platform": "win",
  "subdir": "win-64",
  "timestamp": 1655474287066,
  "version": "8.4.1.50"
 },
 "metadata_version": 1,
 "name": "cudnn",
 "raw_recipe": "{% set version = \"8.4.1.50\" %}\n\n# cuDNN v8.3.x supports CUDA versions 10.2 - 11.5\n# For CUDA 11.x there is one cuDNN distribution that works with all CUDA 11 versions\n# (We don't support CUDA 10.2 anymore as it's x86-64 only.)\n{% if cuda_compiler_version[:2] == \"11\" %}\n{% set cudnn_cuda_version = \"11.6\" %}\n{% endif %}\n\npackage:\n  name: cudnn\n  version: {{ version }}\n\nsource:\n  - url: https://developer.download.nvidia.com/compute/redist/cudnn/v{{ \".\".join(version.split(\".\")[:3]) }}/local_installers/{{ cudnn_cuda_version }}/cudnn-linux-x86_64-{{ version }}_cuda{{ cudnn_cuda_version }}-archive.tar.xz  # [linux64]\n    sha256: ec96d2376d81fca42bdd3d4c3d705a99b29a065bab57f920561c763e29c67d01  # [linux64 and cuda_compiler_version == \"11.2\"]\n  - url: https://developer.download.nvidia.com/compute/redist/cudnn/v{{ \".\".join(version.split(\".\")[:3]) }}/local_installers/{{ cudnn_cuda_version }}/cudnn-linux-ppc64le-{{ version }}_cuda{{ cudnn_cuda_version }}-archive.tar.xz  # [ppc64le]\n    sha256: 8b806cbfdc81352bf76716d1e53b42537665d110c6ffc068be910505c10e1b98  # [ppc64le and cuda_compiler_version == \"11.2\"]\n  - url: https://developer.download.nvidia.com/compute/redist/cudnn/v{{ \".\".join(version.split(\".\")[:3]) }}/local_installers/{{ cudnn_cuda_version }}/cudnn-linux-sbsa-{{ version }}_cuda{{ cudnn_cuda_version }}-archive.tar.xz  # [aarch64]\n    sha256: 0b1b9fac5b78974e2fdaaa74843db18f636ce8f3d999d62ff2a615b9978fc360  # [aarch64 and cuda_compiler_version == \"11.2\"]\n  - url: https://developer.download.nvidia.com/compute/redist/cudnn/v{{ \".\".join(version.split(\".\")[:3]) }}/local_installers/{{ cudnn_cuda_version }}/cudnn-windows-x86_64-{{ version }}_cuda{{ cudnn_cuda_version }}-archive.zip  # [win64]\n    sha256: ebecec4be0ba36102d01d50fbdc5f88276648c89a2fa0d7d68bdb35430a72c30  # [win64 and cuda_compiler_version == \"11.2\"]\n\nbuild:\n  number: 0\n  skip: True   # [cuda_compiler_version != \"11.2\"]\n  script:\n    - mkdir -p $PREFIX/include               # [linux]\n    - cp include/cudnn*.h $PREFIX/include/   # [linux]\n    - mkdir -p $PREFIX/lib                   # [linux]\n    - mv lib/libcudnn*.so* $PREFIX/lib/      # [linux]\n\n    - mkdir %LIBRARY_INC%                                # [win]\n    - copy %SRC_DIR%\\\\include\\\\cudnn*.h %LIBRARY_INC%\\\\  # [win]\n    - mkdir %LIBRARY_LIB%                                # [win]\n    - copy %SRC_DIR%\\\\lib\\\\cudnn*.lib %LIBRARY_LIB%\\\\    # [win]\n    - mkdir %LIBRARY_BIN%                                # [win]\n    - copy %SRC_DIR%\\\\bin\\\\cudnn*.dll %LIBRARY_BIN%\\\\    # [win]\n  ignore_run_exports:\n    - cudatoolkit\n  run_exports:\n    - {{ pin_subpackage('cudnn') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}\n    - sysroot_linux-64 2.17  # [linux64]\n  host:\n    - patchelf >=0.12  # [linux]\n    # to suppress \".so not found\" errors\n    - libzlib  # [linux]\n    - libzlib-wapi  # [win64]\n  run:\n    - cudatoolkit 11.*\n  run_constrained:\n    # Only GLIBC_2.17 or older symbols present\n    - __glibc >=2.17  # [linux]\n\ntest:\n  requires:\n    - {{ compiler('c') }}  # [linux]\n  files:\n    - test_load_elf.c      # [linux]\n  commands:\n    - if not exist %LIBRARY_INC%/cudnn.h exit 1        # [win]\n    - if not exist %LIBRARY_INC%/cudnn_adv_train.h exit 1  # [win]\n    - if not exist %LIBRARY_LIB%/cudnn.lib exit 1      # [win]\n    - if not exist %LIBRARY_LIB%/cudnn_adv_train.lib exit 1      # [win]\n    - if not exist %LIBRARY_BIN%/cudnn64_8.dll exit 1  # [win]\n    - if not exist %LIBRARY_BIN%/cudnn_adv_train64_8.dll exit 1  # [win]\n    - test -f $PREFIX/include/cudnn.h                  # [linux]\n    - test -f $PREFIX/include/cudnn_adv_train.h        # [linux]\n    - test -f $PREFIX/lib/libcudnn.so                  # [linux]\n    - test -f $PREFIX/lib/libcudnn_adv_train.so        # [linux]\n    - ${GCC} test_load_elf.c -std=c99 -Werror -ldl -o test_load_elf  # [linux]\n    - for f in $PREFIX/lib/libcudnn*.so; do ./test_load_elf $f; done  # [linux]\n\nabout:\n  home: https://developer.nvidia.com/cudnn\n  license: LicenseRef-cuDNN-Software-License-Agreement\n  license_file: LICENSE\n  license_url: https://docs.nvidia.com/deeplearning/cudnn/sla/index.html\n  summary: \"NVIDIA's cuDNN deep neural network acceleration library\"\n  description: |\n    NVIDIA CUDA Deep Neural Network (cuDNN) is a GPU-accelerated library of\n    primitives for deep neural networks. It provides highly tuned\n    implementations of routines arising frequently in DNN applications.\n\n    License Agreements:- The packages are governed by the NVIDIA cuDNN\n    Software License Agreement (EULA). By downloading and using the packages,\n    you accept the terms and conditions of the NVIDIA cuDNN EULA -\n    https://docs.nvidia.com/deeplearning/cudnn/sla/index.html\n  doc_url: https://docs.nvidia.com/deeplearning/cudnn/\n  dev_url: https://developer.nvidia.com/rdp/cudnn-download\n\nextra:\n  recipe-maintainers:\n    - ivanyashchuk\n    - kkraus14\n",
 "rendered_recipe": {
  "about": {
   "description": "NVIDIA CUDA Deep Neural Network (cuDNN) is a GPU-accelerated library of\nprimitives for deep neural networks. It provides highly tuned\nimplementations of routines arising frequently in DNN applications.\n\nLicense Agreements:- The packages are governed by the NVIDIA cuDNN\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuDNN EULA -\nhttps://docs.nvidia.com/deeplearning/cudnn/sla/index.html\n",
   "dev_url": "https://developer.nvidia.com/rdp/cudnn-download",
   "doc_url": "https://docs.nvidia.com/deeplearning/cudnn/",
   "home": "https://developer.nvidia.com/cudnn",
   "license": "LicenseRef-cuDNN-Software-License-Agreement",
   "license_file": "LICENSE",
   "license_url": "https://docs.nvidia.com/deeplearning/cudnn/sla/index.html",
   "summary": "NVIDIA's cuDNN deep neural network acceleration library"
  },
  "build": {
   "ignore_run_exports": [
    "cudatoolkit"
   ],
   "number": "0",
   "run_exports": [
    "cudnn >=8.4.1.50,<9.0a0"
   ],
   "script": [
    "mkdir %LIBRARY_INC%",
    "copy %SRC_DIR%\\\\include\\\\cudnn*.h %LIBRARY_INC%\\\\",
    "mkdir %LIBRARY_LIB%",
    "copy %SRC_DIR%\\\\lib\\\\cudnn*.lib %LIBRARY_LIB%\\\\",
    "mkdir %LIBRARY_BIN%",
    "copy %SRC_DIR%\\\\bin\\\\cudnn*.dll %LIBRARY_BIN%\\\\"
   ],
   "string": "hf5f08ae_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "ivanyashchuk",
    "kkraus14"
   ]
  },
  "package": {
   "name": "cudnn",
   "version": "8.4.1.50"
  },
  "requirements": {
   "build": [
    "nvcc_win-64 11.2 h929061a_19",
    "ucrt 10.0.20348.0 h57928b3_0",
    "vc 14.2 hb210afc_6",
    "vs2015_runtime 14.29.30037 h902a5da_6",
    "vs2017_win-64 19.16.27033 hb90652a_6",
    "vswhere 3.0.3 h57928b3_0"
   ],
   "host": [
    "libzlib-wapi 1.2.12 h8ffe710_1",
    "ucrt 10.0.20348.0 h57928b3_0",
    "vc 14.2 hb210afc_6",
    "vs2015_runtime 14.29.30037 h902a5da_6"
   ],
   "run": [
    "cudatoolkit 11.*",
    "libzlib-wapi >=1.2.12,<1.3.0a0",
    "vc >=14.1,<15",
    "vs2015_runtime >=14.16.27033"
   ],
   "run_constrained": []
  },
  "source": [
   {
    "sha256": "ebecec4be0ba36102d01d50fbdc5f88276648c89a2fa0d7d68bdb35430a72c30",
    "url": "https://developer.download.nvidia.com/compute/redist/cudnn/v8.4.1/local_installers/11.6/cudnn-windows-x86_64-8.4.1.50_cuda11.6-archive.zip"
   }
  ],
  "test": {
   "commands": [
    "if not exist %LIBRARY_INC%/cudnn.h exit 1",
    "if not exist %LIBRARY_INC%/cudnn_adv_train.h exit 1",
    "if not exist %LIBRARY_LIB%/cudnn.lib exit 1",
    "if not exist %LIBRARY_LIB%/cudnn_adv_train.lib exit 1",
    "if not exist %LIBRARY_BIN%/cudnn64_8.dll exit 1",
    "if not exist %LIBRARY_BIN%/cudnn_adv_train64_8.dll exit 1"
   ],
   "files": null,
   "requires": null
  }
 },
 "version": "8.4.1.50"
}
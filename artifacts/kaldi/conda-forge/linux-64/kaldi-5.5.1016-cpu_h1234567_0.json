{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.21.8",
  "conda_private": false,
  "conda_version": "4.12.0",
  "description": "Kaldi is intended for use by speech recognition researchers. It is a framework rather than a library.\n",
  "dev_url": "https://github.com/kaldi-asr/kaldi",
  "doc_url": "http://kaldi-asr.org/doc",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "mmcauliffe",
    "mcernak"
   ]
  },
  "home": "http://kaldi-asr.org/",
  "identifiers": [],
  "keywords": [],
  "license": "Apache-2.0",
  "license_file": "COPYING",
  "root_pkgs": [
   "libedit 3.1.20191231 he28a2e2_2",
   "python-fastjsonschema 2.15.3 pyhd8ed1ab_0",
   "nbformat 5.3.0 pyhd8ed1ab_0",
   "gettext 0.19.8.1 h73d1719_1008",
   "ripgrep 13.0.0 h2f28480_2",
   "cffi 1.15.0 py39h4bc2ebd_0",
   "reproc 14.2.3 h7f98852_0",
   "xz 5.2.5 h516909a_1",
   "krb5 1.19.3 h3790be6_0",
   "perl 5.32.1 2_h7f98852_perl5",
   "libarchive 3.5.2 hccf745f_1",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "curl 7.82.0 h7bff187_0",
   "pcre2 10.37 h032f7d1_0",
   "chardet 4.0.0 py39hf3d152e_3",
   "soupsieve 2.3.1 pyhd8ed1ab_0",
   "pyopenssl 22.0.0 pyhd8ed1ab_0",
   "ruamel_yaml 0.15.80 py39h3811e60_1006",
   "reproc-cpp 14.2.3 h9c3ff4c_0",
   "libuuid 2.32.1 h7f98852_1000",
   "glob2 0.7 py_0",
   "_openmp_mutex 4.5 1_gnu",
   "idna 3.3 pyhd8ed1ab_0",
   "six 1.16.0 pyh6c4a22f_0",
   "libmambapy 0.22.1 py39hd55135b_1",
   "typing_extensions 4.1.1 pyha770c72_0",
   "cryptography 36.0.2 py39hd97740a_1",
   "patch 2.7.6 h7f98852_1002",
   "bzip2 1.0.8 h7f98852_4",
   "anaconda-client 1.8.0 pyhd8ed1ab_0",
   "rich 12.2.0 pyhd8ed1ab_0",
   "libev 4.33 h516909a_1",
   "psutil 5.9.0 py39hb9d737c_1",
   "sniffio 1.2.0 py39hf3d152e_3",
   "_libgcc_mutex 0.1 conda_forge",
   "prompt_toolkit 3.0.29 hd8ed1ab_0",
   "filelock 3.6.0 pyhd8ed1ab_0",
   "importlib_resources 5.7.0 pyhd8ed1ab_0",
   "conda-package-handling 1.8.1 py39hb9d737c_1",
   "libffi 3.4.2 h7f98852_5",
   "jupyter_core 4.9.2 py39hf3d152e_0",
   "beautifulsoup4 4.11.1 pyha770c72_0",
   "certifi 2021.10.8 py39hf3d152e_2",
   "libssh2 1.10.0 ha56f1ee_2",
   "wheel 0.37.1 pyhd8ed1ab_0",
   "python-libarchive-c 4.0 py39hf3d152e_1",
   "pytz 2022.1 pyhd8ed1ab_0",
   "yaml-cpp 0.6.3 he1b5a44_4",
   "importlib-metadata 4.11.3 py39hf3d152e_1",
   "requests 2.27.1 pyhd8ed1ab_0",
   "pycparser 2.21 pyhd8ed1ab_0",
   "charset-normalizer 2.0.12 pyhd8ed1ab_0",
   "libsolv 0.7.22 h6239696_0",
   "libiconv 1.16 h516909a_0",
   "tini 0.19.0 h7f98852_0",
   "pycosat 0.6.3 py39hb9d737c_1010",
   "watchgod 0.8.2 pyhd8ed1ab_0",
   "ruamel.yaml 0.17.21 py39hb9d737c_1",
   "libmamba 0.22.1 hd8a31e3_1",
   "mamba 0.22.1 py39hfa8f2c8_1",
   "icu 70.1 h27087fc_0",
   "lz4-c 1.9.3 h9c3ff4c_1",
   "prompt-toolkit 3.0.29 pyha770c72_0",
   "markupsafe 2.1.1 py39hb9d737c_1",
   "yaml 0.2.5 h7f98852_2",
   "libnsl 2.0.0 h7f98852_0",
   "tqdm 4.64.0 pyhd8ed1ab_0",
   "zipp 3.8.0 pyhd8ed1ab_0",
   "clyent 1.2.2 py_1",
   "libcurl 7.82.0 h7bff187_0",
   "future 0.18.2 py39hf3d152e_5",
   "joblib 1.1.0 pyhd8ed1ab_0",
   "c-ares 1.18.1 h7f98852_0",
   "readline 8.1 h46c0cb4_0",
   "traitlets 5.1.1 pyhd8ed1ab_0",
   "conda-build 3.21.8 py39hf3d152e_0",
   "pygments 2.11.2 pyhd8ed1ab_0",
   "boa 0.10.0 pyha770c72_0",
   "pyrsistent 0.18.1 py39hb9d737c_1",
   "tk 8.6.12 h27826a3_0",
   "su-exec 0.2 h516909a_1002",
   "ca-certificates 2021.10.8 ha878542_0",
   "json5 0.9.5 pyh9f0ad1d_0",
   "setuptools 62.1.0 py39hf3d152e_0",
   "colorama 0.4.4 pyh9f0ad1d_0",
   "git 2.35.2 pl5321h36853c3_0",
   "conda 4.12.0 py39hf3d152e_0",
   "libstdcxx-ng 11.2.0 he4da1e4_15",
   "keyutils 1.6.1 h166bdaf_0",
   "libxml2 2.9.13 h22db469_0",
   "libnghttp2 1.47.0 h727a467_0",
   "ruamel.yaml.clib 0.2.6 py39hb9d737c_1",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "pkginfo 1.8.2 pyhd8ed1ab_0",
   "libgomp 11.2.0 h1d223b6_15",
   "openssl 1.1.1n h166bdaf_0",
   "jinja2 3.1.1 pyhd8ed1ab_0",
   "py-lief 0.11.5 py39he80948d_1",
   "brotlipy 0.7.0 py39hb9d737c_1004",
   "zstd 1.5.2 ha95c52a_0",
   "python_abi 3.9 2_cp39",
   "liblief 0.11.5 h9c3ff4c_1",
   "pip 22.0.4 pyhd8ed1ab_0",
   "patchelf 0.14.5 h58526e2_0",
   "ncurses 6.3 h27087fc_1",
   "lzo 2.10 h516909a_1000",
   "pyyaml 6.0 py39hb9d737c_4",
   "ld_impl_linux-64 2.36.1 hea4e1c9_2",
   "jsonschema 4.4.0 pyhd8ed1ab_0",
   "zlib 1.2.11 h166bdaf_1014",
   "dataclasses 0.8 pyhc8e2a94_3",
   "libzlib 1.2.11 h166bdaf_1014",
   "sqlite 3.38.2 h4ff8645_0",
   "commonmark 0.9.1 py_0",
   "wcwidth 0.2.5 pyh9f0ad1d_2",
   "urllib3 1.26.9 pyhd8ed1ab_0",
   "pybind11-abi 4 hd8ed1ab_3",
   "anyio 3.5.0 py39hf3d152e_0",
   "backports 1.0 py_2",
   "python 3.9.12 h9a8a25e_1_cpython",
   "tzdata 2022a h191b570_0",
   "attrs 21.4.0 pyhd8ed1ab_0",
   "expat 2.4.8 h27087fc_0",
   "libgcc-ng 11.2.0 h1d223b6_15",
   "pysocks 1.7.1 py39hf3d152e_5",
   "jq 1.6 h36c2ea0_1000",
   "conda-forge-ci-setup 3.20.0 py39h69ce9fc_100",
   "click 8.1.2 py39hf3d152e_0",
   "oniguruma 6.9.7.1 h7f98852_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "conda-env 2.6.0 1"
  ],
  "summary": "Kaldi is a toolkit for speech recognition written in C++.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cuda_compiler": "nvcc",
  "cuda_compiler_version": "None",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "10",
  "docker_image": "quay.io/condaforge/linux-anvil-cos7-x86_64",
  "extend_keys": [
   "ignore_version",
   "extend_keys",
   "pin_run_as_build",
   "ignore_build_only_deps"
  ],
  "fortran_compiler": "gfortran",
  "fortran_compiler_version": "10",
  "icu": "69",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "libblas": "3.8 *netlib",
  "libcblas": "3.8 *netlib",
  "liblapack": "3.8 *netlib",
  "liblapacke": "3.8 *netlib",
  "lua": "5",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "zlib": {
    "max_pin": "x.x"
   }
  },
  "python": "3.9",
  "r_base": "3.5",
  "target_platform": "linux-64",
  "zip_keys": [
   [
    "cxx_compiler_version",
    "fortran_compiler_version",
    "cuda_compiler_version",
    "cdt_name",
    "docker_image"
   ]
  ],
  "zlib": "1.2"
 },
 "files": [
  "bin/acc-lda",
  "bin/acc-tree-stats",
  "bin/add-deltas",
  "bin/add-deltas-sdc",
  "bin/add-self-loops",
  "bin/agglomerative-cluster",
  "bin/ali-to-pdf",
  "bin/ali-to-phones",
  "bin/ali-to-post",
  "bin/align-compiled-mapped",
  "bin/align-equal",
  "bin/align-equal-compiled",
  "bin/align-mapped",
  "bin/align-text",
  "bin/am-info",
  "bin/analyze-counts",
  "bin/append-post-to-feats",
  "bin/append-vector-to-feats",
  "bin/apply-cmvn",
  "bin/apply-cmvn-online",
  "bin/apply-cmvn-sliding",
  "bin/arpa-to-const-arpa",
  "bin/arpa2fst",
  "bin/build-pfile-from-ali",
  "bin/build-tree",
  "bin/build-tree-two-level",
  "bin/chain-est-phone-lm",
  "bin/chain-get-supervision",
  "bin/chain-make-den-fst",
  "bin/chain-make-num-fst-e2e",
  "bin/cluster-phones",
  "bin/cmvn-to-nnet",
  "bin/compare-feats",
  "bin/compare-int-vector",
  "bin/compile-graph",
  "bin/compile-questions",
  "bin/compile-train-graphs",
  "bin/compile-train-graphs-fsts",
  "bin/compile-train-graphs-without-lexicon",
  "bin/compose-transforms",
  "bin/compress-uncompress-speex",
  "bin/compute-and-process-kaldi-pitch-feats",
  "bin/compute-atwv",
  "bin/compute-cmvn-stats",
  "bin/compute-cmvn-stats-two-channel",
  "bin/compute-eer",
  "bin/compute-fbank-feats",
  "bin/compute-gop",
  "bin/compute-kaldi-pitch-feats",
  "bin/compute-mfcc-feats",
  "bin/compute-plp-feats",
  "bin/compute-spectrogram-feats",
  "bin/compute-vad",
  "bin/compute-vad-from-frame-likes",
  "bin/compute-wer",
  "bin/compute-wer-bootci",
  "bin/concat-feats",
  "bin/convert-ali",
  "bin/copy-feats",
  "bin/copy-feats-to-htk",
  "bin/copy-feats-to-sphinx",
  "bin/copy-gselect",
  "bin/copy-int-vector",
  "bin/copy-matrix",
  "bin/copy-post",
  "bin/copy-transition-model",
  "bin/copy-tree",
  "bin/copy-vector",
  "bin/cuda-compiled",
  "bin/cuda-gpu-available",
  "bin/decode-faster",
  "bin/decode-faster-mapped",
  "bin/draw-tree",
  "bin/est-lda",
  "bin/est-mllt",
  "bin/est-pca",
  "bin/extend-transform-dim",
  "bin/extend-wav-with-silence",
  "bin/extract-feature-segments",
  "bin/extract-segments",
  "bin/feat-to-dim",
  "bin/feat-to-len",
  "bin/feat-to-post",
  "bin/fmpe-acc-stats",
  "bin/fmpe-apply-transform",
  "bin/fmpe-est",
  "bin/fmpe-init",
  "bin/fmpe-sum-accs",
  "bin/fstaddselfloops",
  "bin/fstaddsubsequentialloop",
  "bin/fstcomposecontext",
  "bin/fstcopy",
  "bin/fstdeterminizelog",
  "bin/fstdeterminizestar",
  "bin/fstisstochastic",
  "bin/fstmakecontextfst",
  "bin/fstmakecontextsyms",
  "bin/fstminimizeencoded",
  "bin/fstphicompose",
  "bin/fstpushspecial",
  "bin/fstrand",
  "bin/fstrmepslocal",
  "bin/fstrmsymbols",
  "bin/fsts-concat",
  "bin/fsts-project",
  "bin/fsts-to-transcripts",
  "bin/fsts-union",
  "bin/fsttablecompose",
  "bin/generate-proxy-keywords",
  "bin/get-full-lda-mat",
  "bin/get-post-on-ali",
  "bin/gmm-acc-mllt",
  "bin/gmm-acc-mllt-global",
  "bin/gmm-acc-stats",
  "bin/gmm-acc-stats-ali",
  "bin/gmm-acc-stats-twofeats",
  "bin/gmm-acc-stats2",
  "bin/gmm-adapt-map",
  "bin/gmm-align",
  "bin/gmm-align-compiled",
  "bin/gmm-basis-fmllr-accs",
  "bin/gmm-basis-fmllr-accs-gpost",
  "bin/gmm-basis-fmllr-training",
  "bin/gmm-boost-silence",
  "bin/gmm-compute-likes",
  "bin/gmm-copy",
  "bin/gmm-decode-biglm-faster",
  "bin/gmm-decode-faster",
  "bin/gmm-decode-faster-regtree-fmllr",
  "bin/gmm-decode-faster-regtree-mllr",
  "bin/gmm-decode-simple",
  "bin/gmm-est",
  "bin/gmm-est-basis-fmllr",
  "bin/gmm-est-basis-fmllr-gpost",
  "bin/gmm-est-fmllr",
  "bin/gmm-est-fmllr-global",
  "bin/gmm-est-fmllr-gpost",
  "bin/gmm-est-fmllr-raw",
  "bin/gmm-est-fmllr-raw-gpost",
  "bin/gmm-est-gaussians-ebw",
  "bin/gmm-est-lvtln-trans",
  "bin/gmm-est-map",
  "bin/gmm-est-regtree-fmllr",
  "bin/gmm-est-regtree-fmllr-ali",
  "bin/gmm-est-regtree-mllr",
  "bin/gmm-est-rescale",
  "bin/gmm-est-weights-ebw",
  "bin/gmm-fmpe-acc-stats",
  "bin/gmm-get-stats-deriv",
  "bin/gmm-global-acc-stats",
  "bin/gmm-global-acc-stats-twofeats",
  "bin/gmm-global-copy",
  "bin/gmm-global-est",
  "bin/gmm-global-est-fmllr",
  "bin/gmm-global-est-lvtln-trans",
  "bin/gmm-global-get-frame-likes",
  "bin/gmm-global-get-post",
  "bin/gmm-global-gselect-to-post",
  "bin/gmm-global-info",
  "bin/gmm-global-init-from-feats",
  "bin/gmm-global-sum-accs",
  "bin/gmm-global-to-fgmm",
  "bin/gmm-gselect",
  "bin/gmm-info",
  "bin/gmm-init-biphone",
  "bin/gmm-init-lvtln",
  "bin/gmm-init-model",
  "bin/gmm-init-model-flat",
  "bin/gmm-init-mono",
  "bin/gmm-ismooth-stats",
  "bin/gmm-latgen-biglm-faster",
  "bin/gmm-latgen-faster",
  "bin/gmm-latgen-faster-parallel",
  "bin/gmm-latgen-faster-regtree-fmllr",
  "bin/gmm-latgen-map",
  "bin/gmm-latgen-simple",
  "bin/gmm-make-regtree",
  "bin/gmm-mixup",
  "bin/gmm-post-to-gpost",
  "bin/gmm-rescore-lattice",
  "bin/gmm-sum-accs",
  "bin/gmm-train-lvtln-special",
  "bin/gmm-transform-means",
  "bin/gmm-transform-means-global",
  "bin/hmm-info",
  "bin/interpolate-pitch",
  "bin/ivector-adapt-plda",
  "bin/ivector-compute-dot-products",
  "bin/ivector-compute-lda",
  "bin/ivector-compute-plda",
  "bin/ivector-copy-plda",
  "bin/ivector-extract",
  "bin/ivector-extract-online",
  "bin/ivector-extract-online2",
  "bin/ivector-extractor-acc-stats",
  "bin/ivector-extractor-copy",
  "bin/ivector-extractor-est",
  "bin/ivector-extractor-init",
  "bin/ivector-extractor-sum-accs",
  "bin/ivector-mean",
  "bin/ivector-normalize-length",
  "bin/ivector-plda-scoring",
  "bin/ivector-plda-scoring-dense",
  "bin/ivector-randomize",
  "bin/ivector-subtract-global-mean",
  "bin/ivector-transform",
  "bin/kws-index-union",
  "bin/kws-search",
  "bin/latgen-faster-mapped",
  "bin/latgen-faster-mapped-parallel",
  "bin/latgen-incremental-mapped",
  "bin/lattice-1best",
  "bin/lattice-add-nnlmscore",
  "bin/lattice-add-penalty",
  "bin/lattice-add-trans-probs",
  "bin/lattice-align-phones",
  "bin/lattice-align-words",
  "bin/lattice-align-words-lexicon",
  "bin/lattice-arc-post",
  "bin/lattice-best-path",
  "bin/lattice-boost-ali",
  "bin/lattice-combine",
  "bin/lattice-compose",
  "bin/lattice-confidence",
  "bin/lattice-copy",
  "bin/lattice-copy-backoff",
  "bin/lattice-depth",
  "bin/lattice-depth-per-frame",
  "bin/lattice-determinize",
  "bin/lattice-determinize-non-compact",
  "bin/lattice-determinize-phone-pruned",
  "bin/lattice-determinize-phone-pruned-parallel",
  "bin/lattice-determinize-pruned",
  "bin/lattice-determinize-pruned-parallel",
  "bin/lattice-difference",
  "bin/lattice-equivalent",
  "bin/lattice-expand",
  "bin/lattice-expand-ngram",
  "bin/lattice-interp",
  "bin/lattice-limit-depth",
  "bin/lattice-lmrescore",
  "bin/lattice-lmrescore-const-arpa",
  "bin/lattice-lmrescore-kaldi-rnnlm",
  "bin/lattice-lmrescore-kaldi-rnnlm-pruned",
  "bin/lattice-lmrescore-pruned",
  "bin/lattice-lmrescore-rnnlm",
  "bin/lattice-mbr-decode",
  "bin/lattice-minimize",
  "bin/lattice-oracle",
  "bin/lattice-path-cover",
  "bin/lattice-project",
  "bin/lattice-prune",
  "bin/lattice-push",
  "bin/lattice-rescore-mapped",
  "bin/lattice-reverse",
  "bin/lattice-rmali",
  "bin/lattice-scale",
  "bin/lattice-to-ctm-conf",
  "bin/lattice-to-fst",
  "bin/lattice-to-kws-index",
  "bin/lattice-to-mpe-post",
  "bin/lattice-to-nbest",
  "bin/lattice-to-phone-lattice",
  "bin/lattice-to-post",
  "bin/lattice-to-smbr-post",
  "bin/lattice-union",
  "bin/linear-to-nbest",
  "bin/logistic-regression-copy",
  "bin/logistic-regression-eval",
  "bin/logistic-regression-train",
  "bin/logprob-to-post",
  "bin/make-grammar-fst",
  "bin/make-h-transducer",
  "bin/make-ilabel-transducer",
  "bin/make-pdf-to-tid-transducer",
  "bin/matrix-dim",
  "bin/matrix-max",
  "bin/matrix-sum",
  "bin/matrix-sum-rows",
  "bin/merge-vads",
  "bin/modify-cmvn-stats",
  "bin/multiply-vectors",
  "bin/nbest-to-ctm",
  "bin/nbest-to-lattice",
  "bin/nbest-to-linear",
  "bin/nbest-to-prons",
  "bin/nnet-adjust-priors",
  "bin/nnet-align-compiled",
  "bin/nnet-am-average",
  "bin/nnet-am-compute",
  "bin/nnet-am-copy",
  "bin/nnet-am-fix",
  "bin/nnet-am-info",
  "bin/nnet-am-init",
  "bin/nnet-am-mixup",
  "bin/nnet-am-reinitialize",
  "bin/nnet-am-switch-preconditioning",
  "bin/nnet-am-widen",
  "bin/nnet-combine",
  "bin/nnet-combine-egs-discriminative",
  "bin/nnet-combine-fast",
  "bin/nnet-compare-hash-discriminative",
  "bin/nnet-compute",
  "bin/nnet-compute-from-egs",
  "bin/nnet-compute-prob",
  "bin/nnet-concat",
  "bin/nnet-copy",
  "bin/nnet-copy-egs",
  "bin/nnet-copy-egs-discriminative",
  "bin/nnet-forward",
  "bin/nnet-get-egs",
  "bin/nnet-get-egs-discriminative",
  "bin/nnet-get-feature-transform",
  "bin/nnet-get-feature-transform-multi",
  "bin/nnet-get-weighted-egs",
  "bin/nnet-info",
  "bin/nnet-init",
  "bin/nnet-initialize",
  "bin/nnet-insert",
  "bin/nnet-latgen-faster",
  "bin/nnet-latgen-faster-parallel",
  "bin/nnet-modify-learning-rates",
  "bin/nnet-normalize-stddev",
  "bin/nnet-relabel-egs",
  "bin/nnet-replace-last-layers",
  "bin/nnet-set-learnrate",
  "bin/nnet-show-progress",
  "bin/nnet-shuffle-egs",
  "bin/nnet-shuffle-egs-discriminative",
  "bin/nnet-subset-egs",
  "bin/nnet-to-raw-nnet",
  "bin/nnet-train-discriminative-parallel",
  "bin/nnet-train-discriminative-simple",
  "bin/nnet-train-ensemble",
  "bin/nnet-train-frmshuff",
  "bin/nnet-train-mmi-sequential",
  "bin/nnet-train-mpe-sequential",
  "bin/nnet-train-multistream",
  "bin/nnet-train-multistream-perutt",
  "bin/nnet-train-parallel",
  "bin/nnet-train-perutt",
  "bin/nnet-train-simple",
  "bin/nnet-train-transitions",
  "bin/nnet1-to-raw-nnet",
  "bin/nnet3-acc-lda-stats",
  "bin/nnet3-align-compiled",
  "bin/nnet3-am-adjust-priors",
  "bin/nnet3-am-copy",
  "bin/nnet3-am-info",
  "bin/nnet3-am-init",
  "bin/nnet3-am-train-transitions",
  "bin/nnet3-average",
  "bin/nnet3-chain-acc-lda-stats",
  "bin/nnet3-chain-add-post-to-egs",
  "bin/nnet3-chain-combine",
  "bin/nnet3-chain-combine2",
  "bin/nnet3-chain-compute-post",
  "bin/nnet3-chain-compute-prob",
  "bin/nnet3-chain-copy-egs",
  "bin/nnet3-chain-e2e-get-egs",
  "bin/nnet3-chain-get-egs",
  "bin/nnet3-chain-merge-egs",
  "bin/nnet3-chain-normalize-egs",
  "bin/nnet3-chain-shuffle-egs",
  "bin/nnet3-chain-subset-egs",
  "bin/nnet3-chain-train",
  "bin/nnet3-chain-train2",
  "bin/nnet3-combine",
  "bin/nnet3-compute",
  "bin/nnet3-compute-batch",
  "bin/nnet3-compute-from-egs",
  "bin/nnet3-compute-prob",
  "bin/nnet3-copy",
  "bin/nnet3-copy-egs",
  "bin/nnet3-discriminative-compute-from-egs",
  "bin/nnet3-discriminative-compute-objf",
  "bin/nnet3-discriminative-copy-egs",
  "bin/nnet3-discriminative-get-egs",
  "bin/nnet3-discriminative-merge-egs",
  "bin/nnet3-discriminative-shuffle-egs",
  "bin/nnet3-discriminative-subset-egs",
  "bin/nnet3-discriminative-train",
  "bin/nnet3-egs-augment-image",
  "bin/nnet3-get-egs",
  "bin/nnet3-get-egs-dense-targets",
  "bin/nnet3-get-egs-simple",
  "bin/nnet3-info",
  "bin/nnet3-init",
  "bin/nnet3-latgen-faster",
  "bin/nnet3-latgen-faster-batch",
  "bin/nnet3-latgen-faster-lookahead",
  "bin/nnet3-latgen-faster-looped",
  "bin/nnet3-latgen-faster-looped-parallel",
  "bin/nnet3-latgen-faster-parallel",
  "bin/nnet3-latgen-grammar",
  "bin/nnet3-merge-egs",
  "bin/nnet3-show-progress",
  "bin/nnet3-shuffle-egs",
  "bin/nnet3-subset-egs",
  "bin/nnet3-train",
  "bin/nnet3-xvector-compute",
  "bin/nnet3-xvector-compute-batched",
  "bin/nnet3-xvector-get-egs",
  "bin/online-audio-client",
  "bin/online-audio-server-decode-faster",
  "bin/online-gmm-decode-faster",
  "bin/online-net-client",
  "bin/online-server-gmm-decode-faster",
  "bin/online-wav-gmm-decode-faster",
  "bin/online2-tcp-nnet3-decode-faster",
  "bin/online2-tcp-nnet3-decode-faster-emscripten",
  "bin/online2-wav-dump-features",
  "bin/online2-wav-gmm-latgen-faster",
  "bin/online2-wav-nnet2-am-compute",
  "bin/online2-wav-nnet2-latgen-faster",
  "bin/online2-wav-nnet2-latgen-threaded",
  "bin/online2-wav-nnet3-latgen-faster",
  "bin/online2-wav-nnet3-latgen-grammar",
  "bin/online2-wav-nnet3-latgen-incremental",
  "bin/online2-wav-nnet3-wake-word-decoder-faster",
  "bin/paste-feats",
  "bin/paste-post",
  "bin/paste-vectors",
  "bin/phones-to-prons",
  "bin/post-to-feats",
  "bin/post-to-pdf-post",
  "bin/post-to-phone-post",
  "bin/post-to-smat",
  "bin/post-to-tacc",
  "bin/post-to-weights",
  "bin/print-proxy-keywords",
  "bin/prob-to-post",
  "bin/process-kaldi-pitch-feats",
  "bin/process-pitch-feats",
  "bin/prons-to-wordali",
  "bin/raw-nnet-concat",
  "bin/raw-nnet-copy",
  "bin/raw-nnet-info",
  "bin/rbm-convert-to-nnet",
  "bin/rbm-train-cd1-frmshuff",
  "bin/rnnlm-compute-prob",
  "bin/rnnlm-get-egs",
  "bin/rnnlm-get-sampling-lm",
  "bin/rnnlm-get-word-embedding",
  "bin/rnnlm-sentence-probs",
  "bin/rnnlm-train",
  "bin/scale-post",
  "bin/select-feats",
  "bin/select-voiced-frames",
  "bin/shift-feats",
  "bin/show-alignments",
  "bin/show-transitions",
  "bin/splice-feats",
  "bin/subsample-feats",
  "bin/subset-feats",
  "bin/sum-lda-accs",
  "bin/sum-matrices",
  "bin/sum-mllt-accs",
  "bin/sum-post",
  "bin/sum-tree-stats",
  "bin/train-transitions",
  "bin/transcripts-to-fsts",
  "bin/transf-to-nnet",
  "bin/transform-feats",
  "bin/transform-vec",
  "bin/tree-info",
  "bin/vector-scale",
  "bin/vector-sum",
  "bin/wav-copy",
  "bin/wav-reverberate",
  "bin/wav-to-duration",
  "bin/weight-post",
  "bin/weight-silence-post",
  "lib/libfst.so.16",
  "lib/libkaldi-base.so",
  "lib/libkaldi-chain.so",
  "lib/libkaldi-cudamatrix.so",
  "lib/libkaldi-decoder.so",
  "lib/libkaldi-feat.so",
  "lib/libkaldi-fstext.so",
  "lib/libkaldi-gmm.so",
  "lib/libkaldi-hmm.so",
  "lib/libkaldi-ivector.so",
  "lib/libkaldi-kws.so",
  "lib/libkaldi-lat.so",
  "lib/libkaldi-lm.so",
  "lib/libkaldi-matrix.so",
  "lib/libkaldi-nnet.so",
  "lib/libkaldi-nnet2.so",
  "lib/libkaldi-nnet3.so",
  "lib/libkaldi-online.so",
  "lib/libkaldi-online2.so",
  "lib/libkaldi-rnnlm.so",
  "lib/libkaldi-transform.so",
  "lib/libkaldi-tree.so",
  "lib/libkaldi-util.so"
 ],
 "index": {
  "arch": "x86_64",
  "build": "cpu_h1234567_0",
  "build_number": 0,
  "depends": [
   "icu >=69.1,<70.0a0",
   "libblas >=3.8.0,<4.0a0",
   "libcblas >=3.8.0,<4.0a0",
   "libgcc-ng >=10.3.0",
   "libgfortran-ng",
   "libgfortran5 >=10.3.0",
   "liblapack >=3.8.0,<4.0a0",
   "liblapacke >=3.8.0,<4.0a0",
   "libstdcxx-ng >=10.3.0",
   "libtmglib >=3.9.0,<4.0a0",
   "libzlib >=1.2.11,<1.3.0a0",
   "openfst"
  ],
  "license": "Apache-2.0",
  "name": "kaldi",
  "platform": "linux",
  "subdir": "linux-64",
  "timestamp": 1650414178888,
  "version": "5.5.1016"
 },
 "metadata_version": 1,
 "name": "kaldi",
 "raw_recipe": "{% set version = \"5.5.1016\" %}\n# minor/major is https://github.com/kaldi-asr/kaldi/blob/master/src/.version;\n# patch version is the number of commits since then, see\n# https://github.com/kaldi-asr/kaldi/blob/master/cmake/VersionHelper.cmake\n{% set commit = \"5a37217e107bc9cb5e4e1ad2b290cecbdedfa799\" %}\n{% set kaldi_proc_type = \"cuda\" if os.environ.get(\"cuda_compiler_version\", \"None\") != \"None\" else \"cpu\" %}\n\n{% set kaldi_libraries = [\n    \"base\", \"matrix\", \"cudamatrix\", \"util\", \"feat\", \"tree\", \"gmm\", \"transform\",\n    \"fstext\", \"hmm\", \"lm\", \"decoder\", \"lat\", \"nnet\", \"nnet2\", \"nnet3\",\n    \"rnnlm\", \"chain\", \"ivector\", \"online2\", \"kws\"\n] + (os.environ.get(\"cuda_compiler_version\", \"None\") != \"None\") * [\n    \"cudafeat\", \"cudadecoder\"\n] + (not win) * [\n    \"online\"\n] %}\n# This list should be substantially longer, but upstream just globs\n# all *.h files. These are just stand-ins (one header per folder),\n# but relevant headers can be added as needed/desired.\n{% set kaldi_headers = [\n    \"base/io-funcs.h\", \"matrix/cblas-wrappers.h\", \"cudamatrix/cu-array.h\",\n    \"util/basic-filebuf.h\", \"feat/feature-common.h\", \"tree/build-tree.h\",\n    \"gmm/am-diag-gmm.h\", \"transform/cmvn.h\",\n    \"fstext/context-fst.h\", \"hmm/hmm-utils.h\", \"lm/arpa-file-parser.h\",\n    \"decoder/grammar-fst.h\", \"lat/arctic-weight.h\", \"nnet/nnet-activation.h\",\n    \"nnet2/am-nnet.h\", \"nnet3/attention.h\", \"rnnlm/sampler.h\",\n    \"chain/chain-datastruct.h\", \"ivector/plda.h\", \"online2/online-endpoint.h\",\n    \"kws/kaldi-kws.h\", \"itf/options-itf.h\"\n] + (os.environ.get(\"cuda_compiler_version\", \"None\") != \"None\") * [\n    \"cudafeat/lane-desc.h\", \"cudadecoder/cuda-fst.h\"\n] + (not win) * [\n    \"online/online-decodable.h\"\n] %}\n\npackage:\n  name: kaldi\n  version: {{ version }}\n\nsource:\n  url: https://github.com/kaldi-asr/kaldi/archive/{{ commit }}.tar.gz\n  sha256: 153ae41654046f1997c247d3328c17124745b70be090fe1ee73442160e7b08c7\n  patches:\n    - sgmm2.patch\n\nbuild:\n  number: 0\n  skip: true  # [os.environ.get(\"cuda_compiler_version\", \"None\") == \"10.2\"]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n\noutputs:\n  - name: kaldi\n    build:\n      string: cuda{{ cuda_compiler_version | replace('.', '') }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [os.environ.get(\"cuda_compiler_version\", \"None\") != \"None\"]\n      string: cpu_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}                                      # [os.environ.get(\"cuda_compiler_version\", \"None\") == \"None\"]\n    script: build_kaldi.sh  # [not win]\n    script: bld_kaldi.bat   # [win]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('fortran') }}  # [not win]\n        - {{ compiler('cuda') }}  # [os.environ.get(\"cuda_compiler_version\", \"None\") != \"None\"]\n        - cmake\n        - ninja\n        - m2-patch  # [win]\n        - libtool  # [not win]\n        - automake  # [not win]\n      host:\n        - icu\n        - libblas\n        - libcblas\n        - liblapack\n        - liblapacke\n        - libtmglib\n        - magma           # [os.environ.get(\"cuda_compiler_version\", \"None\") != \"None\"]\n        - pthreads-win32  # [win]\n        - zlib\n      run:\n        - libblas\n        - libcblas\n        - liblapack\n        - liblapacke\n        - magma    # [os.environ.get(\"cuda_compiler_version\", \"None\") != \"None\"]\n        - openfst  # [not win and build_platform == target_platform]\n      run_exports:\n        - {{ pin_subpackage('kaldi', max_pin='x.x.x') }}\n\n    test:\n      # will also run run_test.py (checking the binaries)\n      commands:\n        # libraries:\n        {% for each_lib in kaldi_libraries %}\n            # shared\n            - test -f $PREFIX/lib/libkaldi-{{ each_lib }}.so               # [linux]\n            - test -f $PREFIX/lib/libkaldi-{{ each_lib }}.dylib            # [osx]\n            - if not exist %LIBRARY_BIN%\\kaldi-{{ each_lib }}.dll exit 1   # [win]\n\n            # absence of static libraries\n            - test ! -f $PREFIX/lib/libkaldi-{{ each_lib }}.a              # [not win]\n        {% endfor %}\n\n        # headers:\n        {% for each_header in kaldi_headers %}\n            - test -f $PREFIX/include/kaldi/{{ each_header }} || (echo \"{{ each_header }} not found\" && exit 1)  # [unix]\n            - if not exist %LIBRARY_INC%\\kaldi\\{{ \"\\\\\".join(each_header.split(\"/\")) }} exit 1                    # [win]\n        {% endfor %}\n\nabout:\n  home: http://kaldi-asr.org/\n  license: Apache-2.0\n  license_file: COPYING\n  summary: 'Kaldi is a toolkit for speech recognition written in C++.'\n  description: |\n    Kaldi is intended for use by speech recognition researchers. It is a framework rather than a library.\n  doc_url: http://kaldi-asr.org/doc\n  dev_url: https://github.com/kaldi-asr/kaldi\n\nextra:\n  recipe-maintainers:\n    - mmcauliffe\n    - mcernak\n",
 "rendered_recipe": {
  "about": {
   "description": "Kaldi is intended for use by speech recognition researchers. It is a framework rather than a library.\n",
   "dev_url": "https://github.com/kaldi-asr/kaldi",
   "doc_url": "http://kaldi-asr.org/doc",
   "home": "http://kaldi-asr.org/",
   "license": "Apache-2.0",
   "license_file": "COPYING",
   "summary": "Kaldi is a toolkit for speech recognition written in C++."
  },
  "build": {
   "number": "0",
   "string": "cpu_h1234567_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "mcernak",
    "mmcauliffe"
   ]
  },
  "package": {
   "name": "kaldi",
   "version": "5.5.1016"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "autoconf 2.69 pl5321hd708f79_11",
    "automake 1.16.5 pl5321ha770c72_0",
    "binutils_impl_linux-64 2.36.1 h193b22a_2",
    "binutils_linux-64 2.36 hf3e587d_9",
    "bzip2 1.0.8 h7f98852_4",
    "c-ares 1.18.1 h7f98852_0",
    "ca-certificates 2021.10.8 ha878542_0",
    "cmake 3.23.1 h5432695_0",
    "expat 2.4.8 h27087fc_0",
    "gcc_impl_linux-64 10.3.0 hf2f2afa_15",
    "gcc_linux-64 10.3.0 hc39de41_9",
    "gfortran_impl_linux-64 10.3.0 h73f4979_15",
    "gfortran_linux-64 10.3.0 hb09a455_9",
    "gxx_impl_linux-64 10.3.0 hf2f2afa_15",
    "gxx_linux-64 10.3.0 h2593f52_9",
    "kernel-headers_linux-64 2.6.32 he073ed8_15",
    "keyutils 1.6.1 h166bdaf_0",
    "krb5 1.19.3 h08a2579_0",
    "ld_impl_linux-64 2.36.1 hea4e1c9_2",
    "libcurl 7.82.0 h2283fc2_0",
    "libedit 3.1.20191231 he28a2e2_2",
    "libev 4.33 h516909a_1",
    "libgcc-devel_linux-64 10.3.0 he6cfe16_15",
    "libgcc-ng 11.2.0 h1d223b6_15",
    "libgfortran5 11.2.0 h5c6108e_15",
    "libgomp 11.2.0 h1d223b6_15",
    "libnghttp2 1.47.0 he49606f_0",
    "libnsl 2.0.0 h7f98852_0",
    "libsanitizer 10.3.0 h26c7422_15",
    "libssh2 1.10.0 ha35d2d1_2",
    "libstdcxx-devel_linux-64 10.3.0 he6cfe16_15",
    "libstdcxx-ng 11.2.0 he4da1e4_15",
    "libtool 2.4.6 h9c3ff4c_1008",
    "libuv 1.43.0 h7f98852_0",
    "libzlib 1.2.11 h166bdaf_1014",
    "lz4-c 1.9.3 h9c3ff4c_1",
    "m4 1.4.18 h516909a_1001",
    "ncurses 6.3 h27087fc_1",
    "ninja 1.10.2 h4bd325d_1",
    "openssl 3.0.2 h166bdaf_1",
    "perl 5.32.1 2_h7f98852_perl5",
    "rhash 1.4.1 h7f98852_0",
    "sysroot_linux-64 2.12 he073ed8_15",
    "xz 5.2.5 h516909a_1",
    "zlib 1.2.11 h166bdaf_1014",
    "zstd 1.5.2 ha95c52a_0"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "icu 69.1 h9c3ff4c_0",
    "libblas 3.8.0 11_h86c2bf4_netlib",
    "libcblas 3.8.0 11_h86c2bf4_netlib",
    "libgcc-ng 11.2.0 h1d223b6_15",
    "libgfortran-ng 11.2.0 h69a702a_15",
    "libgfortran5 11.2.0 h5c6108e_15",
    "libgomp 11.2.0 h1d223b6_15",
    "liblapack 3.8.0 11_h86c2bf4_netlib",
    "liblapacke 3.8.0 11_h86c2bf4_netlib",
    "libstdcxx-ng 11.2.0 he4da1e4_15",
    "libtmglib 3.9.0 5_h92ddd45_netlib",
    "libzlib 1.2.11 h166bdaf_1014",
    "zlib 1.2.11 h166bdaf_1014"
   ],
   "run": [
    "icu >=69.1,<70.0a0",
    "libblas >=3.8.0,<4.0a0",
    "libcblas >=3.8.0,<4.0a0",
    "libgcc-ng >=10.3.0",
    "libgfortran-ng",
    "libgfortran5 >=10.3.0",
    "liblapack >=3.8.0,<4.0a0",
    "liblapacke >=3.8.0,<4.0a0",
    "libstdcxx-ng >=10.3.0",
    "libtmglib >=3.9.0,<4.0a0",
    "libzlib >=1.2.11,<1.3.0a0",
    "openfst"
   ],
   "run_exports": [
    "kaldi >=5.5.1016,<5.5.1017.0a0"
   ]
  },
  "source": {
   "patches": [
    "sgmm2.patch"
   ],
   "sha256": "153ae41654046f1997c247d3328c17124745b70be090fe1ee73442160e7b08c7",
   "url": "https://github.com/kaldi-asr/kaldi/archive/5a37217e107bc9cb5e4e1ad2b290cecbdedfa799.tar.gz"
  }
 },
 "version": "5.5.1016"
}
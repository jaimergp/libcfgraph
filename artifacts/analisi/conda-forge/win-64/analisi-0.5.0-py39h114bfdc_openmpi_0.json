{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.21.9",
  "conda_private": false,
  "conda_version": "4.13.0",
  "description": "analisi is a framework for analyzing molecular dynamics simulations.\nIt can read lammps's binary format (other formats can be converted)\nand evaluate averages over the ergodic and equilibrated trajectory.\nVery heavy calculation can be performed in a parallel way using\nMPI, while multithreading is implemented also in the python interface.\nExample calculations are Steinhard (averaged) local order parameters,\nfull GK integral calculation with block analysis, traditional mean\nsquare displacement and a lot more...\n",
  "dev_url": "https://github.com/rikigigi/analisi",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "rikigigi"
   ]
  },
  "home": "https://github.com/rikigigi/analisi",
  "identifiers": [],
  "keywords": [],
  "license": "GPL-2.0-or-later",
  "license_file": [
   "LICENSE"
  ],
  "root_pkgs": [
   "anaconda-client 1.8.0 pyhd8ed1ab_0",
   "anyio 3.6.1 py39hcbf5309_0",
   "attrs 21.4.0 pyhd8ed1ab_0",
   "backports 1.0 py_2",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "beautifulsoup4 4.11.1 pyha770c72_0",
   "boa 0.11.0 pyha770c72_1",
   "brotlipy 0.7.0 py39h2bbff1b_1003",
   "bzip2 1.0.8 h8ffe710_4",
   "ca-certificates 2022.6.15 h5b45459_0",
   "certifi 2022.6.15 py39hcbf5309_0",
   "cffi 1.15.0 py39h2bbff1b_1",
   "chardet 5.0.0 py39hcbf5309_0",
   "charset-normalizer 2.0.4 pyhd3eb1b0_0",
   "click 8.1.3 py39hcbf5309_0",
   "clyent 1.2.2 py_1",
   "colorama 0.4.5 py39haa95532_0",
   "commonmark 0.9.1 py_0",
   "conda 4.13.0 py39hcbf5309_1",
   "conda-build 3.21.9 py39hcbf5309_1",
   "conda-env 2.6.0 1",
   "conda-forge-ci-setup 3.21.0 py39h8a92616_100",
   "conda-package-handling 1.8.1 py39h8cc25b3_0",
   "console_shortcut 0.1.1 4",
   "cryptography 37.0.1 py39h21b164f_0",
   "dataclasses 0.8 pyhc8e2a94_3",
   "filelock 3.7.1 pyhd8ed1ab_0",
   "future 0.18.2 py39hcbf5309_5",
   "glob2 0.7 py_0",
   "idna 3.3 pyhd3eb1b0_0",
   "importlib-metadata 4.11.4 py39hcbf5309_0",
   "importlib_resources 5.8.0 pyhd8ed1ab_0",
   "jinja2 3.1.2 pyhd8ed1ab_1",
   "joblib 1.1.0 pyhd8ed1ab_0",
   "json5 0.9.5 pyh9f0ad1d_0",
   "jsonschema 4.7.2 pyhd8ed1ab_0",
   "jupyter_core 4.11.1 py39hcbf5309_0",
   "krb5 1.19.3 h1176d77_0",
   "libarchive 3.5.2 hb45042f_3",
   "libcurl 7.83.1 h789b8ee_0",
   "libffi 3.4.2 h8ffe710_5",
   "libiconv 1.16 he774522_0",
   "liblief 0.11.5 h0e60522_1",
   "libmamba 0.24.0 h81a967f_1",
   "libmambapy 0.24.0 py39h4126fcf_1",
   "libsolv 0.7.22 h7755175_0",
   "libssh2 1.10.0 h680486a_2",
   "libxml2 2.9.14 hf5bbc77_3",
   "libzlib 1.2.12 h8ffe710_2",
   "lz4-c 1.9.3 h8ffe710_1",
   "lzo 2.10 he774522_1000",
   "m2-bash 4.3.042 5",
   "m2-ca-certificates 20150426 103",
   "m2-coreutils 8.25 102",
   "m2-curl 7.47.1 3",
   "m2-db 5.3.28 3",
   "m2-expat 2.1.1 2",
   "m2-findutils 4.6.0 2",
   "m2-gcc-libs 5.3.0 4",
   "m2-gdbm 1.11 4",
   "m2-git 2.8.1 2",
   "m2-gmp 6.1.0 3",
   "m2-gzip 1.7 2",
   "m2-heimdal 1.5.3 10",
   "m2-heimdal-libs 1.5.3 10",
   "m2-icu 56.1 2",
   "m2-info 6.0 2",
   "m2-less 481 2",
   "m2-libcrypt 1.3 2",
   "m2-libcurl 7.47.1 3",
   "m2-libdb 5.3.28 3",
   "m2-libedit 3.1 20150326",
   "m2-libexpat 2.1.1 2",
   "m2-libffi 3.2.1 2",
   "m2-libgdbm 1.11 4",
   "m2-libiconv 1.14 3",
   "m2-libidn 1.32 2",
   "m2-libintl 0.19.7 4",
   "m2-libmetalink 0.1.2 3",
   "m2-libopenssl 1.0.2.g 2",
   "m2-libp11-kit 0.23.2 2",
   "m2-libpcre 8.38 2",
   "m2-libreadline 6.3.008 8",
   "m2-libsqlite 3.10.0.0 2",
   "m2-libssh2 1.6.0 2",
   "m2-libtasn1 4.7 2",
   "m2-msys2-runtime 2.5.0.17080.65c939c 3",
   "m2-ncurses 6.0.20160220 2",
   "m2-openssh 7.1p2 2",
   "m2-openssl 1.0.2.g 2",
   "m2-p11-kit 0.23.2 2",
   "m2-patch 2.7.5 2",
   "m2-perl 5.22.1 2",
   "m2-perl-authen-sasl 2.16 3",
   "m2-perl-convert-binhex 1.123 3",
   "m2-perl-encode-locale 1.04 2",
   "m2-perl-error 0.17024 2",
   "m2-perl-file-listing 6.04 3",
   "m2-perl-html-parser 3.71 4",
   "m2-perl-html-tagset 3.20 3",
   "m2-perl-http-cookies 6.01 3",
   "m2-perl-http-daemon 6.01 3",
   "m2-perl-http-date 6.02 3",
   "m2-perl-http-message 6.06 3",
   "m2-perl-http-negotiate 6.01 3",
   "m2-perl-io-socket-ssl 2.016 2",
   "m2-perl-io-stringy 2.111 2",
   "m2-perl-libwww 6.13 2",
   "m2-perl-lwp-mediatypes 6.02 3",
   "m2-perl-mailtools 2.14 2",
   "m2-perl-mime-tools 5.506 2",
   "m2-perl-net-http 6.09 2",
   "m2-perl-net-smtp-ssl 1.02 2",
   "m2-perl-net-ssleay 1.72 2",
   "m2-perl-termreadkey 2.33 2",
   "m2-perl-timedate 2.30 3",
   "m2-perl-uri 1.68 2",
   "m2-perl-www-robotrules 6.02 3",
   "m2-sed 4.2.2 3",
   "m2-vim 7.4.1721 2",
   "m2-zlib 1.2.8 4",
   "m2w64-gcc-libgfortran 5.3.0 6",
   "m2w64-gcc-libs 5.3.0 7",
   "m2w64-gcc-libs-core 5.3.0 7",
   "m2w64-gmp 6.1.0 2",
   "m2w64-libwinpthread-git 5.0.0.4634.697f757 2",
   "mamba 0.24.0 py39hb3d9227_1",
   "markupsafe 2.1.1 py39hb82d6ee_1",
   "menuinst 1.4.18 py39h59b6b97_0",
   "msys2-conda-epoch 20160418 1",
   "nbformat 5.4.0 pyhd8ed1ab_0",
   "openssl 1.1.1q h8ffe710_0",
   "pip 22.2 pyhd8ed1ab_0",
   "pkginfo 1.8.3 pyhd8ed1ab_0",
   "powershell_shortcut 0.0.1 3",
   "prompt-toolkit 3.0.30 pyha770c72_0",
   "prompt_toolkit 3.0.30 hd8ed1ab_0",
   "psutil 5.9.1 py39hb82d6ee_0",
   "py-lief 0.11.5 py39h415ef7b_1",
   "pybind11-abi 4 hd8ed1ab_3",
   "pycosat 0.6.3 py39h2bbff1b_0",
   "pycparser 2.21 pyhd3eb1b0_0",
   "pygments 2.12.0 pyhd8ed1ab_0",
   "pyopenssl 22.0.0 pyhd3eb1b0_0",
   "pyrsistent 0.18.1 py39hb82d6ee_1",
   "pysocks 1.7.1 py39haa95532_0",
   "python 3.9.13 h9a09f29_0_cpython",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "python-fastjsonschema 2.16.1 pyhd8ed1ab_0",
   "python-libarchive-c 4.0 py39hcbf5309_1",
   "python_abi 3.9 2_cp39",
   "pytz 2022.1 pyhd8ed1ab_0",
   "pywin32 302 py39h2bbff1b_2",
   "pyyaml 6.0 py39hb82d6ee_4",
   "reproc 14.2.3 h8ffe710_0",
   "reproc-cpp 14.2.3 h0e60522_0",
   "requests 2.28.1 py39haa95532_0",
   "rich 12.5.1 pyhd8ed1ab_0",
   "ripgrep 13.0.0 h7f3b576_2",
   "ruamel.yaml 0.17.21 py39hb82d6ee_1",
   "ruamel.yaml.clib 0.2.6 py39hb82d6ee_1",
   "ruamel_yaml 0.15.100 py39h2bbff1b_0",
   "setuptools 61.2.0 py39haa95532_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "six 1.16.0 pyh6c4a22f_0",
   "sniffio 1.2.0 py39hcbf5309_3",
   "soupsieve 2.3.2.post1 pyhd8ed1ab_0",
   "sqlite 3.38.5 h2bbff1b_0",
   "tk 8.6.12 h8ffe710_0",
   "tqdm 4.64.0 py39haa95532_0",
   "traitlets 5.3.0 pyhd8ed1ab_0",
   "typing_extensions 4.3.0 pyha770c72_0",
   "tzdata 2022a hda174b7_0",
   "urllib3 1.26.9 py39haa95532_0",
   "vc 14.2 h21ff451_1",
   "vs2015_runtime 14.27.29016 h5e58377_2",
   "watchgod 0.8.2 pyhd8ed1ab_0",
   "wcwidth 0.2.5 pyh9f0ad1d_2",
   "wheel 0.37.1 pyhd3eb1b0_0",
   "wincertstore 0.2 py39haa95532_2",
   "win_inet_pton 1.1.0 py39haa95532_0",
   "xz 5.2.5 h62dcd97_1",
   "yaml 0.2.5 he774522_0",
   "yaml-cpp 0.7.0 h0e60522_1",
   "zipp 3.8.0 pyhd8ed1ab_0",
   "zlib 1.2.12 h8ffe710_2",
   "zstd 1.5.2 h6255e5f_2"
  ],
  "summary": "analisi: your Swiss Army Knife of molecular dynamics analysis",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "boost_cpp": "1.74.0",
  "c_compiler": "vs2019",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "vs2019",
  "extend_keys": [
   "pin_run_as_build",
   "ignore_build_only_deps",
   "extend_keys",
   "ignore_version"
  ],
  "fftw": "3",
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "mpi": "openmpi",
  "mpich": "4",
  "numpy": "1.16",
  "openmpi": "4",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "boost-cpp": {
    "max_pin": "x.x.x"
   },
   "fftw": {
    "max_pin": "x"
   },
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.9.* *_cpython",
  "python_impl": "cpython",
  "r_base": "3.4",
  "target_platform": "win-64",
  "vc": "14",
  "zip_keys": [
   [
    "python",
    "python_impl"
   ]
  ]
 },
 "files": [
  "Lib/site-packages/pyanalisi/__init__.py",
  "Lib/site-packages/pyanalisi/common.py",
  "Lib/site-packages/pyanalisi/pyanalisi.cp39-win_amd64.pyd",
  "Lib/site-packages/pyanalisi/pyanalisi.cp39-win_amd64.pyd.manifest",
  "Lib/site-packages/pyanalisi/pyanalisi.exp",
  "Lib/site-packages/pyanalisi/pyanalisi.lib"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py39h114bfdc_openmpi_0",
  "build_number": 0,
  "depends": [
   "boost-cpp >=1.74.0,<1.74.1.0a0",
   "fftw >=3.3.10,<4.0a0",
   "matplotlib-base",
   "numpy",
   "python >=3.9,<3.10.0a0",
   "python_abi 3.9.* *_cp39",
   "scipy",
   "vc >=14.2,<15",
   "vs2015_runtime >=14.29.30037"
  ],
  "license": "GPL-2.0-or-later",
  "name": "analisi",
  "platform": "win",
  "subdir": "win-64",
  "timestamp": 1658755679617,
  "version": "0.5.0"
 },
 "metadata_version": 1,
 "name": "analisi",
 "raw_recipe": "{% set name = \"analisi\" %}\n{% set version = \"0.5.0\" %}\n{% set build = 0 %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  git_url: https://github.com/rikigigi/analisi.git\n  git_rev: v{{ version }}\n  git_depth: 1\n\n\nbuild:\n  number: {{ build }}\n  skip: true  # [ python_impl == 'pypy' ]\n  string: py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ mpi }}_{{ build }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - make\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - {{ mpi }}                              # [build_platform != target_platform and not win]\n\n  host:\n    - python\n    - {{ mpi }}        # [ not win ]\n    - fftw\n    - boost-cpp\n    - eigen\n    - xdrfile          # [ not win ]\n  run:\n    - python\n    - {{ mpi }}        # [ not win ]\n    - fftw\n    - boost-cpp\n    - xdrfile          # [ not win ]\n    - matplotlib-base\n    - numpy\n    - scipy\n\ntest:\n  imports:\n    - pyanalisi\n  requires:\n    - pytest\n    - pandas\n    - pytest-regressions\n    - matplotlib\n    - numpy\n    - scipy\n    - testbook\n    - k3d\n  source_files:\n    - tests\n    - tools\n    - notebooks\n  commands:\n    - export OMPI_MCA_plm=isolated                          # [not win and mpi == \"openmpi\"]\n    - export OMPI_MCA_btl_vader_single_copy_mechanism=none  # [not win and mpi == \"openmpi\"]\n    - export OMPI_MCA_rmaps_base_oversubscribe=yes          # [not win and mpi == \"openmpi\"]\n    - export OMPI_ALLOW_RUN_AS_ROOT=1                       # [not win and mpi == \"openmpi\"]\n    - export OMPI_ALLOW_RUN_AS_ROOT_CONFIRM=1               # [not win and mpi == \"openmpi\"]\n    - analisi_serial --help                                 # [not win]\n    - mpiexec -n 1 analisi --help                           # [not win]\n    - pytest -sv tests\nabout:\n  home: https://github.com/rikigigi/analisi\n  license: GPL-2.0-or-later\n  license_file:\n    - LICENSE\n\n  summary: 'analisi: your Swiss Army Knife of molecular dynamics analysis'\n  description: |\n    analisi is a framework for analyzing molecular dynamics simulations.\n    It can read lammps's binary format (other formats can be converted)\n    and evaluate averages over the ergodic and equilibrated trajectory. \n    Very heavy calculation can be performed in a parallel way using \n    MPI, while multithreading is implemented also in the python interface.\n    Example calculations are Steinhard (averaged) local order parameters,\n    full GK integral calculation with block analysis, traditional mean\n    square displacement and a lot more...\n\n  dev_url: https://github.com/rikigigi/analisi\n\nextra:\n  recipe-maintainers:\n    - rikigigi\n",
 "rendered_recipe": {
  "about": {
   "description": "analisi is a framework for analyzing molecular dynamics simulations.\nIt can read lammps's binary format (other formats can be converted)\nand evaluate averages over the ergodic and equilibrated trajectory.\nVery heavy calculation can be performed in a parallel way using\nMPI, while multithreading is implemented also in the python interface.\nExample calculations are Steinhard (averaged) local order parameters,\nfull GK integral calculation with block analysis, traditional mean\nsquare displacement and a lot more...\n",
   "dev_url": "https://github.com/rikigigi/analisi",
   "home": "https://github.com/rikigigi/analisi",
   "license": "GPL-2.0-or-later",
   "license_file": [
    "LICENSE"
   ],
   "summary": "analisi: your Swiss Army Knife of molecular dynamics analysis"
  },
  "build": {
   "number": "0",
   "string": "py39h114bfdc_openmpi_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "rikigigi"
   ]
  },
  "package": {
   "name": "analisi",
   "version": "0.5.0"
  },
  "requirements": {
   "build": [
    "cmake 3.23.2 h39d44d4_0",
    "m2w64-gcc-libgfortran 5.3.0 6",
    "m2w64-gcc-libs 5.3.0 7",
    "m2w64-gcc-libs-core 5.3.0 7",
    "m2w64-gmp 6.1.0 2",
    "m2w64-libwinpthread-git 5.0.0.4634.697f757 2",
    "make 4.3 h3d2af85_1",
    "msys2-conda-epoch 20160418 1",
    "ucrt 10.0.20348.0 h57928b3_0",
    "vs2015_runtime 14.29.30037 h902a5da_6",
    "vs2019_win-64 19.29.30037 h774bd60_6",
    "vswhere 3.0.3 h57928b3_0"
   ],
   "host": [
    "boost-cpp 1.74.0 h9f4b32c_8",
    "bzip2 1.0.8 h8ffe710_4",
    "ca-certificates 2022.6.15 h5b45459_0",
    "eigen 3.4.0 h2d74725_0",
    "fftw 3.3.10 nompi_h77347bd_102",
    "libffi 3.4.2 h8ffe710_5",
    "libzlib 1.2.12 h8ffe710_2",
    "lz4-c 1.9.3 h8ffe710_1",
    "openssl 3.0.5 h8ffe710_0",
    "python 3.9.13 hcf16a7b_0_cpython",
    "sqlite 3.39.2 h8ffe710_0",
    "tk 8.6.12 h8ffe710_0",
    "tzdata 2022a h191b570_0",
    "ucrt 10.0.20348.0 h57928b3_0",
    "vc 14.2 hb210afc_6",
    "vs2015_runtime 14.29.30037 h902a5da_6",
    "xz 5.2.5 h62dcd97_1",
    "zstd 1.5.2 h6255e5f_2"
   ],
   "run": [
    "boost-cpp >=1.74.0,<1.74.1.0a0",
    "fftw >=3.3.10,<4.0a0",
    "matplotlib-base",
    "numpy",
    "python >=3.9,<3.10.0a0",
    "python_abi 3.9.* *_cp39",
    "scipy",
    "vc >=14.2,<15",
    "vs2015_runtime >=14.29.30037"
   ]
  },
  "source": {
   "git_depth": "1",
   "git_rev": "v0.5.0",
   "git_url": "https://github.com/rikigigi/analisi.git"
  },
  "test": {
   "commands": [
    "pytest -sv tests"
   ],
   "imports": [
    "pyanalisi"
   ],
   "requires": [
    "k3d",
    "matplotlib",
    "numpy",
    "pandas",
    "pytest",
    "pytest-regressions",
    "scipy",
    "testbook"
   ],
   "source_files": [
    "notebooks",
    "tests",
    "tools"
   ]
  }
 },
 "version": "0.5.0"
}
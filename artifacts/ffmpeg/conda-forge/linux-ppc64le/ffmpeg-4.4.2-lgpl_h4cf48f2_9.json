{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.22.0",
  "conda_private": false,
  "conda_version": "22.9.0",
  "dev_url": "https://git.ffmpeg.org/ffmpeg.git",
  "doc_url": "https://ffmpeg.org/documentation.html",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "danielballan",
    "jakirkham",
    "183amir",
    "patricksnape",
    "ocefpaf",
    "sdvillal",
    "carlodri",
    "benjaminrwilson",
    "matthiasdiener",
    "h-vetinari"
   ]
  },
  "home": "http://www.ffmpeg.org/",
  "identifiers": [],
  "keywords": [],
  "license": "LGPL-2.1-or-later",
  "license_family": "LGPL",
  "license_file": [
   "COPYING.LGPLv2.1",
   "COPYING.LGPLv3"
  ],
  "root_pkgs": [
   "pkginfo 1.8.3 pyhd8ed1ab_0",
   "tqdm 4.64.1 pyhd8ed1ab_0",
   "urllib3 1.26.11 pyhd8ed1ab_0",
   "libedit 3.1.20191231 he28a2e2_2",
   "backports 1.0 py_2",
   "libzlib 1.2.13 h166bdaf_4",
   "icu 70.1 h27087fc_0",
   "_openmp_mutex 4.5 2_gnu",
   "libmambapy 0.27.0 py310hab0e683_0",
   "pkgutil-resolve-name 1.3.10 pyhd8ed1ab_0",
   "conda-package-handling 1.9.0 py310h5764c6d_0",
   "yaml-cpp 0.7.0 h27087fc_2",
   "libssh2 1.10.0 haa6b8db_3",
   "pyyaml 6.0 py310h5764c6d_4",
   "attrs 22.1.0 pyh71513ae_1",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "bzip2 1.0.8 h7f98852_4",
   "requests 2.28.1 pyhd8ed1ab_1",
   "libsqlite 3.39.4 h753d276_0",
   "certifi 2022.9.24 pyhd8ed1ab_0",
   "watchgod 0.8.2 pyhd8ed1ab_0",
   "wheel 0.37.1 pyhd8ed1ab_0",
   "sniffio 1.3.0 pyhd8ed1ab_0",
   "pytz 2022.4 pyhd8ed1ab_0",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "libstdcxx-ng 12.1.0 ha89aaad_17",
   "pycosat 0.6.3 py310h5764c6d_1010",
   "conda-build 3.22.0 py310hff52083_2",
   "setuptools 65.5.0 pyhd8ed1ab_0",
   "patchelf 0.15.0 h58526e2_0",
   "pcre2 10.37 hc3806b6_1",
   "patch 2.7.6 h7f98852_1002",
   "ca-certificates 2022.9.24 ha878542_0",
   "libgomp 12.1.0 h8d9b700_17",
   "markupsafe 2.1.1 py310h5764c6d_1",
   "jupyter_core 4.11.1 py310hff52083_0",
   "libgcc-ng 12.1.0 h8d9b700_17",
   "colorama 0.4.5 pyhd8ed1ab_0",
   "libmamba 0.27.0 h0dd8ff0_0",
   "toolz 0.12.0 pyhd8ed1ab_0",
   "ripgrep 13.0.0 h2f28480_2",
   "ld_impl_linux-64 2.36.1 hea4e1c9_2",
   "libcurl 7.85.0 h7bff187_0",
   "charset-normalizer 2.1.1 pyhd8ed1ab_0",
   "xz 5.2.6 h166bdaf_0",
   "keyutils 1.6.1 h166bdaf_0",
   "json5 0.9.5 pyh9f0ad1d_0",
   "libnsl 2.0.0 h7f98852_0",
   "krb5 1.19.3 h3790be6_0",
   "pycparser 2.21 pyhd8ed1ab_0",
   "lz4-c 1.9.3 h9c3ff4c_1",
   "libev 4.33 h516909a_1",
   "commonmark 0.9.1 py_0",
   "readline 8.1.2 h0f457ee_0",
   "jsonschema 4.16.0 pyhd8ed1ab_0",
   "mamba 0.27.0 py310hf87f941_0",
   "chardet 5.0.0 py310hff52083_0",
   "conda 22.9.0 py310hff52083_1",
   "python 3.10.6 h582c2e5_0_cpython",
   "pybind11-abi 4 hd8ed1ab_3",
   "importlib_resources 5.10.0 pyhd8ed1ab_0",
   "expat 2.4.9 h27087fc_0",
   "libnghttp2 1.47.0 hdcd2b5c_1",
   "wcwidth 0.2.5 pyh9f0ad1d_2",
   "soupsieve 2.3.2.post1 pyhd8ed1ab_0",
   "importlib-metadata 4.11.4 py310hff52083_0",
   "glob2 0.7 py_0",
   "traitlets 5.4.0 pyhd8ed1ab_0",
   "python-fastjsonschema 2.16.2 pyhd8ed1ab_0",
   "libarchive 3.5.2 hb890918_3",
   "joblib 1.2.0 pyhd8ed1ab_0",
   "ncurses 6.3 h27087fc_1",
   "anyio 3.6.1 pyhd8ed1ab_1",
   "pysocks 1.7.1 pyha2e5f31_6",
   "cryptography 38.0.2 py310h597c629_0",
   "libiconv 1.17 h166bdaf_0",
   "rich 12.6.0 pyhd8ed1ab_0",
   "psutil 5.9.2 py310h5764c6d_0",
   "tk 8.6.12 h27826a3_0",
   "libuuid 2.32.1 h7f98852_1000",
   "libxml2 2.9.14 h22db469_4",
   "libffi 3.4.2 h7f98852_5",
   "zipp 3.9.0 pyhd8ed1ab_0",
   "c-ares 1.18.1 h7f98852_0",
   "su-exec 0.2 h166bdaf_1003",
   "reproc 14.2.3 h7f98852_0",
   "zstd 1.5.2 h6239696_4",
   "gettext 0.21.1 h27087fc_0",
   "openssl 1.1.1q h166bdaf_0",
   "ruamel.yaml.clib 0.2.6 py310h5764c6d_1",
   "py-lief 0.12.2 py310hd8f1fbe_0",
   "six 1.16.0 pyh6c4a22f_0",
   "idna 3.4 pyhd8ed1ab_0",
   "cffi 1.15.1 py310h255011f_0",
   "typing_extensions 4.4.0 pyha770c72_0",
   "beautifulsoup4 4.11.1 pyha770c72_0",
   "perl 5.32.1 2_h7f98852_perl5",
   "lzo 2.10 h516909a_1000",
   "ruamel.yaml 0.17.21 py310h5764c6d_1",
   "pygments 2.13.0 pyhd8ed1ab_0",
   "ruamel_yaml 0.15.80 py310h5764c6d_1007",
   "python-libarchive-c 4.0 py310hff52083_1",
   "nbformat 5.7.0 pyhd8ed1ab_0",
   "tzdata 2022e h191b570_0",
   "brotlipy 0.7.0 py310h5764c6d_1004",
   "pyopenssl 22.1.0 pyhd8ed1ab_0",
   "python_abi 3.10 2_cp310",
   "reproc-cpp 14.2.3 h9c3ff4c_0",
   "anaconda-client 1.8.0 pyhd8ed1ab_0",
   "jinja2 3.1.2 pyhd8ed1ab_1",
   "pyrsistent 0.18.1 py310h5764c6d_1",
   "future 0.18.2 py310hff52083_5",
   "filelock 3.8.0 pyhd8ed1ab_0",
   "_libgcc_mutex 0.1 conda_forge",
   "tini 0.19.0 h166bdaf_1",
   "clyent 1.2.2 py_1",
   "dataclasses 0.8 pyhc8e2a94_3",
   "toml 0.10.2 pyhd8ed1ab_0",
   "libsolv 0.7.22 h6239696_0",
   "prompt-toolkit 3.0.31 pyha770c72_0",
   "pip 22.3 pyhd8ed1ab_0",
   "yaml 0.2.5 h7f98852_2",
   "curl 7.85.0 h7bff187_0",
   "git 2.38.0 pl5321h5fbbf19_0",
   "prompt_toolkit 3.0.31 hd8ed1ab_0",
   "boa 0.12.0 pyha770c72_4",
   "liblief 0.12.2 h27087fc_0",
   "conda-env 2.6.0 1",
   "oniguruma 6.9.8 h166bdaf_0",
   "click 8.1.3 py310hff52083_0",
   "jq 1.6 h36c2ea0_1000",
   "conda-forge-ci-setup 3.21.0 py310hce54274_100",
   "shyaml 0.6.2 pyhd3deb0d_0"
  ],
  "summary": "Cross-platform solution to record, convert and stream audio and video.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "CMAKE_CROSSCOMPILING_EMULATOR": "/usr/bin/qemu-ppc64le-static",
  "CROSSCOMPILING_EMULATOR": "/usr/bin/qemu-ppc64le-static",
  "aom": "3.5",
  "build_platform": "linux-64",
  "bzip2": "1",
  "c_compiler": "gcc",
  "c_compiler_version": "10",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "10",
  "docker_image": "quay.io/condaforge/linux-anvil-cos7-x86_64",
  "extend_keys": [
   "pin_run_as_build",
   "extend_keys",
   "ignore_build_only_deps",
   "ignore_version"
  ],
  "fontconfig": "2",
  "fortran_compiler": "gfortran",
  "freetype": "2",
  "gmp": "6",
  "gnutls": "3.7",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "libxml2": "2.9",
  "license_family": "lgpl",
  "lua": "5",
  "numpy": "1.16",
  "openh264": "2.3.1",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.10",
  "r_base": "3.5",
  "svt_av1": "1.3.0",
  "target_platform": "linux-ppc64le",
  "x264": "1!164.*",
  "x265": "3.5",
  "zip_keys": [
   [
    "c_compiler_version",
    "cxx_compiler_version"
   ]
  ],
  "zlib": "1.2"
 },
 "files": [
  "bin/ffmpeg",
  "bin/ffprobe",
  "include/libavcodec/ac3_parser.h",
  "include/libavcodec/adts_parser.h",
  "include/libavcodec/avcodec.h",
  "include/libavcodec/avdct.h",
  "include/libavcodec/avfft.h",
  "include/libavcodec/bsf.h",
  "include/libavcodec/codec.h",
  "include/libavcodec/codec_desc.h",
  "include/libavcodec/codec_id.h",
  "include/libavcodec/codec_par.h",
  "include/libavcodec/d3d11va.h",
  "include/libavcodec/dirac.h",
  "include/libavcodec/dv_profile.h",
  "include/libavcodec/dxva2.h",
  "include/libavcodec/jni.h",
  "include/libavcodec/mediacodec.h",
  "include/libavcodec/packet.h",
  "include/libavcodec/qsv.h",
  "include/libavcodec/vaapi.h",
  "include/libavcodec/vdpau.h",
  "include/libavcodec/version.h",
  "include/libavcodec/videotoolbox.h",
  "include/libavcodec/vorbis_parser.h",
  "include/libavcodec/xvmc.h",
  "include/libavdevice/avdevice.h",
  "include/libavdevice/version.h",
  "include/libavfilter/avfilter.h",
  "include/libavfilter/buffersink.h",
  "include/libavfilter/buffersrc.h",
  "include/libavfilter/version.h",
  "include/libavformat/avformat.h",
  "include/libavformat/avio.h",
  "include/libavformat/version.h",
  "include/libavresample/avresample.h",
  "include/libavresample/version.h",
  "include/libavutil/adler32.h",
  "include/libavutil/aes.h",
  "include/libavutil/aes_ctr.h",
  "include/libavutil/attributes.h",
  "include/libavutil/audio_fifo.h",
  "include/libavutil/avassert.h",
  "include/libavutil/avconfig.h",
  "include/libavutil/avstring.h",
  "include/libavutil/avutil.h",
  "include/libavutil/base64.h",
  "include/libavutil/blowfish.h",
  "include/libavutil/bprint.h",
  "include/libavutil/bswap.h",
  "include/libavutil/buffer.h",
  "include/libavutil/camellia.h",
  "include/libavutil/cast5.h",
  "include/libavutil/channel_layout.h",
  "include/libavutil/common.h",
  "include/libavutil/cpu.h",
  "include/libavutil/crc.h",
  "include/libavutil/des.h",
  "include/libavutil/dict.h",
  "include/libavutil/display.h",
  "include/libavutil/dovi_meta.h",
  "include/libavutil/downmix_info.h",
  "include/libavutil/encryption_info.h",
  "include/libavutil/error.h",
  "include/libavutil/eval.h",
  "include/libavutil/ffversion.h",
  "include/libavutil/fifo.h",
  "include/libavutil/file.h",
  "include/libavutil/film_grain_params.h",
  "include/libavutil/frame.h",
  "include/libavutil/hash.h",
  "include/libavutil/hdr_dynamic_metadata.h",
  "include/libavutil/hmac.h",
  "include/libavutil/hwcontext.h",
  "include/libavutil/hwcontext_cuda.h",
  "include/libavutil/hwcontext_d3d11va.h",
  "include/libavutil/hwcontext_drm.h",
  "include/libavutil/hwcontext_dxva2.h",
  "include/libavutil/hwcontext_mediacodec.h",
  "include/libavutil/hwcontext_opencl.h",
  "include/libavutil/hwcontext_qsv.h",
  "include/libavutil/hwcontext_vaapi.h",
  "include/libavutil/hwcontext_vdpau.h",
  "include/libavutil/hwcontext_videotoolbox.h",
  "include/libavutil/hwcontext_vulkan.h",
  "include/libavutil/imgutils.h",
  "include/libavutil/intfloat.h",
  "include/libavutil/intreadwrite.h",
  "include/libavutil/lfg.h",
  "include/libavutil/log.h",
  "include/libavutil/lzo.h",
  "include/libavutil/macros.h",
  "include/libavutil/mastering_display_metadata.h",
  "include/libavutil/mathematics.h",
  "include/libavutil/md5.h",
  "include/libavutil/mem.h",
  "include/libavutil/motion_vector.h",
  "include/libavutil/murmur3.h",
  "include/libavutil/opt.h",
  "include/libavutil/parseutils.h",
  "include/libavutil/pixdesc.h",
  "include/libavutil/pixelutils.h",
  "include/libavutil/pixfmt.h",
  "include/libavutil/random_seed.h",
  "include/libavutil/rational.h",
  "include/libavutil/rc4.h",
  "include/libavutil/replaygain.h",
  "include/libavutil/ripemd.h",
  "include/libavutil/samplefmt.h",
  "include/libavutil/sha.h",
  "include/libavutil/sha512.h",
  "include/libavutil/spherical.h",
  "include/libavutil/stereo3d.h",
  "include/libavutil/tea.h",
  "include/libavutil/threadmessage.h",
  "include/libavutil/time.h",
  "include/libavutil/timecode.h",
  "include/libavutil/timestamp.h",
  "include/libavutil/tree.h",
  "include/libavutil/twofish.h",
  "include/libavutil/tx.h",
  "include/libavutil/version.h",
  "include/libavutil/video_enc_params.h",
  "include/libavutil/xtea.h",
  "include/libswresample/swresample.h",
  "include/libswresample/version.h",
  "include/libswscale/swscale.h",
  "include/libswscale/version.h",
  "lib/libavcodec.so",
  "lib/libavcodec.so.58",
  "lib/libavcodec.so.58.134.100",
  "lib/libavdevice.so",
  "lib/libavdevice.so.58",
  "lib/libavdevice.so.58.13.100",
  "lib/libavfilter.so",
  "lib/libavfilter.so.7",
  "lib/libavfilter.so.7.110.100",
  "lib/libavformat.so",
  "lib/libavformat.so.58",
  "lib/libavformat.so.58.76.100",
  "lib/libavresample.so",
  "lib/libavresample.so.4",
  "lib/libavresample.so.4.0.0",
  "lib/libavutil.so",
  "lib/libavutil.so.56",
  "lib/libavutil.so.56.70.100",
  "lib/libswresample.so",
  "lib/libswresample.so.3",
  "lib/libswresample.so.3.9.100",
  "lib/libswscale.so",
  "lib/libswscale.so.5",
  "lib/libswscale.so.5.9.100",
  "lib/pkgconfig/libavcodec.pc",
  "lib/pkgconfig/libavdevice.pc",
  "lib/pkgconfig/libavfilter.pc",
  "lib/pkgconfig/libavformat.pc",
  "lib/pkgconfig/libavresample.pc",
  "lib/pkgconfig/libavutil.pc",
  "lib/pkgconfig/libswresample.pc",
  "lib/pkgconfig/libswscale.pc",
  "share/ffmpeg/examples/Makefile",
  "share/ffmpeg/examples/README",
  "share/ffmpeg/examples/avio_list_dir.c",
  "share/ffmpeg/examples/avio_reading.c",
  "share/ffmpeg/examples/decode_audio.c",
  "share/ffmpeg/examples/decode_video.c",
  "share/ffmpeg/examples/demuxing_decoding.c",
  "share/ffmpeg/examples/encode_audio.c",
  "share/ffmpeg/examples/encode_video.c",
  "share/ffmpeg/examples/extract_mvs.c",
  "share/ffmpeg/examples/filter_audio.c",
  "share/ffmpeg/examples/filtering_audio.c",
  "share/ffmpeg/examples/filtering_video.c",
  "share/ffmpeg/examples/http_multiclient.c",
  "share/ffmpeg/examples/hw_decode.c",
  "share/ffmpeg/examples/metadata.c",
  "share/ffmpeg/examples/muxing.c",
  "share/ffmpeg/examples/qsvdec.c",
  "share/ffmpeg/examples/remuxing.c",
  "share/ffmpeg/examples/resampling_audio.c",
  "share/ffmpeg/examples/scaling_video.c",
  "share/ffmpeg/examples/transcode_aac.c",
  "share/ffmpeg/examples/transcoding.c",
  "share/ffmpeg/examples/vaapi_encode.c",
  "share/ffmpeg/examples/vaapi_transcode.c",
  "share/ffmpeg/ffprobe.xsd",
  "share/ffmpeg/libvpx-1080p.ffpreset",
  "share/ffmpeg/libvpx-1080p50_60.ffpreset",
  "share/ffmpeg/libvpx-360p.ffpreset",
  "share/ffmpeg/libvpx-720p.ffpreset",
  "share/ffmpeg/libvpx-720p50_60.ffpreset"
 ],
 "index": {
  "arch": "ppc64le",
  "build": "lgpl_h4cf48f2_9",
  "build_number": 9,
  "depends": [
   "aom >=3.5.0,<3.6.0a0",
   "bzip2 >=1.0.8,<2.0a0",
   "fontconfig >=2.14.0,<3.0a0",
   "fonts-conda-ecosystem",
   "freetype >=2.12.1,<3.0a0",
   "gmp >=6.2.1,<7.0a0",
   "gnutls >=3.7.8,<3.8.0a0",
   "lame >=3.100,<3.101.0a0",
   "libgcc-ng >=12",
   "libstdcxx-ng >=12",
   "libvpx >=1.11.0,<1.12.0a0",
   "libxml2 >=2.9.14,<2.10.0a0",
   "libzlib >=1.2.13,<1.3.0a0",
   "openh264 >=2.3.1,<2.3.2.0a0",
   "svt-av1 >=1.3.0,<1.3.1.0a0"
  ],
  "license": "LGPL-2.1-or-later",
  "license_family": "LGPL",
  "name": "ffmpeg",
  "platform": "linux",
  "subdir": "linux-ppc64le",
  "timestamp": 1666310917636,
  "version": "4.4.2"
 },
 "metadata_version": 1,
 "name": "ffmpeg",
 "raw_recipe": "{% set version = \"4.4.2\" %} # semver: (x.y.z)\n{% set x,y,z = version.split('.') %}\n{% set version_ffmpeg_style = x ~ '.' ~ y if z == \"0\" else version %}\n\npackage:\n  name: ffmpeg\n  version: {{ version }}\n\nsource:\n  url: https://ffmpeg.org/releases/ffmpeg-{{ version_ffmpeg_style }}.tar.gz\n  sha256: 058efd4b6459bc9df54186f17a989d0af619a793aa62f07e96b88632706d6a17\n  patches:\n    - patches/TARGET_OS_OSX.patch     # [osx]\n    - patches/pkgconfig_generate_windows_llvm.patch  # [win]\n\n{% set build = 9 %}\n{% if license_family == 'gpl' %}\n    {% set build = build + 100 %}\n{% endif %}\n\nbuild:\n  number: {{ build }}\n  string: {{ license_family }}_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}\n  run_exports:\n  # seems to be major version compatibility\n  # https://abi-laboratory.pro/tracker/timeline/ffmpeg/\n    - {{ pin_subpackage('ffmpeg', max_pin='x') }}\n\nrequirements:\n  build:\n    - {{ compiler(\"c\") }}\n    - {{ compiler(\"cxx\") }}\n    # clangxx is required for support of the nvidia encoders and decoders\n    - clangxx  # [linux64]\n    - autotools_clang_conda  # [win]\n    - pkg-config\n    - libtool  # [not win]\n    - nasm  # [not (osx and x86_64)]\n    # osx_64 needs yasm due to https://stackoverflow.com/questions/58796267/building-for-macos-but-linking-in-object-file-built-for-free-standing\n    - yasm  # [osx and x86_64]\n    - lame  # [not win]\n    - make  # [not win]\n    - m2-sed  # [win]\n  host:\n    - bzip2\n    - freetype\n    - fontconfig\n    - gnutls  # [not win]\n    - libiconv  # [osx]\n    - libxml2\n    {% if license_family == 'gpl' %}\n    - x264\n    - x265\n    {% endif %}\n    - libvpx  # [not win]\n    - zlib\n    - openh264\n    - lame  # [not win]\n    - gmp  # [unix]\n    - libva  # [linux64]\n    - aom\n    - svt-av1\n    - ffnvcodec-headers  # [linux64 or win]\n\n{% set grep = \"grep\" %}     # [unix]\n{% set grep = \"findstr\" %}  # [win]\n\ntest:\n  commands:\n    - ffmpeg --help\n    - ffmpeg -hide_banner -codecs\n    - ffmpeg -hide_banner -protocols\n    - ffmpeg -hide_banner -protocols | {{ grep }} \"https\"\n    - ffmpeg -hide_banner -codecs | {{ grep }} \"libmp3lame\"       # [unix]\n    - ffmpeg -hide_banner -codecs | {{ grep }} \"DEVI.S\\ zlib\"\n    - ffmpeg -hide_banner -codecs | {{ grep }} \"DEV.LS h264\"\n    - ffmpeg -hide_banner -codecs | {{ grep }} \"libopenh264\"\n    - ffmpeg -hide_banner -codecs | {{ grep }} \"vaapi\"            # [linux64]\n    - ffmpeg -hide_banner -codecs | {{ grep }} \"libaom\"\n    - ffmpeg -hide_banner -codecs | {{ grep }} \"libsvtav1\"\n    # Verify dynamic libraries on all systems\n    {% set ffmpeg_libs = [\n        \"avdevice\",\n        \"swresample\",\n        \"avfilter\",\n        \"avcodec\",\n        \"avformat\",\n        \"swscale\",\n        \"avresample\",\n        \"avutil\",\n    ] %}\n    {% for each_ffmpeg_lib in ffmpeg_libs %}\n    - test -f $PREFIX/lib/lib{{ each_ffmpeg_lib }}${SHLIB_EXT}  # [unix]\n    - if not exist %PREFIX%\\\\Library\\\\lib\\\\{{ each_ffmpeg_lib }}.lib exit 1  # [win]\n    {% endfor %}\n    # Windows dynamic libraries have a suffix\n    {% set ffmpeg_libs = [\n        \"avdevice-58\",\n        \"swresample-3\",\n        \"avfilter-7\",\n        \"avcodec-58\",\n        \"avformat-58\",\n        \"swscale-5\",\n        \"avresample-4\",\n        \"avutil-56\",\n    ] %}\n    {% for each_ffmpeg_lib in ffmpeg_libs %}\n    - if not exist %PREFIX%\\\\Library\\\\bin\\\\{{ each_ffmpeg_lib }}.dll exit 1  # [win]\n    {% endfor %}\n    {%- if license_family == 'gpl' %}\n    - ffmpeg -hide_banner -buildconf | {{ grep }} \"enable-gpl\"\n    - ffmpeg -hide_banner -codecs | {{ grep }} \"libx264\"\n    - ffmpeg -hide_banner -codecs | {{ grep }} \"libx265\"\n    - test -f $PREFIX/lib/libpostproc${SHLIB_EXT}         # [unix]\n    - if not exist %PREFIX%\\\\Library\\\\bin\\\\postproc-55.dll exit 1  # [win]\n    - if not exist %PREFIX%\\\\Library\\\\lib\\\\postproc.lib exit 1  # [win]\n    # https://trac.ffmpeg.org/wiki/Null\n    - ffmpeg -hide_banner -f lavfi -i nullsrc=s=256x256:d=8 -vcodec libx264 -f null -\n    - ffmpeg -hide_banner -f lavfi -i nullsrc=s=256x256:d=8 -vcodec libx265 -f null -\n    {%- endif %}\n    {%- if license_family == 'lgpl' %}\n    - ffmpeg -hide_banner -buildconf | {{ grep }} \"disable-gpl\"\n    - test ! $(ffmpeg -hide_banner -codecs | grep \"libx264\")     # [unix]\n    - test ! $(ffmpeg -hide_banner -codecs | grep \"libx265\")     # [unix]\n    - test ! -f $PREFIX/lib/libpostproc${SHLIB_EXT}              # [unix]\n    - if exist %PREFIX%\\\\Library\\\\bin\\\\postproc-55.dll exit 1    # [win]\n    - if exist %PREFIX%\\\\Library\\\\lib\\\\postproc.lib exit 1       # [win]\n    {%- endif %}\n    # Verify nvidia codecs on linux\n    {% set nvcodecs = [\n        \"nvenc\",\n        \"h264_nvenc\",\n        \"hevc_nvenc\",\n        \"mjpeg_cuvid\",\n        \"mpeg1_cuvid\",\n        \"mpeg2_cuvid\",\n        \"mpeg4_cuvid\",\n        \"vc1_cuvid\",\n        \"vp8_cuvid\",\n        \"vp9_cuvid\"\n    ] %}\n    {% for nvcodec in nvcodecs %}\n    # Make sure to include a space in there to ensure we get an exact match\n    - ffmpeg -hide_banner -codecs | {{ grep }} \" {{ nvcodec }} \"  # [linux64 or win]\n    {% endfor %}\n    # https://trac.ffmpeg.org/wiki/Null\n    - ffmpeg -hide_banner -f lavfi -i nullsrc=s=256x256:d=8 -vcodec libopenh264 -f null -\n\nabout:\n  home: http://www.ffmpeg.org/\n  license: GPL-2.0-or-later     # [license_family=='gpl']\n  license: LGPL-2.1-or-later    # [license_family=='lgpl']\n  license_file:\n    - COPYING.GPLv2            # [license_family=='gpl']\n    - COPYING.GPLv3            # [license_family=='gpl']\n    - COPYING.LGPLv2.1         # [license_family=='lgpl']\n    - COPYING.LGPLv3           # [license_family=='lgpl']\n  license_family: GPL          # [license_family=='gpl']\n  license_family: LGPL         # [license_family=='lgpl']\n  summary: Cross-platform solution to record, convert and stream audio and video.\n  dev_url: https://git.ffmpeg.org/ffmpeg.git\n  doc_url: https://ffmpeg.org/documentation.html\n\nextra:\n  recipe-maintainers:\n    - danielballan\n    - jakirkham\n    - 183amir\n    - patricksnape\n    - ocefpaf\n    - sdvillal\n    - carlodri\n    - benjaminrwilson\n    - matthiasdiener\n    - h-vetinari\n",
 "rendered_recipe": {
  "about": {
   "dev_url": "https://git.ffmpeg.org/ffmpeg.git",
   "doc_url": "https://ffmpeg.org/documentation.html",
   "home": "http://www.ffmpeg.org/",
   "license": "LGPL-2.1-or-later",
   "license_family": "LGPL",
   "license_file": [
    "COPYING.LGPLv2.1",
    "COPYING.LGPLv3"
   ],
   "summary": "Cross-platform solution to record, convert and stream audio and video."
  },
  "build": {
   "number": "9",
   "run_exports": [
    "ffmpeg >=4.4.2,<5.0a0"
   ],
   "string": "lgpl_h4cf48f2_9"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "183amir",
    "benjaminrwilson",
    "carlodri",
    "danielballan",
    "h-vetinari",
    "jakirkham",
    "matthiasdiener",
    "ocefpaf",
    "patricksnape",
    "sdvillal"
   ]
  },
  "package": {
   "name": "ffmpeg",
   "version": "4.4.2"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 2_gnu",
    "binutils_impl_linux-64 2.39 h6ceecb4_0",
    "binutils_impl_linux-ppc64le 2.39 h2adea12_0",
    "binutils_linux-ppc64le 2.39 hd308743_11",
    "gcc_impl_linux-64 10.4.0 h5231bdf_18",
    "gcc_impl_linux-ppc64le 10.4.0 h7d1eb86_18",
    "gcc_linux-ppc64le 10.4.0 h1e353bd_11",
    "gxx_impl_linux-64 10.4.0 h5231bdf_18",
    "gxx_impl_linux-ppc64le 10.4.0 h7d1eb86_18",
    "gxx_linux-ppc64le 10.4.0 h2d85d2d_11",
    "kernel-headers_linux-64 2.6.32 he073ed8_15",
    "kernel-headers_linux-ppc64le 3.10.0 h23d7e6c_13",
    "lame 3.100 h166bdaf_1003",
    "ld_impl_linux-64 2.39 hc81fddc_0",
    "ld_impl_linux-ppc64le 2.39 h62157ac_0",
    "libgcc-devel_linux-64 10.4.0 hd38fd1e_18",
    "libgcc-devel_linux-ppc64le 10.4.0 hb9b6b0d_18",
    "libgcc-ng 12.2.0 h65d4601_18",
    "libgomp 12.2.0 h65d4601_18",
    "libsanitizer 10.4.0 h5246dfb_18",
    "libstdcxx-devel_linux-64 10.4.0 hd38fd1e_18",
    "libstdcxx-devel_linux-ppc64le 10.4.0 hb9b6b0d_18",
    "libstdcxx-ng 12.2.0 h46fd767_18",
    "libtool 2.4.6 h9c3ff4c_1008",
    "make 4.3 hd18ef5c_1",
    "nasm 2.15.05 h7f98852_0",
    "pkg-config 0.29.2 h36c2ea0_1008",
    "sysroot_linux-64 2.12 he073ed8_15",
    "sysroot_linux-ppc64le 2.17 h395ec9b_13"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 2_gnu",
    "aom 3.5.0 hab78ccb_0",
    "bzip2 1.0.8 h4e0d66e_4",
    "expat 2.4.9 hbbae597_0",
    "fontconfig 2.14.0 hac4b4ab_1",
    "freetype 2.12.1 h90753b0_0",
    "gettext 0.21.1 hbbae597_0",
    "gmp 6.2.1 hea85c5d_0",
    "gnutls 3.7.8 h8d334f8_0",
    "icu 70.1 h3b4ca64_0",
    "lame 3.100 hb283c62_1003",
    "libffi 3.4.2 h4e0d66e_5",
    "libgcc-ng 12.2.0 hbc1322c_18",
    "libgomp 12.2.0 hbc1322c_18",
    "libiconv 1.17 hb283c62_0",
    "libidn2 2.3.3 hb283c62_0",
    "libpng 1.6.38 hcc10993_0",
    "libstdcxx-ng 12.2.0 h99369c6_18",
    "libtasn1 4.19.0 hb283c62_0",
    "libunistring 0.9.10 h4e0d66e_0",
    "libuuid 2.32.1 h4e0d66e_1000",
    "libvpx 1.11.0 h3b9df90_3",
    "libxml2 2.9.14 hc8bd4e3_4",
    "libzlib 1.2.13 hb283c62_4",
    "nettle 3.8.1 h20b6f34_1",
    "openh264 2.3.1 hbbae597_1",
    "p11-kit 0.24.1 h7ef140f_0",
    "svt-av1 1.3.0 hbbae597_0",
    "xz 5.2.6 hb283c62_0",
    "zlib 1.2.13 hb283c62_4"
   ],
   "run": [
    "aom >=3.5.0,<3.6.0a0",
    "bzip2 >=1.0.8,<2.0a0",
    "fontconfig >=2.14.0,<3.0a0",
    "fonts-conda-ecosystem",
    "freetype >=2.12.1,<3.0a0",
    "gmp >=6.2.1,<7.0a0",
    "gnutls >=3.7.8,<3.8.0a0",
    "lame >=3.100,<3.101.0a0",
    "libgcc-ng >=12",
    "libstdcxx-ng >=12",
    "libvpx >=1.11.0,<1.12.0a0",
    "libxml2 >=2.9.14,<2.10.0a0",
    "libzlib >=1.2.13,<1.3.0a0",
    "openh264 >=2.3.1,<2.3.2.0a0",
    "svt-av1 >=1.3.0,<1.3.1.0a0"
   ]
  },
  "source": {
   "patches": null,
   "sha256": "058efd4b6459bc9df54186f17a989d0af619a793aa62f07e96b88632706d6a17",
   "url": "https://ffmpeg.org/releases/ffmpeg-4.4.2.tar.gz"
  },
  "test": {
   "commands": [
    "ffmpeg --help",
    "ffmpeg -hide_banner -codecs",
    "ffmpeg -hide_banner -protocols",
    "ffmpeg -hide_banner -protocols | grep \"https\"",
    "ffmpeg -hide_banner -codecs | grep \"libmp3lame\"",
    "ffmpeg -hide_banner -codecs | grep \"DEVI.S\\ zlib\"",
    "ffmpeg -hide_banner -codecs | grep \"DEV.LS h264\"",
    "ffmpeg -hide_banner -codecs | grep \"libopenh264\"",
    "ffmpeg -hide_banner -codecs | grep \"libaom\"",
    "ffmpeg -hide_banner -codecs | grep \"libsvtav1\"",
    "test -f $PREFIX/lib/libavdevice${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswresample${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavfilter${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavcodec${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavformat${SHLIB_EXT}",
    "test -f $PREFIX/lib/libswscale${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavresample${SHLIB_EXT}",
    "test -f $PREFIX/lib/libavutil${SHLIB_EXT}",
    "ffmpeg -hide_banner -buildconf | grep \"disable-gpl\"",
    "test ! $(ffmpeg -hide_banner -codecs | grep \"libx264\")",
    "test ! $(ffmpeg -hide_banner -codecs | grep \"libx265\")",
    "test ! -f $PREFIX/lib/libpostproc${SHLIB_EXT}",
    "ffmpeg -hide_banner -f lavfi -i nullsrc=s=256x256:d=8 -vcodec libopenh264 -f null -"
   ]
  }
 },
 "version": "4.4.2"
}
{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.21.8",
  "conda_private": false,
  "conda_version": "4.11.0",
  "dev_url": "https://github.com/MRChemSoft/mrcpp",
  "doc_source_url": "https://github.com/MRChemSoft/mrcpp/blob/master/doc/index.rst",
  "doc_url": "https://mrcpp.readthedocs.io/en/latest/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "robertodr",
    "bjorgve",
    "stigrj"
   ]
  },
  "home": "https://github.com/MRChemSoft/mrcpp",
  "identifiers": [],
  "keywords": [],
  "license": "LGPL-3.0-or-later",
  "license_family": "LGPL",
  "license_file": "LICENSE",
  "license_url": "https://opensource.org/licenses/LGPL-3.0",
  "root_pkgs": [
   "requests 2.27.1 pyhd8ed1ab_0",
   "gettext 0.19.8.1 hd1a6beb_1008",
   "ruamel.yaml.clib 0.2.6 py39h89e85a6_0",
   "prompt_toolkit 3.0.27 hd8ed1ab_0",
   "conda 4.11.0 py39h6e9494a_0",
   "nbformat 5.1.3 pyhd8ed1ab_0",
   "conda-env 2.6.0 1",
   "six 1.16.0 pyh6c4a22f_0",
   "icu 69.1 he49afe7_0",
   "charset-normalizer 2.0.12 pyhd8ed1ab_0",
   "libcxx 12.0.1 habf9029_1",
   "liblief 0.11.5 he49afe7_1",
   "jq 1.6 hc929b4f_1000",
   "typing_extensions 4.1.1 pyha770c72_0",
   "yaml 0.2.5 h0d85af4_2",
   "jsonschema 4.4.0 pyhd8ed1ab_0",
   "attrs 21.4.0 pyhd8ed1ab_0",
   "libcurl 7.81.0 hf45b732_0",
   "future 0.18.2 py39h6e9494a_4",
   "reproc-cpp 14.2.3 he49afe7_0",
   "reproc 14.2.3 h0d85af4_0",
   "importlib-metadata 4.11.2 py39h6e9494a_0",
   "glob2 0.7 py_0",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "filelock 3.6.0 pyhd8ed1ab_0",
   "zlib 1.2.11 h9173be1_1013",
   "cryptography 36.0.1 py39h209aa08_0",
   "libedit 3.1.20191231 h0678c8f_2",
   "curl 7.81.0 hf45b732_0",
   "commonmark 0.9.1 py_0",
   "pygments 2.11.2 pyhd8ed1ab_0",
   "py-lief 0.11.5 py39h9fcab8e_1",
   "perl 5.32.1 2_h0d85af4_perl5",
   "cffi 1.15.0 py39he338e87_0",
   "libmambapy 0.19.1 py39h2c464dc_0",
   "rich 11.2.0 pyhd8ed1ab_0",
   "libiconv 1.16 haf1e3a3_0",
   "wheel 0.37.1 pyhd8ed1ab_0",
   "prompt-toolkit 3.0.27 pyha770c72_0",
   "backports 1.0 py_2",
   "urllib3 1.26.8 pyhd8ed1ab_1",
   "xz 5.2.5 haf1e3a3_1",
   "jinja2 3.0.3 pyhd8ed1ab_0",
   "joblib 1.1.0 pyhd8ed1ab_0",
   "cctools 949.0.1 hd9211c8_23",
   "zstd 1.5.2 h582d3a0_0",
   "jupyter_core 4.9.2 py39h6e9494a_0",
   "python-libarchive-c 4.0 py39h6e9494a_0",
   "colorama 0.4.4 pyh9f0ad1d_0",
   "markupsafe 2.1.0 py39h63b48b0_0",
   "expat 2.4.6 h96cf925_0",
   "zipp 3.7.0 pyhd8ed1ab_1",
   "git 2.35.0 pl5321h9a53687_0",
   "chardet 4.0.0 py39h6e9494a_2",
   "ld64_osx-64 530 he8994da_23",
   "click 8.0.4 py39h6e9494a_0",
   "boa 0.8.2 pyha770c72_0",
   "sqlite 3.37.0 h23a322b_0",
   "krb5 1.19.2 hcfbf3a7_3",
   "soupsieve 2.3.1 pyhd8ed1ab_0",
   "watchgod 0.7 pyhd8ed1ab_0",
   "brotlipy 0.7.0 py39h89e85a6_1003",
   "libffi 3.4.2 h0d85af4_5",
   "pyopenssl 22.0.0 pyhd8ed1ab_0",
   "ruamel_yaml 0.15.80 py39h89e85a6_1006",
   "setuptools 60.9.3 py39h6e9494a_0",
   "libsolv 0.7.19 hcf210ce_5",
   "libxml2 2.9.12 h7e28ab6_1",
   "libmamba 0.19.1 h9ce2d19_0",
   "libarchive 3.5.2 h2b60450_1",
   "tapi 1100.0.11 h9ce4665_0",
   "importlib_resources 5.4.0 pyhd8ed1ab_0",
   "pycosat 0.6.3 py39h89e85a6_1009",
   "idna 3.3 pyhd8ed1ab_0",
   "readline 8.1 h05e3726_0",
   "openssl 1.1.1l h0d85af4_0",
   "ncurses 6.3 he49afe7_0",
   "anaconda-client 1.8.0 pyhd8ed1ab_0",
   "libzlib 1.2.11 h9173be1_1013",
   "bzip2 1.0.8 h0d85af4_4",
   "c-ares 1.18.1 h0d85af4_0",
   "beautifulsoup4 4.10.0 pyha770c72_0",
   "json5 0.9.5 pyh9f0ad1d_0",
   "pkginfo 1.8.2 pyhd8ed1ab_0",
   "ripgrep 13.0.0 h80d2146_1",
   "conda-package-handling 1.7.3 py39h89e85a6_1",
   "pip 22.0.3 pyhd8ed1ab_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "libssh2 1.10.0 h52ee1ee_2",
   "wcwidth 0.2.5 pyh9f0ad1d_2",
   "psutil 5.9.0 py39h89e85a6_0",
   "yaml-cpp 0.6.3 hb1e8313_4",
   "ruamel.yaml 0.17.21 py39h89e85a6_0",
   "clyent 1.2.2 py_1",
   "pcre2 10.37 ha16e1b2_0",
   "ld64 530 hd2e7500_23",
   "pyrsistent 0.18.1 py39h89e85a6_0",
   "python_abi 3.9 2_cp39",
   "lz4-c 1.9.3 he49afe7_1",
   "python 3.9.10 h1dd9edd_2_cpython",
   "ca-certificates 2021.10.8 h033912b_0",
   "conda-forge-ci-setup 3.18.4 py39hb0a6171_100",
   "tqdm 4.62.3 pyhd8ed1ab_0",
   "cctools_osx-64 949.0.1 h6407bdd_23",
   "certifi 2021.10.8 py39h6e9494a_1",
   "pysocks 1.7.1 py39h6e9494a_4",
   "pytz 2021.3 pyhd8ed1ab_0",
   "ldid 2.1.2 h6a69015_3",
   "ipython_genutils 0.2.0 py_1",
   "dataclasses 0.8 pyhc8e2a94_3",
   "lzo 2.10 haf1e3a3_1000",
   "libllvm12 12.0.1 hd011deb_2",
   "conda-build 3.21.8 py39h6e9494a_0",
   "pybind11-abi 4 hd8ed1ab_3",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "pycparser 2.21 pyhd8ed1ab_0",
   "libnghttp2 1.47.0 h942079c_0",
   "tk 8.6.12 h5dbffcc_0",
   "tzdata 2021e he74cb21_0",
   "libev 4.33 haf1e3a3_1",
   "traitlets 5.1.1 pyhd8ed1ab_0",
   "oniguruma 6.9.7.1 h0d85af4_0",
   "pyyaml 6.0 py39h89e85a6_3",
   "mamba 0.19.1 py39ha435c47_0"
  ],
  "summary": "MultiResolution Computational Program Package",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "CONDA_BUILD_SYSROOT": "/Applications/Xcode_12.4.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk",
  "MACOSX_DEPLOYMENT_TARGET": "10.9",
  "c_compiler": "clang",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "clangxx",
  "cxx_compiler_version": "12",
  "extend_keys": [
   "extend_keys",
   "ignore_version",
   "pin_run_as_build",
   "ignore_build_only_deps"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "llvm_openmp": "12",
  "lua": "5",
  "macos_machine": "x86_64-apple-darwin13.4.0",
  "mpi": "mpich",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.9",
  "r_base": "3.5",
  "target_platform": "osx-64"
 },
 "files": [
  "bin/mrcpp-tests",
  "include/MRCPP/Gaussians",
  "include/MRCPP/MWFunctions",
  "include/MRCPP/MWOperators",
  "include/MRCPP/Parallel",
  "include/MRCPP/Plotter",
  "include/MRCPP/Printer",
  "include/MRCPP/Timer",
  "include/MRCPP/config.h",
  "include/MRCPP/constants.h",
  "include/MRCPP/core/CrossCorrelation.h",
  "include/MRCPP/core/CrossCorrelationCache.h",
  "include/MRCPP/core/FilterCache.h",
  "include/MRCPP/core/GaussQuadrature.h",
  "include/MRCPP/core/InterpolatingBasis.h",
  "include/MRCPP/core/LegendreBasis.h",
  "include/MRCPP/core/MWFilter.h",
  "include/MRCPP/core/ObjectCache.h",
  "include/MRCPP/core/QuadratureCache.h",
  "include/MRCPP/core/ScalingBasis.h",
  "include/MRCPP/core/ScalingCache.h",
  "include/MRCPP/functions/AnalyticFunction.h",
  "include/MRCPP/functions/BoysFunction.h",
  "include/MRCPP/functions/GaussExp.h",
  "include/MRCPP/functions/GaussFunc.h",
  "include/MRCPP/functions/GaussPoly.h",
  "include/MRCPP/functions/Gaussian.h",
  "include/MRCPP/functions/LegendrePoly.h",
  "include/MRCPP/functions/Polynomial.h",
  "include/MRCPP/functions/RepresentableFunction.h",
  "include/MRCPP/functions/function_utils.h",
  "include/MRCPP/macros.h",
  "include/MRCPP/mrcpp_declarations.h",
  "include/MRCPP/operators/ABGVOperator.h",
  "include/MRCPP/operators/BSOperator.h",
  "include/MRCPP/operators/ConvolutionOperator.h",
  "include/MRCPP/operators/DerivativeConvolution.h",
  "include/MRCPP/operators/DerivativeKernel.h",
  "include/MRCPP/operators/DerivativeOperator.h",
  "include/MRCPP/operators/GreensKernel.h",
  "include/MRCPP/operators/HelmholtzKernel.h",
  "include/MRCPP/operators/HelmholtzOperator.h",
  "include/MRCPP/operators/IdentityConvolution.h",
  "include/MRCPP/operators/IdentityKernel.h",
  "include/MRCPP/operators/MWOperator.h",
  "include/MRCPP/operators/OperatorState.h",
  "include/MRCPP/operators/OperatorStatistics.h",
  "include/MRCPP/operators/PHOperator.h",
  "include/MRCPP/operators/PoissonKernel.h",
  "include/MRCPP/operators/PoissonOperator.h",
  "include/MRCPP/treebuilders/ABGVCalculator.h",
  "include/MRCPP/treebuilders/AdditionCalculator.h",
  "include/MRCPP/treebuilders/AnalyticAdaptor.h",
  "include/MRCPP/treebuilders/BSCalculator.h",
  "include/MRCPP/treebuilders/BandWidthAdaptor.h",
  "include/MRCPP/treebuilders/ConvolutionCalculator.h",
  "include/MRCPP/treebuilders/CopyAdaptor.h",
  "include/MRCPP/treebuilders/CrossCorrelationCalculator.h",
  "include/MRCPP/treebuilders/DefaultCalculator.h",
  "include/MRCPP/treebuilders/DerivativeCalculator.h",
  "include/MRCPP/treebuilders/MapCalculator.h",
  "include/MRCPP/treebuilders/MultiplicationCalculator.h",
  "include/MRCPP/treebuilders/OperatorAdaptor.h",
  "include/MRCPP/treebuilders/PHCalculator.h",
  "include/MRCPP/treebuilders/PowerCalculator.h",
  "include/MRCPP/treebuilders/ProjectionCalculator.h",
  "include/MRCPP/treebuilders/SplitAdaptor.h",
  "include/MRCPP/treebuilders/SquareCalculator.h",
  "include/MRCPP/treebuilders/TreeAdaptor.h",
  "include/MRCPP/treebuilders/TreeBuilder.h",
  "include/MRCPP/treebuilders/TreeCalculator.h",
  "include/MRCPP/treebuilders/WaveletAdaptor.h",
  "include/MRCPP/treebuilders/add.h",
  "include/MRCPP/treebuilders/apply.h",
  "include/MRCPP/treebuilders/grid.h",
  "include/MRCPP/treebuilders/map.h",
  "include/MRCPP/treebuilders/multiply.h",
  "include/MRCPP/treebuilders/project.h",
  "include/MRCPP/trees/BandWidth.h",
  "include/MRCPP/trees/BoundingBox.h",
  "include/MRCPP/trees/FunctionNode.h",
  "include/MRCPP/trees/FunctionTree.h",
  "include/MRCPP/trees/FunctionTreeVector.h",
  "include/MRCPP/trees/HilbertPath.h",
  "include/MRCPP/trees/MWNode.h",
  "include/MRCPP/trees/MWTree.h",
  "include/MRCPP/trees/MultiResolutionAnalysis.h",
  "include/MRCPP/trees/NodeAllocator.h",
  "include/MRCPP/trees/NodeBox.h",
  "include/MRCPP/trees/NodeIndex.h",
  "include/MRCPP/trees/OperatorNode.h",
  "include/MRCPP/trees/OperatorTree.h",
  "include/MRCPP/trees/TreeIterator.h",
  "include/MRCPP/utils/Plotter.h",
  "include/MRCPP/utils/Printer.h",
  "include/MRCPP/utils/Timer.h",
  "include/MRCPP/utils/details.h",
  "include/MRCPP/utils/math_utils.h",
  "include/MRCPP/utils/mpi_utils.h",
  "include/MRCPP/utils/omp_utils.h",
  "include/MRCPP/utils/periodic_utils.h",
  "include/MRCPP/utils/tree_utils.h",
  "include/MRCPP/version.h",
  "lib/libmrcpp.1.dylib",
  "lib/libmrcpp.dylib",
  "share/MRCPP/mwfilters/I_G0_1",
  "share/MRCPP/mwfilters/I_G0_10",
  "share/MRCPP/mwfilters/I_G0_11",
  "share/MRCPP/mwfilters/I_G0_12",
  "share/MRCPP/mwfilters/I_G0_13",
  "share/MRCPP/mwfilters/I_G0_14",
  "share/MRCPP/mwfilters/I_G0_15",
  "share/MRCPP/mwfilters/I_G0_16",
  "share/MRCPP/mwfilters/I_G0_17",
  "share/MRCPP/mwfilters/I_G0_18",
  "share/MRCPP/mwfilters/I_G0_19",
  "share/MRCPP/mwfilters/I_G0_2",
  "share/MRCPP/mwfilters/I_G0_20",
  "share/MRCPP/mwfilters/I_G0_21",
  "share/MRCPP/mwfilters/I_G0_22",
  "share/MRCPP/mwfilters/I_G0_23",
  "share/MRCPP/mwfilters/I_G0_24",
  "share/MRCPP/mwfilters/I_G0_25",
  "share/MRCPP/mwfilters/I_G0_26",
  "share/MRCPP/mwfilters/I_G0_27",
  "share/MRCPP/mwfilters/I_G0_28",
  "share/MRCPP/mwfilters/I_G0_29",
  "share/MRCPP/mwfilters/I_G0_3",
  "share/MRCPP/mwfilters/I_G0_30",
  "share/MRCPP/mwfilters/I_G0_31",
  "share/MRCPP/mwfilters/I_G0_32",
  "share/MRCPP/mwfilters/I_G0_33",
  "share/MRCPP/mwfilters/I_G0_34",
  "share/MRCPP/mwfilters/I_G0_35",
  "share/MRCPP/mwfilters/I_G0_36",
  "share/MRCPP/mwfilters/I_G0_37",
  "share/MRCPP/mwfilters/I_G0_38",
  "share/MRCPP/mwfilters/I_G0_39",
  "share/MRCPP/mwfilters/I_G0_4",
  "share/MRCPP/mwfilters/I_G0_40",
  "share/MRCPP/mwfilters/I_G0_41",
  "share/MRCPP/mwfilters/I_G0_5",
  "share/MRCPP/mwfilters/I_G0_6",
  "share/MRCPP/mwfilters/I_G0_7",
  "share/MRCPP/mwfilters/I_G0_8",
  "share/MRCPP/mwfilters/I_G0_9",
  "share/MRCPP/mwfilters/I_H0_1",
  "share/MRCPP/mwfilters/I_H0_10",
  "share/MRCPP/mwfilters/I_H0_11",
  "share/MRCPP/mwfilters/I_H0_12",
  "share/MRCPP/mwfilters/I_H0_13",
  "share/MRCPP/mwfilters/I_H0_14",
  "share/MRCPP/mwfilters/I_H0_15",
  "share/MRCPP/mwfilters/I_H0_16",
  "share/MRCPP/mwfilters/I_H0_17",
  "share/MRCPP/mwfilters/I_H0_18",
  "share/MRCPP/mwfilters/I_H0_19",
  "share/MRCPP/mwfilters/I_H0_2",
  "share/MRCPP/mwfilters/I_H0_20",
  "share/MRCPP/mwfilters/I_H0_21",
  "share/MRCPP/mwfilters/I_H0_22",
  "share/MRCPP/mwfilters/I_H0_23",
  "share/MRCPP/mwfilters/I_H0_24",
  "share/MRCPP/mwfilters/I_H0_25",
  "share/MRCPP/mwfilters/I_H0_26",
  "share/MRCPP/mwfilters/I_H0_27",
  "share/MRCPP/mwfilters/I_H0_28",
  "share/MRCPP/mwfilters/I_H0_29",
  "share/MRCPP/mwfilters/I_H0_3",
  "share/MRCPP/mwfilters/I_H0_30",
  "share/MRCPP/mwfilters/I_H0_31",
  "share/MRCPP/mwfilters/I_H0_32",
  "share/MRCPP/mwfilters/I_H0_33",
  "share/MRCPP/mwfilters/I_H0_34",
  "share/MRCPP/mwfilters/I_H0_35",
  "share/MRCPP/mwfilters/I_H0_36",
  "share/MRCPP/mwfilters/I_H0_37",
  "share/MRCPP/mwfilters/I_H0_38",
  "share/MRCPP/mwfilters/I_H0_39",
  "share/MRCPP/mwfilters/I_H0_4",
  "share/MRCPP/mwfilters/I_H0_40",
  "share/MRCPP/mwfilters/I_H0_41",
  "share/MRCPP/mwfilters/I_H0_5",
  "share/MRCPP/mwfilters/I_H0_6",
  "share/MRCPP/mwfilters/I_H0_7",
  "share/MRCPP/mwfilters/I_H0_8",
  "share/MRCPP/mwfilters/I_H0_9",
  "share/MRCPP/mwfilters/I_c_left_1",
  "share/MRCPP/mwfilters/I_c_left_10",
  "share/MRCPP/mwfilters/I_c_left_11",
  "share/MRCPP/mwfilters/I_c_left_12",
  "share/MRCPP/mwfilters/I_c_left_13",
  "share/MRCPP/mwfilters/I_c_left_14",
  "share/MRCPP/mwfilters/I_c_left_15",
  "share/MRCPP/mwfilters/I_c_left_16",
  "share/MRCPP/mwfilters/I_c_left_17",
  "share/MRCPP/mwfilters/I_c_left_18",
  "share/MRCPP/mwfilters/I_c_left_19",
  "share/MRCPP/mwfilters/I_c_left_2",
  "share/MRCPP/mwfilters/I_c_left_20",
  "share/MRCPP/mwfilters/I_c_left_21",
  "share/MRCPP/mwfilters/I_c_left_22",
  "share/MRCPP/mwfilters/I_c_left_23",
  "share/MRCPP/mwfilters/I_c_left_24",
  "share/MRCPP/mwfilters/I_c_left_25",
  "share/MRCPP/mwfilters/I_c_left_26",
  "share/MRCPP/mwfilters/I_c_left_27",
  "share/MRCPP/mwfilters/I_c_left_28",
  "share/MRCPP/mwfilters/I_c_left_29",
  "share/MRCPP/mwfilters/I_c_left_3",
  "share/MRCPP/mwfilters/I_c_left_30",
  "share/MRCPP/mwfilters/I_c_left_31",
  "share/MRCPP/mwfilters/I_c_left_32",
  "share/MRCPP/mwfilters/I_c_left_33",
  "share/MRCPP/mwfilters/I_c_left_34",
  "share/MRCPP/mwfilters/I_c_left_35",
  "share/MRCPP/mwfilters/I_c_left_36",
  "share/MRCPP/mwfilters/I_c_left_37",
  "share/MRCPP/mwfilters/I_c_left_38",
  "share/MRCPP/mwfilters/I_c_left_39",
  "share/MRCPP/mwfilters/I_c_left_4",
  "share/MRCPP/mwfilters/I_c_left_40",
  "share/MRCPP/mwfilters/I_c_left_41",
  "share/MRCPP/mwfilters/I_c_left_5",
  "share/MRCPP/mwfilters/I_c_left_6",
  "share/MRCPP/mwfilters/I_c_left_7",
  "share/MRCPP/mwfilters/I_c_left_8",
  "share/MRCPP/mwfilters/I_c_left_9",
  "share/MRCPP/mwfilters/I_c_right_1",
  "share/MRCPP/mwfilters/I_c_right_10",
  "share/MRCPP/mwfilters/I_c_right_11",
  "share/MRCPP/mwfilters/I_c_right_12",
  "share/MRCPP/mwfilters/I_c_right_13",
  "share/MRCPP/mwfilters/I_c_right_14",
  "share/MRCPP/mwfilters/I_c_right_15",
  "share/MRCPP/mwfilters/I_c_right_16",
  "share/MRCPP/mwfilters/I_c_right_17",
  "share/MRCPP/mwfilters/I_c_right_18",
  "share/MRCPP/mwfilters/I_c_right_19",
  "share/MRCPP/mwfilters/I_c_right_2",
  "share/MRCPP/mwfilters/I_c_right_20",
  "share/MRCPP/mwfilters/I_c_right_21",
  "share/MRCPP/mwfilters/I_c_right_22",
  "share/MRCPP/mwfilters/I_c_right_23",
  "share/MRCPP/mwfilters/I_c_right_24",
  "share/MRCPP/mwfilters/I_c_right_25",
  "share/MRCPP/mwfilters/I_c_right_26",
  "share/MRCPP/mwfilters/I_c_right_27",
  "share/MRCPP/mwfilters/I_c_right_28",
  "share/MRCPP/mwfilters/I_c_right_29",
  "share/MRCPP/mwfilters/I_c_right_3",
  "share/MRCPP/mwfilters/I_c_right_30",
  "share/MRCPP/mwfilters/I_c_right_31",
  "share/MRCPP/mwfilters/I_c_right_32",
  "share/MRCPP/mwfilters/I_c_right_33",
  "share/MRCPP/mwfilters/I_c_right_34",
  "share/MRCPP/mwfilters/I_c_right_35",
  "share/MRCPP/mwfilters/I_c_right_36",
  "share/MRCPP/mwfilters/I_c_right_37",
  "share/MRCPP/mwfilters/I_c_right_38",
  "share/MRCPP/mwfilters/I_c_right_39",
  "share/MRCPP/mwfilters/I_c_right_4",
  "share/MRCPP/mwfilters/I_c_right_40",
  "share/MRCPP/mwfilters/I_c_right_41",
  "share/MRCPP/mwfilters/I_c_right_5",
  "share/MRCPP/mwfilters/I_c_right_6",
  "share/MRCPP/mwfilters/I_c_right_7",
  "share/MRCPP/mwfilters/I_c_right_8",
  "share/MRCPP/mwfilters/I_c_right_9",
  "share/MRCPP/mwfilters/L_G0_1",
  "share/MRCPP/mwfilters/L_G0_10",
  "share/MRCPP/mwfilters/L_G0_11",
  "share/MRCPP/mwfilters/L_G0_12",
  "share/MRCPP/mwfilters/L_G0_13",
  "share/MRCPP/mwfilters/L_G0_14",
  "share/MRCPP/mwfilters/L_G0_15",
  "share/MRCPP/mwfilters/L_G0_16",
  "share/MRCPP/mwfilters/L_G0_17",
  "share/MRCPP/mwfilters/L_G0_18",
  "share/MRCPP/mwfilters/L_G0_19",
  "share/MRCPP/mwfilters/L_G0_2",
  "share/MRCPP/mwfilters/L_G0_20",
  "share/MRCPP/mwfilters/L_G0_21",
  "share/MRCPP/mwfilters/L_G0_22",
  "share/MRCPP/mwfilters/L_G0_23",
  "share/MRCPP/mwfilters/L_G0_24",
  "share/MRCPP/mwfilters/L_G0_25",
  "share/MRCPP/mwfilters/L_G0_26",
  "share/MRCPP/mwfilters/L_G0_27",
  "share/MRCPP/mwfilters/L_G0_28",
  "share/MRCPP/mwfilters/L_G0_29",
  "share/MRCPP/mwfilters/L_G0_3",
  "share/MRCPP/mwfilters/L_G0_30",
  "share/MRCPP/mwfilters/L_G0_31",
  "share/MRCPP/mwfilters/L_G0_32",
  "share/MRCPP/mwfilters/L_G0_33",
  "share/MRCPP/mwfilters/L_G0_34",
  "share/MRCPP/mwfilters/L_G0_35",
  "share/MRCPP/mwfilters/L_G0_36",
  "share/MRCPP/mwfilters/L_G0_37",
  "share/MRCPP/mwfilters/L_G0_38",
  "share/MRCPP/mwfilters/L_G0_39",
  "share/MRCPP/mwfilters/L_G0_4",
  "share/MRCPP/mwfilters/L_G0_40",
  "share/MRCPP/mwfilters/L_G0_41",
  "share/MRCPP/mwfilters/L_G0_5",
  "share/MRCPP/mwfilters/L_G0_6",
  "share/MRCPP/mwfilters/L_G0_7",
  "share/MRCPP/mwfilters/L_G0_8",
  "share/MRCPP/mwfilters/L_G0_9",
  "share/MRCPP/mwfilters/L_H0_1",
  "share/MRCPP/mwfilters/L_H0_10",
  "share/MRCPP/mwfilters/L_H0_11",
  "share/MRCPP/mwfilters/L_H0_12",
  "share/MRCPP/mwfilters/L_H0_13",
  "share/MRCPP/mwfilters/L_H0_14",
  "share/MRCPP/mwfilters/L_H0_15",
  "share/MRCPP/mwfilters/L_H0_16",
  "share/MRCPP/mwfilters/L_H0_17",
  "share/MRCPP/mwfilters/L_H0_18",
  "share/MRCPP/mwfilters/L_H0_19",
  "share/MRCPP/mwfilters/L_H0_2",
  "share/MRCPP/mwfilters/L_H0_20",
  "share/MRCPP/mwfilters/L_H0_21",
  "share/MRCPP/mwfilters/L_H0_22",
  "share/MRCPP/mwfilters/L_H0_23",
  "share/MRCPP/mwfilters/L_H0_24",
  "share/MRCPP/mwfilters/L_H0_25",
  "share/MRCPP/mwfilters/L_H0_26",
  "share/MRCPP/mwfilters/L_H0_27",
  "share/MRCPP/mwfilters/L_H0_28",
  "share/MRCPP/mwfilters/L_H0_29",
  "share/MRCPP/mwfilters/L_H0_3",
  "share/MRCPP/mwfilters/L_H0_30",
  "share/MRCPP/mwfilters/L_H0_31",
  "share/MRCPP/mwfilters/L_H0_32",
  "share/MRCPP/mwfilters/L_H0_33",
  "share/MRCPP/mwfilters/L_H0_34",
  "share/MRCPP/mwfilters/L_H0_35",
  "share/MRCPP/mwfilters/L_H0_36",
  "share/MRCPP/mwfilters/L_H0_37",
  "share/MRCPP/mwfilters/L_H0_38",
  "share/MRCPP/mwfilters/L_H0_39",
  "share/MRCPP/mwfilters/L_H0_4",
  "share/MRCPP/mwfilters/L_H0_40",
  "share/MRCPP/mwfilters/L_H0_41",
  "share/MRCPP/mwfilters/L_H0_5",
  "share/MRCPP/mwfilters/L_H0_6",
  "share/MRCPP/mwfilters/L_H0_7",
  "share/MRCPP/mwfilters/L_H0_8",
  "share/MRCPP/mwfilters/L_H0_9",
  "share/MRCPP/mwfilters/L_c_left_1",
  "share/MRCPP/mwfilters/L_c_left_10",
  "share/MRCPP/mwfilters/L_c_left_11",
  "share/MRCPP/mwfilters/L_c_left_12",
  "share/MRCPP/mwfilters/L_c_left_13",
  "share/MRCPP/mwfilters/L_c_left_14",
  "share/MRCPP/mwfilters/L_c_left_15",
  "share/MRCPP/mwfilters/L_c_left_16",
  "share/MRCPP/mwfilters/L_c_left_17",
  "share/MRCPP/mwfilters/L_c_left_18",
  "share/MRCPP/mwfilters/L_c_left_19",
  "share/MRCPP/mwfilters/L_c_left_2",
  "share/MRCPP/mwfilters/L_c_left_20",
  "share/MRCPP/mwfilters/L_c_left_21",
  "share/MRCPP/mwfilters/L_c_left_22",
  "share/MRCPP/mwfilters/L_c_left_23",
  "share/MRCPP/mwfilters/L_c_left_24",
  "share/MRCPP/mwfilters/L_c_left_25",
  "share/MRCPP/mwfilters/L_c_left_26",
  "share/MRCPP/mwfilters/L_c_left_27",
  "share/MRCPP/mwfilters/L_c_left_28",
  "share/MRCPP/mwfilters/L_c_left_29",
  "share/MRCPP/mwfilters/L_c_left_3",
  "share/MRCPP/mwfilters/L_c_left_30",
  "share/MRCPP/mwfilters/L_c_left_31",
  "share/MRCPP/mwfilters/L_c_left_32",
  "share/MRCPP/mwfilters/L_c_left_33",
  "share/MRCPP/mwfilters/L_c_left_34",
  "share/MRCPP/mwfilters/L_c_left_35",
  "share/MRCPP/mwfilters/L_c_left_36",
  "share/MRCPP/mwfilters/L_c_left_37",
  "share/MRCPP/mwfilters/L_c_left_38",
  "share/MRCPP/mwfilters/L_c_left_39",
  "share/MRCPP/mwfilters/L_c_left_4",
  "share/MRCPP/mwfilters/L_c_left_40",
  "share/MRCPP/mwfilters/L_c_left_41",
  "share/MRCPP/mwfilters/L_c_left_5",
  "share/MRCPP/mwfilters/L_c_left_6",
  "share/MRCPP/mwfilters/L_c_left_7",
  "share/MRCPP/mwfilters/L_c_left_8",
  "share/MRCPP/mwfilters/L_c_left_9",
  "share/MRCPP/mwfilters/L_c_right_1",
  "share/MRCPP/mwfilters/L_c_right_10",
  "share/MRCPP/mwfilters/L_c_right_11",
  "share/MRCPP/mwfilters/L_c_right_12",
  "share/MRCPP/mwfilters/L_c_right_13",
  "share/MRCPP/mwfilters/L_c_right_14",
  "share/MRCPP/mwfilters/L_c_right_15",
  "share/MRCPP/mwfilters/L_c_right_16",
  "share/MRCPP/mwfilters/L_c_right_17",
  "share/MRCPP/mwfilters/L_c_right_18",
  "share/MRCPP/mwfilters/L_c_right_19",
  "share/MRCPP/mwfilters/L_c_right_2",
  "share/MRCPP/mwfilters/L_c_right_20",
  "share/MRCPP/mwfilters/L_c_right_21",
  "share/MRCPP/mwfilters/L_c_right_22",
  "share/MRCPP/mwfilters/L_c_right_23",
  "share/MRCPP/mwfilters/L_c_right_24",
  "share/MRCPP/mwfilters/L_c_right_25",
  "share/MRCPP/mwfilters/L_c_right_26",
  "share/MRCPP/mwfilters/L_c_right_27",
  "share/MRCPP/mwfilters/L_c_right_28",
  "share/MRCPP/mwfilters/L_c_right_29",
  "share/MRCPP/mwfilters/L_c_right_3",
  "share/MRCPP/mwfilters/L_c_right_30",
  "share/MRCPP/mwfilters/L_c_right_31",
  "share/MRCPP/mwfilters/L_c_right_32",
  "share/MRCPP/mwfilters/L_c_right_33",
  "share/MRCPP/mwfilters/L_c_right_34",
  "share/MRCPP/mwfilters/L_c_right_35",
  "share/MRCPP/mwfilters/L_c_right_36",
  "share/MRCPP/mwfilters/L_c_right_37",
  "share/MRCPP/mwfilters/L_c_right_38",
  "share/MRCPP/mwfilters/L_c_right_39",
  "share/MRCPP/mwfilters/L_c_right_4",
  "share/MRCPP/mwfilters/L_c_right_40",
  "share/MRCPP/mwfilters/L_c_right_41",
  "share/MRCPP/mwfilters/L_c_right_5",
  "share/MRCPP/mwfilters/L_c_right_6",
  "share/MRCPP/mwfilters/L_c_right_7",
  "share/MRCPP/mwfilters/L_c_right_8",
  "share/MRCPP/mwfilters/L_c_right_9",
  "share/MRCPP/mwfilters/README",
  "share/cmake/MRCPP/MRCPPConfig.cmake",
  "share/cmake/MRCPP/MRCPPConfigVersion.cmake",
  "share/cmake/MRCPP/MRCPPTargets-release.cmake",
  "share/cmake/MRCPP/MRCPPTargets.cmake"
 ],
 "index": {
  "arch": "x86_64",
  "build": "mpi_mpich_h6df5974_0",
  "build_number": 0,
  "depends": [
   "eigen",
   "libcxx >=12.0.1",
   "llvm-openmp >=12.0.1",
   "mpich >=4.0.1,<5.0a0"
  ],
  "license": "LGPL-3.0-or-later",
  "license_family": "LGPL",
  "name": "mrcpp",
  "platform": "osx",
  "subdir": "osx-64",
  "timestamp": 1646388717518,
  "version": "1.4.1"
 },
 "metadata_version": 1,
 "name": "mrcpp",
 "raw_recipe": "{% set name = \"mrcpp\" %}\n{% set version = \"1.4.1\" %}\n{% set sha256 = \"f369d72cc37415e9a6bdc0692ec4f6c5cfcc22e34b9ce569470e656c45e5b86c\" %}\n{% set build = 0 %}\n\n# recipe-lint fails if mpi is undefined\n{% set mpi = mpi or 'nompi' %}\n{% if mpi == \"nompi\" %}\n# prioritize shared-memory variant via build number\n{% set build = build + 100 %}\n{% endif %}\n# NOTE This means that the OpenMP build will be highest priority\n\n{% if mpi != \"nompi\" %}\n{% set mpi_prefix = \"mpi_\" + mpi %}\n{% else %}\n{% set mpi_prefix = \"nompi\" %}\n{% endif %}\n# add build string so packages can depend on\n# mpi or nompi variants dependencies:\n# `mrcpp * mpi_mpich_*` for mpich\n# `mrcpp * mpi_*` for any mpi\n# `mrcpp * nompi_*` for no mpi\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/MRChemSoft/mrcpp/archive/v{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: {{ build }}\n  skip: true  # [win]\n  binary_relocation: true\n  string: {{ mpi_prefix }}_h{{ PKG_HASH }}_{{ build }}\n  run_exports:\n    - {{ pin_subpackage('mrcpp', max_pin='x.x') }}\n    - {{ name }} * {{ mpi_prefix }}_*\n\nrequirements:\n  build:\n    - cmake >=3.14\n    - {{ compiler('cxx') }}\n    - ninja\n  host:\n    - {{ pin_compatible('eigen', max_pin='x.x') }}\n    - llvm-openmp  # [osx]\n    - libgomp      # [linux]\n    - {{ mpi }}    # [mpi != 'nompi']\n  run:\n    - eigen\n\ntest:\n  commands:\n    # Verify library\n    - test -f $PREFIX/lib/libmrcpp$SHLIB_EXT                              # [not win]\n    - test -L $PREFIX/lib/libmrcpp$SHLIB_EXT                              # [not win]\n    # Inspect linkage\n    - ldd -v $PREFIX/lib/libmrcpp$SHLIB_EXT                               # [linux]\n    - otool -L $PREFIX/lib/libmrcpp$SHLIB_EXT                             # [osx]\n\noutputs:\n  - name: mrcpp\n    files:\n      - bin/mrcpp-tests        # [not win]\n      - include/MRCPP          # [not win]\n      - lib/libmrcpp*          # [not win]\n      - share/cmake/MRCPP      # [not win]\n      - share/MRCPP/mwfilters  # [not win]\n\nabout:\n  home: https://github.com/MRChemSoft/mrcpp\n  dev_url: https://github.com/MRChemSoft/mrcpp\n  doc_url: https://mrcpp.readthedocs.io/en/latest/\n  doc_source_url: https://github.com/MRChemSoft/mrcpp/blob/master/doc/index.rst\n  license: LGPL-3.0-or-later\n  license_url: https://opensource.org/licenses/LGPL-3.0\n  license_file: LICENSE\n  license_family: LGPL\n  summary: MultiResolution Computational Program Package\n\nextra:\n  recipe-maintainers:\n    - robertodr\n    - bjorgve\n    - stigrj\n",
 "rendered_recipe": {
  "about": {
   "dev_url": "https://github.com/MRChemSoft/mrcpp",
   "doc_source_url": "https://github.com/MRChemSoft/mrcpp/blob/master/doc/index.rst",
   "doc_url": "https://mrcpp.readthedocs.io/en/latest/",
   "home": "https://github.com/MRChemSoft/mrcpp",
   "license": "LGPL-3.0-or-later",
   "license_family": "LGPL",
   "license_file": "LICENSE",
   "license_url": "https://opensource.org/licenses/LGPL-3.0",
   "summary": "MultiResolution Computational Program Package"
  },
  "build": {
   "binary_relocation": true,
   "number": "0",
   "run_exports": [
    "mrcpp * mpi_mpich_*",
    "mrcpp >=1.4.1,<1.5.0a0"
   ],
   "string": "mpi_mpich_h6df5974_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "bjorgve",
    "robertodr",
    "stigrj"
   ]
  },
  "package": {
   "name": "mrcpp",
   "version": "1.4.1"
  },
  "requirements": {
   "build": [
    "bzip2 1.0.8 h0d85af4_4",
    "c-ares 1.18.1 h0d85af4_0",
    "ca-certificates 2021.10.8 h033912b_0",
    "cctools_osx-64 973.0.1 hb41342b_8",
    "clang 12.0.1 h694c41f_4",
    "clang-12 12.0.1 default_he082bbe_4",
    "clang_osx-64 12.0.1 h633439f_7",
    "clangxx 12.0.1 default_he082bbe_4",
    "clangxx_osx-64 12.0.1 hdb584c0_7",
    "cmake 3.22.2 h4d639be_0",
    "compiler-rt 12.0.1 he01351e_0",
    "compiler-rt_osx-64 12.0.1 hd3f61c9_0",
    "expat 2.4.6 h96cf925_0",
    "krb5 1.19.2 hb98e516_4",
    "ld64_osx-64 609 hc6b1d1e_8",
    "libclang-cpp12 12.0.1 default_he082bbe_4",
    "libcurl 7.81.0 h97da3c1_0",
    "libcxx 12.0.1 habf9029_1",
    "libedit 3.1.20191231 h0678c8f_2",
    "libev 4.33 haf1e3a3_1",
    "libllvm11 11.1.0 hd011deb_3",
    "libllvm12 12.0.1 hd011deb_2",
    "libnghttp2 1.47.0 hca56917_0",
    "libssh2 1.10.0 hd3787cc_2",
    "libuv 1.43.0 h0d85af4_0",
    "libzlib 1.2.11 h9173be1_1013",
    "llvm-tools 12.0.1 hd011deb_2",
    "lz4-c 1.9.3 he49afe7_1",
    "ncurses 6.3 he49afe7_0",
    "ninja 1.10.2 h940c156_1",
    "openssl 3.0.0 h0d85af4_2",
    "rhash 1.4.1 h35c211d_0",
    "sigtool 0.1.3 h88f4db0_0",
    "tapi 1100.0.11 h9ce4665_0",
    "xz 5.2.5 haf1e3a3_1",
    "zlib 1.2.11 h9173be1_1013",
    "zstd 1.5.2 h582d3a0_0"
   ],
   "host": [
    "eigen 3.4.0 h940c156_0",
    "libcxx 12.0.1 habf9029_1",
    "libgfortran 5.0.0 9_3_0_h6c81a4c_23",
    "libgfortran5 9.3.0 h6c81a4c_23",
    "llvm-openmp 12.0.1 hda6cdc1_1",
    "mpi 1.0 mpich",
    "mpich 4.0.1 hd33e60e_100"
   ],
   "run": [
    "eigen",
    "libcxx >=12.0.1",
    "llvm-openmp >=12.0.1",
    "mpich >=4.0.1,<5.0a0"
   ]
  },
  "source": {
   "sha256": "f369d72cc37415e9a6bdc0692ec4f6c5cfcc22e34b9ce569470e656c45e5b86c",
   "url": "https://github.com/MRChemSoft/mrcpp/archive/v1.4.1.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libmrcpp$SHLIB_EXT",
    "test -L $PREFIX/lib/libmrcpp$SHLIB_EXT",
    "otool -L $PREFIX/lib/libmrcpp$SHLIB_EXT"
   ]
  }
 },
 "version": "1.4.1"
}
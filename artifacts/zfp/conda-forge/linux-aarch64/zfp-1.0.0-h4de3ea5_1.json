{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.21.9",
  "conda_private": false,
  "conda_version": "4.13.0",
  "description": "zfp is an open source C/C++ library for compressed numerical arrays\nthat support high throughput read and write random access. zfp also\nsupports streaming compression of integer and floating-point data,\ne.g., for applications that read and write large data sets to and\nfrom disk. zfp is primarily written in C and C++ but also includes\nPython and Fortran bindings.\n",
  "dev_url": "https://github.com/LLNL/zfp",
  "doc_url": "http://zfp.readthedocs.io/en/release0.5.5/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "kmpaul",
    "ToreAad",
    "lindstro",
    "GarrettDMorrison",
    "hmaarrfk"
   ]
  },
  "home": "https://computation.llnl.gov/projects/floating-point-compression",
  "identifiers": [],
  "keywords": [],
  "license": "BSD-3-Clause",
  "license_family": "BSD",
  "license_file": "LICENSE",
  "root_pkgs": [
   "pkginfo 1.8.3 pyhd8ed1ab_0",
   "keyutils 1.6.1 h4e544f5_0",
   "perl 5.32.1 2_hf897c2e_perl5",
   "glob2 0.7 py_0",
   "urllib3 1.26.10 pyhd8ed1ab_0",
   "importlib-metadata 4.11.4 py39ha65689a_0",
   "python-libarchive-c 4.0 py39h4420490_1",
   "krb5 1.19.3 h7c456eb_0",
   "zstd 1.5.2 haad177d_2",
   "idna 3.3 pyhd8ed1ab_0",
   "brotlipy 0.7.0 py39h0fd3b05_1004",
   "libmambapy 0.24.0 py39hdaab871_1",
   "yaml 0.2.5 hf897c2e_2",
   "libiconv 1.16 h6dd45c4_0",
   "chardet 5.0.0 py39ha65689a_0",
   "conda 4.13.0 py39h4420490_1",
   "python-fastjsonschema 2.16.1 pyhd8ed1ab_0",
   "zipp 3.8.0 pyhd8ed1ab_0",
   "libcurl 7.83.1 h8fd98b7_0",
   "libmamba 0.24.0 h8683862_1",
   "wheel 0.37.1 pyhd8ed1ab_0",
   "filelock 3.7.1 pyhd8ed1ab_0",
   "future 0.18.2 py39ha65689a_5",
   "tk 8.6.12 hd8af866_0",
   "gettext 0.19.8.1 h6edf1e2_1008",
   "yaml-cpp 0.7.0 h4de3ea5_1",
   "liblief 0.11.5 h01db608_1",
   "json5 0.9.5 pyh9f0ad1d_0",
   "pycparser 2.21 pyhd8ed1ab_0",
   "libzlib 1.2.12 h4e544f5_2",
   "nbformat 5.4.0 pyhd8ed1ab_0",
   "pyyaml 6.0 py39h0fd3b05_4",
   "pysocks 1.7.1 py39ha65689a_5",
   "openssl 1.1.1q h4e544f5_0",
   "jsonschema 4.7.2 pyhd8ed1ab_0",
   "libarchive 3.5.2 h610d84a_3",
   "pybind11-abi 4 hd8ed1ab_3",
   "beautifulsoup4 4.11.1 pyha770c72_0",
   "six 1.16.0 pyh6c4a22f_0",
   "clyent 1.2.2 py_1",
   "libssh2 1.10.0 h1ab2c7b_2",
   "joblib 1.1.0 pyhd8ed1ab_0",
   "zlib 1.2.12 h4e544f5_2",
   "tqdm 4.64.0 pyhd8ed1ab_0",
   "pyrsistent 0.18.1 py39hb9a1dbb_1",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "libev 4.33 h516909a_1",
   "reproc 14.2.3 hf897c2e_0",
   "prompt_toolkit 3.0.30 hd8ed1ab_0",
   "readline 8.1.2 h38e3740_0",
   "libuuid 2.32.1 hf897c2e_1000",
   "importlib_resources 5.8.0 pyhd8ed1ab_0",
   "prompt-toolkit 3.0.30 pyha770c72_0",
   "libnghttp2 1.47.0 h75cb1c7_0",
   "libnsl 2.0.0 hf897c2e_0",
   "certifi 2022.6.15 py39h4420490_0",
   "cryptography 37.0.4 py39h32042e6_0",
   "c-ares 1.18.1 hf897c2e_0",
   "requests 2.28.1 pyhd8ed1ab_0",
   "jupyter_core 4.11.1 py39h4420490_0",
   "xz 5.2.5 h6dd45c4_1",
   "anaconda-client 1.8.0 pyhd8ed1ab_0",
   "libgcc-ng 12.1.0 h3242a24_16",
   "pycosat 0.6.3 py39h0fd3b05_1010",
   "tini 0.19.0 hf897c2e_0",
   "python 3.9.13 h2eada40_0_cpython",
   "libxml2 2.9.14 h370961a_3",
   "pygments 2.12.0 pyhd8ed1ab_0",
   "ld_impl_linux-aarch64 2.36.1 h02ad14f_2",
   "pyopenssl 22.0.0 pyhd8ed1ab_0",
   "watchgod 0.8.2 pyhd8ed1ab_0",
   "boa 0.11.0 pyha770c72_1",
   "ruamel.yaml 0.17.21 py39h0fd3b05_1",
   "sqlite 3.39.2 hc74f5b8_0",
   "wcwidth 0.2.5 pyh9f0ad1d_2",
   "ruamel_yaml 0.15.80 py39h0fd3b05_1007",
   "ruamel.yaml.clib 0.2.6 py39h0fd3b05_1",
   "curl 7.83.1 h8fd98b7_0",
   "lz4-c 1.9.3 h01db608_1",
   "py-lief 0.11.5 py39h7ab65be_1",
   "libstdcxx-ng 12.1.0 hd01590b_16",
   "libedit 3.1.20191231 he28a2e2_2",
   "python_abi 3.9 2_cp39",
   "patchelf 0.15.0 h884eca8_0",
   "expat 2.4.8 ha18d298_0",
   "bzip2 1.0.8 hf897c2e_4",
   "psutil 5.9.1 py39h0fd3b05_0",
   "sniffio 1.2.0 py39h4420490_3",
   "icu 70.1 ha18d298_0",
   "tzdata 2022a h191b570_0",
   "lzo 2.10 h516909a_1000",
   "libffi 3.4.2 h3557bc0_5",
   "ripgrep 13.0.0 hc770f70_2",
   "conda-package-handling 1.8.1 py39h0fd3b05_1",
   "su-exec 0.2 h516909a_1002",
   "anyio 3.6.1 py39ha65689a_0",
   "dataclasses 0.8 pyhc8e2a94_3",
   "charset-normalizer 2.1.0 pyhd8ed1ab_0",
   "libsolv 0.7.22 h7866ba4_0",
   "cffi 1.15.1 py39hb26bf21_0",
   "jinja2 3.1.2 pyhd8ed1ab_1",
   "rich 12.5.1 pyhd8ed1ab_0",
   "traitlets 5.3.0 pyhd8ed1ab_0",
   "typing_extensions 4.3.0 pyha770c72_0",
   "markupsafe 2.1.1 py39hb9a1dbb_1",
   "patch 2.7.6 hf897c2e_1002",
   "setuptools 63.2.0 py39ha65689a_0",
   "mamba 0.24.0 py39hc9db4b5_1",
   "ca-certificates 2022.6.15 h4fd8a4c_0",
   "libgomp 12.1.0 h3242a24_16",
   "reproc-cpp 14.2.3 h01db608_0",
   "conda-build 3.21.9 py39h4420490_1",
   "git 2.37.1 pl5321hd6c143b_0",
   "pytz 2022.1 pyhd8ed1ab_0",
   "commonmark 0.9.1 py_0",
   "colorama 0.4.5 pyhd8ed1ab_0",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "attrs 21.4.0 pyhd8ed1ab_0",
   "_openmp_mutex 4.5 2_gnu",
   "pcre2 10.37 h73360fb_0",
   "ncurses 6.3 headf329_1",
   "backports 1.0 py_2",
   "soupsieve 2.3.2.post1 pyhd8ed1ab_0",
   "oniguruma 6.9.8 h4e544f5_0",
   "conda-forge-ci-setup 3.21.0 py39hbe0ec15_100",
   "jq 1.6 hb9de7d4_1000",
   "pip 22.2.2 pyhd8ed1ab_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "conda-env 2.6.0 1",
   "click 8.1.3 py39h4420490_0"
  ],
  "summary": "Library for compressed numerical arrays that support high throughput read and write random access",
  "tags": []
 },
 "conda_build_config": {
  "BUILD": "aarch64-conda_cos7-linux-gnu",
  "CI": "azure",
  "c_compiler": "gcc",
  "c_compiler_version": "10",
  "cdt_arch": "aarch64",
  "cdt_name": "cos7",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "10",
  "docker_image": "quay.io/condaforge/linux-anvil-aarch64",
  "extend_keys": [
   "ignore_build_only_deps",
   "extend_keys",
   "pin_run_as_build",
   "ignore_version"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.19",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.7.* *_73_pypy",
  "r_base": "3.5",
  "target_platform": "linux-aarch64",
  "zip_keys": [
   [
    "python",
    "numpy"
   ],
   [
    "c_compiler_version",
    "cxx_compiler_version"
   ]
  ]
 },
 "files": [
  "bin/zfp",
  "include/zfp.h",
  "include/zfp.hpp",
  "include/zfp/array.h",
  "include/zfp/array.hpp",
  "include/zfp/array1.hpp",
  "include/zfp/array2.hpp",
  "include/zfp/array3.hpp",
  "include/zfp/array4.hpp",
  "include/zfp/bitstream.h",
  "include/zfp/bitstream.inl",
  "include/zfp/codec/gencodec.hpp",
  "include/zfp/codec/zfpcodec.hpp",
  "include/zfp/constarray1.hpp",
  "include/zfp/constarray2.hpp",
  "include/zfp/constarray3.hpp",
  "include/zfp/constarray4.hpp",
  "include/zfp/factory.hpp",
  "include/zfp/index.hpp",
  "include/zfp/internal/array/cache.hpp",
  "include/zfp/internal/array/cache1.hpp",
  "include/zfp/internal/array/cache2.hpp",
  "include/zfp/internal/array/cache3.hpp",
  "include/zfp/internal/array/cache4.hpp",
  "include/zfp/internal/array/exception.hpp",
  "include/zfp/internal/array/handle1.hpp",
  "include/zfp/internal/array/handle2.hpp",
  "include/zfp/internal/array/handle3.hpp",
  "include/zfp/internal/array/handle4.hpp",
  "include/zfp/internal/array/header.hpp",
  "include/zfp/internal/array/iterator1.hpp",
  "include/zfp/internal/array/iterator2.hpp",
  "include/zfp/internal/array/iterator3.hpp",
  "include/zfp/internal/array/iterator4.hpp",
  "include/zfp/internal/array/memory.hpp",
  "include/zfp/internal/array/pointer1.hpp",
  "include/zfp/internal/array/pointer2.hpp",
  "include/zfp/internal/array/pointer3.hpp",
  "include/zfp/internal/array/pointer4.hpp",
  "include/zfp/internal/array/reference1.hpp",
  "include/zfp/internal/array/reference2.hpp",
  "include/zfp/internal/array/reference3.hpp",
  "include/zfp/internal/array/reference4.hpp",
  "include/zfp/internal/array/store.hpp",
  "include/zfp/internal/array/store1.hpp",
  "include/zfp/internal/array/store2.hpp",
  "include/zfp/internal/array/store3.hpp",
  "include/zfp/internal/array/store4.hpp",
  "include/zfp/internal/array/traits.hpp",
  "include/zfp/internal/array/view1.hpp",
  "include/zfp/internal/array/view2.hpp",
  "include/zfp/internal/array/view3.hpp",
  "include/zfp/internal/array/view4.hpp",
  "include/zfp/internal/cfp/array1d.h",
  "include/zfp/internal/cfp/array1f.h",
  "include/zfp/internal/cfp/array2d.h",
  "include/zfp/internal/cfp/array2f.h",
  "include/zfp/internal/cfp/array3d.h",
  "include/zfp/internal/cfp/array3f.h",
  "include/zfp/internal/cfp/array4d.h",
  "include/zfp/internal/cfp/array4f.h",
  "include/zfp/internal/cfp/header.h",
  "include/zfp/internal/codec/genheader.hpp",
  "include/zfp/internal/codec/zfpheader.hpp",
  "include/zfp/internal/zfp/inline.h",
  "include/zfp/internal/zfp/macros.h",
  "include/zfp/internal/zfp/system.h",
  "include/zfp/internal/zfp/types.h",
  "include/zfp/version.h",
  "lib/cmake/zfp/cfp-targets-release.cmake",
  "lib/cmake/zfp/cfp-targets.cmake",
  "lib/cmake/zfp/zfp-config-version.cmake",
  "lib/cmake/zfp/zfp-config.cmake",
  "lib/cmake/zfp/zfp-targets-release.cmake",
  "lib/cmake/zfp/zfp-targets.cmake",
  "lib/libcfp.so",
  "lib/libcfp.so.1",
  "lib/libcfp.so.1.0.0",
  "lib/libzfp.so",
  "lib/libzfp.so.1",
  "lib/libzfp.so.1.0.0"
 ],
 "index": {
  "arch": "aarch64",
  "build": "h4de3ea5_1",
  "build_number": 1,
  "depends": [
   "_openmp_mutex >=4.5",
   "libgcc-ng >=12",
   "libstdcxx-ng >=12"
  ],
  "license": "BSD-3-Clause",
  "license_family": "BSD",
  "name": "zfp",
  "platform": "linux",
  "subdir": "linux-aarch64",
  "timestamp": 1659882542750,
  "version": "1.0.0"
 },
 "metadata_version": 1,
 "name": "zfp",
 "raw_recipe": "{% set version = \"1.0.0\" %}\n\n# This package builds 2 outputs\n#    zfp     --- C headers\n#    zfpy    --- Python package\n#\n# The build procedure actually rebuilds zfp when zfpy is being built\n# during the install phase, conda will simply ignore all the files\n# that are being copied related to zfp since they already exist in the prefix\n\npackage:\n  name: zfp\n  version: {{ version }}\n\nsource:\n  url: https://github.com/LLNL/zfp/archive/{{ version }}.tar.gz\n  sha256: fe13b03141ee9b571692aed42ff76cf37c9dcda40f9a43a808870dca3558a57c\n  patches:\n    - 100-update-cmake.patch\n\nbuild:\n  number: 1\n  script: source ${RECIPE_DIR}/build_zfp.sh  # [unix]\n  script: {{ RECIPE_DIR }}\\bld_zfp.bat  # [win]\n  run_exports:\n    # No real information, for now, let keep the defaults\n    - {{ pin_subpackage('zfp') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - make     # [unix]\n    - ninja    # [win]\n    - libgomp  # [linux]\n    - llvm-openmp  # [osx]\n\ntest:\n  commands:\n    - test -f $PREFIX/include/zfp.h                # [unix]\n    - test -f ${PREFIX}/lib/cmake/zfp/zfp-config.cmake  # [unix]\n    - if not exist %LIBRARY_INC%\\zfp.h exit 1      # [win]\n    - test -f $PREFIX/lib/libzfp.so.{{ version }}  # [linux]\n    - test -f $PREFIX/lib/libzfp${SHLIB_EXT}       # [unix]\n    - if not exist %LIBRARY_BIN%\\zfp.dll exit 1    # [win]\n    - if not exist %LIBRARY_LIB%\\zfp.lib exit 1    # [win]\n    - if not exist %LIBRARY_PREFIX%\\lib\\cmake\\zfp\\zfp-config.cmake exit 1  # [win]\n    # Command always returns 1\n    - which zfp     # [unix]\n    # They chose to specifically have a different name for the executable\n    # https://github.com/LLNL/zfp/pull/63\n    - where zfpcmd  # [win]\n\noutputs:\n  - name: zfp\n  - name: zfpy\n    build:\n      script: source ${RECIPE_DIR}/build_zfpy.sh  # [unix]\n      script: {{ RECIPE_DIR }}\\bld_zfpy.bat  # [win]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        - make     # [unix]\n        - ninja    # [win]\n        - python                                 # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n        - cython                                 # [build_platform != target_platform]\n        - numpy                                  # [build_platform != target_platform]\n      host:\n        - python\n        - numpy\n        - cython\n        - {{ pin_subpackage('zfp', exact=True) }}\n      run:\n        - python\n        - {{ pin_compatible('numpy') }}\n        # I don't think run exports work with pin exact subpackage\n        - {{ pin_subpackage('zfp', exact=True) }}\n    test:\n      imports:\n        - zfpy\n\nabout:\n  home: https://computation.llnl.gov/projects/floating-point-compression\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: Library for compressed numerical arrays that support high throughput read and write random access\n  description: |\n    zfp is an open source C/C++ library for compressed numerical arrays\n    that support high throughput read and write random access. zfp also\n    supports streaming compression of integer and floating-point data,\n    e.g., for applications that read and write large data sets to and\n    from disk. zfp is primarily written in C and C++ but also includes\n    Python and Fortran bindings.\n  doc_url: http://zfp.readthedocs.io/en/release0.5.5/\n  dev_url: https://github.com/LLNL/zfp\n\nextra:\n  recipe-maintainers:\n    - kmpaul\n    - ToreAad\n    - lindstro\n    - GarrettDMorrison\n    - hmaarrfk\n",
 "rendered_recipe": {
  "about": {
   "description": "zfp is an open source C/C++ library for compressed numerical arrays\nthat support high throughput read and write random access. zfp also\nsupports streaming compression of integer and floating-point data,\ne.g., for applications that read and write large data sets to and\nfrom disk. zfp is primarily written in C and C++ but also includes\nPython and Fortran bindings.\n",
   "dev_url": "https://github.com/LLNL/zfp",
   "doc_url": "http://zfp.readthedocs.io/en/release0.5.5/",
   "home": "https://computation.llnl.gov/projects/floating-point-compression",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Library for compressed numerical arrays that support high throughput read and write random access"
  },
  "build": {
   "number": "1",
   "run_exports": [
    "zfp >=1.0.0,<2.0a0"
   ],
   "script": "source ${RECIPE_DIR}/build_zfp.sh",
   "string": "h4de3ea5_1"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "GarrettDMorrison",
    "ToreAad",
    "hmaarrfk",
    "kmpaul",
    "lindstro"
   ]
  },
  "package": {
   "name": "zfp",
   "version": "1.0.0"
  },
  "requirements": {
   "build": [
    "_openmp_mutex 4.5 2_gnu",
    "binutils_impl_linux-aarch64 2.36.1 h026399b_2",
    "binutils_linux-aarch64 2.36 h7854541_10",
    "bzip2 1.0.8 hf897c2e_4",
    "c-ares 1.18.1 hf897c2e_0",
    "ca-certificates 2022.6.15 h4fd8a4c_0",
    "cmake 3.24.0 hcad14f8_0",
    "expat 2.4.8 ha18d298_0",
    "gcc_impl_linux-aarch64 10.4.0 hbc23e19_16",
    "gcc_linux-aarch64 10.4.0 h72ad2ee_10",
    "gxx_impl_linux-aarch64 10.4.0 hbc23e19_16",
    "gxx_linux-aarch64 10.4.0 hb08d869_10",
    "kernel-headers_linux-aarch64 4.18.0 h5b4a56d_13",
    "keyutils 1.6.1 h4e544f5_0",
    "krb5 1.19.3 h750e270_0",
    "ld_impl_linux-aarch64 2.36.1 h02ad14f_2",
    "libcurl 7.83.1 h22f3f83_0",
    "libedit 3.1.20191231 he28a2e2_2",
    "libev 4.33 h516909a_1",
    "libgcc-devel_linux-aarch64 10.4.0 hf691355_16",
    "libgcc-ng 12.1.0 h3242a24_16",
    "libgomp 12.1.0 h3242a24_16",
    "libnghttp2 1.47.0 h2b6b862_0",
    "libsanitizer 10.4.0 h69a60c7_16",
    "libssh2 1.10.0 hd8c4cff_2",
    "libstdcxx-devel_linux-aarch64 10.4.0 hf691355_16",
    "libstdcxx-ng 12.1.0 hd01590b_16",
    "libuv 1.44.2 h4e544f5_0",
    "libzlib 1.2.12 h4e544f5_2",
    "lz4-c 1.9.3 h01db608_1",
    "make 4.3 h309ac5b_1",
    "ncurses 6.3 headf329_1",
    "openssl 3.0.5 h4e544f5_1",
    "rhash 1.4.3 h4e544f5_0",
    "sysroot_linux-aarch64 2.17 h43d7e78_13",
    "xz 5.2.5 h6dd45c4_1",
    "zlib 1.2.12 h4e544f5_2",
    "zstd 1.5.2 haad177d_2"
   ],
   "host": [
    "_openmp_mutex 4.5 2_gnu",
    "libgcc-ng 12.1.0 h3242a24_16",
    "libgomp 12.1.0 h3242a24_16",
    "libstdcxx-ng 12.1.0 hd01590b_16"
   ],
   "run": [
    "_openmp_mutex >=4.5",
    "libgcc-ng >=12",
    "libstdcxx-ng >=12"
   ]
  },
  "source": {
   "patches": [
    "100-update-cmake.patch"
   ],
   "sha256": "fe13b03141ee9b571692aed42ff76cf37c9dcda40f9a43a808870dca3558a57c",
   "url": "https://github.com/LLNL/zfp/archive/1.0.0.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/include/zfp.h",
    "test -f ${PREFIX}/lib/cmake/zfp/zfp-config.cmake",
    "test -f $PREFIX/lib/libzfp.so.1.0.0",
    "test -f $PREFIX/lib/libzfp${SHLIB_EXT}",
    "which zfp"
   ]
  }
 },
 "version": "1.0.0"
}
{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.24.0",
  "conda_version": "23.3.1",
  "description": "genv lets you easily control, configure and monitor the GPU resources that you are using.\nIt is intendend to improve the life of individual GPU users as well as teams that share multi-GPU machines.\nThis project was highly inspired by pyenv and other version, package and environment management software like Conda, nvm, rbenv.\n",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "razrotenberg"
   ]
  },
  "home": "https://github.com/run-ai/genv",
  "identifiers": [],
  "keywords": [],
  "license": "AGPL-3.0-or-later",
  "license_file": "LICENSE",
  "root_pkgs": [
   "lzo 2.10 h516909a_1000",
   "joblib 1.2.0 pyhd8ed1ab_0",
   "boa 0.14.0 pyhd8ed1ab_4",
   "libgcc-ng 12.2.0 h65d4601_19",
   "anaconda-project 0.11.1 pyhd8ed1ab_0",
   "libzlib 1.2.13 h166bdaf_4",
   "_openmp_mutex 4.5 2_gnu",
   "importlib-metadata 6.2.0 pyha770c72_0",
   "xorg-libxdmcp 1.1.3 h7f98852_0",
   "pysocks 1.7.1 pyha2e5f31_6",
   "cryptography 40.0.1 py310h34c0648_0",
   "ruamel_yaml 0.15.80 py310h5764c6d_1008",
   "lerc 4.0.0 h27087fc_0",
   "tk 8.6.12 h27826a3_0",
   "urllib3 1.26.15 pyhd8ed1ab_0",
   "dataclasses 0.8 pyhc8e2a94_3",
   "ca-certificates 2022.12.7 ha878542_0",
   "tomli 2.0.1 pyhd8ed1ab_0",
   "libwebp-base 1.3.0 h0b41bf4_0",
   "clyent 1.2.2 py_1",
   "prompt_toolkit 3.0.38 hd8ed1ab_0",
   "pyrsistent 0.19.3 py310h1fa729e_0",
   "krb5 1.20.1 h81ceb04_0",
   "pcre2 10.40 hc3806b6_0",
   "sniffio 1.3.0 pyhd8ed1ab_0",
   "defusedxml 0.7.1 pyhd8ed1ab_0",
   "boltons 23.0.0 pyhd8ed1ab_0",
   "jsonpointer 2.0 py_0",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "python 3.10.10 he550d4f_0_cpython",
   "pip 23.0.1 pyhd8ed1ab_0",
   "typing-extensions 4.5.0 hd8ed1ab_0",
   "idna 3.4 pyhd8ed1ab_0",
   "jupyter_core 5.3.0 py310hff52083_0",
   "tqdm 4.65.0 pyhd8ed1ab_1",
   "filelock 3.11.0 pyhd8ed1ab_0",
   "cffi 1.15.1 py310h255011f_3",
   "libmamba 1.4.2 hcea66bb_0",
   "certifi 2022.12.7 pyhd8ed1ab_0",
   "conda-pack 0.7.0 pyh6c4a22f_0",
   "libcurl 7.88.1 hdc1c0ab_1",
   "rich 13.3.3 pyhd8ed1ab_0",
   "importlib_resources 5.12.0 pyhd8ed1ab_0",
   "py-lief 0.12.3 py310hd8f1fbe_0",
   "reproc 14.2.4 h0b41bf4_0",
   "brotlipy 0.7.0 py310h5764c6d_1005",
   "libxcb 1.13 h7f98852_1004",
   "xz 5.2.6 h166bdaf_0",
   "curl 7.88.1 hdc1c0ab_1",
   "zstd 1.5.2 h3eb15da_6",
   "traitlets 5.9.0 pyhd8ed1ab_0",
   "libmambapy 1.4.2 py310h1428755_0",
   "_libgcc_mutex 0.1 conda_forge",
   "lcms2 2.15 haa2dc70_1",
   "prompt-toolkit 3.0.38 pyha770c72_0",
   "beautifulsoup4 4.12.2 pyha770c72_0",
   "pkgutil-resolve-name 1.3.10 pyhd8ed1ab_0",
   "libffi 3.4.2 h7f98852_5",
   "ruamel.yaml.clib 0.2.7 py310h1fa729e_1",
   "pygments 2.14.0 pyhd8ed1ab_0",
   "su-exec 0.2 h166bdaf_1003",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "libpng 1.6.39 h753d276_0",
   "pycosat 0.6.4 py310h5764c6d_1",
   "ld_impl_linux-64 2.40 h41732ed_0",
   "tzdata 2023c h71feb2d_0",
   "libgomp 12.2.0 h65d4601_19",
   "openssl 3.1.0 h0b41bf4_0",
   "pthread-stubs 0.4 h36c2ea0_1001",
   "python_abi 3.10 3_cp310",
   "libiconv 1.17 h166bdaf_0",
   "reproc-cpp 14.2.4 hcb278e6_0",
   "libnsl 2.0.0 h7f98852_0",
   "pyyaml 6.0 py310h5764c6d_5",
   "pkginfo 1.9.6 pyhd8ed1ab_0",
   "fmt 9.1.0 h924138e_0",
   "libssh2 1.10.0 hf14f497_3",
   "backports 1.0 pyhd8ed1ab_3",
   "zstandard 0.19.0 py310hdeb6495_1",
   "requests 2.28.2 pyhd8ed1ab_1",
   "bzip2 1.0.8 h7f98852_4",
   "mdurl 0.1.0 pyhd8ed1ab_0",
   "pillow 9.5.0 py310h065c6d2_0",
   "libjpeg-turbo 2.1.5.1 h0b41bf4_0",
   "git 2.40.0 pl5321h3ca6407_1",
   "chardet 5.1.0 py310hff52083_0",
   "jsonpatch 1.32 pyhd8ed1ab_0",
   "conda-package-streaming 0.7.0 pyhd8ed1ab_1",
   "wcwidth 0.2.6 pyhd8ed1ab_0",
   "gettext 0.21.1 h27087fc_0",
   "pluggy 1.0.0 pyhd8ed1ab_5",
   "expat 2.5.0 hcb278e6_1",
   "jinja2 3.1.2 pyhd8ed1ab_1",
   "zipp 3.15.0 pyhd8ed1ab_0",
   "markdown-it-py 2.2.0 pyhd8ed1ab_0",
   "anaconda-client 1.11.1 pyhd8ed1ab_1",
   "soupsieve 2.3.2.post1 pyhd8ed1ab_0",
   "lz4-c 1.9.4 hcb278e6_0",
   "markupsafe 2.1.2 py310h1fa729e_0",
   "libev 4.33 h516909a_1",
   "mamba 1.4.2 py310h51d5547_0",
   "conda 23.3.1 py310hff52083_0",
   "yaml 0.2.5 h7f98852_2",
   "icu 72.1 hcb278e6_0",
   "wheel 0.40.0 pyhd8ed1ab_0",
   "pytz 2023.3 pyhd8ed1ab_0",
   "ncurses 6.3 h27087fc_1",
   "libsolv 0.7.23 h3eb15da_0",
   "pycparser 2.21 pyhd8ed1ab_0",
   "libedit 3.1.20191231 he28a2e2_2",
   "ripgrep 13.0.0 h2f28480_2",
   "charset-normalizer 3.1.0 pyhd8ed1ab_0",
   "libtiff 4.5.0 ha587672_6",
   "typing_extensions 4.5.0 pyha770c72_0",
   "jsonschema 4.17.3 pyhd8ed1ab_0",
   "patchelf 0.17.2 h58526e2_0",
   "yaml-cpp 0.7.0 h27087fc_2",
   "keyutils 1.6.1 h166bdaf_0",
   "libxml2 2.10.3 hfdac1af_6",
   "libnghttp2 1.52.0 h61bc06f_0",
   "packaging 23.0 pyhd8ed1ab_0",
   "python-libarchive-c 4.0 py310hff52083_2",
   "tornado 6.2 py310h5764c6d_1",
   "ruamel.yaml 0.17.21 py310h1fa729e_3",
   "readline 8.2 h8228510_1",
   "patch 2.7.6 h7f98852_1002",
   "libsqlite 3.40.0 h753d276_0",
   "pyopenssl 23.1.1 pyhd8ed1ab_0",
   "libarchive 3.6.2 h3d51595_0",
   "python-fastjsonschema 2.16.3 pyhd8ed1ab_0",
   "libstdcxx-ng 12.2.0 h46fd767_19",
   "setuptools 65.6.3 pyhd8ed1ab_0",
   "libuuid 2.38.1 h0b41bf4_0",
   "openjpeg 2.5.0 hfec8fc6_2",
   "liblief 0.12.3 h27087fc_0",
   "freetype 2.12.1 hca18f0e_1",
   "xorg-libxau 1.0.9 h7f98852_0",
   "toolz 0.12.0 pyhd8ed1ab_0",
   "anyio 3.6.2 pyhd8ed1ab_0",
   "watchgod 0.8.2 pyhd8ed1ab_0",
   "platformdirs 3.2.0 pyhd8ed1ab_0",
   "libexpat 2.5.0 hcb278e6_1",
   "attrs 22.2.0 pyh71513ae_0",
   "tini 0.19.0 h166bdaf_1",
   "pybind11-abi 4 hd8ed1ab_3",
   "six 1.16.0 pyh6c4a22f_0",
   "c-ares 1.18.1 h7f98852_0",
   "libdeflate 1.18 h0b41bf4_0",
   "psutil 5.9.4 py310h5764c6d_0",
   "json5 0.9.5 pyh9f0ad1d_0",
   "glob2 0.7 py_0",
   "perl 5.32.1 2_h7f98852_perl5",
   "colorama 0.4.6 pyhd8ed1ab_0",
   "conda-package-handling 2.0.2 pyh38be061_0",
   "nbformat 5.8.0 pyhd8ed1ab_0",
   "conda-env 2.6.0 1",
   "conda-forge-ci-setup 3.29.1 py310hce54274_100",
   "oniguruma 6.9.8 h166bdaf_0",
   "click 8.1.3 unix_pyhd8ed1ab_2",
   "conda-build 3.24.0 py310hff52083_1",
   "jq 1.6 h36c2ea0_1000",
   "shyaml 0.6.2 pyhd3deb0d_0"
  ],
  "summary": "GPU Environment Management",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "cdt_name": "cos6",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "docker_image": "quay.io/condaforge/linux-anvil-cos7-x86_64",
  "extend_keys": [
   "pin_run_as_build",
   "ignore_version",
   "extend_keys",
   "ignore_build_only_deps"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "numpy": "1.21",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.10",
  "r_base": "3.5",
  "target_platform": "linux-64"
 },
 "conda_pkg_format": "2",
 "files": [
  "bin/genv",
  "etc/conda/activate.d/genv_activate.sh",
  "etc/conda/deactivate.d/genv_deactivate.sh",
  "opt/genv/.flake8",
  "opt/genv/.github/workflows/sphinx.yml",
  "opt/genv/.gitignore",
  "opt/genv/.vscode/settings.json",
  "opt/genv/LICENSE",
  "opt/genv/README.md",
  "opt/genv/bin/genv",
  "opt/genv/build_env_setup.sh",
  "opt/genv/conda_build.sh",
  "opt/genv/devel/Dockerfile",
  "opt/genv/devel/shims/nvidia-smi",
  "opt/genv/devel/sshd.Dockerfile",
  "opt/genv/docs/Makefile",
  "opt/genv/docs/make.bat",
  "opt/genv/docs/source/CNAME",
  "opt/genv/docs/source/about/changelog.rst",
  "opt/genv/docs/source/conf.py",
  "opt/genv/docs/source/development/development.rst",
  "opt/genv/docs/source/development/reference.rst",
  "opt/genv/docs/source/docker/installation.rst",
  "opt/genv/docs/source/docker/overview.rst",
  "opt/genv/docs/source/docker/quickstart.rst",
  "opt/genv/docs/source/docker/usage.rst",
  "opt/genv/docs/source/index.rst",
  "opt/genv/docs/source/overview/architecture-local.png",
  "opt/genv/docs/source/overview/architecture-remote.png",
  "opt/genv/docs/source/overview/installation.rst",
  "opt/genv/docs/source/overview/overview.png",
  "opt/genv/docs/source/overview/overview.rst",
  "opt/genv/docs/source/overview/quickstart.rst",
  "opt/genv/docs/source/remote/enforcement-cycle.png",
  "opt/genv/docs/source/remote/enforcement-overview.png",
  "opt/genv/docs/source/remote/enforcement.rst",
  "opt/genv/docs/source/remote/installation.rst",
  "opt/genv/docs/source/remote/monitoring-overview.png",
  "opt/genv/docs/source/remote/monitoring.rst",
  "opt/genv/docs/source/remote/overview.rst",
  "opt/genv/docs/source/remote/usage.rst",
  "opt/genv/docs/source/usage/advanced-usage.rst",
  "opt/genv/docs/source/usage/enforcement-cycle.png",
  "opt/genv/docs/source/usage/enforcement-overview.png",
  "opt/genv/docs/source/usage/enforcement.rst",
  "opt/genv/docs/source/usage/monitoring-dashboard.png",
  "opt/genv/docs/source/usage/monitoring-overview.png",
  "opt/genv/docs/source/usage/monitoring.rst",
  "opt/genv/docs/source/usage/usage.rst",
  "opt/genv/exe/genv-devices",
  "opt/genv/exe/genv-enforce",
  "opt/genv/exe/genv-envs",
  "opt/genv/exe/genv-monitor",
  "opt/genv/exe/genv-remote",
  "opt/genv/exe/genv-usage",
  "opt/genv/genv-docker/README.md",
  "opt/genv/genv-docker/genv-container-runtime-hook.py",
  "opt/genv/genv-docker/genv-container-runtime.py",
  "opt/genv/genv-docker/genv-docker.sh",
  "opt/genv/images/example.png",
  "opt/genv/images/genv blade landscape black@4x.png",
  "opt/genv/images/genv blade landscape white@4x.png",
  "opt/genv/images/overview.gif",
  "opt/genv/images/overview_jupyterlab.gif",
  "opt/genv/libexec/genv",
  "opt/genv/libexec/genv-cf-gpu-memory",
  "opt/genv/libexec/genv-cf-gpus",
  "opt/genv/libexec/genv-cf-name",
  "opt/genv/libexec/genv-commands",
  "opt/genv/libexec/genv-config",
  "opt/genv/libexec/genv-devices",
  "opt/genv/libexec/genv-enforce",
  "opt/genv/libexec/genv-envs",
  "opt/genv/libexec/genv-exec",
  "opt/genv/libexec/genv-help",
  "opt/genv/libexec/genv-home",
  "opt/genv/libexec/genv-init",
  "opt/genv/libexec/genv-monitor",
  "opt/genv/libexec/genv-remote",
  "opt/genv/libexec/genv-root",
  "opt/genv/libexec/genv-sh-activate",
  "opt/genv/libexec/genv-sh-attach",
  "opt/genv/libexec/genv-sh-deactivate",
  "opt/genv/libexec/genv-sh-detach",
  "opt/genv/libexec/genv-status",
  "opt/genv/metadata_conda_debug.yaml",
  "opt/genv/py/genv/__init__.py",
  "opt/genv/py/genv/devices.py",
  "opt/genv/py/genv/enforce/__init__.py",
  "opt/genv/py/genv/enforce/execute.py",
  "opt/genv/py/genv/enforce/report.py",
  "opt/genv/py/genv/enforce/rules/__init__.py",
  "opt/genv/py/genv/enforce/rules/env_devices.py",
  "opt/genv/py/genv/enforce/rules/env_memory.py",
  "opt/genv/py/genv/enforce/rules/max_devices_per_user.py",
  "opt/genv/py/genv/enforce/rules/non_env_processes.py",
  "opt/genv/py/genv/enforce/survey.py",
  "opt/genv/py/genv/envs.py",
  "opt/genv/py/genv/json_.py",
  "opt/genv/py/genv/metrics/__init__.py",
  "opt/genv/py/genv/metrics/collection.py",
  "opt/genv/py/genv/metrics/export/grafana/dashboards/overview.json",
  "opt/genv/py/genv/metrics/export/grafana/grafana.ini",
  "opt/genv/py/genv/metrics/export/grafana/provisioning/dashboards/default.yml",
  "opt/genv/py/genv/metrics/export/grafana/provisioning/datasources/default.yml",
  "opt/genv/py/genv/metrics/export/prometheus/prometheus.yml",
  "opt/genv/py/genv/metrics/metric.py",
  "opt/genv/py/genv/metrics/publisher.py",
  "opt/genv/py/genv/metrics/spec.py",
  "opt/genv/py/genv/metrics/specs.py",
  "opt/genv/py/genv/metrics/type.py",
  "opt/genv/py/genv/nvidia_smi.py",
  "opt/genv/py/genv/os_.py",
  "opt/genv/py/genv/poll.py",
  "opt/genv/py/genv/processes.py",
  "opt/genv/py/genv/remote/__init__.py",
  "opt/genv/py/genv/remote/devices.py",
  "opt/genv/py/genv/remote/enforce/__init__.py",
  "opt/genv/py/genv/remote/enforce/execute.py",
  "opt/genv/py/genv/remote/envs.py",
  "opt/genv/py/genv/remote/metrics/__init__.py",
  "opt/genv/py/genv/remote/metrics/collection.py",
  "opt/genv/py/genv/remote/processes.py",
  "opt/genv/py/genv/remote/snapshot.py",
  "opt/genv/py/genv/remote/ssh.py",
  "opt/genv/py/genv/remote/utils.py",
  "opt/genv/py/genv/runners/__init__.py",
  "opt/genv/py/genv/runners/local.py",
  "opt/genv/py/genv/runners/runner.py",
  "opt/genv/py/genv/runners/ssh.py",
  "opt/genv/py/genv/snapshot.py",
  "opt/genv/py/genv/utils.py",
  "opt/genv/py/setup.py",
  "opt/genv/shims/docker",
  "opt/genv/shims/nvidia-smi"
 ],
 "index": {
  "arch": "x86_64",
  "build": "ha770c72_0",
  "build_number": 0,
  "depends": [
   "python"
  ],
  "license": "AGPL-3.0-or-later",
  "name": "genv",
  "platform": "linux",
  "subdir": "linux-64",
  "timestamp": 1681392936459,
  "version": "0.8.0"
 },
 "metadata_version": 1,
 "name": "genv",
 "raw_recipe": "{% set version = \"0.8.0\" %}\n\npackage:\n  name: genv\n  version: {{ version }}\n\nsource:\n  url: https://github.com/run-ai/genv/archive/v{{ version }}.tar.gz\n  sha256: a1c9368da297d149316e0d3778f0ff9ac7c4512572a111f4cb9a62e556904993\n\nbuild:\n  skip: true  # [win]\n  number: 0\n\nrequirements:\n  run:\n    - python\n\ntest:\n  commands:\n    - genv help\n\nabout:\n  home: https://github.com/run-ai/genv\n  summary: GPU Environment Management\n  description: |\n    genv lets you easily control, configure and monitor the GPU resources that you are using.\n    It is intendend to improve the life of individual GPU users as well as teams that share multi-GPU machines.\n    This project was highly inspired by pyenv and other version, package and environment management software like Conda, nvm, rbenv.\n  license: AGPL-3.0-or-later\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - razrotenberg\n",
 "rendered_recipe": {
  "about": {
   "description": "genv lets you easily control, configure and monitor the GPU resources that you are using.\nIt is intendend to improve the life of individual GPU users as well as teams that share multi-GPU machines.\nThis project was highly inspired by pyenv and other version, package and environment management software like Conda, nvm, rbenv.\n",
   "home": "https://github.com/run-ai/genv",
   "license": "AGPL-3.0-or-later",
   "license_file": "LICENSE",
   "summary": "GPU Environment Management"
  },
  "build": {
   "number": "0",
   "string": "ha770c72_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "razrotenberg"
   ]
  },
  "package": {
   "name": "genv",
   "version": "0.8.0"
  },
  "requirements": {
   "build": [],
   "run": [
    "python"
   ]
  },
  "source": {
   "sha256": "a1c9368da297d149316e0d3778f0ff9ac7c4512572a111f4cb9a62e556904993",
   "url": "https://github.com/run-ai/genv/archive/v0.8.0.tar.gz"
  },
  "test": {
   "commands": [
    "genv help"
   ]
  }
 },
 "version": "0.8.0"
}
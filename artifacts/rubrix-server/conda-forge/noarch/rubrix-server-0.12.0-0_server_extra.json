{
 "about": {
  "channels": [
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.21.8",
  "conda_private": false,
  "conda_version": "4.11.0",
  "description": "Rubrix is a **production-ready Python framework for exploring, annotating, and\nmanaging data** in NLP projects.\n\nKey features:\n\n  - **Open**: Rubrix is free, open-source, and 100% compatible with major NLP\n    libraries (Hugging Face transformers, spaCy, Stanford Stanza, Flair, etc.).\n    In fact, you can use and combine your preferred libraries without implementing\n    any specific interface.\n\n  - **End-to-end**: Most annotation tools treat data collection as a one-off\n    activity at the beginning of each project. In real-world projects, data\n    collection is a key activity of the iterative process of ML model development.\n    Once a model goes into production, you want to monitor and analyze its\n    predictions, and collect more data to improve your model over time. Rubrix\n    is designed to close this gap, enabling you to iterate as much as you need.\n\n  - **User and Developer Experience**: The key to sustainable NLP solutions is to\n    make it easier for everyone to contribute to projects. Domain experts should\n    feel comfortable interpreting and annotating data. Data scientists should feel\n    free to experiment and iterate. Engineers should feel in control of data\n    pipelines. Rubrix optimizes the experience for these core users to make your\n    teams more productive.\n\n  - **Beyond hand-labeling**: Classical hand labeling workflows are costly and\n    inefficient, but having humans-in-the-loop is essential. Easily combine\n    hand-labeling with active learning, bulk-labeling, zero-shot models, and\n    weak-supervision in novel data annotation workflows.\n\nPyPI: [https://pypi.org/project/rubrix](https://pypi.org/project/rubrix)\n",
  "dev_url": "https://github.com/recognai/rubrix",
  "doc_url": "https://rubrix.readthedocs.io/en/stable/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "feedstock-name": "rubrix",
   "final": true,
   "parent_recipe": {
    "name": "rubrix-meta",
    "path": "/home/conda/recipe_root",
    "version": "0.12.0"
   },
   "recipe-maintainers": [
    "sugatoray",
    "dcfidalgo"
   ]
  },
  "home": "https://recogn.ai",
  "identifiers": [],
  "keywords": [],
  "license": "Apache-2.0",
  "license_file": "LICENSE",
  "root_pkgs": [
   "pysocks 1.7.1 py39hf3d152e_4",
   "psutil 5.9.0 py39h3811e60_0",
   "six 1.16.0 pyh6c4a22f_0",
   "yaml 0.2.5 h7f98852_2",
   "su-exec 0.2 h516909a_1002",
   "libiconv 1.16 h516909a_0",
   "conda 4.11.0 py39hf3d152e_0",
   "libnsl 2.0.0 h7f98852_0",
   "idna 3.3 pyhd8ed1ab_0",
   "typing_extensions 4.1.1 pyha770c72_0",
   "ripgrep 13.0.0 h2f28480_2",
   "xz 5.2.5 h516909a_1",
   "rich 11.2.0 pyhd8ed1ab_0",
   "anaconda-client 1.8.0 pyhd8ed1ab_0",
   "patch 2.7.6 h7f98852_1002",
   "libgomp 11.2.0 h1d223b6_13",
   "charset-normalizer 2.0.12 pyhd8ed1ab_0",
   "pycosat 0.6.3 py39h3811e60_1009",
   "backports.functools_lru_cache 1.6.4 pyhd8ed1ab_0",
   "libarchive 3.5.2 hccf745f_1",
   "beautifulsoup4 4.10.0 pyha770c72_0",
   "libzlib 1.2.11 h36c2ea0_1013",
   "ncurses 6.3 h9c3ff4c_0",
   "attrs 21.4.0 pyhd8ed1ab_0",
   "tzdata 2021e he74cb21_0",
   "openssl 1.1.1l h7f98852_0",
   "wheel 0.37.1 pyhd8ed1ab_0",
   "pybind11-abi 4 hd8ed1ab_3",
   "clyent 1.2.2 py_1",
   "zstd 1.5.2 ha95c52a_0",
   "dataclasses 0.8 pyhc8e2a94_3",
   "c-ares 1.18.1 h7f98852_0",
   "pycparser 2.21 pyhd8ed1ab_0",
   "expat 2.4.6 h27087fc_0",
   "python-libarchive-c 4.0 py39hf3d152e_0",
   "nbformat 5.1.3 pyhd8ed1ab_0",
   "zlib 1.2.11 h36c2ea0_1013",
   "icu 69.1 h9c3ff4c_0",
   "future 0.18.2 py39hf3d152e_4",
   "lz4-c 1.9.3 h9c3ff4c_1",
   "keyutils 1.6.1 h166bdaf_0",
   "reproc-cpp 14.2.3 h9c3ff4c_0",
   "libxml2 2.9.12 h885dcf4_1",
   "pcre2 10.37 h032f7d1_0",
   "zipp 3.7.0 pyhd8ed1ab_1",
   "ipython_genutils 0.2.0 py_1",
   "conda-package-handling 1.7.3 py39h3811e60_1",
   "traitlets 5.1.1 pyhd8ed1ab_0",
   "python-dateutil 2.8.2 pyhd8ed1ab_0",
   "_libgcc_mutex 0.1 conda_forge",
   "gettext 0.19.8.1 h73d1719_1008",
   "jsonschema 4.4.0 pyhd8ed1ab_0",
   "py-lief 0.11.5 py39he80948d_1",
   "ruamel.yaml.clib 0.2.6 py39h3811e60_0",
   "certifi 2021.10.8 py39hf3d152e_1",
   "setuptools 60.9.3 py39hf3d152e_0",
   "libev 4.33 h516909a_1",
   "prompt-toolkit 3.0.27 pyha770c72_0",
   "soupsieve 2.3.1 pyhd8ed1ab_0",
   "ca-certificates 2021.10.8 ha878542_0",
   "bzip2 1.0.8 h7f98852_4",
   "readline 8.1 h46c0cb4_0",
   "python_abi 3.9 2_cp39",
   "wcwidth 0.2.5 pyh9f0ad1d_2",
   "importlib-metadata 4.11.2 py39hf3d152e_0",
   "libcurl 7.81.0 h2574ce0_0",
   "ld_impl_linux-64 2.36.1 hea4e1c9_2",
   "filelock 3.6.0 pyhd8ed1ab_0",
   "jupyter_core 4.9.2 py39hf3d152e_0",
   "prompt_toolkit 3.0.27 hd8ed1ab_0",
   "pytz 2021.3 pyhd8ed1ab_0",
   "json5 0.9.5 pyh9f0ad1d_0",
   "jinja2 3.0.3 pyhd8ed1ab_0",
   "libsolv 0.7.19 h780b84a_5",
   "libuuid 2.32.1 h7f98852_1000",
   "markupsafe 2.1.0 py39hb9d737c_0",
   "yaml-cpp 0.6.3 he1b5a44_4",
   "commonmark 0.9.1 py_0",
   "_openmp_mutex 4.5 1_gnu",
   "ruamel.yaml 0.17.21 py39h3811e60_0",
   "tk 8.6.12 h27826a3_0",
   "reproc 14.2.3 h7f98852_0",
   "importlib_resources 5.4.0 pyhd8ed1ab_0",
   "liblief 0.11.5 h9c3ff4c_1",
   "perl 5.32.1 2_h7f98852_perl5",
   "sqlite 3.37.0 h9cd32fc_0",
   "patchelf 0.14.5 h58526e2_0",
   "libssh2 1.10.0 ha56f1ee_2",
   "libstdcxx-ng 11.2.0 he4da1e4_13",
   "pkginfo 1.8.2 pyhd8ed1ab_0",
   "tini 0.19.0 h7f98852_0",
   "glob2 0.7 py_0",
   "krb5 1.19.2 h3790be6_4",
   "cffi 1.15.0 py39h4bc2ebd_0",
   "inotify_simple 1.3.5 pyha770c72_3",
   "joblib 1.1.0 pyhd8ed1ab_0",
   "pyyaml 6.0 py39h3811e60_3",
   "python 3.9.10 h85951f9_2_cpython",
   "ruamel_yaml 0.15.80 py39h3811e60_1006",
   "colorama 0.4.4 pyh9f0ad1d_0",
   "chardet 4.0.0 py39hf3d152e_2",
   "pyopenssl 22.0.0 pyhd8ed1ab_0",
   "backports 1.0 py_2",
   "pygments 2.11.2 pyhd8ed1ab_0",
   "git 2.35.1 pl5321h36853c3_0",
   "libnghttp2 1.47.0 h727a467_0",
   "lzo 2.10 h516909a_1000",
   "libffi 3.4.2 h7f98852_5",
   "tqdm 4.63.0 pyhd8ed1ab_0",
   "requests 2.27.1 pyhd8ed1ab_0",
   "pyrsistent 0.18.1 py39h3811e60_0",
   "cryptography 36.0.1 py39h95dcef6_0",
   "conda-build 3.21.8 py39hf3d152e_0",
   "urllib3 1.26.8 pyhd8ed1ab_1",
   "libedit 3.1.20191231 he28a2e2_2",
   "brotlipy 0.7.0 py39h3811e60_1003",
   "libgcc-ng 11.2.0 h1d223b6_13",
   "curl 7.81.0 h2574ce0_0",
   "oniguruma 6.9.7.1 h7f98852_0",
   "conda-forge-ci-setup 3.18.4 py39h69ce9fc_100",
   "conda-env 2.6.0 0",
   "libmambapy 0.19.1 py39h8bfa403_0",
   "jq 1.6 h36c2ea0_1000",
   "click 8.0.4 py39hf3d152e_0",
   "libmamba 0.19.1 h3985d26_0",
   "pip 22.0.4 pyhd8ed1ab_0",
   "watchgod 0.7 pyhd8ed1ab_0",
   "boa 0.8.2 pyha770c72_0",
   "shyaml 0.6.2 pyhd3deb0d_0",
   "mamba 0.19.1 py39hfa8f2c8_0"
  ],
  "summary": "Open-source tool for exploring, labeling, and monitoring data for NLP projects.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "cdt_name": "cos6",
  "channel_sources": "conda-forge",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "docker_image": "quay.io/condaforge/linux-anvil-cos7-x86_64",
  "extend_keys": [
   "ignore_version",
   "ignore_build_only_deps",
   "pin_run_as_build",
   "extend_keys"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "numpy": "1.16",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.9",
  "r_base": "3.5",
  "target_platform": "linux-64"
 },
 "files": [],
 "index": {
  "arch": null,
  "build": "0_server_extra",
  "build_number": 0,
  "depends": [
   "aiofiles >=0.6.0,<0.7.0",
   "brotli-asgi >=1.1.0,<1.2.0",
   "deprecated >=1.2.0,<1.3.0",
   "ecdsa <0.15.0",
   "fastapi >=0.63.0,<0.64.0",
   "hurry.filesize",
   "luqum >=0.11.0,<0.12.0",
   "opensearch-py >=1.0.0,<1.1.0",
   "passlib >=1.7.4,<1.8.0",
   "psutil >=5.8.0,<5.9.0",
   "pyasn1 0.4.8",
   "python-jose >=3.2.0,<3.3.0",
   "python-multipart >=0.0.5,<0.1.0",
   "pyyaml >=5.4.1,<5.5.0",
   "rsa 4.8",
   "rubrix 0.12.0.*",
   "scikit-learn >=0.24.2",
   "stopwordsiso >=0.6.1,<0.7.0",
   "uvicorn-standard >0.15.0,<0.18.0"
  ],
  "license": "Apache-2.0",
  "name": "rubrix-server",
  "noarch": "generic",
  "platform": null,
  "subdir": "noarch",
  "timestamp": 1646757960627,
  "version": "0.12.0"
 },
 "metadata_version": 1,
 "name": "rubrix-server",
 "raw_recipe": "# This file created by conda-build 3.21.8\n# ------------------------------------------------\n\npackage:\n  name: rubrix-server\n  version: 0.12.0\nsource:\n  sha256: c49167609c65fe6793093173921b164891a243661fa006b7a15b72d09f350255\n  url: https://pypi.io/packages/source/r/rubrix/rubrix-0.12.0.tar.gz\nbuild:\n  noarch: generic\n  number: 0\n  string: 0_server_extra\nrequirements:\n  build: []\n  run:\n    - Deprecated >=1.2.0,<1.3.0\n    - PyYAML >=5.4.1,<5.5.0\n    - aiofiles >=0.6.0,<0.7.0\n    - brotli-asgi >=1.1.0,<1.2.0\n    - ecdsa <0.15.0\n    - fastapi >=0.63.0,<0.64.0\n    - hurry.filesize\n    - luqum >=0.11.0,<0.12.0\n    - opensearch-py >=1.0.0,<1.1.0\n    - passlib >=1.7.4,<1.8.0\n    - psutil >=5.8.0,<5.9.0\n    - pyasn1 ==0.4.8\n    - python-jose >=3.2.0,<3.3.0\n    - python-multipart >=0.0.5,<0.1.0\n    - rsa ==4.8\n    - rubrix 0.12.0.*\n    - scikit-learn >=0.24.2\n    - stopwordsiso >=0.6.1,<0.7.0\n    - uvicorn-standard >0.15.0,<0.18.0\ntest:\n  commands:\n    - pip check\n  imports:\n    - rubrix\n    - rubrix.client\n    - rubrix.server.server\n  requires:\n    - pip\nabout:\n  description: \"Rubrix is a **production-ready Python framework for exploring, annotating,\\\n    \\ and\\nmanaging data** in NLP projects.\\n\\nKey features:\\n\\n  - **Open**: Rubrix\\\n    \\ is free, open-source, and 100% compatible with major NLP\\n    libraries (Hugging\\\n    \\ Face transformers, spaCy, Stanford Stanza, Flair, etc.).\\n    In fact, you can\\\n    \\ use and combine your preferred libraries without implementing\\n    any specific\\\n    \\ interface.\\n\\n  - **End-to-end**: Most annotation tools treat data collection\\\n    \\ as a one-off\\n    activity at the beginning of each project. In real-world projects,\\\n    \\ data\\n    collection is a key activity of the iterative process of ML model\\\n    \\ development.\\n    Once a model goes into production, you want to monitor and\\\n    \\ analyze its\\n    predictions, and collect more data to improve your model over\\\n    \\ time. Rubrix\\n    is designed to close this gap, enabling you to iterate as\\\n    \\ much as you need.\\n\\n  - **User and Developer Experience**: The key to sustainable\\\n    \\ NLP solutions is to\\n    make it easier for everyone to contribute to projects.\\\n    \\ Domain experts should\\n    feel comfortable interpreting and annotating data.\\\n    \\ Data scientists should feel\\n    free to experiment and iterate. Engineers should\\\n    \\ feel in control of data\\n    pipelines. Rubrix optimizes the experience for\\\n    \\ these core users to make your\\n    teams more productive.\\n\\n  - **Beyond hand-labeling**:\\\n    \\ Classical hand labeling workflows are costly and\\n    inefficient, but having\\\n    \\ humans-in-the-loop is essential. Easily combine\\n    hand-labeling with active\\\n    \\ learning, bulk-labeling, zero-shot models, and\\n    weak-supervision in novel\\\n    \\ data annotation workflows.\\n\\nPyPI: [https://pypi.org/project/rubrix](https://pypi.org/project/rubrix)\\n\"\n  dev_url: https://github.com/recognai/rubrix\n  doc_url: https://rubrix.readthedocs.io/en/stable/\n  home: https://recogn.ai\n  license: Apache-2.0\n  license_file: LICENSE\n  summary: Open-source tool for exploring, labeling, and monitoring data for NLP projects.\nextra:\n  copy_test_source_files: true\n  feedstock-name: rubrix\n  final: true\n  recipe-maintainers:\n    - dcfidalgo\n    - sugatoray\n",
 "rendered_recipe": {
  "about": {
   "description": "Rubrix is a **production-ready Python framework for exploring, annotating, and\nmanaging data** in NLP projects.\n\nKey features:\n\n  - **Open**: Rubrix is free, open-source, and 100% compatible with major NLP\n    libraries (Hugging Face transformers, spaCy, Stanford Stanza, Flair, etc.).\n    In fact, you can use and combine your preferred libraries without implementing\n    any specific interface.\n\n  - **End-to-end**: Most annotation tools treat data collection as a one-off\n    activity at the beginning of each project. In real-world projects, data\n    collection is a key activity of the iterative process of ML model development.\n    Once a model goes into production, you want to monitor and analyze its\n    predictions, and collect more data to improve your model over time. Rubrix\n    is designed to close this gap, enabling you to iterate as much as you need.\n\n  - **User and Developer Experience**: The key to sustainable NLP solutions is to\n    make it easier for everyone to contribute to projects. Domain experts should\n    feel comfortable interpreting and annotating data. Data scientists should feel\n    free to experiment and iterate. Engineers should feel in control of data\n    pipelines. Rubrix optimizes the experience for these core users to make your\n    teams more productive.\n\n  - **Beyond hand-labeling**: Classical hand labeling workflows are costly and\n    inefficient, but having humans-in-the-loop is essential. Easily combine\n    hand-labeling with active learning, bulk-labeling, zero-shot models, and\n    weak-supervision in novel data annotation workflows.\n\nPyPI: [https://pypi.org/project/rubrix](https://pypi.org/project/rubrix)\n",
   "dev_url": "https://github.com/recognai/rubrix",
   "doc_url": "https://rubrix.readthedocs.io/en/stable/",
   "home": "https://recogn.ai",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "Open-source tool for exploring, labeling, and monitoring data for NLP projects."
  },
  "build": {
   "noarch": "generic",
   "number": 0,
   "string": "0_server_extra"
  },
  "extra": {
   "copy_test_source_files": true,
   "feedstock-name": "rubrix",
   "final": true,
   "recipe-maintainers": [
    "dcfidalgo",
    "sugatoray"
   ]
  },
  "package": {
   "name": "rubrix-server",
   "version": "0.12.0"
  },
  "requirements": {
   "build": [],
   "run": [
    "Deprecated >=1.2.0,<1.3.0",
    "PyYAML >=5.4.1,<5.5.0",
    "aiofiles >=0.6.0,<0.7.0",
    "brotli-asgi >=1.1.0,<1.2.0",
    "ecdsa <0.15.0",
    "fastapi >=0.63.0,<0.64.0",
    "hurry.filesize",
    "luqum >=0.11.0,<0.12.0",
    "opensearch-py >=1.0.0,<1.1.0",
    "passlib >=1.7.4,<1.8.0",
    "psutil >=5.8.0,<5.9.0",
    "pyasn1 ==0.4.8",
    "python-jose >=3.2.0,<3.3.0",
    "python-multipart >=0.0.5,<0.1.0",
    "rsa ==4.8",
    "rubrix 0.12.0.*",
    "scikit-learn >=0.24.2",
    "stopwordsiso >=0.6.1,<0.7.0",
    "uvicorn-standard >0.15.0,<0.18.0"
   ]
  },
  "source": {
   "sha256": "c49167609c65fe6793093173921b164891a243661fa006b7a15b72d09f350255",
   "url": "https://pypi.io/packages/source/r/rubrix/rubrix-0.12.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "rubrix",
    "rubrix.client",
    "rubrix.server.server"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "version": "0.12.0"
}
{
 "Tests":{
  "__set__":true,
  "elements":[
   "propka"
  ]
 },
 "Tests.hybrid36":{
  "__set__":true,
  "elements":[
   "propka"
  ]
 },
 "Tests.pkacalc_test":{
  "__set__":true,
  "elements":[
   "propka"
  ]
 },
 "Tests.runtest":{
  "__set__":true,
  "elements":[
   "propka"
  ]
 },
 "tests":{
  "__set__":true,
  "elements":[
   "ablog",
   "adagio",
   "adversarial-robustness-toolbox",
   "aesara",
   "aiida-castep",
   "aiida-core",
   "aiida-pseudo",
   "aiobotocore",
   "aiomysql",
   "airflow",
   "alive-progress",
   "amset",
   "andes",
   "arelle-release",
   "arosics",
   "artificial-adversary",
   "ascii_magic",
   "astroid",
   "atlassian-python-api",
   "atom",
   "autodynatrace",
   "autouri",
   "avalanche-lib",
   "awacs",
   "aws-parallelcluster",
   "awslogs",
   "backstage",
   "bamnostic",
   "baycomp",
   "benchmark-4dn",
   "biom-format",
   "bionc",
   "birch",
   "birdy",
   "blimpy",
   "borb",
   "bqplot",
   "btrack",
   "buildver",
   "bulk",
   "burau",
   "caper",
   "causalml",
   "cbsyst",
   "cellpy",
   "chebfun",
   "chemex",
   "clisops",
   "cloudpathlib",
   "cmip6_preprocessing",
   "cmreshandler",
   "cmyt",
   "codext",
   "compaction",
   "conda-store-server",
   "condorpy",
   "crccheck",
   "crystals",
   "csv-diff",
   "cyberpandas",
   "daops",
   "dataframe_image",
   "dbt",
   "dbxfs",
   "decaylanguage",
   "deepforest",
   "deeptime",
   "dexplot",
   "diffprivlib",
   "django-versatileimagefield",
   "djangocms-admin-style",
   "dlint",
   "doppel-cli",
   "dphtools",
   "dpu-utils",
   "dvclive",
   "e3sm_diags",
   "edgetest",
   "edgetest-conda",
   "edgetest-hub",
   "edgetest-pip-tools",
   "embetter",
   "emperor",
   "erdantic",
   "esmlab",
   "eventkit",
   "explainerdashboard",
   "extract_model",
   "fair-research-login",
   "fancylog",
   "farmos",
   "fasttsne",
   "ffx",
   "flake8-simplify",
   "flask-restless",
   "flask-restplus",
   "flask-security-too",
   "flox",
   "foundry_ml",
   "fps",
   "fugue",
   "gemgis",
   "genestboost",
   "geoarray",
   "geofileops",
   "ghost.py",
   "gitflow",
   "glidertools",
   "glymur",
   "google-cloud-bigquery",
   "google-cloud-monitoring",
   "google-cloud-resource-manager",
   "goosebib",
   "goosehdf5",
   "gpflow",
   "gputools",
   "graspy",
   "graypy",
   "grayskull",
   "greedy",
   "gridtest",
   "gruut",
   "gruut-ipa",
   "hackernote",
   "hickle",
   "histogrammar",
   "human-learn",
   "hydrofunctions",
   "ibm_db",
   "icet",
   "igl",
   "imagedataextractor",
   "implicit",
   "intake-accumulo",
   "intake-geopandas",
   "intake-parquet",
   "intake-spark",
   "iohexperimenter",
   "ioos_qc",
   "ipygany",
   "ipyvue",
   "ipywebrtc",
   "isofit",
   "jaws",
   "jesth",
   "jupyter_server",
   "jupyterlab-git",
   "jupyterlab-pullrequests",
   "jupytext",
   "kbatch",
   "kedro-neptune",
   "kim-convergence",
   "kim-edn",
   "kim-property",
   "kylinpy",
   "labelme",
   "landlab",
   "larch",
   "lava",
   "lifelines",
   "litemark",
   "llnl-sina",
   "localtileserver",
   "looker-sdk",
   "lux-api",
   "magicgui",
   "magpylib",
   "marinvaders",
   "matrixprofile",
   "medcam",
   "mesmerize-core",
   "metview-python",
   "mikeio",
   "mktestdocs",
   "mlconjug3",
   "mleap",
   "modelbase",
   "mols2grid",
   "moviepy",
   "mpire",
   "mpl-interactions",
   "mpl_plotter",
   "msal",
   "muttlib",
   "mvt",
   "nb_cron",
   "nbgitpuller-link",
   "ncar-jobqueue",
   "neptune-client",
   "neurokit2",
   "neutronics_material_maker",
   "notion-client",
   "nr.types",
   "onnx-caffe2",
   "ooipy",
   "openamundsen",
   "openfisca-france",
   "openmichrom",
   "openskill",
   "optimade",
   "optuna",
   "osmapi",
   "otwrapy",
   "panda3d_viewer",
   "pandera-core",
   "panedr",
   "pangeo-forge-recipes",
   "param_persist",
   "pastel",
   "pathy",
   "pcmdi_metrics",
   "pdfme",
   "pdpipe",
   "peppy",
   "pfapack",
   "planetary-computer",
   "plantcv",
   "plonk",
   "plum-dispatch",
   "point_cloud_utils",
   "polyfempy",
   "portalocker",
   "poster",
   "probed",
   "propka",
   "py-cordex",
   "py-tools-ds",
   "pyannote.core",
   "pyathena",
   "pybtex",
   "pycroscopy",
   "pycsep",
   "pydeck",
   "pydifact",
   "pygments",
   "pygpcca",
   "pykafka",
   "pyls-memestra",
   "pymapd",
   "pymatsolver",
   "pymc-base",
   "pyomeca",
   "pyomniscidb",
   "pyoos",
   "pyopenrivercam",
   "pyprocessmacro",
   "pyproject-metadata",
   "pyremo",
   "pyrobuf",
   "pyrsmq",
   "pystac",
   "pystac-client",
   "pysyncrosim",
   "pytermgui",
   "python-flair",
   "python-fsutil",
   "python-geotiff",
   "python-gitlab",
   "python-utils",
   "pytmc",
   "pyusid",
   "pyxel-sim",
   "qhub",
   "qme",
   "quacc",
   "quickle",
   "quilt",
   "quilt3",
   "rabpro",
   "radioactivedecay",
   "raven-wps",
   "reacnetgenerator",
   "reciprocalspaceship",
   "redframes",
   "remove_dagmc_tags",
   "riccati",
   "rivgraph",
   "rse",
   "rubicon-ml",
   "sanic",
   "saws",
   "scikit-lego",
   "scikit-partial",
   "scikit-time",
   "sed-plume",
   "seqlike",
   "servicestack",
   "shared",
   "sheet2dict",
   "sketchnu",
   "small-text",
   "smdebug-rulesconfig",
   "snntoolbox",
   "spatialmath-python",
   "sphinx-js",
   "stanza",
   "stitchm",
   "stuf",
   "suds-jurko",
   "sumy",
   "superset",
   "suspect",
   "swot_simulator",
   "tempeh",
   "terrainbento",
   "textnets",
   "theano-pymc",
   "theseus-ai",
   "thredds_crawler",
   "tifftools",
   "tinydb",
   "tomlkit",
   "tranquilizer",
   "triad",
   "trio-asyncio",
   "trio_asyncio",
   "tsfresh",
   "tsod",
   "typhos",
   "tyssue",
   "ukpopulation",
   "verta",
   "viewable",
   "vizlo",
   "waternetworkanalysis",
   "webdavclient3",
   "wrighttools",
   "xclim",
   "xcube_geodb",
   "xdmfwrite_h5py",
   "xmip",
   "xopt",
   "xplique",
   "xrd_simulator",
   "xsum",
   "xugrid",
   "xyzservices",
   "yarg",
   "yggdrasil",
   "yodatools",
   "yt_astro_analysis"
  ]
 },
 "tests._common":{
  "__set__":true,
  "elements":[
   "clisops",
   "daops"
  ]
 },
 "tests._constants":{
  "__set__":true,
  "elements":[
   "pyomeca"
  ]
 },
 "tests._exporter_targets":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests._helpers":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests._test_core_strings":{
  "__set__":true,
  "elements":[
   "emperor"
  ]
 },
 "tests._test_format_strings":{
  "__set__":true,
  "elements":[
   "emperor"
  ]
 },
 "tests._testutils":{
  "__set__":true,
  "elements":[
   "aiomysql"
  ]
 },
 "tests._util":{
  "__set__":true,
  "elements":[
   "mpl-interactions"
  ]
 },
 "tests._utils":{
  "__set__":true,
  "elements":[
   "btrack"
  ]
 },
 "tests.acceptance":{
  "__set__":true,
  "elements":[
   "readchar"
  ]
 },
 "tests.access_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.actions":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.actions.conftest":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.actions.test_core_actions":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.actions.test_store_metric_action":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.actions.test_validation_operators":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.actions.test_validation_operators_in_data_context":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.admin":{
  "__set__":true,
  "elements":[
   "django-versatileimagefield"
  ]
 },
 "tests.aggregate_test":{
  "__set__":true,
  "elements":[
   "eventkit"
  ]
 },
 "tests.aiotest":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.aiotest.conftest":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.aiotest.test_add_reader":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.aiotest.test_callback":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.aiotest.test_coroutine":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.aiotest.test_network":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.aiotest.test_thread":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.aiotest.test_timer":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.all_sets_nightly_model_vs_model":{
  "__set__":true,
  "elements":[
   "e3sm_diags"
  ]
 },
 "tests.all_sets_nightly_model_vs_obs":{
  "__set__":true,
  "elements":[
   "e3sm_diags"
  ]
 },
 "tests.all_tests":{
  "__set__":true,
  "elements":[
   "emperor"
  ]
 },
 "tests.als_test":{
  "__set__":true,
  "elements":[
   "implicit"
  ]
 },
 "tests.animations":{
  "__set__":true,
  "elements":[
   "alive-progress"
  ]
 },
 "tests.animations.test_bars":{
  "__set__":true,
  "elements":[
   "alive-progress"
  ]
 },
 "tests.animations.test_spinners":{
  "__set__":true,
  "elements":[
   "alive-progress"
  ]
 },
 "tests.animations.test_utils":{
  "__set__":true,
  "elements":[
   "alive-progress"
  ]
 },
 "tests.api":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.api.client":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.api.client.local_client":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.api.common":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.api.common.mark_tasks":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.app":{
  "__set__":true,
  "elements":[
   "ghost.py"
  ]
 },
 "tests.approximate_als_test":{
  "__set__":true,
  "elements":[
   "implicit"
  ]
 },
 "tests.asyncmock":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.attacks":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.conftest":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.conftest":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_adversarial_asr":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_adversarial_texture_pytorch":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_auto_attack":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_auto_projected_gradient_descent":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_boundary":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_brendel_and_bethge":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_dpatch":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_dpatch_robust":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_fast_gradient":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_feature_adversaries":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_frame_saliency":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_geometric_decision_based_attack":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_imperceptible_asr":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_imperceptible_asr_pytorch":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_laser_attack":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_lowprofool":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_momentum_iterative_method":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_over_the_air":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_pe_malware_attack":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_shadow_attack":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_sign_opt":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.evasion.test_square_attack":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.attribute_inference":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.attribute_inference.test_baseline":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.attribute_inference.test_black_box":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.attribute_inference.test_meminf_based":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.attribute_inference.test_true_label_baseline":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.attribute_inference.test_white_box_decision_tree":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.attribute_inference.test_white_box_lifestyle_decision_tree":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.membership_inference":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.membership_inference.test_black_box":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.membership_inference.test_black_box_rule_based":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.membership_inference.test_label_only_boundary_distance":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.membership_inference.test_label_only_gap_attack":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.membership_inference.test_shadow_models":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.model_inversion":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.model_inversion.test_mi_face":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.test_attribute_inference":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.test_membership_inference":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.test_model_inversion":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.inference.test_reconstruction":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.poison":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.poison.test_audio_perturbations":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.poison.test_backdoor_attack_dgm_red":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.poison.test_backdoor_attack_dgm_trail":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.poison.test_bullseye_polytope_attack":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.poison.test_clean_label_backdoor_attack":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.poison.test_gradient_matching_attack":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.poison.test_hidden_trigger_backdoor":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.poison.test_image_perturbations":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.poison.test_sleeper_agent_attack":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_adversarial_embedding":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_adversarial_patch":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_backdoor_attack":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_carlini":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_copycat_cnn":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_decision_tree_attack":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_deepfool":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_elastic_net":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_feature_collision":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_functionally_equivalent_extraction":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_graphite":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_hclu":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_hop_skip_jump":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_input_filter":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_iterative_method":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_knockoff_nets":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_newtonfool":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_pixel_attack":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_poisoning_attack_svm":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_projected_gradient_descent":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_saliency_map":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_shapeshifter":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_simba":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_spatial_transformation":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_targeted_universal_perturbation":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_threshold_attack":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_universal_perturbation":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_virtual_adversarial":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_wasserstein":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.test_zoo":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attacks.utils":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.attributions":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_callable":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_common":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_deconvnet":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_grad_cam":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_grad_cam_pp":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_gradient_input":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_guided_backprop":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_integrated_gradients":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_kernel_shap":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_lime":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_object_detector":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_occlusion":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_rise":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_saliency":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_smoothgrad":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_sobol":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.attributions.test_tabular_data":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.auth":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.auth.test_login":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.auth.test_security":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.authcode":{
  "__set__":true,
  "elements":[
   "msal"
  ]
 },
 "tests.avro":{
  "__set__":true,
  "elements":[
   "python-confluent-kafka"
  ]
 },
 "tests.avro.data_gen":{
  "__set__":true,
  "elements":[
   "python-confluent-kafka"
  ]
 },
 "tests.avro.mock_registry":{
  "__set__":true,
  "elements":[
   "python-confluent-kafka"
  ]
 },
 "tests.avro.mock_schema_registry_client":{
  "__set__":true,
  "elements":[
   "python-confluent-kafka"
  ]
 },
 "tests.avro.test_avro_producer":{
  "__set__":true,
  "elements":[
   "python-confluent-kafka"
  ]
 },
 "tests.avro.test_cached_client":{
  "__set__":true,
  "elements":[
   "python-confluent-kafka"
  ]
 },
 "tests.avro.test_message_serializer":{
  "__set__":true,
  "elements":[
   "python-confluent-kafka"
  ]
 },
 "tests.avro.test_mock_client":{
  "__set__":true,
  "elements":[
   "python-confluent-kafka"
  ]
 },
 "tests.avro.test_util":{
  "__set__":true,
  "elements":[
   "python-confluent-kafka"
  ]
 },
 "tests.backend_test":{
  "__set__":true,
  "elements":[
   "llnl-sina",
   "pybtex"
  ]
 },
 "tests.backends":{
  "__set__":true,
  "elements":[
   "aiida-core",
   "pymc-base"
  ]
 },
 "tests.backends.aiida_django":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_django.conftest":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_django.migrations":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_django.migrations.test_migrations_0037_attributes_extras_settings_json":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_django.migrations.test_migrations_0038_data_migration_legacy_job_calculations":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_django.migrations.test_migrations_0040_data_migration_legacy_process_attributes":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_django.migrations.test_migrations_0041_seal_unsealed_processes":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_django.migrations.test_migrations_0043_default_link_label":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_django.migrations.test_migrations_0044_dbgroup_type_string":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_django.migrations.test_migrations_common":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_django.migrations.test_migrations_many":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_django.test_generic":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_sqlalchemy":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_sqlalchemy.conftest":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_sqlalchemy.test_generic":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_sqlalchemy.test_migrations":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_sqlalchemy.test_nodes":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_sqlalchemy.test_query":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_sqlalchemy.test_schema":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_sqlalchemy.test_session":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.aiida_sqlalchemy.test_utils":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.backends.fixtures":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.backends.test_arviz":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.backends.test_base":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.backends.test_mcbackend":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.backends.test_ndarray":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.base":{
  "__set__":true,
  "elements":[
   "aiomysql",
   "deeptime",
   "grayskull",
   "scikit-time",
   "wrighttools"
  ]
 },
 "tests.base.test_base_interface":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.base.test_base_recipe":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.base.test_base_utils":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.base.test_cached_property":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.base.test_capi":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.base.test_dl_utils":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.base.test_extra":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.base.test_factory":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.base.test_github":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.base.test_immutale_data":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.base.test_pickling":{
  "__set__":true,
  "elements":[
   "deeptime",
   "scikit-time"
  ]
 },
 "tests.base.test_pkg_info":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.base.test_recipe_item":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.base.test_sections":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.base.test_sklearn_compat":{
  "__set__":true,
  "elements":[
   "deeptime",
   "scikit-time"
  ]
 },
 "tests.base.test_track_packages":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.base_client_it":{
  "__set__":true,
  "elements":[
   "webdavclient3"
  ]
 },
 "tests.base_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.bases":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.bases.test_deployable_entity":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.bases.test_paginated_iterable":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.basic_no_subbasin_stats":{
  "__set__":true,
  "elements":[
   "rabpro"
  ]
 },
 "tests.basic_stages":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.basic_stages.test_app_context_enricher":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.basic_stages.test_col_drop":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.basic_stages.test_col_dtype_enforcer":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.basic_stages.test_col_rename":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.basic_stages.test_col_reorder":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.basic_stages.test_condition_validator":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.basic_stages.test_drop_duplicates":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.basic_stages.test_dropna":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.basic_stages.test_freq_drop":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.basic_stages.test_row_drop":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.basic_stages.test_schematize":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.basic_stages.test_set_index":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.basic_stages.test_val_drop":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.basic_stages.test_val_keep":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.basis":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.basis.test_base":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.basis.test_monomials":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.behaviors":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.behaviors.test_sheet_events":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.benchmark":{
  "__set__":true,
  "elements":[
   "crccheck"
  ]
 },
 "tests.benchmarks":{
  "__set__":true,
  "elements":[
   "avalanche-lib",
   "histolab"
  ]
 },
 "tests.benchmarks.scenarios":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.benchmarks.scenarios.test_classification_scenario":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.benchmarks.scenarios.test_generic_scenario":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.benchmarks.scenarios.test_online_scenario":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.benchmarks.scenarios.test_rl_scenario":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.benchmarks.scenarios.test_scenarios_typechecks":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.benchmarks.test_benchmarks":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.bending":{
  "__set__":true,
  "elements":[
   "polyfempy"
  ]
 },
 "tests.bibtex_parser_test":{
  "__set__":true,
  "elements":[
   "pybtex"
  ]
 },
 "tests.binary_serialization_test":{
  "__set__":true,
  "elements":[
   "bqplot",
   "ipywebrtc"
  ]
 },
 "tests.bindings":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.bindings.pydeck_examples":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.bindings.pydeck_examples.geojson_layer":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.bindings.pydeck_examples.hexagon_layer_function":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.bindings.pydeck_examples.minimal":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.bindings.pydeck_examples.multilayers":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.bindings.pydeck_examples.scatterplot":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.bindings.pydeck_examples.stacked":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.bindings.test_deck":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.bindings.test_layer":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.boosted_model_test":{
  "__set__":true,
  "elements":[
   "genestboost"
  ]
 },
 "tests.boto_tests":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests.boto_tests.helpers":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests.boto_tests.test_credentials":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests.boto_tests.test_signers":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests.boto_tests.test_utils":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests.bpr_test":{
  "__set__":true,
  "elements":[
   "implicit"
  ]
 },
 "tests.browser":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.browser.image_diff":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.browser.screenshot_utils":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.browser.test_examples":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.browser.test_html_renderer":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.bst_parser_test":{
  "__set__":true,
  "elements":[
   "pybtex"
  ]
 },
 "tests.bst_parser_test.apacite":{
  "__set__":true,
  "elements":[
   "pybtex"
  ]
 },
 "tests.bst_parser_test.bst_parser_test":{
  "__set__":true,
  "elements":[
   "pybtex"
  ]
 },
 "tests.bst_parser_test.jurabib":{
  "__set__":true,
  "elements":[
   "pybtex"
  ]
 },
 "tests.bst_parser_test.plain":{
  "__set__":true,
  "elements":[
   "pybtex"
  ]
 },
 "tests.ca":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.ca.cts_model":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.ca.grain_hill":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.ca.lattice_grain":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.ca.test_celllab_cts":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.ca.test_user_guide_example":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.cache":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.cache_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.caffe2_ref_test":{
  "__set__":true,
  "elements":[
   "onnx-caffe2"
  ]
 },
 "tests.calculators":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.calculators.vasp":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.calculators.vasp.test_smartvasp":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.capabilities_test":{
  "__set__":true,
  "elements":[
   "osmapi"
  ]
 },
 "tests.cases":{
  "__set__":true,
  "elements":[
   "arosics"
  ]
 },
 "tests.cass_test":{
  "__set__":true,
  "elements":[
   "llnl-sina"
  ]
 },
 "tests.celery_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.changeset_test":{
  "__set__":true,
  "elements":[
   "osmapi"
  ]
 },
 "tests.check_examples":{
  "__set__":true,
  "elements":[
   "xrd_simulator"
  ]
 },
 "tests.check_vals":{
  "__set__":true,
  "elements":[
   "cbsyst"
  ]
 },
 "tests.checks":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.cheese_shop":{
  "__set__":true,
  "elements":[
   "tranquilizer"
  ]
 },
 "tests.cheese_shop_publish":{
  "__set__":true,
  "elements":[
   "tranquilizer"
  ]
 },
 "tests.classes":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.classes.test_cls_dict":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.classes.test_cls_function":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.classes.test_literal_meta":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.classes.test_something":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.classes.test_subscribtable_type":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.clean_test_accounts":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.cli":{
  "__set__":true,
  "elements":[
   "aiida-pseudo",
   "grayskull",
   "great-expectations",
   "llnl-sina"
  ]
 },
 "tests.cli.diff_test":{
  "__set__":true,
  "elements":[
   "llnl-sina"
  ]
 },
 "tests.cli.driver_test":{
  "__set__":true,
  "elements":[
   "llnl-sina"
  ]
 },
 "tests.cli.params":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.cli.params.test_types":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.cli.tap":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.cli.test_cli":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.cli.test_cli_cmds":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.cli.test_cli_recipes":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.cli.test_datasource_pandas":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.cli.test_datasource_sqlite":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.cli.test_docs":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.cli.test_family":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.cli.test_init":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.cli.test_init_missing_libraries":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.cli.test_init_pandas":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.cli.test_init_sqlite":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.cli.test_install":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.cli.test_list":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.cli.test_parser":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.cli.test_project":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.cli.test_root":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.cli.test_stdout":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.cli.test_store":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.cli.test_suite":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.cli.test_taps_pandas":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.cli.test_utils":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.cli.test_validation_operator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.cli.utils":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.client":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.cluster":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.cluster.conftest":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.cluster.test_cluster":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.cluster.test_cluster_insight":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.cluster.test_clustering_model":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.clustering":{
  "__set__":true,
  "elements":[
   "deeptime",
   "scikit-time"
  ]
 },
 "tests.clustering.test_box_discretization":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.clustering.test_clustering":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.clustering.test_kmeans":{
  "__set__":true,
  "elements":[
   "deeptime",
   "scikit-time"
  ]
 },
 "tests.clustering.test_mini_batch_kmeans":{
  "__set__":true,
  "elements":[
   "deeptime",
   "scikit-time"
  ]
 },
 "tests.clustering.test_regspace":{
  "__set__":true,
  "elements":[
   "deeptime",
   "scikit-time"
  ]
 },
 "tests.clustering.util":{
  "__set__":true,
  "elements":[
   "scikit-time"
  ]
 },
 "tests.cmdline":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_calcjob":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_code":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_comment":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_computer":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_config":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_daemon":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_data":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_database":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_export":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_graph":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_group":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_group_ls":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_help":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_import":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_node":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_process":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_profile":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_rehash":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_restapi":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_run":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_setup":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_status":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_user":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.commands.test_verdi":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.params":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.params.options":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.params.options.test_conditional":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.params.options.test_interactive":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.params.types":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.params.types.test_calculation":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.params.types.test_code":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.params.types.test_computer":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.params.types.test_data":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.params.types.test_group":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.params.types.test_identifier":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.params.types.test_node":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.params.types.test_path":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.params.types.test_plugin":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.utils":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.utils.test_common":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.utils.test_daemon":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.cmdline.utils.test_multiline":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.codeutils":{
  "__set__":true,
  "elements":[
   "dpu-utils"
  ]
 },
 "tests.codeutils.test_code_range":{
  "__set__":true,
  "elements":[
   "dpu-utils"
  ]
 },
 "tests.codeutils.test_identifiersplitting":{
  "__set__":true,
  "elements":[
   "dpu-utils"
  ]
 },
 "tests.collections":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.collections.test_dict":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.collections.test_fs":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.collections.test_schema":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.collectors":{
  "__set__":true,
  "elements":[
   "pyoos"
  ]
 },
 "tests.collectors.test_awc_rest":{
  "__set__":true,
  "elements":[
   "pyoos"
  ]
 },
 "tests.collectors.test_collector":{
  "__set__":true,
  "elements":[
   "pyoos"
  ]
 },
 "tests.collectors.test_coops_sos":{
  "__set__":true,
  "elements":[
   "pyoos"
  ]
 },
 "tests.collectors.test_hads":{
  "__set__":true,
  "elements":[
   "pyoos"
  ]
 },
 "tests.collectors.test_ndbc_sos":{
  "__set__":true,
  "elements":[
   "pyoos"
  ]
 },
 "tests.collectors.test_nerrs":{
  "__set__":true,
  "elements":[
   "pyoos"
  ]
 },
 "tests.collectors.test_usgs":{
  "__set__":true,
  "elements":[
   "pyoos"
  ]
 },
 "tests.collectors.test_wqp":{
  "__set__":true,
  "elements":[
   "pyoos"
  ]
 },
 "tests.colorgrids":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.column_aggregate_expectations":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.column_aggregate_expectations.test_column_aggregate_expectations":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.column_aggregate_expectations_distributional":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.column_aggregate_expectations_distributional.test_pandas_dataset_distributional_expectations":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.column_map_expectations":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.column_map_expectations.test_column_map_expectations":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.column_pair_map_expectations":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.column_pair_map_expectations.test_column_pair_map_expectations":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.combine_test":{
  "__set__":true,
  "elements":[
   "eventkit"
  ]
 },
 "tests.common":{
  "__set__":true,
  "elements":[
   "aiida-core",
   "birdy",
   "mvt",
   "raven-wps"
  ]
 },
 "tests.common.test_escaping":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.common.test_extendeddicts":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.common.test_folders":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.common.test_hashing":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.common.test_indicators":{
  "__set__":true,
  "elements":[
   "mvt"
  ]
 },
 "tests.common.test_links":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.common.test_logging":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.common.test_serialize":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.common.test_timezone":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.common.test_utils":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.commons":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.commons.test_data_conversion":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.commons.test_model_override":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.communication":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.filters":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.filters.test_FilterBase":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.test_AsciiFileComm":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.test_AsciiTableComm":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.test_BufferComm":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.test_CommBase":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.test_FileComm":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.test_ForkComm":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.test_IPCComm":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.test_MPIComm":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.test_PandasFileComm":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.test_RESTComm":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.test_RMQAsyncComm":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.test_RMQComm":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.test_ServerComm":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.test_ValueComm":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.test_ZMQComm":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.transforms":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.communication.transforms.test_TransformBase":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.compare":{
  "__set__":true,
  "elements":[
   "openamundsen"
  ]
 },
 "tests.compat":{
  "__set__":true,
  "elements":[
   "saws"
  ]
 },
 "tests.compile":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.function":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.function.test_function":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.function.test_pfunc":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.function.test_types":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.test_builders":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.test_debugmode":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.test_function":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.test_function_module":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.test_function_name":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.test_misc":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.test_mode":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.test_modes":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.test_monitormode":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.test_nanguardmode":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.test_ops":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.test_pfunc":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.test_profiling":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compile.test_shared":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.compiler":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.LLL":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.LLL.test_compile_lll":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.LLL.test_optimize_lll":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.LLL.test_repeat":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.LLL.test_with":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.ir":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.ir.test_compile_ir":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.ir.test_optimize_ir":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.ir.test_repeat":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.ir.test_with":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.test_bytecode_runtime":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.test_calldatacopy":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.test_clamps":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.test_compile_code":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.test_opcodes":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.test_pre_parser":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.test_sha3_32":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.compiler.test_source_map":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.complete_run":{
  "__set__":true,
  "elements":[
   "e3sm_diags"
  ]
 },
 "tests.components.chi_index":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.chi_index.test_chi_finder":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.depth_dependent_diffusion":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.depth_dependent_diffusion.test_depth_dependent_diffuser":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.depth_dependent_taylor_soil_creep":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.depth_dependent_taylor_soil_creep.test_depth_dependent_taylor_diffuser":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.diffusion":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.diffusion.test_sniff_diffusion":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.dimensionless_discharge":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.dimensionless_discharge.test_dimensionless_discharge":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.drainage_density":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.drainage_density.test_drainage_density":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.flexure":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.flexure.conftest":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.flexure.test_api":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.flexure.test_flexure":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.flexure.test_flexure_1d":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.flow_accum":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.flow_accum.conftest":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.flow_accum.test_flow_accums":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.flow_accum.test_flow_accumulator":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.flow_accum.test_flow_routing":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.flow_accum.test_lossy_flow_accumulator":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.flow_director":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.flow_director.test_dinf":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.flow_director.test_flow_director":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.flow_director.test_mfd":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.flow_router.ext.single_flow.priority_routing.test_breach_c":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.fracture_grid":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.fracture_grid.test_fracture_grid":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.hack_calculator":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.hack_calculator.test_hack":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.landslides":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.landslides.conftest":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.landslides.test_landslide_probability":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.network_sediment_transporter":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.network_sediment_transporter.conftest":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.network_sediment_transporter.test_abrasion":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.network_sediment_transporter.test_active_layer_methods":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.network_sediment_transporter.test_filo":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.network_sediment_transporter.test_init":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.network_sediment_transporter.test_parcel_leaves":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.network_sediment_transporter.test_pulse_sediment":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.network_sediment_transporter.test_recycling":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.network_sediment_transporter.test_transport":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.nonlinear_diffusion":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.nonlinear_diffusion.test_sniff_nldiff":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.overland_flow":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.overland_flow.conftest":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.overland_flow.test_active_links_at_node":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.overland_flow.test_bates_overland_flow":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.overland_flow.test_dealmeida_overland_flow":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.overland_flow.test_kinwave":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.overland_flow.test_kinwave_implicit":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.overland_flow.test_linear_diffusion_overland_flow":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.pet":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.pet.conftest":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.pet.test_pet":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.plant_competition_ca":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.plant_competition_ca.conftest":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.plant_competition_ca.test_plant_competition_ca":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.potentiality_flowrouting":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.potentiality_flowrouting.test_sniff_pot_fr":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.priority_flood_flow_router":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.priority_flood_flow_router.test_priority_flood_flow_router":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.radiation":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.radiation.conftest":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.radiation.test_radiation":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.sink_fill":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.sink_fill.conftest":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.sink_fill.test_sink_filler":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.soil_moisture":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.soil_moisture.conftest":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.soil_moisture.test_green_ampt_infil":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.soil_moisture.test_soil_moisture":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.spatial_precip":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.spatial_precip.test_spatial_storm_generator":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.steepness_index":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.steepness_index.test_steepness_finder":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.stream_power":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.stream_power.test_fastscape":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.stream_power.test_not_implemented_errors":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.stream_power.test_sed_flux_dep":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.stream_power.test_simple":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.stream_power.test_smooth_thresh":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.stream_power.test_sp_driver_discharges":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.stream_power.test_sp_driver_widths":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.stream_power.test_sp_storms":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.stream_power.test_voronoi_sp":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.taylor_nonlinear_hillslope_flux":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.taylor_nonlinear_hillslope_flux.test_taylor_nonlinear_hillslope_flux":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.transport_length_diffusion":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.transport_length_diffusion.test_tl_hill_diff":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.vegetation_dynamics":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.vegetation_dynamics.conftest":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.vegetation_dynamics.test_vegetation_dynamics":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.weathering":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.weathering.test_exponential_weatherer":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.components.weathering.test_exponential_weathering_integrated":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.concepts":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.concepts.test_cav":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.concepts.test_tcav":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.cond":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.cond.custom_tests":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.cond.test_cond_example":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.cond.test_cond_unit_tests":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.config":{
  "__set__":true,
  "elements":[
   "servicestack",
   "tyssue",
   "xyzspaces"
  ]
 },
 "tests.config.test_config":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.config.test_json_parser":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.configuration":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.conftest":{
  "__set__":true,
  "elements":[
   "ablog",
   "aiida-castep",
   "aiida-core",
   "aiida-pseudo",
   "aiobotocore",
   "aiomysql",
   "alive-progress",
   "amset",
   "autouri",
   "bqplot",
   "btrack",
   "caper",
   "causalml",
   "clisops",
   "cloudpathlib",
   "cmip6_preprocessing",
   "cmyt",
   "daops",
   "deepforest",
   "deeptime",
   "dvclive",
   "edgetest",
   "esmlab",
   "farmos",
   "flask-security-too",
   "fps",
   "genestboost",
   "grayskull",
   "histogrammar",
   "human-learn",
   "icet",
   "ipywebrtc",
   "jupyter_server",
   "kedro-neptune",
   "kylinpy",
   "landlab",
   "lifelines",
   "localtileserver",
   "looker-sdk",
   "lux-api",
   "magicgui",
   "mikeio",
   "mktestdocs",
   "modelbase",
   "mvt",
   "notion-client",
   "openamundsen",
   "optimade",
   "osmapi",
   "pandera-core",
   "pangeo-forge-recipes",
   "pastel",
   "pathy",
   "pdpipe",
   "peppy",
   "portalocker",
   "pyathena",
   "pydeck",
   "pygpcca",
   "pykafka",
   "pymapd",
   "pymc-base",
   "pyomniscidb",
   "pyopenrivercam",
   "pyproject-metadata",
   "pyrobuf",
   "python-flair",
   "pytmc",
   "pyxel-sim",
   "quilt",
   "quilt3",
   "raven-wps",
   "reciprocalspaceship",
   "sanic",
   "scikit-lego",
   "sheet2dict",
   "snntoolbox",
   "suds-jurko",
   "tempeh",
   "terrainbento",
   "textnets",
   "tinydb",
   "tomlkit",
   "trio-asyncio",
   "trio_asyncio",
   "typhos",
   "verta",
   "xclim",
   "yggdrasil"
  ]
 },
 "tests.const":{
  "__set__":true,
  "elements":[
   "causalml"
  ]
 },
 "tests.constants":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.context":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests.contrib":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.hooks":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.hooks.aws_hook":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.hooks.bigquery_hook":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.hooks.emr_hook":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.hooks.gcp_dataflow_hook":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.hooks.spark_submit_hook":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.hooks.test_ftp_hook":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.hooks.test_jira_hook":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.operators":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.operators.dataflow_operator":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.operators.ecs_operator":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.operators.emr_add_steps_operator":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.operators.emr_create_job_flow_operator":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.operators.emr_terminate_job_flow_operator":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.operators.fs_operator":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.operators.hipchat_operator":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.operators.jira_operator_test":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.operators.spark_submit_operator":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.operators.ssh_execute_operator":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.sensors":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.sensors.datadog_sensor":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.sensors.emr_base_sensor":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.sensors.emr_job_flow_sensor":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.sensors.emr_step_sensor":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.sensors.hdfs_sensors":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.contrib.sensors.jira_sensor_test":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.conversion":{
  "__set__":true,
  "elements":[
   "snntoolbox"
  ]
 },
 "tests.conversion_test":{
  "__set__":true,
  "elements":[
   "onnx-caffe2"
  ]
 },
 "tests.convolve":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.convolve.test_convolve":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.convolve.test_convolve_sep":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.convolve.test_convolve_spatial":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.convolve.test_convolve_spatial_rl":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.convolve.test_gaussian":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.convolve.test_generic_separable_filters":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.convolve.test_median":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.convolve.test_strides":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.core":{
  "__set__":true,
  "elements":[
   "airflow",
   "alive-progress",
   "amset",
   "clisops",
   "gputools",
   "great-expectations",
   "landlab",
   "modelbase",
   "pandera-core",
   "pdpipe",
   "pycroscopy",
   "smdebug-rulesconfig",
   "theseus-ai",
   "tyssue",
   "xcube_geodb"
  ]
 },
 "tests.core.actions":{
  "__set__":true,
  "elements":[
   "smdebug-rulesconfig"
  ]
 },
 "tests.core.actions.test_actions":{
  "__set__":true,
  "elements":[
   "smdebug-rulesconfig"
  ]
 },
 "tests.core.actions.utils":{
  "__set__":true,
  "elements":[
   "smdebug-rulesconfig"
  ]
 },
 "tests.core.algebraic":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.algebraic.test_algebraic_mixin":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.algebraic.test_derived_compounds":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.algebraic.test_generate_source_code":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.algebraic.test_sort_module":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.algebraic.test_update_algebraic_module":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.checks_fixtures":{
  "__set__":true,
  "elements":[
   "pandera-core"
  ]
 },
 "tests.core.common":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.core.compounds":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.compounds.test_compound_mixin":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.compounds.test_generate_source_code":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.conftest":{
  "__set__":true,
  "elements":[
   "pandera-core"
  ]
 },
 "tests.core.functions":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.functions.test_functions":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.functions.test_generate_source_code":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.io":{
  "__set__":true,
  "elements":[
   "pycroscopy"
  ]
 },
 "tests.core.io.test_dtype_utils":{
  "__set__":true,
  "elements":[
   "pycroscopy"
  ]
 },
 "tests.core.io.test_hdf_utils":{
  "__set__":true,
  "elements":[
   "pycroscopy"
  ]
 },
 "tests.core.io.test_io_utils":{
  "__set__":true,
  "elements":[
   "pycroscopy"
  ]
 },
 "tests.core.io.test_numpy_translator":{
  "__set__":true,
  "elements":[
   "pycroscopy"
  ]
 },
 "tests.core.io.test_pycro_dataset":{
  "__set__":true,
  "elements":[
   "pycroscopy"
  ]
 },
 "tests.core.io.test_write_utils":{
  "__set__":true,
  "elements":[
   "pycroscopy"
  ]
 },
 "tests.core.parameters":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.parameters.test_generate_source_code":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.parameters.test_parameter_mixin":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.rate":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.rate.test_generate_source_code":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.rate.test_rate_mixin":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.rate.test_update_rate":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.test_adhoc_stage":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.core.test_app_context":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.core.test_base_model":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.test_checks":{
  "__set__":true,
  "elements":[
   "pandera-core"
  ]
 },
 "tests.core.test_checks_builtin":{
  "__set__":true,
  "elements":[
   "pandera-core"
  ]
 },
 "tests.core.test_columns_based_pipeline_stage":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.core.test_configuration":{
  "__set__":true,
  "elements":[
   "alive-progress"
  ]
 },
 "tests.core.test_cost_function":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.core.test_cost_weight":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.core.test_decorators":{
  "__set__":true,
  "elements":[
   "pandera-core"
  ]
 },
 "tests.core.test_deprecations":{
  "__set__":true,
  "elements":[
   "pandera-core"
  ]
 },
 "tests.core.test_docs_setting_column_widths":{
  "__set__":true,
  "elements":[
   "pandera-core"
  ]
 },
 "tests.core.test_dtypes":{
  "__set__":true,
  "elements":[
   "pandera-core"
  ]
 },
 "tests.core.test_engine":{
  "__set__":true,
  "elements":[
   "pandera-core"
  ]
 },
 "tests.core.test_engine_utils":{
  "__set__":true,
  "elements":[
   "pandera-core"
  ]
 },
 "tests.core.test_evaluation_parameters":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.core.test_example_data":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.core.test_expectation_configuration":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.core.test_expectation_kwargs":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.core.test_expectation_suite":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.core.test_expectation_suite_crud_methods":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.core.test_extension_modules":{
  "__set__":true,
  "elements":[
   "pandera-core"
  ]
 },
 "tests.core.test_extensions":{
  "__set__":true,
  "elements":[
   "pandera-core"
  ]
 },
 "tests.core.test_generation":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.core.test_geodb":{
  "__set__":true,
  "elements":[
   "xcube_geodb"
  ]
 },
 "tests.core.test_ids":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.test_load_params":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.core.test_logging_hook":{
  "__set__":true,
  "elements":[
   "alive-progress"
  ]
 },
 "tests.core.test_manifold":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.core.test_message":{
  "__set__":true,
  "elements":[
   "xcube_geodb"
  ]
 },
 "tests.core.test_messager":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.core.test_model":{
  "__set__":true,
  "elements":[
   "pandera-core"
  ]
 },
 "tests.core.test_model_components":{
  "__set__":true,
  "elements":[
   "pandera-core"
  ]
 },
 "tests.core.test_monolayer":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.core.test_multisheet":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.core.test_numpy_engine":{
  "__set__":true,
  "elements":[
   "pandera-core"
  ]
 },
 "tests.core.test_objective":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.core.test_objects":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.core.test_ocldevice":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.core.test_ocltypes":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.core.test_pandas_accessor":{
  "__set__":true,
  "elements":[
   "pandera-core"
  ]
 },
 "tests.core.test_pandas_engine":{
  "__set__":true,
  "elements":[
   "pandera-core"
  ]
 },
 "tests.core.test_pipeline":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.core.test_pipeline_stage":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.core.test_pydantic":{
  "__set__":true,
  "elements":[
   "pandera-core"
  ]
 },
 "tests.core.test_resample":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.core.test_robust_cost":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.core.test_run":{
  "__set__":true,
  "elements":[
   "amset"
  ]
 },
 "tests.core.test_schema_components":{
  "__set__":true,
  "elements":[
   "pandera-core"
  ]
 },
 "tests.core.test_schema_inference":{
  "__set__":true,
  "elements":[
   "pandera-core"
  ]
 },
 "tests.core.test_schema_statistics":{
  "__set__":true,
  "elements":[
   "pandera-core"
  ]
 },
 "tests.core.test_schemas":{
  "__set__":true,
  "elements":[
   "pandera-core"
  ]
 },
 "tests.core.test_serialization":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.core.test_static_type_checking":{
  "__set__":true,
  "elements":[
   "pandera-core"
  ]
 },
 "tests.core.test_stoichiometric_mixin":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.core.test_subset":{
  "__set__":true,
  "elements":[
   "clisops"
  ]
 },
 "tests.core.test_theseus_function":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.core.test_timing":{
  "__set__":true,
  "elements":[
   "alive-progress"
  ]
 },
 "tests.core.test_typing":{
  "__set__":true,
  "elements":[
   "pandera-core"
  ]
 },
 "tests.core.test_utils":{
  "__set__":true,
  "elements":[
   "alive-progress",
   "modelbase"
  ]
 },
 "tests.core.test_variable":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.core.test_vectorizer":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.core.usage_statistics":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.core.usage_statistics.test_anonymizer":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.core.usage_statistics.test_schema_validation":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.core.usage_statistics.test_usage_statistics":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.core_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.corpus":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.corpus.test_copy_document_compare_size":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.corpus.test_copy_document_resize_images_compare_size":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.corpus.test_extract_text_expect_ground_truth":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.corpus.test_open_document":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.corpus.test_open_encrypted_document":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.covariance":{
  "__set__":true,
  "elements":[
   "deeptime",
   "scikit-time"
  ]
 },
 "tests.covariance.test_covar_estimator":{
  "__set__":true,
  "elements":[
   "deeptime",
   "scikit-time"
  ]
 },
 "tests.covariance.test_moments":{
  "__set__":true,
  "elements":[
   "deeptime",
   "scikit-time"
  ]
 },
 "tests.covariance.test_running_moments":{
  "__set__":true,
  "elements":[
   "deeptime",
   "scikit-time"
  ]
 },
 "tests.covariance.test_util":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.cq":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.cq.test_cq_unit_tests":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.create_message":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.create_test":{
  "__set__":true,
  "elements":[
   "eventkit"
  ]
 },
 "tests.curl":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.curl.test_curl":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.custodian":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.custodian.test_vasp_custodian":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.custom_modules":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.custom_modules.conftest":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.custom_modules.contexts":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.custom_modules.integration":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.custom_modules.integration.test_deploy_custom_modules":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.custom_modules.models":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.custom_modules.test_custom_modules":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.custom_modules.test_utils":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.custom_terminal":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.d3viz":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.d3viz.models":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.d3viz.test_d3viz":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.d3viz.test_formatting":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.dashboard_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.dask":{
  "__set__":true,
  "elements":[
   "pandera-core"
  ]
 },
 "tests.dask.test_dask":{
  "__set__":true,
  "elements":[
   "pandera-core"
  ]
 },
 "tests.dask.test_dask_accessor":{
  "__set__":true,
  "elements":[
   "pandera-core"
  ]
 },
 "tests.dask.test_dask_not_installed":{
  "__set__":true,
  "elements":[
   "pandera-core"
  ]
 },
 "tests.data":{
  "__set__":true,
  "elements":[
   "aiida-pseudo",
   "blimpy",
   "deeptime",
   "glymur",
   "pybtex",
   "wrighttools"
  ]
 },
 "tests.data.bring_to_front":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.chop":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.convert_data":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.created":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.from_BrunoldrRaman":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.from_COLORS":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.from_Cary50":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.from_JASCO":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.from_KENT":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.from_PyCMDS":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.from_Tensor27":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.from_ocean_optics":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.from_shimadzu":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.from_spcm":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.get_nadir":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.get_zenith":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.join":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.level":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.map_variable":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.pseudo":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.data.pseudo.test_common":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.data.pseudo.test_jthxml":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.data.pseudo.test_pseudo":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.data.pseudo.test_psf":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.data.pseudo.test_psml":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.data.pseudo.test_psp8":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.data.pseudo.test_upf":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.data.pseudo.test_vps":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.data.remove_channel":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.remove_variable":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.rename_attrs":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.rename_channels":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.rename_variables":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.share_nans":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.smooth":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.split":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.test_bd_chain":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.data.test_cpp_systems":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.data.test_double_well":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.data.test_drunkards_walk":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.data.test_ellipsoids":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.data.test_metropolis1d":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.data.test_pbf":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.data.test_prinz":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.data.test_sqrt_model":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.data.test_swissroll":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.data.test_util":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.data.transform":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data.unique_names":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.data_asset":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_asset.test_data_asset":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_asset.test_data_asset_citations":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_asset.test_data_asset_internals":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_asset.test_data_asset_util":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_asset.test_expectation_decorators":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_asset.test_filedata_asset":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_asset.test_filedata_asset_expectations":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_asset.test_parameter_substitution":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_context":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_context.conftest":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_context.store":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_context.store.test_evaluation_parameter_store":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_context.store.test_expectations_store":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_context.store.test_html_site_store":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_context.store.test_store_backends":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_context.store.test_validations_store":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_context.test_configuration_storage":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_context.test_data_context":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_context.test_data_context_config_errors":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_context.test_data_context_config_variables":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_context.test_data_context_on_teams":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_context.test_data_context_resource_identifiers":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_context.test_data_context_store_configs":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_context.test_data_context_types":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_context.test_data_context_utils":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.data_generation":{
  "__set__":true,
  "elements":[
   "tsod"
  ]
 },
 "tests.database_test":{
  "__set__":true,
  "elements":[
   "pybtex"
  ]
 },
 "tests.database_test.data":{
  "__set__":true,
  "elements":[
   "pybtex"
  ]
 },
 "tests.database_test.database_test":{
  "__set__":true,
  "elements":[
   "pybtex"
  ]
 },
 "tests.dataframe_test":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.dataset":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.dataset.test_dataset":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.dataset.test_dataset_legacy":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.dataset.test_dataset_util_legacy":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.dataset.test_pandas_dataset":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.dataset.test_sparkdfdataset":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.dataset.test_sqlalchemydataset":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.dataset.test_util":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasets":{
  "__set__":true,
  "elements":[
   "snntoolbox"
  ]
 },
 "tests.datasource":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.batch_kwarg_generator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.batch_kwarg_generator.test_batch_kwargs_generator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.batch_kwarg_generator.test_glob_reader_generator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.batch_kwarg_generator.test_manual_generator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.batch_kwarg_generator.test_query_generator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.batch_kwarg_generator.test_s3_generator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.batch_kwarg_generator.test_subdir_reader_generator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.batch_kwarg_generator.test_table_generator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.conftest":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.generator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.generator.test_batch_generator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.generator.test_batch_kwargs_generator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.generator.test_glob_reader_generator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.generator.test_manual_generator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.generator.test_query_generator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.generator.test_s3_generator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.generator.test_subdir_reader_generator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.generator.test_table_generator":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.test_batch_generators":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.test_batch_kwargs":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.test_datasource":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.test_datasource_anonymizer":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.test_datasources":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.test_pandas_datasource":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.test_sparkdf_datasource":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.test_sqlalchemy_datasource":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.test_sqlalchemy_datasource_workarounds":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource.test_util":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.datasource_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.datastore":{
  "__set__":true,
  "elements":[
   "tifftools"
  ]
 },
 "tests.datastore_test":{
  "__set__":true,
  "elements":[
   "llnl-sina"
  ]
 },
 "tests.db_engine_specs_test":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.dbtests":{
  "__set__":true,
  "elements":[
   "aiida-castep"
  ]
 },
 "tests.dbtests.conftest":{
  "__set__":true,
  "elements":[
   "aiida-castep"
  ]
 },
 "tests.dbtests.fixture":{
  "__set__":true,
  "elements":[
   "aiida-castep"
  ]
 },
 "tests.dbtests.test_calcjob":{
  "__set__":true,
  "elements":[
   "aiida-castep"
  ]
 },
 "tests.dbtests.test_calcjob_mock":{
  "__set__":true,
  "elements":[
   "aiida-castep"
  ]
 },
 "tests.dbtests.test_data_db":{
  "__set__":true,
  "elements":[
   "aiida-castep"
  ]
 },
 "tests.dbtests.test_data_db_migrated":{
  "__set__":true,
  "elements":[
   "aiida-castep"
  ]
 },
 "tests.dbtests.test_dos":{
  "__set__":true,
  "elements":[
   "aiida-castep"
  ]
 },
 "tests.dbtests.test_mock":{
  "__set__":true,
  "elements":[
   "aiida-castep"
  ]
 },
 "tests.dbtests.test_new_fixture":{
  "__set__":true,
  "elements":[
   "aiida-castep"
  ]
 },
 "tests.dbtests.test_parser":{
  "__set__":true,
  "elements":[
   "aiida-castep"
  ]
 },
 "tests.dbtests.test_tools":{
  "__set__":true,
  "elements":[
   "aiida-castep"
  ]
 },
 "tests.decomposition":{
  "__set__":true,
  "elements":[
   "deeptime",
   "scikit-time"
  ]
 },
 "tests.decomposition.test_dmd":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.decomposition.test_edmd":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.decomposition.test_kcca":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.decomposition.test_kedmd":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.decomposition.test_koopman_reweighting":{
  "__set__":true,
  "elements":[
   "deeptime",
   "scikit-time"
  ]
 },
 "tests.decomposition.test_kvadnet":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.decomposition.test_score":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.decomposition.test_tae":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.decomposition.test_tica":{
  "__set__":true,
  "elements":[
   "deeptime",
   "scikit-time"
  ]
 },
 "tests.decomposition.test_utils":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.decomposition.test_vamp":{
  "__set__":true,
  "elements":[
   "deeptime",
   "scikit-time"
  ]
 },
 "tests.decomposition.test_vampnet":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.deconv":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.deconv.test_deconv_rl":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.decorators":{
  "__set__":true,
  "elements":[
   "theseus-ai",
   "typish"
  ]
 },
 "tests.decorators.test_hintable":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.defences":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.detector":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.detector.evasion":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.detector.evasion.subsetscanning":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.detector.evasion.subsetscanning.test_detector":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.detector.evasion.test_detector":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.detector.poison":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.detector.poison.test_activation_defence":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.detector.poison.test_clustering_analyzer":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.detector.poison.test_ground_truth_evaluator":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.detector.poison.test_provenance_defence":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.detector.poison.test_roni":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.detector.poison.test_spectral_signature_defense":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.test_adversarial_trainer":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.test_adversarial_trainer_FBF":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.test_adversarial_trainer_madry_pgd":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.test_class_labels":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.test_defensive_distillation":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.test_feature_squeezing":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.test_gaussian_augmentation":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.test_gaussian_noise":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.test_high_confidence":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.test_label_smoothing":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.test_neural_cleanse":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.test_pixel_defend":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.test_reverse_sigmoid":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.test_rounded":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.test_thermometer_encoding":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.test_variance_minimization":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.trainer":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.trainer.test_adversarial_trainer_FBF":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.trainer.test_certified_adversarial_trainer":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.transformer":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.transformer.poisoning":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.defences.transformer.poisoning.test_strip":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.delete_test_results":{
  "__set__":true,
  "elements":[
   "dataframe_image"
  ]
 },
 "tests.demos":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.demos.test_CiS2021_hackathon":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.demos.test_fspm2020":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.denoise":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.denoise.test_bilateral":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.denoise.test_nlm":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.deployable_entity":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.deployable_entity.test_artifacts":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.deployable_entity.test_deployment":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.deployments":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.deployments.conftest":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.deployments.test_accuracy":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.deployments.test_data_drift":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.deployments.test_deployment":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.deployments.test_list_features":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.deployments.test_model_replacement":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.deployments.test_prediction_results":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.deployments.test_scoring_code_download":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.deployments.test_secondary_dataset_config_replacement":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.deployments.test_service_stats":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.deployments.test_settings":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.deployments.test_submit_actuals":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.df":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.df.test_bound_col_poten":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.df.test_df":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.dict_import_export_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.dispatcher":{
  "__set__":true,
  "elements":[
   "plum-dispatch"
  ]
 },
 "tests.dispatcher.test_cache":{
  "__set__":true,
  "elements":[
   "plum-dispatch"
  ]
 },
 "tests.dispatcher.test_cases":{
  "__set__":true,
  "elements":[
   "plum-dispatch"
  ]
 },
 "tests.dispatcher.test_dispatcher":{
  "__set__":true,
  "elements":[
   "plum-dispatch"
  ]
 },
 "tests.dispatcher.test_future_annotations":{
  "__set__":true,
  "elements":[
   "plum-dispatch"
  ]
 },
 "tests.dispatcher.test_precedence":{
  "__set__":true,
  "elements":[
   "plum-dispatch"
  ]
 },
 "tests.dispatcher.test_return_type":{
  "__set__":true,
  "elements":[
   "plum-dispatch"
  ]
 },
 "tests.distributions":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.distributions.test_bound":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.distributions.test_censored":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.distributions.test_continuous":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.distributions.test_discrete":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.distributions.test_dist_math":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.distributions.test_distribution":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.distributions.test_mixture":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.distributions.test_multivariate":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.distributions.test_shape_utils":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.distributions.test_simulator":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.distributions.test_timeseries":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.distributions.test_transform":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.distributions.test_truncated":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.distributions.util":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.disturb_mem":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.diverse_tests":{
  "__set__":true,
  "elements":[
   "aesara",
   "theano-pymc"
  ]
 },
 "tests.doc":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.dom_test":{
  "__set__":true,
  "elements":[
   "osmapi"
  ]
 },
 "tests.download_data":{
  "__set__":true,
  "elements":[
   "e3sm_diags"
  ]
 },
 "tests.download_media":{
  "__set__":true,
  "elements":[
   "moviepy"
  ]
 },
 "tests.draw":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.draw.test_plt":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.draw.test_volume":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.drivers":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.drivers.test_BuildModelDriver":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.drivers.test_CMakeModelDriver":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.drivers.test_CModelDriver":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.drivers.test_CompiledModelDriver":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.drivers.test_ConnectionDriver":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.drivers.test_Driver":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.drivers.test_ExecutableModelDriver":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.drivers.test_FileInputDriver":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.drivers.test_FileOutputDriver":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.drivers.test_MakeModelDriver":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.drivers.test_MatlabModelDriver":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.drivers.test_ModelDriver":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.drivers.test_RPCRequestDriver":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.druid_func_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.druid_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.dtos":{
  "__set__":true,
  "elements":[
   "servicestack"
  ]
 },
 "tests.dynamics":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.dynamics.test_apoptosis_model":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.dynamics.test_bulk_model":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.dynamics.test_effectors":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.dynamics.test_model":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.dynamics.test_sheet_model":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.electronic_structure":{
  "__set__":true,
  "elements":[
   "amset"
  ]
 },
 "tests.electronic_structure.test_common":{
  "__set__":true,
  "elements":[
   "amset"
  ]
 },
 "tests.electronic_structure.test_symmetry":{
  "__set__":true,
  "elements":[
   "amset"
  ]
 },
 "tests.electronic_structure.test_tetrahedron":{
  "__set__":true,
  "elements":[
   "amset"
  ]
 },
 "tests.email_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.engine":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.daemon":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.daemon.test_client":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.processes":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.processes.text_exit_code":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.processes.workchains":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.processes.workchains.test_restart":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.processes.workchains.test_utils":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_calc_job":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_calcfunctions":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_class_loader":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_daemon":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_futures":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_launch":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_manager":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_persistence":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_ports":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_process":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_process_builder":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_process_function":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_process_spec":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_rmq":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_run":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_runners":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_transport":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_utils":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_work_chain":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.engine.test_workfunctions":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.env_fixtures":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.estimators":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.certification":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.certification.test_deepz":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.certification.test_derandomized_smoothing":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.certification.test_randomized_smoothing":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification.test_GPy":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification.test_blackbox":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification.test_blackbox_existing_predictions":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification.test_catboost":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification.test_classifier":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification.test_deep_partition_ensemble":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification.test_deeplearning_common":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification.test_deeplearning_specific":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification.test_detector_classifier":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification.test_ensemble":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification.test_input_filter":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification.test_jax":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification.test_lightgbm":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification.test_query_efficient_bb":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification.test_scikitlearn":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.classification.test_xgboost":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.object_detection":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.object_detection.test_pytorch_faster_rcnn":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.object_detection.test_pytorch_object_detector":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.object_detection.test_pytorch_yolo":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.object_detection.test_tensorflow_faster_rcnn":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.object_tracking":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.object_tracking.test_pytorch_goturn":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.speech_recognition":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.speech_recognition.conftest":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.speech_recognition.test_pytorch_deep_speech":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.speech_recognition.test_pytorch_espresso":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.estimators.speech_recognition.test_tensorflow_lingvo":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.evaluation":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.evaluation.test_image_samples":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.evaluation_test":{
  "__set__":true,
  "elements":[
   "implicit"
  ]
 },
 "tests.evaluations":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.evaluations.test_security_curve":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.event_logger_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.event_test":{
  "__set__":true,
  "elements":[
   "eventkit"
  ]
 },
 "tests.example_converters_test":{
  "__set__":true,
  "elements":[
   "llnl-sina"
  ]
 },
 "tests.example_wdl":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.examples":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.examples.test_SaM":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.examples.test_ascii_io":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.examples.test_conditional_io":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.examples.test_gs_lesson4":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.examples.test_model_error_with_io":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.examples.test_rpcFib":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.examples.test_rpc_lesson1":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.examples.test_rpc_lesson2":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.examples.test_rpc_lesson2b":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.examples.test_rpc_lesson3b":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.examples.test_timed_pipe":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.examples.test_transforms":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.examples.test_types":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.examples.types":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.examples.types.types":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.executors":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.executors.test_executor":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.experimental":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.experimental.model":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.experimental.model.test_combined_model":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.experimental.model.test_custom_task":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.experimental.model.test_custom_training_blueprint":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.experimental.model.test_custom_training_model":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.experimental.model.test_idiomatic_project":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.experimental.model.test_model_package":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.experimental.model.test_project":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.experimental.model.test_restore_discarded_features":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.experimental.model.test_segmentation":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.experimental.model.test_user_blueprint":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.extension":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extension.conftest":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extension.mockextensions":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extension.mockextensions.app":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extension.mockextensions.mock1":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extension.mockextensions.mock2":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extension.mockextensions.mock3":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extension.mockextensions.mockext_both":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extension.mockextensions.mockext_py":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extension.mockextensions.mockext_sys":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extension.mockextensions.mockext_user":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extension.test_app":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extension.test_config":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extension.test_entrypoint":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extension.test_handler":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extension.test_manager":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extension.test_serverextension":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extension.test_utils":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.extensions":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.extensions.test_custom":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.extensions.test_datacube":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.extensions.test_eo":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.extensions.test_extensions":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.extensions.test_file":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.extensions.test_item_assets":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.extensions.test_label":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.extensions.test_pointcloud":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.extensions.test_projection":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.extensions.test_raster":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.extensions.test_sar":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.extensions.test_sat":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.extensions.test_scientific":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.extensions.test_single_file_stac":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.extensions.test_timestamps":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.extensions.test_version":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.extensions.test_view":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.external":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.external.axis1":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.external.axis2":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.external.jasper":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.external.public":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.external.rhq":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.external.saxenc":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.extlib":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.extlib.common":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.extlib.test_baspacho":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.extlib.test_baspacho_simple":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.extlib.test_cusolver_lu_solver":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.extlib.test_mat_mult":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.fake_data":{
  "__set__":true,
  "elements":[
   "dbt"
  ]
 },
 "tests.fdv":{
  "__set__":true,
  "elements":[
   "cellpy"
  ]
 },
 "tests.feature_association_matrix":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.feature_association_matrix.test_feature_association_featurelists":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.feature_association_matrix.test_feature_association_matrix":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.feature_association_matrix.test_feature_association_matrix_details":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.features_visualizations":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.features_visualizations.test_losses":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.features_visualizations.test_objectives":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.features_visualizations.test_optim":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.features_visualizations.test_preconditionning":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.features_visualizations.test_regularizers":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.features_visualizations.test_transformations":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.fft":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.fft.test_accur":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.fft.test_batched":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.fft.test_fft":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.fft.test_fftshift":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.fft.test_fftspeed":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.field":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.field.test_field_dataset":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.field.test_graph_fields":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.field.test_grouped_fields":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.files":{
  "__set__":true,
  "elements":[
   "autouri"
  ]
 },
 "tests.fixtures":{
  "__set__":true,
  "elements":[
   "glymur",
   "histolab",
   "kylinpy",
   "pydeck",
   "rubicon-ml",
   "superset",
   "tsfresh",
   "vyper"
  ]
 },
 "tests.fixtures.api":{
  "__set__":true,
  "elements":[
   "kylinpy"
  ]
 },
 "tests.fixtures.datasource":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.fixtures.memorymock":{
  "__set__":true,
  "elements":[
   "vyper"
  ]
 },
 "tests.fixtures.pyodbcRow":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.fly":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.fly.test_fly":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.form_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.forms":{
  "__set__":true,
  "elements":[
   "django-versatileimagefield"
  ]
 },
 "tests.fugue":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.collections":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.collections.test_partition":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.column":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.column.test_expressions":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.column.test_functions":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.column.test_sql":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.dataframe":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.dataframe.test_array_dataframe":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.dataframe.test_arrow_dataframe":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.dataframe.test_dataframe":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.dataframe.test_dataframe_iterable_dataframe":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.dataframe.test_dataframes":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.dataframe.test_iterable_dataframe":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.dataframe.test_pandas_dataframe":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.dataframe.test_utils":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.execution":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.execution.test_execution_engine":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.execution.test_factory":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.execution.test_naive_execution_engine":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.extensions":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.extensions.creator":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.extensions.creator.test_convert":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.extensions.outputter":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.extensions.outputter.test_convert":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.extensions.processor":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.extensions.processor.test_convert":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.extensions.test_utils":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.extensions.transformer":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.extensions.transformer.test_convert_cotransformer":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.extensions.transformer.test_convert_output_cotransformer":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.extensions.transformer.test_convert_output_transformer":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.extensions.transformer.test_convert_transformer":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.rpc":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.rpc.test_base":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.rpc.test_flask":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.rpc.test_func":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.test_interfaceless":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.utils":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.utils.test_interfaceless":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.utils.test_io":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.utils.test_misc":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.workflow":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.workflow.test_module":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.workflow.test_workflow":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.workflow.test_workflow_determinism":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue.workflow.test_workflow_parallel":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_dask":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_dask.test_dataframe":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_dask.test_execution_engine":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_dask.test_io":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_dask.test_sql":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_notebook":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_spark":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_spark.test_dataframe":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_spark.test_execution_engine":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_spark.test_sql":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_spark.utils":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_spark.utils.test_convert":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_spark.utils.test_io":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_spark.utils.test_partition":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_sql":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_sql.test_syntax":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_sql.test_utils":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_sql.test_visitors":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_sql.test_workflow":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_sql.test_workflow_parse":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.fugue_sql.utils":{
  "__set__":true,
  "elements":[
   "fugue"
  ]
 },
 "tests.functional":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.api":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.api.test_clusters":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.api.test_current_user":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.api.test_deploy_keys":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.api.test_deploy_tokens":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.api.test_gitlab":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.api.test_groups":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.api.test_import_export":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.api.test_issues":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.api.test_keys":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.api.test_merge_requests":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.api.test_packages":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.api.test_projects":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.api.test_releases":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.api.test_repository":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.api.test_snippets":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.api.test_users":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.api.test_variables":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.cli":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.cli.conftest":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.cli.test_cli_artifacts":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.cli.test_cli_packages":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.cli.test_cli_v4":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.cli.test_cli_variables":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.conftest":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional.ee-test":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.functional_tests":{
  "__set__":true,
  "elements":[
   "pyxel-sim"
  ]
 },
 "tests.functional_tests.my_models":{
  "__set__":true,
  "elements":[
   "pyxel-sim"
  ]
 },
 "tests.functional_tests.test_parametric":{
  "__set__":true,
  "elements":[
   "pyxel-sim"
  ]
 },
 "tests.functional_tests.test_yaml":{
  "__set__":true,
  "elements":[
   "pyxel-sim"
  ]
 },
 "tests.functions":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.functions.test_common_ancestor":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.functions.test_get_args_and_return_type":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.functions.test_get_mro":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.functions.test_get_type":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.functions.test_get_type_hints_of_callable":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.functions.test_instance_of":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.functions.test_is_optional_type":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.functions.test_is_type_annotation":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.functions.test_origin_and_alias":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.functions.test_subclass_of":{
  "__set__":true,
  "elements":[
   "typish"
  ]
 },
 "tests.general_engine_test":{
  "__set__":true,
  "elements":[
   "pybtex"
  ]
 },
 "tests.generation":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.generation.test_generation":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.generation.test_shapes":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.generators":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.bayesian":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.bayesian.test_bayesian_exploration":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.bayesian.test_bayesian_generator":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.bayesian.test_bayesian_options":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.bayesian.test_custom_botorch":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.bayesian.test_expected_improvement":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.bayesian.test_high_level":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.bayesian.test_mggpo":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.bayesian.test_mobo":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.bayesian.test_time_dependent_bo":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.bayesian.test_upper_confidence_bound":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.bayesian.test_utils":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.test_extremum_seeking":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.test_generator_options":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generators.test_random":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.generic":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.generic.test_wrapper":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.gensim_test":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.geometry":{
  "__set__":true,
  "elements":[
   "theseus-ai",
   "tyssue"
  ]
 },
 "tests.geometry.common":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.geometry.point_types_mypy_check":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.geometry.test_bulkgeometry":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.geometry.test_cellcell_geometry":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.geometry.test_geometry":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.geometry.test_multisheetgeom":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.geometry.test_periodic_geometry":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.geometry.test_planar_geometry":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.geometry.test_point_types":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.geometry.test_se2":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.geometry.test_se3":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.geometry.test_sheet_geometry":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.geometry.test_so2":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.geometry.test_so3":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.geometry.test_vector":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.ghost":{
  "__set__":true,
  "elements":[
   "ghost.py"
  ]
 },
 "tests.ghost.bindings":{
  "__set__":true,
  "elements":[
   "ghost.py"
  ]
 },
 "tests.ghost.ext":{
  "__set__":true,
  "elements":[
   "ghost.py"
  ]
 },
 "tests.ghost.ext.django":{
  "__set__":true,
  "elements":[
   "ghost.py"
  ]
 },
 "tests.ghost.ext.django.test":{
  "__set__":true,
  "elements":[
   "ghost.py"
  ]
 },
 "tests.ghost.ghost":{
  "__set__":true,
  "elements":[
   "ghost.py"
  ]
 },
 "tests.ghost.logger":{
  "__set__":true,
  "elements":[
   "ghost.py"
  ]
 },
 "tests.ghost.test":{
  "__set__":true,
  "elements":[
   "ghost.py"
  ]
 },
 "tests.gitflow":{
  "__set__":true,
  "elements":[
   "gitflow"
  ]
 },
 "tests.gitflow.test_bin":{
  "__set__":true,
  "elements":[
   "gitflow"
  ]
 },
 "tests.gitflow.test_branches":{
  "__set__":true,
  "elements":[
   "gitflow"
  ]
 },
 "tests.gitflow.test_core":{
  "__set__":true,
  "elements":[
   "gitflow"
  ]
 },
 "tests.gof":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_cc":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_cmodule":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_compiledir":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_compute_test_value":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_destroyhandler":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_fg":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_graph":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_graph_opt_caching":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_lazy":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_link":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_op":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_opt":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_optdb":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_params_type":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_sched":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_toolbox":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_types":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_utils":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gof.test_vm":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gp":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.gp.test_cov":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.gp.test_gp":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.gp.test_mean":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.gp.test_util":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.gpflow":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.conditionals":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.conditionals.test_broadcasted_conditionals":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.conditionals.test_conditionals":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.conditionals.test_multioutput":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.conditionals.test_uncertain_conditional":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.conditionals.test_util":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.config":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.config.test_config":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.conftest":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.covariances":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.covariances.test_base_covariances":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.covariances.test_multioutput":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.expectations":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.expectations.test_expectations":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.experimental":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.experimental.check_shapes":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.experimental.check_shapes.test_argument_ref":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.experimental.check_shapes.test_check_shapes":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.experimental.check_shapes.test_errors":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.experimental.check_shapes.test_inheritance":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.experimental.check_shapes.test_integration":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.experimental.check_shapes.test_parser":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.experimental.check_shapes.test_specs":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.experimental.check_shapes.utils":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.experimental.test_utils":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.kernels":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.kernels.reference":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.kernels.test_broadcasting":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.kernels.test_changepoints":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.kernels.test_coregion":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.kernels.test_kernels":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.kernels.test_positive_semidefinite":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.kernels.test_scaled_euclid_dist":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.likelihoods":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.likelihoods.test_gaussian":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.likelihoods.test_heteroskedastic":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.likelihoods.test_heteroskedastic_constant_variance":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.likelihoods.test_likelihoods":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.likelihoods.test_multiclass":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.likelihoods.test_switched_likelihood":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.models":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.models.test_cglb":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.models.test_gplvm":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.models.test_gpr":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.models.test_gpr_posterior":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.models.test_mcmc":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.models.test_methods":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.models.test_model_predict":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.models.test_sgpr":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.models.test_sgpr_posterior":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.models.test_svgp":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.models.test_svgp_posterior":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.models.test_training_mixins":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.models.test_variational":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.models.test_vgp":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.models.test_vgp_posterior":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.optimizers":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.optimizers.test_mcmc":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.optimizers.test_natural_gradient":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.optimizers.test_scipy":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.posteriors":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.posteriors.conftest":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.posteriors.test_bo_integration":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.posteriors.test_posteriors":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.test_base":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.test_base_prior":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.test_base_training":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.test_inducing_variables":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.test_kullback_leiblers":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.test_logdensities":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.test_mean_functions":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.test_monitor":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.utilities":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.utilities.test_bijectors":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.utilities.test_deepcopy":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.utilities.test_misc":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.utilities.test_model_utils":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.utilities.test_multipledispatch":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.utilities.test_ops":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.utilities.test_set_trainable":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.utilities.test_training_loop":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.utilities.test_traversal":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpflow.utilities.test_utilities":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.gpu_test":{
  "__set__":true,
  "elements":[
   "implicit"
  ]
 },
 "tests.gpuarray":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.check_dnn_conv":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.config":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.rnn_support":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.run_dnn_conv":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_abstractconv":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_basic_ops":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_blas":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_blocksparse":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_cgpukernelbase":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_ctc":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_dnn":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_elemwise":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_extra_ops":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_fft":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_gemmcorr":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_gemmcorr3d":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_linalg":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_misc":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_multinomial":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_neighbours":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_nnet":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_opt":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_others":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_pickle":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_pool":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_reduction":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_rng_mrg":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_scan":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_sort":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_subtensor":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.gpuarray.test_type":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.graph":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.graph.hex":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.graph.hex.conftest":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.graph.hex.test_dual_hex":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.graph.hex.test_hex":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.graph.hex.test_perimeter_nodes":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.graph.radial":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.graph.radial.test_dual_radial":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.graph.sort":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.graph.sort.test_intpair":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.graph.sort.test_remap":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.graph.structured_quad":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.graph.structured_quad.test_dual_quad":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.graph.structured_quad.test_quad":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.graph.test_graph":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.graph.voronoi":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.graph.voronoi.test_voronoi_to_graph":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.gravity":{
  "__set__":true,
  "elements":[
   "polyfempy"
  ]
 },
 "tests.grid":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.conftest":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.structured_quad":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.structured_quad.test_links":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.structured_quad.test_nodes":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_constructors":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_create":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_create_network":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_diagonals":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_grid_reference":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_hex_grid":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_hex_grid.test_edges":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_hex_grid.test_link_order":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_hex_grid.test_links":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_hex_grid.test_nodes":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_hex_grid.test_patches":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_hex_grid.testing_flux_divergence_hex_grid":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_hex_mappers":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_funcs":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_funcs.test_best_fit_plane":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_funcs.test_find_nearest_node":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_funcs.test_gradients_across_cell_corners":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_funcs.test_gradients_across_cell_faces":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_funcs.test_gradients_at_active_links":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_funcs.test_gradients_at_links":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_funcs.test_is_on_grid":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_funcs.test_line_to_grid_coords":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_funcs.test_node_id_of_adjacent":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_gradients":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.conftest":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_allocators":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_axis_methods":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_bc_updates":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_cell_areas":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_corners":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_faces":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_fields":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_fixed_link_boundary":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_has_boundary_neighbor":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_init":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_is_boundary":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_link_length":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_link_order":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_mappers":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_neighbor_nodes":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_nodes":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_nodes_around_point":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_patches":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_save":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.test_raster_grid.test_status_at_node":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.unstructured":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.grid.unstructured.test_links":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.group_element":{
  "__set__":true,
  "elements":[
   "pdfme"
  ]
 },
 "tests.groups":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.groups.family":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.groups.family.test_pseudo":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.groups.family.test_pseudo_dojo":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.groups.family.test_sssp":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.groups.mixins":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.groups.mixins.test_cutoffs":{
  "__set__":true,
  "elements":[
   "aiida-pseudo"
  ]
 },
 "tests.helper":{
  "__set__":true,
  "elements":[
   "graypy"
  ]
 },
 "tests.helper_test":{
  "__set__":true,
  "elements":[
   "onnx-caffe2",
   "osmapi"
  ]
 },
 "tests.helpers":{
  "__set__":true,
  "elements":[
   "flask-restless",
   "gitflow",
   "pymc-base",
   "pystac-client"
  ]
 },
 "tests.helpers.factory":{
  "__set__":true,
  "elements":[
   "gitflow"
  ]
 },
 "tests.html_test":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.http3":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.http3.test_http_receiver":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.http3.test_server":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.http3.test_session_ticket_store":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.http_auth_server":{
  "__set__":true,
  "elements":[
   "pangeo-forge-recipes"
  ]
 },
 "tests.http_requests":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.http_requests.test_client":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.http_requests.test_connection":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.http_requests.test_deployed_model":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.hub":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.hub.conftest":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.hub.test_aliases":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.hub.test_api":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.hub.test_datasets":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.hub.test_exceptions":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.hub.test_logconf":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.hub.test_misc":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.hub.test_proxy":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.hub.test_search":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.hypotheses":{
  "__set__":true,
  "elements":[
   "pandera-core"
  ]
 },
 "tests.hypotheses.test_hypotheses":{
  "__set__":true,
  "elements":[
   "pandera-core"
  ]
 },
 "tests.iml":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.iml.conftest":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.iml.test_api":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.iml.test_credentials":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.iml.test_exceptions":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.iml.test_iml":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.iml.test_layer":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.iml.test_lookup_api":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.impersonation":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.import":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.import_export_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.importance_tests":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.importance_tests.test_fanova":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.importance_tests.test_init":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.importance_tests.test_mean_decrease_impurity":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.indirect_parametrize":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.inflation":{
  "__set__":true,
  "elements":[
   "polyfempy"
  ]
 },
 "tests.initial_model_class_test":{
  "__set__":true,
  "elements":[
   "genestboost"
  ]
 },
 "tests.integer_error":{
  "__set__":true,
  "elements":[
   "tranquilizer"
  ]
 },
 "tests.integration":{
  "__set__":true,
  "elements":[
   "fair-research-login",
   "gpflow",
   "graypy",
   "great-expectations",
   "histolab",
   "looker-sdk",
   "neo4j-python-driver",
   "pdfstream",
   "quilt",
   "quilt3",
   "rivgraph",
   "small-text"
  ]
 },
 "tests.integration.classifiers":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.classifiers.test_svm":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.conftest":{
  "__set__":true,
  "elements":[
   "fair-research-login",
   "neo4j-python-driver",
   "rivgraph"
  ]
 },
 "tests.integration.examples":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_autocommit_transaction_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_basic_auth_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_config_connection_pool_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_config_connection_timeout_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_config_max_retry_time_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_config_secure_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_config_trust_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_config_unencrypted_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_custom_auth_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_custom_resolver_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_cypher_error_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_database_selection_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_driver_introduction_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_driver_lifecycle_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_hello_world_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_kerberos_auth_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_pass_bookmarks_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_read_write_transaction_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_result_consume_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_result_retain_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_service_unavailable_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_session_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.examples.test_transaction_function_example":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.helper":{
  "__set__":true,
  "elements":[
   "graypy"
  ]
 },
 "tests.integration.io":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.small_text":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.classifiers":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.classifiers.test_classification":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.pytorch":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.pytorch.classifiers":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.pytorch.classifiers.test_base":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.pytorch.classifiers.test_kimcnn":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.pytorch.classifiers.test_kimcnn_embeddings":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.pytorch.models":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.pytorch.models.test_kimcnn":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.pytorch.test_datasets":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.pytorch.test_model_selection":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.pytorch.test_query_strategies":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.pytorch.test_serialization":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.transformers":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.transformers.classifiers":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.transformers.classifiers.test_classification":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.transformers.query_strategies":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.transformers.query_strategies.test_dal":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.transformers.test_datasets":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.integrations.transformers.test_serialization":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.query_strategies":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.query_strategies.test_query_strategies":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.small_text.test_serialization":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.integration.test_autocommit":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.test_bolt_driver":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.test_bookmarking":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.test_chunked_logging":{
  "__set__":true,
  "elements":[
   "graypy"
  ]
 },
 "tests.integration.test_client_refresh":{
  "__set__":true,
  "elements":[
   "fair-research-login"
  ]
 },
 "tests.integration.test_common_logging":{
  "__set__":true,
  "elements":[
   "graypy"
  ]
 },
 "tests.integration.test_core_types":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.test_debugging_fields":{
  "__set__":true,
  "elements":[
   "graypy"
  ]
 },
 "tests.integration.test_delta_int":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.integration.test_directionality_int":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.integration.test_dynamic_shapes":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.integration.test_errors_int":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.integration.test_explicit_tx":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.test_extra_fields":{
  "__set__":true,
  "elements":[
   "graypy"
  ]
 },
 "tests.integration.test_graph_types":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.test_im_utils_int":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.integration.test_image_filters":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.integration.test_ln_utils_int":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.integration.test_login":{
  "__set__":true,
  "elements":[
   "fair-research-login"
  ]
 },
 "tests.integration.test_main":{
  "__set__":true,
  "elements":[
   "pdfstream"
  ]
 },
 "tests.integration.test_mask_utils_int":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.integration.test_masks":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.integration.test_method_equivalence":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.integration.test_methods":{
  "__set__":true,
  "elements":[
   "looker-sdk"
  ]
 },
 "tests.integration.test_morphological_filters":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.integration.test_neo4j_driver":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.test_netrc":{
  "__set__":true,
  "elements":[
   "looker-sdk"
  ]
 },
 "tests.integration.test_network_io_int":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.integration.test_notebooks":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.integration.test_packages":{
  "__set__":true,
  "elements":[
   "quilt",
   "quilt3"
  ]
 },
 "tests.integration.test_pipelines":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.test_readme":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.test_result":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.test_result_data":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.test_result_graph":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.test_river_int":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.integration.test_river_utils_int":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.integration.test_scorer":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.integration.test_slide":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.integration.test_spatial_types":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.test_status_issue":{
  "__set__":true,
  "elements":[
   "graypy"
  ]
 },
 "tests.integration.test_summary":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.test_synthetic_int":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.integration.test_temporal_types":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.test_tile":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.integration.test_tiler":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.integration.test_tools":{
  "__set__":true,
  "elements":[
   "pdfstream"
  ]
 },
 "tests.integration.test_tx_functions":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.integration.test_util":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.integration.test_verbosity_int":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.integration.test_workflows":{
  "__set__":true,
  "elements":[
   "quilt3"
  ]
 },
 "tests.integration.usage_statistics":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.integration.usage_statistics.instantiate_context_with_usage_statistics":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.integration.usage_statistics.test_integration_usage_statistics":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.integration_evaluation":{
  "__set__":true,
  "elements":[
   "marinvaders"
  ]
 },
 "tests.integration_test":{
  "__set__":true,
  "elements":[
   "llnl-sina"
  ]
 },
 "tests.integration_tests":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.allennlp_tests":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.allennlp_tests.test_allennlp":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.allennlp_tests.tiny_single_id":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.lightgbm_tuner_tests":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.lightgbm_tuner_tests.test_alias":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.lightgbm_tuner_tests.test_optimize":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_catalyst":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_chainer":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_chainermn":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_cma":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_fastai":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_integration":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_keras":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_lightgbm":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_mlflow":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_mxnet":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_pytorch_ignite":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_pytorch_lightning":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_sampler":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_sklearn":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_skopt":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_skorch":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_tensorboard":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_tensorflow":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_tfkeras":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integration_tests.test_xgboost":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.integrations":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.integrations.examples":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.integrations.examples.test_driftbif_simulation":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.integrations.examples.test_har_dataset":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.integrations.examples.test_robot_execution_failures":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.integrations.test_full_pipeline":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.integrations.test_notebooks":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.integrations.test_relevant_feature_extraction":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.interop":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.interop.test_adapter":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.interop.test_calls":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.interpolation":{
  "__set__":true,
  "elements":[
   "amset"
  ]
 },
 "tests.interpolation.test_interpolate":{
  "__set__":true,
  "elements":[
   "amset"
  ]
 },
 "tests.io":{
  "__set__":true,
  "elements":[
   "landlab",
   "pandera-core",
   "pydeck",
   "pyusid",
   "tyssue"
  ]
 },
 "tests.io.data_utils":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io.hdf_utils":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io.hdf_utils.test_base":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io.hdf_utils.test_model":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io.hdf_utils.test_simple":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io.netcdf":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.io.netcdf.conftest":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.io.netcdf.test_from_netcdf":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.io.netcdf.test_read_netcdf":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.io.netcdf.test_to_netcdf":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.io.netcdf.test_write_netcdf":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.io.netcdf.test_write_raster_netcdf":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.io.simple_process":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io.test_aisoff":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.io.test_array_translator":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io.test_csv":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.io.test_dtype_utils":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io.test_hdf_utils":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io.test_html":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.io.test_image_translator":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io.test_io":{
  "__set__":true,
  "elements":[
   "pandera-core"
  ]
 },
 "tests.io.test_io_utils":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io.test_numpy_translator":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io.test_obj":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.io.test_partial_h5":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io.test_pycro_dataset":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io.test_read_esri_ascii":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.io.test_read_write_native":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.io.test_reg_ref":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io.test_translator":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io.test_usi_dataset":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io.test_write_esri_ascii":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.io.test_write_obj":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.io.test_write_utils":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.io_test":{
  "__set__":true,
  "elements":[
   "pybtex"
  ]
 },
 "tests.ios":{
  "__set__":true,
  "elements":[
   "mvt"
  ]
 },
 "tests.ios.test_backup_info":{
  "__set__":true,
  "elements":[
   "mvt"
  ]
 },
 "tests.ios.test_datausage":{
  "__set__":true,
  "elements":[
   "mvt"
  ]
 },
 "tests.ios.test_manifest":{
  "__set__":true,
  "elements":[
   "mvt"
  ]
 },
 "tests.ios.test_tcc":{
  "__set__":true,
  "elements":[
   "mvt"
  ]
 },
 "tests.ip":{
  "__set__":true,
  "elements":[
   "cyberpandas"
  ]
 },
 "tests.ip.test_dtypes":{
  "__set__":true,
  "elements":[
   "cyberpandas"
  ]
 },
 "tests.ip.test_interface":{
  "__set__":true,
  "elements":[
   "cyberpandas"
  ]
 },
 "tests.ip.test_ip":{
  "__set__":true,
  "elements":[
   "cyberpandas"
  ]
 },
 "tests.ip.test_ip_pandas":{
  "__set__":true,
  "elements":[
   "cyberpandas"
  ]
 },
 "tests.ip.test_pandas_methods":{
  "__set__":true,
  "elements":[
   "cyberpandas"
  ]
 },
 "tests.ip.test_parser":{
  "__set__":true,
  "elements":[
   "cyberpandas"
  ]
 },
 "tests.ipp":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.jobs":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.jupyter_test":{
  "__set__":true,
  "elements":[
   "llnl-sina"
  ]
 },
 "tests.jupyter_ux":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.jupyter_ux.test_jupyter_ux":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.kedro_neptune":{
  "__set__":true,
  "elements":[
   "kedro-neptune"
  ]
 },
 "tests.kedro_neptune.test_planets":{
  "__set__":true,
  "elements":[
   "kedro-neptune"
  ]
 },
 "tests.kernels":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.kernels.test_kernels":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.kernels.test_kernels_torch":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.kit":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.closest_pair":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.diff":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.fft":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.flatten_list":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.get_index":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.get_path_matching":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.glob_handler":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.ini":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.intersperse":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.joint_shape":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.nm_width":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.remove_nans_1D":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.share_nans":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.string2identifier":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.symmetric_sqrt":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.timer":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.timestamp":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.unicode":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.unique":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.valid_index":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.kit.zoom2D":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.knn_test":{
  "__set__":true,
  "elements":[
   "implicit"
  ]
 },
 "tests.languages":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.languages.test_YggInterface":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.languages.test_install_languages":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.lava":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.compiler":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.compiler.builders":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.compiler.builders.test_builder":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.compiler.channels":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.compiler.channels.test_pypychannel":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.compiler.subcompilers":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.compiler.subcompilers.py":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.compiler.subcompilers.py.test_pyproc_compiler":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.compiler.subcompilers.test_channel_builders_factory":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.compiler.subcompilers.test_channel_map_updater":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.compiler.test_channel_builder":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.compiler.test_channel_map":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.compiler.test_compiler":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.compiler.test_node":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.learning":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.learning.test_learning_rule":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.learning.test_learning_rule_applier":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.learning.test_product_series":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.learning.test_random":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.learning.test_symbolic_equation":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.learning.test_utils":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.model":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.model.py":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.model.py.test_ports":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.model.test_decorators":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.model.test_sub_model":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.process":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.process.ports":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.process.ports.test_ports":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.process.ports.test_virtual_ports_in_process":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.process.test_lif_dense_lif":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.process.test_process":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.core.process.test_variable":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.runtime":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.runtime.test_async_protocol":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.runtime.test_exception_handling":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.runtime.test_get_set_non_determinism":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.runtime.test_get_set_var":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.runtime.test_io_ports":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.runtime.test_loihi_protocol":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.runtime.test_pause_requested_from_model":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.runtime.test_ref_var_ports":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.runtime.test_run_continuously_and_pause":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.runtime.test_runtime":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.magma.runtime.test_runtime_service":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.conv":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.conv.test_process":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.conv.test_utils":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.dense":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.dense.test_models":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.dense.test_process":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.dense.test_stdp_sim":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.io":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.io.test_dataloader":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.io.test_source_sink":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.lif":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.lif.test_models":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.lif.test_process":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.monitor":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.monitor.test_monitors":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.scif":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.scif.test_models":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.scif.test_process":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.sdn":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.sdn.test_models":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.proc.sdn.test_process":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.test_utils":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.test_utils.utils":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.tutorials":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.tutorials.test_tutorials":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.utils":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lava.utils.test_weightutils":{
  "__set__":true,
  "elements":[
   "lava"
  ]
 },
 "tests.lbl":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.lbl.test_drop_labels_by_values":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.legacy":{
  "__set__":true,
  "elements":[
   "flask-restplus"
  ]
 },
 "tests.legacy.test_api":{
  "__set__":true,
  "elements":[
   "flask-restplus"
  ]
 },
 "tests.legacy.test_api_with_blueprint":{
  "__set__":true,
  "elements":[
   "flask-restplus"
  ]
 },
 "tests.license":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.license.test_discovery":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.link_functions":{
  "__set__":true,
  "elements":[
   "genestboost"
  ]
 },
 "tests.link_functions.link_function_test":{
  "__set__":true,
  "elements":[
   "genestboost"
  ]
 },
 "tests.link_functions.link_test_list":{
  "__set__":true,
  "elements":[
   "genestboost"
  ]
 },
 "tests.lmf_test":{
  "__set__":true,
  "elements":[
   "implicit"
  ]
 },
 "tests.load_examples_test":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.local_only_tests":{
  "__set__":true,
  "elements":[
   "foundry_ml"
  ]
 },
 "tests.logprob":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.logprob.test_abstract":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.logprob.test_censoring":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.logprob.test_composite_logprob":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.logprob.test_cumsum":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.logprob.test_joint_logprob":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.logprob.test_mixture":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.logprob.test_rewriting":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.logprob.test_scan":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.logprob.test_tensor":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.logprob.test_transforms":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.logprob.test_utils":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.logprob.utils":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.loss_functions":{
  "__set__":true,
  "elements":[
   "genestboost"
  ]
 },
 "tests.loss_functions.beta_loss_test":{
  "__set__":true,
  "elements":[
   "genestboost"
  ]
 },
 "tests.loss_functions.loss_function_test":{
  "__set__":true,
  "elements":[
   "genestboost"
  ]
 },
 "tests.loss_functions.loss_test_list":{
  "__set__":true,
  "elements":[
   "genestboost"
  ]
 },
 "tests.lotsa_windows":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.mac":{
  "__set__":true,
  "elements":[
   "cyberpandas"
  ]
 },
 "tests.mac.test_interface":{
  "__set__":true,
  "elements":[
   "cyberpandas"
  ]
 },
 "tests.macro_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.manage":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.manage.backup":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.manage.backup.test_backup_script":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.manage.backup.test_backup_setup_script":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.manage.configuration":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.manage.configuration.migrations":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.manage.configuration.migrations.test_migrations":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.manage.configuration.test_config":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.manage.configuration.test_options":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.manage.configuration.test_profile":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.manage.external":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.manage.external.test_postgres":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.manage.test_caching_config":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.markov":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.factory":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.hmm":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.hmm.test_bayesian_hmm":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.hmm.test_init_hmm":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.hmm.test_integration":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.hmm.test_mlhmm":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.hmm.test_output_models":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.msm":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.msm.conftest":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.msm.test_amm":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.msm.test_bayesian_msm":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.msm.test_markov_state_model":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.msm.test_mlmsm":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.msm.test_msm_basic_properties":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.msm.test_oom":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.msm.test_tram":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.msm.test_tram_datatset":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.msm.test_tram_model":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.msm.util":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.test_cktest":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.test_discrete_states":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.test_reactive_flux":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.test_sample":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.test_transition_counts":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.impl":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.impl.dense":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.impl.dense.correlations_test":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.impl.dense.expectations_test":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.impl.dense.fingerprints_test":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.impl.dense.hitting_probability_test":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.impl.dense.pcca_test":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.impl.dense.sensitivity_test":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.impl.sparse":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.impl.sparse.fingerprints_test":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.test_assessment":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.test_committor":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.test_decomposition":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.test_expectations":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.test_fingerprints":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.test_mfpt":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.test_sensitivity":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.analysis.test_stationary_vector":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.conftest":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.impl":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.impl.dense":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.impl.dense.covariance_test":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.impl.dense.tmatrix_sampler_test":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.impl.sparse":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.impl.sparse.connectivity_test":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.impl.sparse.likelihood_test":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.impl.sparse.prior_test":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.impl.sparse.transition_matrix_test":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.tests":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.tests.test_bootstrapping":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.tests.test_connectivity":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.tests.test_count_matrix":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.tests.test_effective_count_matrix":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.tests.test_likelihood":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.tests.test_mle_trev":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.tests.test_mle_trev_given_pi":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.tests.test_prior":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.tests.test_ratematrix":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.tests.test_tmatrix_sampling":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.estimation.tests.test_transition_matrix":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.flux":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.flux.test_pathways":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.flux.test_reactive_flux":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.flux.test_tpt":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markov.tools.numeric":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.markovprocess":{
  "__set__":true,
  "elements":[
   "scikit-time"
  ]
 },
 "tests.markovprocess.factory":{
  "__set__":true,
  "elements":[
   "scikit-time"
  ]
 },
 "tests.markovprocess.test_bayesian_msm":{
  "__set__":true,
  "elements":[
   "scikit-time"
  ]
 },
 "tests.markovprocess.test_cktest":{
  "__set__":true,
  "elements":[
   "scikit-time"
  ]
 },
 "tests.markovprocess.test_markov_state_model":{
  "__set__":true,
  "elements":[
   "scikit-time"
  ]
 },
 "tests.markovprocess.test_msm":{
  "__set__":true,
  "elements":[
   "scikit-time"
  ]
 },
 "tests.markovprocess.test_reactive_flux":{
  "__set__":true,
  "elements":[
   "scikit-time"
  ]
 },
 "tests.markovprocess.test_sample":{
  "__set__":true,
  "elements":[
   "scikit-time"
  ]
 },
 "tests.marks_test":{
  "__set__":true,
  "elements":[
   "bqplot",
   "ipywebrtc"
  ]
 },
 "tests.markup_test":{
  "__set__":true,
  "elements":[
   "pybtex"
  ]
 },
 "tests.mechanisms":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_BernoulliNegExp":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_Binary":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_Bingham":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_DPMachine":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_DPMechanism":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_Exponential":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_ExponentialCategorical":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_ExponentialHierarchical":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_Gaussian":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_GaussianAnalytic":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_GaussianDiscrete":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_Geometric":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_GeometricFolded":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_GeometricTruncated":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_Laplace":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_LaplaceBoundedDomain":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_LaplaceBoundedNoise":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_LaplaceFolded":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_LaplaceTruncated":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_PermuteAndFlip":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_Snapping":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_Staircase":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_TruncationAndFoldingMixin":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_Uniform":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_Vector":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.test_Wishart":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.transforms":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.transforms.test_DPTransformer":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.transforms.test_IntToString":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.transforms.test_RoundedInteger":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.mechanisms.transforms.test_StringToInt":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.messages":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.messages.test_message_pb2":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.messages.test_ref_message_pb2":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.metaschema":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes.conftest":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes.test_AnyMetaschemaType":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes.test_ArrayMetaschemaType":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes.test_ClassMetaschemaType":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes.test_ContainerMetaschemaType":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes.test_FunctionMetaschemaType":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes.test_InstanceMetaschemaType":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes.test_JSONArrayMetaschemaType":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes.test_JSONMetaschemaType":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes.test_JSONObjectMetaschemaType":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes.test_MetaschemaType":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes.test_MultiMetaschemaType":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes.test_ObjMetaschemaType":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes.test_PlyMetaschemaType":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes.test_ScalarMetaschemaType":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes.test_SchemaMetaschemaType":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.datatypes.test_conversions":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.properties":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.properties.test_AnyMetaschemaProperties":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.properties.test_ArgsMetaschemaProperty":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.properties.test_ArrayMetaschemaProperties":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.properties.test_ClassMetaschemaProperty":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.properties.test_JSONArrayMetaschemaProperties":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.properties.test_JSONObjectMetaschemaProperties":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.properties.test_KwargsMetaschemaProperty":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.properties.test_MetaschemaProperty":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.properties.test_ScalarMetaschemaProperties":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.properties.test_TypeMetaschemaProperty":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.test_encoder":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metaschema.test_normalizer":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.metrics":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox",
   "gputools",
   "xplique"
  ]
 },
 "tests.metrics.privacy":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.metrics.privacy.test_membership_leakage":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.metrics.privacy.test_worst_case_mia_score":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.metrics.test_common":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.metrics.test_fidelity":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.metrics.test_gradient_check":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.metrics.test_mege":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.metrics.test_metrics":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.metrics.test_ssim":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.metrics.test_stability":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.metrics.test_verification_decision_trees":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.migration_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.misc":{
  "__set__":true,
  "elements":[
   "borb",
   "theano-pymc"
  ]
 },
 "tests.misc.cmp":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.misc.cmp.test_digit_comparison":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.misc.matrix":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.misc.matrix.test_matrix_determinant":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.misc.matrix.test_matrix_multiplication":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.misc.postscript":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.misc.postscript.test_postscript_eval":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.misc.test_may_share_memory":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.misc.test_pkl_utils":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.misc.trie":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.misc.trie.test_add_to_trie":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.misc.types":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.misc.types.test_hash_types":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.misc.types.test_name_behaves_like_str":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.misc.types.test_type_added_methods":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.misc.types.test_type_methods":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.mlutils":{
  "__set__":true,
  "elements":[
   "dpu-utils"
  ]
 },
 "tests.mlutils.test_bpevocabulary":{
  "__set__":true,
  "elements":[
   "dpu-utils"
  ]
 },
 "tests.mock_server":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests.mockup":{
  "__set__":true,
  "elements":[
   "atlassian-python-api"
  ]
 },
 "tests.model":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.conftest":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.external_dataset_scores_insights":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.external_dataset_scores_insights.test_external_confusion_chart":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.external_dataset_scores_insights.test_external_dataset_residuals":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.external_dataset_scores_insights.test_external_lift_chart":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.external_dataset_scores_insights.test_external_multiclass_lift_chart":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.external_dataset_scores_insights.test_external_roc_curve":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.external_dataset_scores_insights.test_external_scores":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_bias_and_fairness":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_blender":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_clustering_model":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_cross_validation":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_custom_inference_image":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_custom_model":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_custom_model_test":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_custom_model_version":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_custom_model_version_dependency_build":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_custom_task":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_custom_task_version":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_custom_task_version_dependency_build":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_data_engine_query_generator":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_dataset":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_execution_environment":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_execution_environment_version":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_external_baseline_validation":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_feature_effect":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_feature_fit":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_feature_impact":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_frozen":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_job":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_model":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_model_params":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_payoff_matrix":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_prediction_explanations":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_prediction_server":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_predictions":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_prime_model":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_reason_codes":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_restore_discarded_features":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_rows_iterator":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_scoring_code":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_shap_impact":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_shap_matrix":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_shap_matrix_job":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.test_training_predictions":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.user_blueprints":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.user_blueprints.test_user_blueprint":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.utils":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.visualai":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.visualai.conftest":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.visualai.test_augmentation":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.visualai.test_image":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model.visualai.test_insights":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.model_proxy_test":{
  "__set__":true,
  "elements":[
   "llnl-sina"
  ]
 },
 "tests.model_test":{
  "__set__":true,
  "elements":[
   "llnl-sina"
  ]
 },
 "tests.model_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.models":{
  "__set__":true,
  "elements":[
   "airflow",
   "diffprivlib",
   "django-versatileimagefield",
   "openskill",
   "optimade",
   "pymc-base",
   "verta"
  ]
 },
 "tests.models.conftest":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.models.nets":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.models.standard_models":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.models.test_DecisionTreeClassifier":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.models.test_FittingTree":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.models.test_GaussianNB":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.models.test_KMeans":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.models.test_LinearRegression":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.models.test_LogisticRegression":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.models.test_PCA":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.models.test_RandomForestClassifier":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.models.test_StandardScaler":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.models.test_baseinfo":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.models.test_bradley_terry_full":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.models.test_bradley_terry_full_series":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.models.test_bradley_terry_part":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.models.test_bradley_terry_part_series":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.models.test_covariance_eig":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.models.test_entries":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.models.test_incremental_mean_and_var":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.models.test_jsonapi":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.models.test_links":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.models.test_logistic_regression_path":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.models.test_optimade_json":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.models.test_plackett_luce":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.models.test_plackett_luce_series":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.models.test_references":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.models.test_structures":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.models.test_thurstone_mosteller_full":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.models.test_thurstone_mosteller_full_series":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.models.test_thurstone_mosteller_part":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.models.test_thurstone_mosteller_part_series":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.models.test_utils":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.monitoring":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.monitoring.alerts":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.monitoring.alerts.test_alerter":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.monitoring.alerts.test_entities":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.monitoring.alerts.test_status":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.monitoring.comparison":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.monitoring.comparison.test_comparison":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.monitoring.conftest":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.monitoring.notification_channels":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.monitoring.notification_channels.test_config_classes":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.monitoring.notification_channels.test_entities":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.monitoring.strategies":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.monitoring.test_aggregation":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.monitoring.test_client":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.monitoring.test_profilers":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.monitoring.test_queries":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.monitoring.test_summaries":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.monitoring.test_summary_samples":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.moto_server":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests.multi_objective":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective.samplers_tests":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective.samplers_tests.test_nsga2":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective.samplers_tests.test_samplers":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective.test_study":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective.test_trial":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective.visualization_tests":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective.visualization_tests.test_pareto_front":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective_tests":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective_tests.hypervolume_tests":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective_tests.hypervolume_tests.test_utils":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective_tests.hypervolume_tests.test_wfg":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective_tests.samplers_tests":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective_tests.samplers_tests.test_nsga2":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective_tests.samplers_tests.test_samplers":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective_tests.test_study":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective_tests.test_trial":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective_tests.visualization_tests":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.multi_objective_tests.visualization_tests.test_pareto_front":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.mysql_test":{
  "__set__":true,
  "elements":[
   "llnl-sina"
  ]
 },
 "tests.nbconvert":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.nbconvert.test_handlers":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.neptune":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.alpha_integration":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.alpha_integration.test_alpha_integration_backend":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.api_models":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.api_objects_factory":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.experiments_object_factory":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.http_objects_factory":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.backends":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.backends.test_hosted_neptune_backend":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.backends.test_noop_object":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.channels":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.channels.test_channels_values_sender":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.hardware":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.hardware.gauges":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.hardware.gauges.gauges_fixture":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.hardware.gauges.test_cpu_gauges":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.hardware.gauges.test_gpu_gauges":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.hardware.gauges.test_memory_gauges":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.hardware.metrics":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.hardware.metrics.test_metric_reporter_integration":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.hardware.metrics.test_metric_service_integration":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.hardware.metrics.test_metrics_factory":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.hardware.resources":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.hardware.resources.test_system_resource_info_factory":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.storage":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.storage.test_datastream":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.internal.storage.test_upload_storage_utils":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.management":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.management.internal":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.management.internal.test_utils":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes.atoms":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes.atoms.test_artifact":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes.atoms.test_artifact_hash":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes.atoms.test_datetime":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes.atoms.test_file":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes.atoms.test_float":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes.atoms.test_string":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes.series":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes.series.test_file_series":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes.series.test_float_series":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes.series.test_series":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes.series.test_string_series":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes.sets":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes.sets.test_file_set":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes.sets.test_string_set":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes.test_attribute_base":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.attributes.test_attribute_utils":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.backend_test_mixin":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.client":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.client.abstract_experiment_test_mixin":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.client.abstract_tables_test":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.client.test_model":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.client.test_model_tables":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.client.test_model_version":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.client.test_model_version_tables":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.client.test_project":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.client.test_run":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.client.test_run_tables":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.helpers":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.artifacts":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.artifacts.drivers":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.artifacts.drivers.test_local":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.artifacts.drivers.test_s3":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.artifacts.test_file_hasher":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.artifacts.test_serializer":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.artifacts.test_types":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.artifacts.utils":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.backends":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.backends.test_hosted_artifact_operations":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.backends.test_hosted_client":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.backends.test_hosted_file_operations":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.backends.test_hosted_neptune_backend":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.backends.test_neptune_backend_mock":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.backends.test_nql":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.backends.test_operations_preprocessor":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.backends.test_swagger_client_wrapper":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.backends.test_utils":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.containers":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.containers.test_disk_queue":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.test_container_structure":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.test_credentials":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.test_disk_queue":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.test_operations":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.test_run_structure":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.test_streams":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.utils":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.utils.test_images":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.utils.test_json_file_splitter":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.internal.utils.test_utils":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.sync":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.sync.test_status":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.sync.test_sync":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.sync.test_utils":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.sync.utils":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.test_client":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.test_experiment":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.test_handler":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.test_log_handler":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.test_run":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.test_sync":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.types":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.types.atoms":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.types.atoms.test_file":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.utils":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.utils.api_experiments_factory":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.utils.file_helpers":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.websockets":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.new.websockets.test_websockets_signals_background_job":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.oauth_objects_factory":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.project_test_fixture":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.random_utils":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.test_channel_writer":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.test_experiment":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.test_git_info":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.test_imports":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.test_oauth":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.test_project":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.test_session":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.test_utils":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.utils":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.neptune.utils.assertions":{
  "__set__":true,
  "elements":[
   "neptune-client"
  ]
 },
 "tests.nltk_stages":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.nltk_stages.test_nltk":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.nltk_stages.test_rare":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.nltk_stages.test_snowball":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.node_test":{
  "__set__":true,
  "elements":[
   "osmapi"
  ]
 },
 "tests.noise":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.noise.test_perlin":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.notes_test":{
  "__set__":true,
  "elements":[
   "osmapi"
  ]
 },
 "tests.numeric":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.numeric.test_kahan_summation":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.numeric.test_norm":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.numeric.test_utils":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.ode":{
  "__set__":true,
  "elements":[
   "modelbase",
   "pymc-base"
  ]
 },
 "tests.ode.integrators":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.integrators.test_integrator_assimulo":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.integrators.test_integrator_scipy":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.model":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.model.test_generate_source_code":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.model.test_label_model":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.model.test_linear_label_model":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.model.test_model":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.simulator":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.simulator.test_base_simulator":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.simulator.test_label_simulator":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.simulator.test_linear_label_simulator":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.simulator.test_simulator":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.simulator.test_simulator_plotting":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.test_algebraicfunctions":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.test_mca":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.test_ode":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.ode.test_ratefunctions":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.test_ratelaws":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.ode.test_utils":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.onnx_backend_test":{
  "__set__":true,
  "elements":[
   "onnx-caffe2"
  ]
 },
 "tests.operators":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.operators.docker_operator":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.operators.hive_operator":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.operators.latest_only_operator":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.operators.operators":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.operators.s3_to_hive_operator":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.operators.sensors":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.operators.subdag_operator":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.ops":{
  "__set__":true,
  "elements":[
   "clisops"
  ]
 },
 "tests.ops.test_average":{
  "__set__":true,
  "elements":[
   "clisops"
  ]
 },
 "tests.ops.test_regrid":{
  "__set__":true,
  "elements":[
   "clisops"
  ]
 },
 "tests.ops.test_subset":{
  "__set__":true,
  "elements":[
   "clisops"
  ]
 },
 "tests.orm":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.data":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.data.test_data":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.data.test_dict":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.data.test_folder":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.data.test_kpoints":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.data.test_orbital":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.data.test_remote":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.data.test_singlefile":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.data.test_to_aiida_type":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.data.test_upf":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.implementation":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.implementation.test_backend":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.implementation.test_comments":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.implementation.test_logs":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.implementation.test_nodes":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.node":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.node.test_calcjob":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.node.test_node":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.test_authinfos":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.test_autogroups":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.test_comments":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.test_computers":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.test_entities":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.test_groups":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.test_logs":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.test_mixins":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.test_querybuilder":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.utils":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.utils.test_calcjob":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.utils.test_loaders":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.utils.test_node":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.orm.utils.test_repository":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.osmapi_test":{
  "__set__":true,
  "elements":[
   "osmapi"
  ]
 },
 "tests.other":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.other.sklearn_pipe":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.other_expectations":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.other_expectations.test_other_expectations":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.params":{
  "__set__":true,
  "elements":[
   "mesmerize-core"
  ]
 },
 "tests.parse_name_test":{
  "__set__":true,
  "elements":[
   "pybtex"
  ]
 },
 "tests.parser_styled_plains":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.parsers":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.parsers.test_parser":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.parsing":{
  "__set__":true,
  "elements":[
   "snntoolbox"
  ]
 },
 "tests.parsing.models":{
  "__set__":true,
  "elements":[
   "snntoolbox"
  ]
 },
 "tests.parsing.models.pytorch":{
  "__set__":true,
  "elements":[
   "snntoolbox"
  ]
 },
 "tests.parsing.test_pytorch":{
  "__set__":true,
  "elements":[
   "snntoolbox"
  ]
 },
 "tests.pcluster":{
  "__set__":true,
  "elements":[
   "aws-parallelcluster"
  ]
 },
 "tests.pcluster.efs_test":{
  "__set__":true,
  "elements":[
   "aws-parallelcluster"
  ]
 },
 "tests.pcluster.pcluster-unittest":{
  "__set__":true,
  "elements":[
   "aws-parallelcluster"
  ]
 },
 "tests.pdf":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.color":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.color.test_analogous_color_scheme":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.color.test_color_conversion":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.color.test_extract_colors":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.color.test_split_complementary_color_scheme":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.color.test_tetradic_rectangle_color_scheme":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.color.test_tetradic_square_color_scheme":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.color.test_triadic_color_scheme":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.font":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.font.test_digit_placement_ubuntu_font":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.font.test_extract_font_names":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.font.test_write_hello_world_with_monaco_font":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.font.test_write_hello_world_with_simhei_font":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.font.test_write_with_truetype_font":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.barcode":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.barcode.test_write_all_types_barcode":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.barcode.test_write_all_types_of_barcode":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.barcode.test_write_code_128_barcode":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.barcode.test_write_code_128_barcode_in_color":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.chart":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.chart.test_write_2_scatter_plots":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.chart.test_write_3d_density_chart":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.chart.test_write_3d_surface_plot":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.chart.test_write_radar_plot":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.chunk_of_text":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.chunk_of_text.test_write_chunk_of_text":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.chunk_of_text.test_write_chunk_of_text_escaped_chars":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.chunk_of_text.test_write_chunk_of_text_in_rainbow_colors":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.chunk_of_text.test_write_paragraph_with_accented_letters":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.chunk_of_text.test_write_using_low_level_instructions":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.chunks_of_text":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.chunks_of_text.test_write_chunks_of_text":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.chunks_of_text.test_write_chunks_of_text_preserves_bounding_boxes":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.codeblock":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.codeblock.test_write_codeblock":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.emoji":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.emoji.test_write_emoji":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.forms":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.forms.test_write_check_box":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.forms.test_write_drop_down_list":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.forms.test_write_push_button":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.forms.test_write_text_area":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.forms.test_write_text_field":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.heading":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.heading.test_write_paragraphs_with_headings":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.hyphenation":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.hyphenation.test_hyphenation":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.hyphenation.test_write_hyphenated_paragraph":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.image":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.image.test_modify_image":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.image.test_write_grayscale_image":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.image.test_write_image_aligned_center":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.image.test_write_image_by_url":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.image.test_write_image_justified_center":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.image.test_write_pil_image":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.image.test_write_png_image_by_url":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.image.test_write_xl_image":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.line_art":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.line_art.test_write_blobs":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.line_art.test_write_dragon_curve":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.line_art.test_write_flowchart_line_art":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.line_art.test_write_flyer":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.line_art.test_write_gradient_rectangular_maze":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.line_art.test_write_lissajours_line_art":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.line_art.test_write_rectangular_hitomezashi":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.line_art.test_write_rectangular_maze":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.line_of_text":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.line_of_text.test_write_line_of_text_justified_center":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.line_of_text.test_write_line_of_text_justified_full":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.line_of_text.test_write_line_of_text_justified_right":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.list":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.list.test_write_long_unordered_list":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.list.test_write_nested_ordered_list":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.list.test_write_nested_unordered_list":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.list.test_write_ordered_list":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.list.test_write_unordered_list":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.page_layout":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.page_layout.test_browser_layout_inline_next_line":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.page_layout.test_line_height_parameter":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.page_layout.test_margin_and_padding":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.page_layout.test_write_multiple_pages":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.page_layout.test_write_paragraphs_using_multi_column_layout":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.page_layout.test_write_paragraphs_using_single_column_layout":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.paragraph":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.paragraph.test_hello_world":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.paragraph.test_write_paragraph":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.paragraph.test_write_paragraph_alignment":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.paragraph.test_write_paragraph_border_left":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.paragraph.test_write_paragraph_force_split":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.paragraph.test_write_paragraph_justified_center":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.paragraph.test_write_paragraph_justified_center_with_padding":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.paragraph.test_write_paragraph_justified_center_with_padding_and_border":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.paragraph.test_write_paragraph_justified_center_with_padding_and_border_and_background":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.paragraph.test_write_paragraph_justified_full":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.paragraph.test_write_paragraph_justified_right":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.paragraph.test_write_paragraph_preserve_space":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.paragraph.test_write_paragraph_save_twice":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.paragraph.test_write_single_line_justified_full":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.table":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.table.test_write_battleship":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.table.test_write_fixed_column_width_table":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.table.test_write_flexi_table":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.table.test_write_flexi_table_with_preferred_width":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.table.test_write_incomplete_table":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.table.test_write_table_with_col_span":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.table.test_write_table_with_image":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.table.test_write_table_with_non_black_paragraphs":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.table.test_write_table_with_rainbow_background":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.table.test_write_table_with_row_span":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.table.test_write_table_with_special_characters":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.layout.table.test_write_tents_and_trees":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.canvas.test_write_empty_document":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.conformance":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.conformance.test_write_pdf_a_1b":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.concat":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.concat.test_concat_documents":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.count_pages":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.count_pages.test_count_pages":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.embedded_files":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.embedded_files.test_append_embedded_file":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.outlines":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.outlines.test_add_outline":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.outputintent":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.outputintent.test_create_document_with_output_intent":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.split_document":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.split_document.test_split_document":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.test_add_large_amount_of_headings":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.test_append_embedded_javascript":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.document.test_remove_page":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_add_all_rubber_stamp_annotations":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_add_circle_annotation":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_add_free_text_annotation":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_add_highlight_annotation":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_add_line_annotation":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_add_polygon_annotation_using_line_art_factory":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_add_polyline_annotation_using_line_art_factory":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_add_redact_annotation":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_add_remote_go_to_annotation":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_add_sound_annotation":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_add_square_annotation":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_add_square_annotation_in_free_space":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_add_squiggle_annotation":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_add_strikeout_annotation":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_add_super_mario_annotation":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_add_text_annotation":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_add_underline_annotation":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_count_annotations":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.annotations.test_remove_annotation":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.model":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.model.test_get_size_of_newly_created_page":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.redact":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.redact.test_apply_redaction_annotations":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.rotate":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.rotate.test_rotate_page":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.shape":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.page.shape.test_page_has_empty_resource_dictionary":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.trailer":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.trailer.profile_read_document":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.trailer.test_change_info_dictionary_author":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pdf.trailer.test_read_xmp_metadata":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.pep492":{
  "__set__":true,
  "elements":[
   "aiomysql"
  ]
 },
 "tests.pep492.test_async_iter":{
  "__set__":true,
  "elements":[
   "aiomysql"
  ]
 },
 "tests.pep492.test_async_with":{
  "__set__":true,
  "elements":[
   "aiomysql"
  ]
 },
 "tests.perf_lists":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.performance":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.performance.test_issue_29":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.performances":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.plane_hole":{
  "__set__":true,
  "elements":[
   "polyfempy"
  ]
 },
 "tests.plot":{
  "__set__":true,
  "elements":[
   "amset",
   "landlab",
   "openamundsen"
  ]
 },
 "tests.plot.network_sediment_transporter":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.plot.network_sediment_transporter.conftest":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.plot.network_sediment_transporter.test_plot_network_and_parcels":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.plot.test_base":{
  "__set__":true,
  "elements":[
   "amset"
  ]
 },
 "tests.plot.test_drainage_plot":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.plot.test_event_handler":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.plot.test_imshow_grid":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.plot.test_layers":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.plots":{
  "__set__":true,
  "elements":[
   "deeptime",
   "xplique"
  ]
 },
 "tests.plots.test_ck_test":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.plots.test_implied_timescales":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.plots.test_metric_plots":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.plots.test_timeseries_plots":{
  "__set__":true,
  "elements":[
   "xplique"
  ]
 },
 "tests.plugin_test":{
  "__set__":true,
  "elements":[
   "pybtex"
  ]
 },
 "tests.plugins":{
  "__set__":true,
  "elements":[
   "aiida-core",
   "typhos"
  ]
 },
 "tests.plugins.test_core":{
  "__set__":true,
  "elements":[
   "typhos"
  ]
 },
 "tests.plugins.test_entry_point":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.plugins.test_factories":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.plugins.test_happi":{
  "__set__":true,
  "elements":[
   "typhos"
  ]
 },
 "tests.plugins.test_utils":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.plugins_manager":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.post_processor":{
  "__set__":true,
  "elements":[
   "django-versatileimagefield"
  ]
 },
 "tests.post_processor.discover_tests":{
  "__set__":true,
  "elements":[
   "django-versatileimagefield"
  ]
 },
 "tests.post_processor.models":{
  "__set__":true,
  "elements":[
   "django-versatileimagefield"
  ]
 },
 "tests.post_processor.post_processor_tests":{
  "__set__":true,
  "elements":[
   "django-versatileimagefield"
  ]
 },
 "tests.post_processor.test_settings":{
  "__set__":true,
  "elements":[
   "django-versatileimagefield"
  ]
 },
 "tests.predictions":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.predictions.test_predict_draw":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.predictions.test_predict_rank":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.predictions.test_predict_win":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.preprocessing":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.preprocessing.audio":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.preprocessing.audio.test_l_filter":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.preprocessing.audio.test_l_filter_pytorch":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.preprocessing.expectation_over_transformation":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.preprocessing.expectation_over_transformation.natural_corruptions":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.preprocessing.expectation_over_transformation.natural_corruptions.test_brightness":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.preprocessing.expectation_over_transformation.natural_corruptions.test_contrast":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.preprocessing.expectation_over_transformation.natural_corruptions.test_gaussian_noise":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.preprocessing.expectation_over_transformation.natural_corruptions.test_shot_noise":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.preprocessing.expectation_over_transformation.natural_corruptions.test_zoom_blur":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.preprocessing.expectation_over_transformation.test_image_rotation":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.preprocessing.test_standardisation_mean_std":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.processing":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.processing.data_utils":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.processing.proc_utils":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.processing.test_comp_utils":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.processing.test_process":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.profile":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.profile.test_SampleExpectationsDatasetProfiler":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.profile.test_basic_suite_builder_profiler":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.profile.test_multi_batch_validation_meta_analysis":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.profile.test_profile":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.profile_dataset":{
  "__set__":true,
  "elements":[
   "deepforest"
  ]
 },
 "tests.profile_evaluate":{
  "__set__":true,
  "elements":[
   "deepforest"
  ]
 },
 "tests.profile_predict_file":{
  "__set__":true,
  "elements":[
   "deepforest"
  ]
 },
 "tests.project":{
  "__set__":true,
  "elements":[
   "datarobot",
   "xyzspaces"
  ]
 },
 "tests.project.conftest":{
  "__set__":true,
  "elements":[
   "datarobot",
   "xyzspaces"
  ]
 },
 "tests.project.test_async":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.project.test_batch_var_transform":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.project.test_blenders":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.project.test_extension":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.project.test_feature_association":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.project.test_frozen_models":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.project.test_prime":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.project.test_project_create":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.project.test_projects":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.project.test_train":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.project.test_type_transform":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.protected":{
  "__set__":true,
  "elements":[
   "tranquilizer"
  ]
 },
 "tests.pruners_tests":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.pruners_tests.test_hyperband":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.pruners_tests.test_median":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.pruners_tests.test_nop":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.pruners_tests.test_percentile":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.pruners_tests.test_successive_halving":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.pruners_tests.test_threshold":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.psycopg2_mock":{
  "__set__":true,
  "elements":[
   "xcube_geodb"
  ]
 },
 "tests.ptutils":{
  "__set__":true,
  "elements":[
   "dpu-utils"
  ]
 },
 "tests.ptutils.test_component":{
  "__set__":true,
  "elements":[
   "dpu-utils"
  ]
 },
 "tests.ptutils.testdata":{
  "__set__":true,
  "elements":[
   "dpu-utils"
  ]
 },
 "tests.ptutils.testmodel":{
  "__set__":true,
  "elements":[
   "dpu-utils"
  ]
 },
 "tests.pykafka":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pykafka.rdkafka":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pykafka.rdkafka.test_producer":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pykafka.rdkafka.test_rd_kafka_consumer":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pykafka.rdkafka.test_simple_consumer":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pykafka.rdkafka.test_ssl":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pykafka.test_balancedconsumer":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pykafka.test_cluster":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pykafka.test_connection":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pykafka.test_partition":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pykafka.test_partitioners":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pykafka.test_producer":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pykafka.test_protocol":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pykafka.test_simpleconsumer":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pykafka.test_ssl":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pykafka.utils":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pykafka.utils.test_compression":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pykafka.utils.test_struct_helpers":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "tests.pyspark":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.pyspark.feature":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.pyspark.feature.math_binary_test":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.pyspark.feature.math_unary_test":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.pyspark.feature.string_map_test":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.pyspark.lib":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.pyspark.lib.assertions":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.pyspark.lib.spark_session":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.python":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.python.conftest":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.python.echo":{
  "__set__":true,
  "elements":[
   "trio_asyncio"
  ]
 },
 "tests.python.echo2":{
  "__set__":true,
  "elements":[
   "trio_asyncio"
  ]
 },
 "tests.python.echo3":{
  "__set__":true,
  "elements":[
   "trio_asyncio"
  ]
 },
 "tests.python.test_base_events":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.python.test_events":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.python.test_futures":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.python.test_locks":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.python.test_pep492":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.python.test_proactor_events":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.python.test_queues":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.python.test_selector_events":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.python.test_sslproto":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.python.test_streams":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.python.test_subprocess":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.python.test_tasks":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.python.test_transports":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.python.test_unix_events":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.python.test_windows_events":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.python.test_windows_utils":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.recipes":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.recipes.emt":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.recipes.emt.test_emt_recipes":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.recipes.gaussian":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.recipes.gaussian.conftest":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.recipes.gaussian.test_gaussian_recipes":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.recipes.orca":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.recipes.orca.conftest":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.recipes.orca.test_orca_recipes":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.recipes.vasp":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.recipes.vasp.conftest":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.recipes.vasp.test_vasp_recipes":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.recipes.xtb":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.recipes.xtb.test_xtb_recipes":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.recommender_base_test":{
  "__set__":true,
  "elements":[
   "implicit"
  ]
 },
 "tests.record":{
  "__set__":true,
  "elements":[
   "aesara",
   "theano-pymc"
  ]
 },
 "tests.recording":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.reference":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.reforms":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.reforms.conftest":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.reforms.test_allocations_familliales_imposables":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.reforms.test_cesthra":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.reforms.test_landais_piketty_saez":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.reforms.test_parametric_reform":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.reforms.test_plf2015":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.reforms.test_plf2016":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.reforms.test_plf2016_ayrault_muet":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.reforms.test_plfr2014":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.reforms.test_trannoy_wasmer":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.registry":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.conftest":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.model_version":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.model_version.test_artifacts":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.model_version.test_crud":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.model_version.test_deployment":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.model_version.test_docker":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.model_version.test_find":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.model_version.test_from_run":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.model_version.test_log_code":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.model_version.test_log_dataset":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.model_version.test_monitoring":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.test_containerized_model":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.test_docker_image":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.test_model":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.test_model_base":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.test_stage_change":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.registry.test_standard_model":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.relation_test":{
  "__set__":true,
  "elements":[
   "osmapi"
  ]
 },
 "tests.render":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.renderer":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.renderer.content_block":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.renderer.content_block.test_expectation_string_renderer":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.renderer.test_notebook_renderer":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.renderer.test_suite_edit_notebook_renderer":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.renderer.test_suite_scaffold_notebook_renderer":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.test_SlackRenderer":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.test_column_section_renderer":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.test_data_documentation_site_builder":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.test_default_jinja_view":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.test_page_renderer":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.test_render":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.test_render_BulletListContentBlock":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.test_render_ExceptionListContentBlockRenderer":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.test_render_ValidationResultsTableContentBlockRenderer":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.test_renderer":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.test_styled_string_template":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.render.test_util":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.resources":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.rest_framework":{
  "__set__":true,
  "elements":[
   "django-filter"
  ]
 },
 "tests.rest_framework.apps":{
  "__set__":true,
  "elements":[
   "django-filter"
  ]
 },
 "tests.rest_framework.models":{
  "__set__":true,
  "elements":[
   "django-filter"
  ]
 },
 "tests.rest_framework.test_backends":{
  "__set__":true,
  "elements":[
   "django-filter"
  ]
 },
 "tests.rest_framework.test_filters":{
  "__set__":true,
  "elements":[
   "django-filter"
  ]
 },
 "tests.rest_framework.test_filterset":{
  "__set__":true,
  "elements":[
   "django-filter"
  ]
 },
 "tests.restapi":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.restapi.test_identifiers":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.restapi.test_routes":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.richtext_test":{
  "__set__":true,
  "elements":[
   "pybtex"
  ]
 },
 "tests.rq":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.rq.test_rq_unit":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.rtl":{
  "__set__":true,
  "elements":[
   "looker-sdk"
  ]
 },
 "tests.rtl.test_api_methods":{
  "__set__":true,
  "elements":[
   "looker-sdk"
  ]
 },
 "tests.rtl.test_api_settings":{
  "__set__":true,
  "elements":[
   "looker-sdk"
  ]
 },
 "tests.rtl.test_auth_session":{
  "__set__":true,
  "elements":[
   "looker-sdk"
  ]
 },
 "tests.rtl.test_auth_token":{
  "__set__":true,
  "elements":[
   "looker-sdk"
  ]
 },
 "tests.rtl.test_requests_transport":{
  "__set__":true,
  "elements":[
   "looker-sdk"
  ]
 },
 "tests.rtl.test_serialize":{
  "__set__":true,
  "elements":[
   "looker-sdk"
  ]
 },
 "tests.rtl.test_transport":{
  "__set__":true,
  "elements":[
   "looker-sdk"
  ]
 },
 "tests.run":{
  "__set__":true,
  "elements":[
   "ghost.py"
  ]
 },
 "tests.run_all":{
  "__set__":true,
  "elements":[
   "xrd_simulator"
  ]
 },
 "tests.run_raster_model_grid_builtin_unit_test":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.run_tests":{
  "__set__":true,
  "elements":[
   "saws"
  ]
 },
 "tests.running_section_per_page":{
  "__set__":true,
  "elements":[
   "pdfme"
  ]
 },
 "tests.sa":{
  "__set__":true,
  "elements":[
   "aiomysql"
  ]
 },
 "tests.sa.test_sa_connection":{
  "__set__":true,
  "elements":[
   "aiomysql"
  ]
 },
 "tests.sa.test_sa_distil":{
  "__set__":true,
  "elements":[
   "aiomysql"
  ]
 },
 "tests.sa.test_sa_engine":{
  "__set__":true,
  "elements":[
   "aiomysql"
  ]
 },
 "tests.sa.test_sa_transaction":{
  "__set__":true,
  "elements":[
   "aiomysql"
  ]
 },
 "tests.sampler_fixtures":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.samplers_tests":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.samplers_tests.test_cmaes":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.samplers_tests.test_grid":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.samplers_tests.test_samplers":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.samplers_tests.tpe_tests":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.samplers_tests.tpe_tests.test_multivariate_parzen_estomator":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.samplers_tests.tpe_tests.test_parzen_estimator":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.samplers_tests.tpe_tests.test_sampler":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.sampling":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.sampling.test_forward":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.sampling.test_jax":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.sampling.test_mcmc":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.sampling.test_mcmc_external":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.sampling.test_parallel":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.sampling.test_population":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.sandbox":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.sandbox.linalg":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.sandbox.linalg.test_linalg":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.sandbox.test_jax":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.sandbox.test_minimal":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.sandbox.test_multinomial":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.sandbox.test_multinomial_wo_replacement":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.sandbox.test_rng_mrg":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.sbml":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.sbml.test_import":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.scalar":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.scalar.test_basic":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.scalar.test_basic_sympy":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.scan":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.scan.test_basic":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.scan.test_checkpoints":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.scan.test_opt":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.scan.test_utils":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.scan_module":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.scan_module.test_scan":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.scan_module.test_scan_checkpoints":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.scan_module.test_scan_opt":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.scan_module.test_scan_utils":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.schedulers":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.schedulers.test_datastructures":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.schedulers.test_direct":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.schedulers.test_lsf":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.schedulers.test_pbspro":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.schedulers.test_sge":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.schedulers.test_slurm":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.schedulers.test_torque":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.schedules_test":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.schemas":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.schemas.test_atoms":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.schemas.test_calc":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.schemas.test_cclib":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.schemas.test_vasp":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.security_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.segmented_projects":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.segmented_projects.test_combined_model":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.segmented_projects.test_project":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.segmented_projects.test_segmentation":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.select_test":{
  "__set__":true,
  "elements":[
   "eventkit"
  ]
 },
 "tests.selector_test":{
  "__set__":true,
  "elements":[
   "bqplot"
  ]
 },
 "tests.serialization":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.serialization.test_identify":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.serialization.test_migrate":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.serialize":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.serialize.test_AsciiMapSerialize":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.serialize.test_AsciiTableSerialize":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.serialize.test_DefaultSerialize":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.serialize.test_FunctionalSerialize":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.serialize.test_MatSerialize":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.serialize.test_PandasSerialize":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.serialize.test_PickleSerialize":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.serialize.test_serialize":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.serializers":{
  "__set__":true,
  "elements":[
   "django-versatileimagefield"
  ]
 },
 "tests.server":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.conftest":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.query_params":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.query_params.conftest":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.query_params.test_filter":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.query_params.test_include":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.query_params.test_response_fields":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.query_params.test_sort":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.routers":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.routers.test_info":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.routers.test_links":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.routers.test_references":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.routers.test_structures":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.routers.test_utils":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.routers.test_versions":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.test_client":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.test_config":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.test_mappers":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.test_schemas":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.test_server_validation":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.server.utils":{
  "__set__":true,
  "elements":[
   "optimade"
  ]
 },
 "tests.services":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.api":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.api.test_api":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.config":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.config.test_api":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.contents":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.contents.test_api":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.contents.test_config":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.contents.test_fileio":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.contents.test_largefilemanager":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.contents.test_manager":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.kernels":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.kernels.test_api":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.kernels.test_config":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.kernels.test_cull":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.kernelspecs":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.kernelspecs.test_api":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.nbconvert":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.nbconvert.test_api":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.sessions":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.sessions.test_api":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.services.sessions.test_manager":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.settings":{
  "__set__":true,
  "elements":[
   "djangocms-admin-style"
  ]
 },
 "tests.settings-docker":{
  "__set__":true,
  "elements":[
   "djangocms-admin-style"
  ]
 },
 "tests.settings_base":{
  "__set__":true,
  "elements":[
   "django-versatileimagefield"
  ]
 },
 "tests.setup":{
  "__set__":true,
  "elements":[
   "mpl_plotter"
  ]
 },
 "tests.setup_test_data":{
  "__set__":true,
  "elements":[
   "ukpopulation"
  ]
 },
 "tests.shared":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.shared.test_shared":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.shells":{
  "__set__":true,
  "elements":[
   "adagio"
  ]
 },
 "tests.shells.test_interfaceless":{
  "__set__":true,
  "elements":[
   "adagio"
  ]
 },
 "tests.simulation":{
  "__set__":true,
  "elements":[
   "snntoolbox"
  ]
 },
 "tests.simulation.test_conv":{
  "__set__":true,
  "elements":[
   "snntoolbox"
  ]
 },
 "tests.simulation.test_pooling":{
  "__set__":true,
  "elements":[
   "snntoolbox"
  ]
 },
 "tests.sindy":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.sindy.test_sindy":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.skintegrate":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.skintegrate.test_pdpipeline_and_sklearn_estimator":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.skip_test_custom_protocol":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.sklearn":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.sklearn.base_tests":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.sklearn.extensions":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.sklearn.extensions.data_test":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.sklearn.extensions.imputer_extension_test":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.sklearn.feature_extraction":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.sklearn.feature_extraction.text_test":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.sklearn.preprocessing":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.sklearn.preprocessing.data_test":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.sklearn.preprocessing.imputer_test":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.sklearn.preprocessing.one_hot_encoder_test":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.sklearn.tree":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.sklearn.tree.tree_test":{
  "__set__":true,
  "elements":[
   "mleap"
  ]
 },
 "tests.sklearn_stages":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.sklearn_stages.test_decompose":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.sklearn_stages.test_encode":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.sklearn_stages.test_encode_label":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.sklearn_stages.test_scale":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.sklearn_stages.test_tfidf_vectorize_token_list":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.smc":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.smc.test_smc":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.smoketests":{
  "__set__":true,
  "elements":[
   "peppy"
  ]
 },
 "tests.smoketests.conftest":{
  "__set__":true,
  "elements":[
   "peppy"
  ]
 },
 "tests.smoketests.test_Project":{
  "__set__":true,
  "elements":[
   "peppy"
  ]
 },
 "tests.smoketests.test_Sample":{
  "__set__":true,
  "elements":[
   "peppy"
  ]
 },
 "tests.solvers":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.solvers.test_isotropic_solver":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.solvers.test_sheet_solver":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.space":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.space.conftest":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.space.test_space_objects":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.sparse":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.sparse.sandbox":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.sparse.sandbox.test_sp":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.sparse.test_basic":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.sparse.test_opt":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.sparse.test_sp2":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.sparse.test_type":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.sparse.test_utils":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.speed_test":{
  "__set__":true,
  "elements":[
   "hickle"
  ]
 },
 "tests.sql":{
  "__set__":true,
  "elements":[
   "llnl-sina",
   "xcube_geodb"
  ]
 },
 "tests.sql.test_sql_functions":{
  "__set__":true,
  "elements":[
   "xcube_geodb"
  ]
 },
 "tests.sql_parse_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.sql_validator_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.sqla_models_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.sqlalchemy_dataset":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.sqlalchemy_dataset.test_sqlalchemydataset":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.sqlite_test":{
  "__set__":true,
  "elements":[
   "llnl-sina"
  ]
 },
 "tests.sqllab_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.ssa_test":{
  "__set__":true,
  "elements":[
   "onnx-caffe2"
  ]
 },
 "tests.statistics":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.statistics.test_v":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.statistics.test_vt":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.statistics.test_w":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.statistics.test_wt":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.stats":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.stats.test_convergence":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.stats.test_log_likelihood":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.stats_logger_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.std_col":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.step_methods":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.step_methods.hmc":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.step_methods.hmc.test_hmc":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.step_methods.hmc.test_nuts":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.step_methods.hmc.test_quadpotential":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.step_methods.test_compound":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.step_methods.test_metropolis":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.step_methods.test_slicer":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.storages_tests":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.storages_tests.rdb_tests":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.storages_tests.rdb_tests.test_models":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.storages_tests.rdb_tests.test_storage":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.storages_tests.rdb_tests.test_with_server":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.storages_tests.test_cached_storage":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.storages_tests.test_storages":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.store":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.store.test_html_site_store":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.store.test_new_stores":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.store.test_store_backends":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.store.test_validation_store":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.stored_dataframes":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.strategies":{
  "__set__":true,
  "elements":[
   "pandera-core",
   "verta"
  ]
 },
 "tests.strategies.test_strategies":{
  "__set__":true,
  "elements":[
   "pandera-core"
  ]
 },
 "tests.strategy_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.stub":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.stub.conftest":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.stub.io":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.stub.test_accesslevel":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.stub.test_bookmarking":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.stub.test_directdriver":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.stub.test_multi_database":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.stub.test_routingdriver":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.stub.test_transactions":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.superset_test_config":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.syntax":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.system":{
  "__set__":true,
  "elements":[
   "google-cloud-bigquery",
   "google-cloud-monitoring"
  ]
 },
 "tests.techstacks_dtos":{
  "__set__":true,
  "elements":[
   "servicestack"
  ]
 },
 "tests.temporary_file_lock":{
  "__set__":true,
  "elements":[
   "portalocker"
  ]
 },
 "tests.tensor":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor._test_mpi_roundtrip":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.nnet":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.nnet.speed_test_conv":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.nnet.test_abstract_conv":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.nnet.test_blocksparse":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.nnet.test_bn":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.nnet.test_conv":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.nnet.test_conv3d2d":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.nnet.test_corr":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.nnet.test_corr3d":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.nnet.test_ctc":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.nnet.test_neighbours":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.nnet.test_nnet":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.nnet.test_opt":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.nnet.test_sigm":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.signal":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.signal.test_conv":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.signal.test_pool":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_basic":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_basic_scipy":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_blas":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_blas_c":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_blas_scipy":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_casting":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_complex":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_elemwise":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_extra_ops":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_fft":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_fourier":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_gc":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_inc_subtensor":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_inplace":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_io":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_keepdims":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_merge":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_misc":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_mlp":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_mpi":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_nlinalg":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_opt":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_opt_uncanonicalize":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_raw_random":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_shared_randomstreams":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_sharedvar":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_slinalg":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_sort":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_subtensor":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_type_other":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_utils":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_var":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.test_xlogx":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.tensor.utils":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.test":{
  "__set__":true,
  "elements":[
   "benchmark-4dn",
   "jaws",
   "python-fsutil"
  ]
 },
 "tests.test-confluence-attach":{
  "__set__":true,
  "elements":[
   "atlassian-python-api"
  ]
 },
 "tests.test_000_PrepareDb":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_001_ConnDb":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_002_ConnDbUncatalogedConn":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_003_NumAffectedRows":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_004_ConnWrongUserPwd":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_005_ConnBadUserBadPwd":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_006_ConnPassingOpts":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_007_pConnPassingOpts":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_008_ColumnInfo":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_010_UpdateRowCount":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_011_DeleteRowCount":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_012_KeysetDrivenCursorSelect01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_013_KeysetDrivenCursorSelect02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_014_KeysetDrivenCursorNegativeRow":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_015_InsertDeleteRowCount_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_016_InsertDeleteRowCount_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_017_selectRowcountPrefetchSTMTOpt":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_018_selectRowcountPrefetchSetOpt":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_019_selectRowcountPrefetchPrepOpt":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_020_RollbackDelete":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_021_CommitDelete":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_022_RollbackInsert":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_023_ColumnPrivileges":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_024_ForeignKeys":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_025_PrimaryKeys":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_030_Result":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_031_ResultIndexPosition":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_032_ResultIndexName":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_033_ResultOutSequenceColumn":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_034_FetchAssoc":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_035_FetchRow_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_036_FetchRow_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_037_FetchRowIndexPos":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_038_FetchRowIndexPosNested_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_039_FetchRowIndexPosNested_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_03a_ResultNonExistCol":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_040_FetchTuple":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_041_FetchTupleMany_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_042_FetchTupleMany_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_043_FetchTupleMany_03":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_044_FetchTupleMany_04":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_045_FetchTupleBinaryData_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_046_FetchTupleMany_05":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_047_FetchTupleMany_06":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_048_FetchTupleBinaryData_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_049_InsertNoneParam":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_050_AutocommitStatus":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_051_SetAutocommit_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_052_SetAutocommit_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_053_AttrThruConn":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_054_CursorType":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_060_Tables_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_061_Tables_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_062_Tables_03":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_063_Tables_04":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_064_Tables_05":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_065_FilterTableName":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_066_TableObjects":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_070_Close":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_071_CloseSuccess":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_080_ConnWrongDbAlias":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_081_ConnWrongUser":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_082_ConnWrongPwd":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_090_ConnmsgWrongDbAlias":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_091_ConnmsgWrongUser":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_092_ConnmsgWrongPwd":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_100_SelectDeleteInsertFieldCount":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_101_InsertDeleteFieldCount":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_102_NumFieldsSelect_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_103_NumFieldsSelect_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_110_FieldNum":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_111_FieldNumAddCol":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_112_FieldNumDiffCaseColNames":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_113_DateTest":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_114_NumericTest_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_115_NumericTest_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_116_ConnActive":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_120_FieldName":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_121_FieldNameAddCol":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_122_FieldNameDiffCaseColNames":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_123_FieldNamePos_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_124_FieldNamePos_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_125_FieldNamePos_03":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_130_PrepExecuteSelectStmt":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_131_PrepareExecuteSelectStatementParams":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_132_ExecuteStatementArrayMultipleParams":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_133_ExecuteLongInputParams":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_140_BindParamSelectStmt":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_141_BindParamSelectStmtMultipleParams_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_142_BindParamSelectStmtMultipleParams_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_143_BindParamInsertStmtNoneParam":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_144_BindParamInsertStmtPARAM_FILE":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_145_BindRetrieveNoneEmptyString":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_146_CallSPINAndOUTParams":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_147_PrepareWithWrongType":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_148_CallSPDiffBindPattern_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_150_FetchAssocSelect_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_151_FetchAssocSelect_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_152_FetchAssocSelect_03":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_153_FetchAssocSelect_04":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_154_AllFetches":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_155_FetchAssocSelect_05":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_156_FetchAssocNestedSelects_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_157_FetchAssocScrollableCursor_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_157a_FetchAssocWithoutScrollableCursorErr":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_157b_FetchAssocScrollableCursor_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_158_FetchAssocNestedSelects_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_159_FetchAssocSeveralRows_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_159a_FetchAssocSeveralRows_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_160_FetchBoth":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_161_FetchBothNestedSelects_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_162_FetchBothNestedSelects_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_180_StmtErrMsg":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_190_ColumnsTable_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_191_ColumnsTable_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_195_InsertRetrieveXMLData_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_196_InsertRetrieveXMLData_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_197_StatisticsIndexes":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_1_xlsx":{
  "__set__":true,
  "elements":[
   "sheet2dict"
  ]
 },
 "tests.test_1st_system":{
  "__set__":true,
  "elements":[
   "andes"
  ]
 },
 "tests.test_200_MultipleRsltsetsUniformColDefs":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_201_MultipleRsltsetsDiffColDefs":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_210_FieldDisplaySize_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_211_FieldDisplaySize_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_212_FieldDisplaySize_03":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_213_FieldDisplaySize_04":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_220_PersistentConn":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_221_100PersistentConns":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_230_FieldTypePos":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_231_FieldTypeName":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_232_FieldTypePosName":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_240_FieldWidthPosName_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_241_FieldWidthPosName_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_250_FreeResult_01":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_251_FreeResult_02":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_260_FetchTupleMany_07":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_261_FetchObjectAccess":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_264_InsertRetrieveBIGINTTypeColumn":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_265_NoAffectedRows":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_2_csv":{
  "__set__":true,
  "elements":[
   "sheet2dict"
  ]
 },
 "tests.test_2nd_order_grads":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.test_300_ServerInfo":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_310_ClientInfo":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_311_InsertSelectDeleteNumLiterals":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_3_xlsx":{
  "__set__":true,
  "elements":[
   "sheet2dict"
  ]
 },
 "tests.test_52949_TestSPIntVarcharXml":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_6528_ScopingProblemBindParam":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_6561_InsertNULLValues":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_6755_ExtraNULLChar_ResultCLOBCol":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_6792_FieldTypeRetStrDatetimeTimestamp":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_AudioClips":{
  "__set__":true,
  "elements":[
   "moviepy"
  ]
 },
 "tests.test_BaseTransform":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_Basic":{
  "__set__":true,
  "elements":[
   "pymatsolver"
  ]
 },
 "tests.test_BicgJacobi":{
  "__set__":true,
  "elements":[
   "pymatsolver"
  ]
 },
 "tests.test_Budget":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.test_BudgetAccountant":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.test_COREG":{
  "__set__":true,
  "elements":[
   "arosics"
  ]
 },
 "tests.test_COREG_LOCAL":{
  "__set__":true,
  "elements":[
   "arosics"
  ]
 },
 "tests.test_Coumpound_setters":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_CustomSource":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_DoppelTestError":{
  "__set__":true,
  "elements":[
   "doppel-cli"
  ]
 },
 "tests.test_GbibClean":{
  "__set__":true,
  "elements":[
   "goosebib"
  ]
 },
 "tests.test_IOH_benchmarking":{
  "__set__":true,
  "elements":[
   "iohexperimenter"
  ]
 },
 "tests.test_IOH_function":{
  "__set__":true,
  "elements":[
   "iohexperimenter"
  ]
 },
 "tests.test_IOH_logger":{
  "__set__":true,
  "elements":[
   "iohexperimenter"
  ]
 },
 "tests.test_ImageSequenceClip":{
  "__set__":true,
  "elements":[
   "moviepy"
  ]
 },
 "tests.test_InsertRetrieveDateTimeTypeColumn":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_IoU":{
  "__set__":true,
  "elements":[
   "deepforest"
  ]
 },
 "tests.test_JmaCsvCatalog":{
  "__set__":true,
  "elements":[
   "pycsep"
  ]
 },
 "tests.test_Material":{
  "__set__":true,
  "elements":[
   "neutronics_material_maker"
  ]
 },
 "tests.test_Material_from_mixture":{
  "__set__":true,
  "elements":[
   "neutronics_material_maker"
  ]
 },
 "tests.test_Multmaterial":{
  "__set__":true,
  "elements":[
   "neutronics_material_maker"
  ]
 },
 "tests.test_Mumps":{
  "__set__":true,
  "elements":[
   "pymatsolver"
  ]
 },
 "tests.test_Mutation":{
  "__set__":true,
  "elements":[
   "seqlike"
  ]
 },
 "tests.test_PR":{
  "__set__":true,
  "elements":[
   "moviepy"
  ]
 },
 "tests.test_Pardiso":{
  "__set__":true,
  "elements":[
   "pymatsolver"
  ]
 },
 "tests.test_Project":{
  "__set__":true,
  "elements":[
   "peppy"
  ]
 },
 "tests.test_Scipy":{
  "__set__":true,
  "elements":[
   "pymatsolver"
  ]
 },
 "tests.test_SeqLike":{
  "__set__":true,
  "elements":[
   "seqlike"
  ]
 },
 "tests.test_SeqLikeAccessor":{
  "__set__":true,
  "elements":[
   "seqlike"
  ]
 },
 "tests.test_SeqLike_alignment":{
  "__set__":true,
  "elements":[
   "seqlike"
  ]
 },
 "tests.test_SeqLike_conversion_to_numerical":{
  "__set__":true,
  "elements":[
   "seqlike"
  ]
 },
 "tests.test_SeqLike_magic_methods":{
  "__set__":true,
  "elements":[
   "seqlike"
  ]
 },
 "tests.test_SeqLike_to_other_seq_formats":{
  "__set__":true,
  "elements":[
   "seqlike"
  ]
 },
 "tests.test_SequenceLike":{
  "__set__":true,
  "elements":[
   "seqlike"
  ]
 },
 "tests.test_TextClip":{
  "__set__":true,
  "elements":[
   "moviepy"
  ]
 },
 "tests.test_Triangle":{
  "__set__":true,
  "elements":[
   "pymatsolver"
  ]
 },
 "tests.test_VideoClip":{
  "__set__":true,
  "elements":[
   "moviepy"
  ]
 },
 "tests.test_VideoFileClip":{
  "__set__":true,
  "elements":[
   "moviepy"
  ]
 },
 "tests.test_Videos":{
  "__set__":true,
  "elements":[
   "moviepy"
  ]
 },
 "tests.test_WaterNetworkAnalysis":{
  "__set__":true,
  "elements":[
   "waternetworkanalysis"
  ]
 },
 "tests.test_aaSeqLike_ntSeqLike":{
  "__set__":true,
  "elements":[
   "seqlike"
  ]
 },
 "tests.test_abspath":{
  "__set__":true,
  "elements":[
   "autouri"
  ]
 },
 "tests.test_accent":{
  "__set__":true,
  "elements":[
   "gruut-ipa"
  ]
 },
 "tests.test_accept":{
  "__set__":true,
  "elements":[
   "flask-restplus"
  ]
 },
 "tests.test_accessor":{
  "__set__":true,
  "elements":[
   "extract_model"
  ]
 },
 "tests.test_action":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests.test_actions":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_active_cells":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_activitysim":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_actual_docstrings":{
  "__set__":true,
  "elements":[
   "mktestdocs"
  ]
 },
 "tests.test_adapters":{
  "__set__":true,
  "elements":[
   "erdantic"
  ]
 },
 "tests.test_adaptive":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests.test_adaptiveHistogram":{
  "__set__":true,
  "elements":[
   "pycsep"
  ]
 },
 "tests.test_addressing":{
  "__set__":true,
  "elements":[
   "andes"
  ]
 },
 "tests.test_adlfs":{
  "__set__":true,
  "elements":[
   "planetary-computer"
  ]
 },
 "tests.test_adversary":{
  "__set__":true,
  "elements":[
   "artificial-adversary"
  ]
 },
 "tests.test_affinities":{
  "__set__":true,
  "elements":[
   "fasttsne"
  ]
 },
 "tests.test_aggregator":{
  "__set__":true,
  "elements":[
   "mikeio"
  ]
 },
 "tests.test_aio_subprocess":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.test_algorithms":{
  "__set__":true,
  "elements":[
   "chebfun"
  ]
 },
 "tests.test_all":{
  "__set__":true,
  "elements":[
   "marinvaders",
   "ukpopulation"
  ]
 },
 "tests.test_all_notebooks":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_all_sets":{
  "__set__":true,
  "elements":[
   "e3sm_diags"
  ]
 },
 "tests.test_analysis":{
  "__set__":true,
  "elements":[
   "plonk"
  ]
 },
 "tests.test_analyze":{
  "__set__":true,
  "elements":[
   "matrixprofile"
  ]
 },
 "tests.test_animation":{
  "__set__":true,
  "elements":[
   "plonk"
  ]
 },
 "tests.test_animations":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.test_annotation_vector":{
  "__set__":true,
  "elements":[
   "matrixprofile"
  ]
 },
 "tests.test_annotations":{
  "__set__":true,
  "elements":[
   "pyannote.core"
  ]
 },
 "tests.test_anypath":{
  "__set__":true,
  "elements":[
   "cloudpathlib"
  ]
 },
 "tests.test_apache_conf":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_api":{
  "__set__":true,
  "elements":[
   "flask-restplus",
   "marinvaders",
   "nb_cron",
   "pastel",
   "quilt",
   "quilt3",
   "tomlkit"
  ]
 },
 "tests.test_apidoc":{
  "__set__":true,
  "elements":[
   "flask-restplus"
  ]
 },
 "tests.test_app":{
  "__set__":true,
  "elements":[
   "labelme",
   "localtileserver",
   "sanic"
  ]
 },
 "tests.test_application":{
  "__set__":true,
  "elements":[
   "magicgui",
   "msal",
   "tranquilizer"
  ]
 },
 "tests.test_archive":{
  "__set__":true,
  "elements":[
   "pytmc"
  ]
 },
 "tests.test_arg_tool":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.test_argument_parser":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.test_array":{
  "__set__":true,
  "elements":[
   "intake-accumulo"
  ]
 },
 "tests.test_artifacts":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_asgi":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_asm":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_assets":{
  "__set__":true,
  "elements":[
   "seqlike"
  ]
 },
 "tests.test_astropy":{
  "__set__":true,
  "elements":[
   "hickle"
  ]
 },
 "tests.test_async_cursor":{
  "__set__":true,
  "elements":[
   "pyathena"
  ]
 },
 "tests.test_atom":{
  "__set__":true,
  "elements":[
   "crystals"
  ]
 },
 "tests.test_atomlist":{
  "__set__":true,
  "elements":[
   "atom"
  ]
 },
 "tests.test_attacks":{
  "__set__":true,
  "elements":[
   "artificial-adversary"
  ]
 },
 "tests.test_auth":{
  "__set__":true,
  "elements":[
   "conda-store-server"
  ]
 },
 "tests.test_authority":{
  "__set__":true,
  "elements":[
   "msal"
  ]
 },
 "tests.test_auto":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.test_autodiscover":{
  "__set__":true,
  "elements":[
   "django-versatileimagefield"
  ]
 },
 "tests.test_autodiscover.versatileimagefield":{
  "__set__":true,
  "elements":[
   "django-versatileimagefield"
  ]
 },
 "tests.test_autoflow":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_autoreload":{
  "__set__":true,
  "elements":[
   "plum-dispatch"
  ]
 },
 "tests.test_autouri_localize":{
  "__set__":true,
  "elements":[
   "autouri"
  ]
 },
 "tests.test_autouri_lock":{
  "__set__":true,
  "elements":[
   "autouri"
  ]
 },
 "tests.test_avalanche_dataset":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.test_aws":{
  "__set__":true,
  "elements":[
   "awacs"
  ]
 },
 "tests.test_azure_specific":{
  "__set__":true,
  "elements":[
   "cloudpathlib"
  ]
 },
 "tests.test_backend":{
  "__set__":true,
  "elements":[
   "kbatch",
   "verta"
  ]
 },
 "tests.test_backends":{
  "__set__":true,
  "elements":[
   "magicgui"
  ]
 },
 "tests.test_backwards_compatibility":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_bad_commands_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_compile_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_cryptography_module_attribute_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_defusedxml_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_dl_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_duo_client_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_eval_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_exec_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_gl_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_hashlib_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_input_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_itsdangerous_kwarg_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_marshal_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_n_sp":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_bad_onelogin_kwarg_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_onelogin_module_attribute_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_os_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_pickle_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_popen2_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_pycrypto_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_random_generator_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_re_catastrophic_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_request":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_bad_requests_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_shelve_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_ssl_module_attribute_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_subprocess_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_sys_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_tarfile_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_tempfile_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_urllib3_kwarg_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_urllib3_module_attribute_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_xml_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_xmlrpc_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_xmlsec_module_attribute_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_yaml_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bad_zipfile_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_bar":{
  "__set__":true,
  "elements":[
   "dexplot"
  ]
 },
 "tests.test_base":{
  "__set__":true,
  "elements":[
   "atlassian-python-api",
   "awacs",
   "codext",
   "crccheck",
   "crystals",
   "embetter",
   "erdantic",
   "mpl_plotter",
   "pathy",
   "sanic"
  ]
 },
 "tests.test_base_class_erosion_model_boundary_handers":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_base_class_erosion_model_inputs":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_base_class_erosion_model_misc":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_base_class_erosion_model_output_writers":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_base_class_erosion_model_outputs":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_base_class_erosion_model_run":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_base_class_stochastic_erosion_model":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_base_class_two_lithology_base":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_base_dataclasses":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.test_base_embed":{
  "__set__":true,
  "elements":[
   "graspy"
  ]
 },
 "tests.test_base_level_capture_node_baselevel_handler":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_base_level_generic_function_baselevel_handler":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_base_level_not_core_node_baselevel_handler":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_base_level_precip_changer":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_base_level_single_node_baselevel_handler":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_base_recipe":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.test_baseposelist":{
  "__set__":true,
  "elements":[
   "spatialmath-python"
  ]
 },
 "tests.test_basic":{
  "__set__":true,
  "elements":[
   "aiomysql",
   "histogrammar",
   "igl",
   "pygments"
  ]
 },
 "tests.test_basic_api":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_basic_regression":{
  "__set__":true,
  "elements":[
   "propka"
  ]
 },
 "tests.test_basic_s3":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests.test_basic_types_utils":{
  "__set__":true,
  "elements":[
   "pycsep"
  ]
 },
 "tests.test_basics":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.test_basin_stats":{
  "__set__":true,
  "elements":[
   "rabpro"
  ]
 },
 "tests.test_batch":{
  "__set__":true,
  "elements":[
   "aiobotocore",
   "cellpy"
  ]
 },
 "tests.test_beam":{
  "__set__":true,
  "elements":[
   "xrd_simulator"
  ]
 },
 "tests.test_benchmark":{
  "__set__":true,
  "elements":[
   "typhos"
  ]
 },
 "tests.test_bibtex":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_bindings":{
  "__set__":true,
  "elements":[
   "metview-python"
  ]
 },
 "tests.test_biologics":{
  "__set__":true,
  "elements":[
   "cellpy"
  ]
 },
 "tests.test_biomech_model":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_bitbucket_cloud":{
  "__set__":true,
  "elements":[
   "atlassian-python-api"
  ]
 },
 "tests.test_bitbucket_cloud_oo":{
  "__set__":true,
  "elements":[
   "atlassian-python-api"
  ]
 },
 "tests.test_bitbucket_server":{
  "__set__":true,
  "elements":[
   "atlassian-python-api"
  ]
 },
 "tests.test_bitbucket_server_oo":{
  "__set__":true,
  "elements":[
   "atlassian-python-api"
  ]
 },
 "tests.test_bl_scrunch":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_block":{
  "__set__":true,
  "elements":[
   "andes"
  ]
 },
 "tests.test_blueprint_copy":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_blueprint_group":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_blueprints":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_bndfun":{
  "__set__":true,
  "elements":[
   "chebfun"
  ]
 },
 "tests.test_bool_field":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_boosting_models":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_boron":{
  "__set__":true,
  "elements":[
   "cbsyst"
  ]
 },
 "tests.test_boron_isotopes":{
  "__set__":true,
  "elements":[
   "cbsyst"
  ]
 },
 "tests.test_box":{
  "__set__":true,
  "elements":[
   "dexplot"
  ]
 },
 "tests.test_breakpoint":{
  "__set__":true,
  "elements":[
   "aesara",
   "theano-pymc"
  ]
 },
 "tests.test_bucket":{
  "__set__":true,
  "elements":[
   "quilt",
   "quilt3"
  ]
 },
 "tests.test_build":{
  "__set__":true,
  "elements":[
   "ablog",
   "bamnostic",
   "tomlkit"
  ]
 },
 "tests.test_bulk":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_bulk_inserts":{
  "__set__":true,
  "elements":[
   "aiomysql"
  ]
 },
 "tests.test_bytes_and_string_lists":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_cache":{
  "__set__":true,
  "elements":[
   "pystac",
   "suds-jurko",
   "typhos"
  ]
 },
 "tests.test_caching":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_calc":{
  "__set__":true,
  "elements":[
   "pycsep"
  ]
 },
 "tests.test_calc_n_coarse_chan":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_calcload":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_calculation_node":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.test_callbacks":{
  "__set__":true,
  "elements":[
   "deepforest",
   "glymur",
   "mols2grid"
  ]
 },
 "tests.test_cameraconfig":{
  "__set__":true,
  "elements":[
   "pyopenrivercam"
  ]
 },
 "tests.test_canopy":{
  "__set__":true,
  "elements":[
   "openamundsen"
  ]
 },
 "tests.test_caper_labels":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.test_caper_wdl_parser":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.test_caper_workflow_opts":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.test_carbon":{
  "__set__":true,
  "elements":[
   "cbsyst"
  ]
 },
 "tests.test_case":{
  "__set__":true,
  "elements":[
   "andes"
  ]
 },
 "tests.test_catalog":{
  "__set__":true,
  "elements":[
   "daops",
   "pycsep",
   "pystac"
  ]
 },
 "tests.test_catalog.test_intake":{
  "__set__":true,
  "elements":[
   "daops"
  ]
 },
 "tests.test_catalog.test_util":{
  "__set__":true,
  "elements":[
   "daops"
  ]
 },
 "tests.test_catalyst":{
  "__set__":true,
  "elements":[
   "dvclive"
  ]
 },
 "tests.test_cats_only":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_cbsyst":{
  "__set__":true,
  "elements":[
   "cbsyst"
  ]
 },
 "tests.test_cell_metadata":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_cell_readers":{
  "__set__":true,
  "elements":[
   "cellpy"
  ]
 },
 "tests.test_cellpy":{
  "__set__":true,
  "elements":[
   "cellpy"
  ]
 },
 "tests.test_cellpy_cmd":{
  "__set__":true,
  "elements":[
   "cellpy"
  ]
 },
 "tests.test_cellpy_splitting":{
  "__set__":true,
  "elements":[
   "cellpy"
  ]
 },
 "tests.test_cells":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_centerline":{
  "__set__":true,
  "elements":[
   "sed-plume"
  ]
 },
 "tests.test_cevae":{
  "__set__":true,
  "elements":[
   "causalml"
  ]
 },
 "tests.test_cfm":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_changeable":{
  "__set__":true,
  "elements":[
   "flask-security-too"
  ]
 },
 "tests.test_characters":{
  "__set__":true,
  "elements":[
   "pydifact"
  ]
 },
 "tests.test_charts":{
  "__set__":true,
  "elements":[
   "hydrofunctions"
  ]
 },
 "tests.test_chebfun":{
  "__set__":true,
  "elements":[
   "chebfun"
  ]
 },
 "tests.test_chebtech":{
  "__set__":true,
  "elements":[
   "chebfun"
  ]
 },
 "tests.test_check_bounds":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.test_check_epsilon_delta":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.test_check_random_state":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.test_checks":{
  "__set__":true,
  "elements":[
   "xclim"
  ]
 },
 "tests.test_checksum":{
  "__set__":true,
  "elements":[
   "crccheck"
  ]
 },
 "tests.test_chemex":{
  "__set__":true,
  "elements":[
   "chemex"
  ]
 },
 "tests.test_chunk_grid":{
  "__set__":true,
  "elements":[
   "pangeo-forge-recipes"
  ]
 },
 "tests.test_cifar100_benchmarks":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.test_cifar10_benchmarks":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.test_cinema":{
  "__set__":true,
  "elements":[
   "glymur"
  ]
 },
 "tests.test_class":{
  "__set__":true,
  "elements":[
   "mktestdocs"
  ]
 },
 "tests.test_classes":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.test_classification":{
  "__set__":true,
  "elements":[
   "medcam"
  ]
 },
 "tests.test_classification.resnet_test":{
  "__set__":true,
  "elements":[
   "medcam"
  ]
 },
 "tests.test_classifier_base":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_classifier_explainer":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_cleaning":{
  "__set__":true,
  "elements":[
   "glidertools"
  ]
 },
 "tests.test_clexer":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_cli":{
  "__set__":true,
  "elements":[
   "andes",
   "biom-format",
   "birdy",
   "compaction",
   "csv-diff",
   "erdantic",
   "explainerdashboard",
   "flask-security-too",
   "goosehdf5",
   "jupytext",
   "nbgitpuller-link",
   "openamundsen",
   "optuna",
   "pathy",
   "pyremo",
   "pystac-client",
   "quilt",
   "quilt3",
   "sanic",
   "saws",
   "sed-plume",
   "typhos",
   "verta"
  ]
 },
 "tests.test_cli.test_add_metadata":{
  "__set__":true,
  "elements":[
   "biom-format"
  ]
 },
 "tests.test_cli.test_endpoint":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_cli.test_registry":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_cli.test_repository":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_cli.test_show_install_info":{
  "__set__":true,
  "elements":[
   "biom-format"
  ]
 },
 "tests.test_cli.test_subset_table":{
  "__set__":true,
  "elements":[
   "biom-format"
  ]
 },
 "tests.test_cli.test_summarize_table":{
  "__set__":true,
  "elements":[
   "biom-format"
  ]
 },
 "tests.test_cli.test_table_converter":{
  "__set__":true,
  "elements":[
   "biom-format"
  ]
 },
 "tests.test_cli.test_table_normalizer":{
  "__set__":true,
  "elements":[
   "biom-format"
  ]
 },
 "tests.test_cli.test_uc_processor":{
  "__set__":true,
  "elements":[
   "biom-format"
  ]
 },
 "tests.test_cli.test_validate_table":{
  "__set__":true,
  "elements":[
   "biom-format"
  ]
 },
 "tests.test_cli_run":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.test_cli_server_client_gcp":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.test_client":{
  "__set__":true,
  "elements":[
   "birdy",
   "cloudpathlib",
   "kbatch",
   "kylinpy",
   "localtileserver",
   "msal",
   "notion-client",
   "pystac-client",
   "servicestack",
   "stanza",
   "yarg"
  ]
 },
 "tests.test_client_auth":{
  "__set__":true,
  "elements":[
   "servicestack"
  ]
 },
 "tests.test_client_cache":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.test_client_it":{
  "__set__":true,
  "elements":[
   "webdavclient3"
  ]
 },
 "tests.test_client_resource_it":{
  "__set__":true,
  "elements":[
   "webdavclient3"
  ]
 },
 "tests.test_client_unit":{
  "__set__":true,
  "elements":[
   "webdavclient3"
  ]
 },
 "tests.test_client_utils":{
  "__set__":true,
  "elements":[
   "servicestack"
  ]
 },
 "tests.test_clients":{
  "__set__":true,
  "elements":[
   "pathy"
  ]
 },
 "tests.test_climatology":{
  "__set__":true,
  "elements":[
   "esmlab"
  ]
 },
 "tests.test_clip_to_bounds":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.test_clip_to_norm":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.test_clock":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_cloudpath_file_io":{
  "__set__":true,
  "elements":[
   "cloudpathlib"
  ]
 },
 "tests.test_cloudpath_instantiation":{
  "__set__":true,
  "elements":[
   "cloudpathlib"
  ]
 },
 "tests.test_cloudpath_internal":{
  "__set__":true,
  "elements":[
   "cloudpathlib"
  ]
 },
 "tests.test_cloudpath_manipulation":{
  "__set__":true,
  "elements":[
   "cloudpathlib"
  ]
 },
 "tests.test_cloudpath_upload_copy":{
  "__set__":true,
  "elements":[
   "cloudpathlib"
  ]
 },
 "tests.test_cmdline":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_cmor":{
  "__set__":true,
  "elements":[
   "py-cordex",
   "pyremo"
  ]
 },
 "tests.test_cmreshandler":{
  "__set__":true,
  "elements":[
   "cmreshandler"
  ]
 },
 "tests.test_cmresserializer":{
  "__set__":true,
  "elements":[
   "cmreshandler"
  ]
 },
 "tests.test_codeblock":{
  "__set__":true,
  "elements":[
   "mktestdocs"
  ]
 },
 "tests.test_codestream":{
  "__set__":true,
  "elements":[
   "glymur"
  ]
 },
 "tests.test_codon_tables":{
  "__set__":true,
  "elements":[
   "seqlike"
  ]
 },
 "tests.test_coefficient":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.test_coffee":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_collection":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.test_collection_client":{
  "__set__":true,
  "elements":[
   "pystac-client"
  ]
 },
 "tests.test_collections":{
  "__set__":true,
  "elements":[
   "nr.types"
  ]
 },
 "tests.test_colors":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.test_colour_specification_box":{
  "__set__":true,
  "elements":[
   "glymur"
  ]
 },
 "tests.test_columns":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests.test_combine":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_combined":{
  "__set__":true,
  "elements":[
   "portalocker"
  ]
 },
 "tests.test_comcat":{
  "__set__":true,
  "elements":[
   "pycsep"
  ]
 },
 "tests.test_command_line":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.test_command_line_tool":{
  "__set__":true,
  "elements":[
   "remove_dagmc_tags"
  ]
 },
 "tests.test_commandline":{
  "__set__":true,
  "elements":[
   "pytmc"
  ]
 },
 "tests.test_commandline_entrypoint":{
  "__set__":true,
  "elements":[
   "stitchm"
  ]
 },
 "tests.test_commands":{
  "__set__":true,
  "elements":[
   "saws"
  ]
 },
 "tests.test_common":{
  "__set__":true,
  "elements":[
   "codext",
   "flask-security-too",
   "scikit-lego"
  ]
 },
 "tests.test_common.test_basics":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_common.test_transformerselectormixin":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_common_data":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_common_metadata":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.test_comms":{
  "__set__":true,
  "elements":[
   "mpire"
  ]
 },
 "tests.test_compaction":{
  "__set__":true,
  "elements":[
   "compaction"
  ]
 },
 "tests.test_compare":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_compare_voyager":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_comparison":{
  "__set__":true,
  "elements":[
   "mpl_plotter"
  ]
 },
 "tests.test_compat":{
  "__set__":true,
  "elements":[
   "kylinpy"
  ]
 },
 "tests.test_compilation":{
  "__set__":true,
  "elements":[
   "dbt"
  ]
 },
 "tests.test_compiler":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests.test_completer":{
  "__set__":true,
  "elements":[
   "saws"
  ]
 },
 "tests.test_component":{
  "__set__":true,
  "elements":[
   "compaction"
  ]
 },
 "tests.test_components":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.test_compositing":{
  "__set__":true,
  "elements":[
   "moviepy"
  ]
 },
 "tests.test_compute":{
  "__set__":true,
  "elements":[
   "matrixprofile"
  ]
 },
 "tests.test_concurrency":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_concurrency.run_functions":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_concurrency.test_concurrency":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_concurrent":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.test_conditionals":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_conditions":{
  "__set__":true,
  "elements":[
   "awacs"
  ]
 },
 "tests.test_config":{
  "__set__":true,
  "elements":[
   "aesara",
   "aiobotocore",
   "andes",
   "btrack",
   "fps",
   "glymur",
   "gpflow",
   "ioos_qc",
   "lux-api",
   "openamundsen",
   "pytermgui",
   "sanic",
   "theano-pymc",
   "verta",
   "yggdrasil"
  ]
 },
 "tests.test_config_manager":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.test_configuration":{
  "__set__":true,
  "elements":[
   "flask-security-too"
  ]
 },
 "tests.test_confirmable":{
  "__set__":true,
  "elements":[
   "flask-security-too"
  ]
 },
 "tests.test_confluence_advanced_mode":{
  "__set__":true,
  "elements":[
   "atlassian-python-api"
  ]
 },
 "tests.test_confluence_attach":{
  "__set__":true,
  "elements":[
   "atlassian-python-api"
  ]
 },
 "tests.test_connection":{
  "__set__":true,
  "elements":[
   "aiomysql",
   "pymapd",
   "pyomniscidb",
   "webdavclient3"
  ]
 },
 "tests.test_connectivity":{
  "__set__":true,
  "elements":[
   "xugrid"
  ]
 },
 "tests.test_console":{
  "__set__":true,
  "elements":[
   "typhos"
  ]
 },
 "tests.test_constants":{
  "__set__":true,
  "elements":[
   "openskill",
   "sanic",
   "tifftools"
  ]
 },
 "tests.test_constraints":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_content":{
  "__set__":true,
  "elements":[
   "pdfme"
  ]
 },
 "tests.test_contentsmanager":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_context_processors":{
  "__set__":true,
  "elements":[
   "flask-security-too"
  ]
 },
 "tests.test_controlcharacters":{
  "__set__":true,
  "elements":[
   "pydifact"
  ]
 },
 "tests.test_controls":{
  "__set__":true,
  "elements":[
   "mpl-interactions"
  ]
 },
 "tests.test_conventions":{
  "__set__":true,
  "elements":[
   "xugrid"
  ]
 },
 "tests.test_conversion":{
  "__set__":true,
  "elements":[
   "crystals",
   "xugrid"
  ]
 },
 "tests.test_convert":{
  "__set__":true,
  "elements":[
   "dataframe_image",
   "decaylanguage"
  ]
 },
 "tests.test_converter":{
  "__set__":true,
  "elements":[
   "yodatools"
  ]
 },
 "tests.test_converter.test_input":{
  "__set__":true,
  "elements":[
   "yodatools"
  ]
 },
 "tests.test_converter.test_input.test_excel":{
  "__set__":true,
  "elements":[
   "yodatools"
  ]
 },
 "tests.test_converter.test_input.test_yamlInput":{
  "__set__":true,
  "elements":[
   "yodatools"
  ]
 },
 "tests.test_converter.test_output":{
  "__set__":true,
  "elements":[
   "yodatools"
  ]
 },
 "tests.test_converter.test_output.test_dbOutput":{
  "__set__":true,
  "elements":[
   "yodatools"
  ]
 },
 "tests.test_converter.test_output.test_yamlOutput":{
  "__set__":true,
  "elements":[
   "yodatools"
  ]
 },
 "tests.test_converters":{
  "__set__":true,
  "elements":[
   "birdy",
   "radioactivedecay"
  ]
 },
 "tests.test_cookies":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_copying":{
  "__set__":true,
  "elements":[
   "goosehdf5"
  ]
 },
 "tests.test_cordex":{
  "__set__":true,
  "elements":[
   "py-cordex"
  ]
 },
 "tests.test_core":{
  "__set__":true,
  "elements":[
   "birch",
   "edgetest",
   "emperor",
   "flox",
   "gpflow",
   "kbatch",
   "matrixprofile",
   "mesmerize-core"
  ]
 },
 "tests.test_core50":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.test_core_instances":{
  "__set__":true,
  "elements":[
   "adagio"
  ]
 },
 "tests.test_coregion":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_corpus_dictionary":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.test_correctness":{
  "__set__":true,
  "elements":[
   "fasttsne"
  ]
 },
 "tests.test_cors":{
  "__set__":true,
  "elements":[
   "flask-restplus"
  ]
 },
 "tests.test_counterfactual_unit_selection":{
  "__set__":true,
  "elements":[
   "causalml"
  ]
 },
 "tests.test_countmin":{
  "__set__":true,
  "elements":[
   "sketchnu"
  ]
 },
 "tests.test_cpp":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_crawler":{
  "__set__":true,
  "elements":[
   "thredds_crawler"
  ]
 },
 "tests.test_crc":{
  "__set__":true,
  "elements":[
   "crccheck"
  ]
 },
 "tests.test_createDropDB":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_create_catalog":{
  "__set__":true,
  "elements":[
   "pycsep"
  ]
 },
 "tests.test_create_precipitator":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_create_rating":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.test_create_runoff_generator":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_create_task":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_createdbNX":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_creating":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_cromwell":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.test_cromwell_backend":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.test_cromwell_metadata":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.test_cromwell_rest_api":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.test_crystal":{
  "__set__":true,
  "elements":[
   "crystals",
   "pygments"
  ]
 },
 "tests.test_csep1_evaluations":{
  "__set__":true,
  "elements":[
   "pycsep"
  ]
 },
 "tests.test_csound":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_csrf":{
  "__set__":true,
  "elements":[
   "flask-security-too"
  ]
 },
 "tests.test_csv_diff":{
  "__set__":true,
  "elements":[
   "csv-diff"
  ]
 },
 "tests.test_ctrl":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.test_cube_source":{
  "__set__":true,
  "elements":[
   "kylinpy"
  ]
 },
 "tests.test_cursor":{
  "__set__":true,
  "elements":[
   "aiomysql",
   "pyathena",
   "pymapd",
   "pyomniscidb"
  ]
 },
 "tests.test_cursortype":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_curve":{
  "__set__":true,
  "elements":[
   "burau"
  ]
 },
 "tests.test_custom":{
  "__set__":true,
  "elements":[
   "autodynatrace"
  ]
 },
 "tests.test_custom_options":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_custom_request":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_custom_streams":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.test_cv":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_cycore":{
  "__set__":true,
  "elements":[
   "matrixprofile"
  ]
 },
 "tests.test_cyrilic_client_it":{
  "__set__":true,
  "elements":[
   "webdavclient3"
  ]
 },
 "tests.test_dae_names":{
  "__set__":true,
  "elements":[
   "andes"
  ]
 },
 "tests.test_daops":{
  "__set__":true,
  "elements":[
   "daops"
  ]
 },
 "tests.test_dashboard":{
  "__set__":true,
  "elements":[
   "explainerdashboard",
   "optuna"
  ]
 },
 "tests.test_data":{
  "__set__":true,
  "elements":[
   "aiida-castep",
   "biom-format",
   "deepforest",
   "hydrofunctions",
   "pygments",
   "pymc-base",
   "xugrid"
  ]
 },
 "tests.test_data_arrays":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_data_conversion":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_data_generators":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.test_data_no_nulls_cpu":{
  "__set__":true,
  "elements":[
   "pymapd"
  ]
 },
 "tests.test_data_no_nulls_gpu":{
  "__set__":true,
  "elements":[
   "pymapd"
  ]
 },
 "tests.test_data_object":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_data_objects":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_data_transfer":{
  "__set__":true,
  "elements":[
   "quilt",
   "quilt3"
  ]
 },
 "tests.test_data_types":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_data_utils":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.test_database":{
  "__set__":true,
  "elements":[
   "rse",
   "shared"
  ]
 },
 "tests.test_dataclasses":{
  "__set__":true,
  "elements":[
   "aiida-core",
   "erdantic"
  ]
 },
 "tests.test_dataframe":{
  "__set__":true,
  "elements":[
   "intake-accumulo"
  ]
 },
 "tests.test_dataframes":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_dataholders":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_dataloader":{
  "__set__":true,
  "elements":[
   "yodatools"
  ]
 },
 "tests.test_dataloader.test_ui":{
  "__set__":true,
  "elements":[
   "yodatools"
  ]
 },
 "tests.test_dataloaders":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.test_dataseries":{
  "__set__":true,
  "elements":[
   "reciprocalspaceship"
  ]
 },
 "tests.test_dataset":{
  "__set__":true,
  "elements":[
   "deepforest",
   "e3sm_diags",
   "larch",
   "metview-python",
   "mikeio",
   "reciprocalspaceship"
  ]
 },
 "tests.test_dataset_anomalous":{
  "__set__":true,
  "elements":[
   "reciprocalspaceship"
  ]
 },
 "tests.test_dataset_binning":{
  "__set__":true,
  "elements":[
   "reciprocalspaceship"
  ]
 },
 "tests.test_dataset_grid":{
  "__set__":true,
  "elements":[
   "reciprocalspaceship"
  ]
 },
 "tests.test_dataset_implementations":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.test_dataset_implementations.test_dataset_implementations":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.test_dataset_index":{
  "__set__":true,
  "elements":[
   "reciprocalspaceship"
  ]
 },
 "tests.test_dataset_preserve_attributes":{
  "__set__":true,
  "elements":[
   "reciprocalspaceship"
  ]
 },
 "tests.test_dataset_symops":{
  "__set__":true,
  "elements":[
   "reciprocalspaceship"
  ]
 },
 "tests.test_dataset_versioning":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_dataset_versioning.test_dataset":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_dataset_versioning.test_dataset_version":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_datasets":{
  "__set__":true,
  "elements":[
   "causalml",
   "esmlab",
   "graspy",
   "matrixprofile",
   "python-flair",
   "scikit-lego",
   "verta"
  ]
 },
 "tests.test_datasets_biomedical":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.test_datastore":{
  "__set__":true,
  "elements":[
   "flask-security-too"
  ]
 },
 "tests.test_datastructure":{
  "__set__":true,
  "elements":[
   "aiida-castep"
  ]
 },
 "tests.test_date_time":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.test_dates":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests.test_dbimporters":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.test_dbreader":{
  "__set__":true,
  "elements":[
   "cellpy"
  ]
 },
 "tests.test_deallocate":{
  "__set__":true,
  "elements":[
   "pymapd"
  ]
 },
 "tests.test_dec_full":{
  "__set__":true,
  "elements":[
   "decaylanguage"
  ]
 },
 "tests.test_decaydata":{
  "__set__":true,
  "elements":[
   "radioactivedecay"
  ]
 },
 "tests.test_decaylanguage":{
  "__set__":true,
  "elements":[
   "decaylanguage"
  ]
 },
 "tests.test_decfloat":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_decimal":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_decisiontrees":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_deckgl_widget":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.test_decorator":{
  "__set__":true,
  "elements":[
   "tranquilizer"
  ]
 },
 "tests.test_decorators":{
  "__set__":true,
  "elements":[
   "reciprocalspaceship",
   "stanza"
  ]
 },
 "tests.test_dedoppler":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_deepforest":{
  "__set__":true,
  "elements":[
   "deepforest"
  ]
 },
 "tests.test_default":{
  "__set__":true,
  "elements":[
   "embetter"
  ]
 },
 "tests.test_default_casters":{
  "__set__":true,
  "elements":[
   "birch"
  ]
 },
 "tests.test_default_utils":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_defaults":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_definitions":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.test_definitions.test_expectations":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.test_deleting":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_densities":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_dependencies":{
  "__set__":true,
  "elements":[
   "birdy"
  ]
 },
 "tests.test_dependency_instances":{
  "__set__":true,
  "elements":[
   "adagio"
  ]
 },
 "tests.test_deploy":{
  "__set__":true,
  "elements":[
   "qhub"
  ]
 },
 "tests.test_deployment":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_depparse":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_depparse_data":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_deprecated":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.test_deprecated_field":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_deprecation":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_deprecations":{
  "__set__":true,
  "elements":[
   "redframes"
  ]
 },
 "tests.test_designer":{
  "__set__":true,
  "elements":[
   "typhos"
  ]
 },
 "tests.test_detect":{
  "__set__":true,
  "elements":[
   "reacnetgenerator"
  ]
 },
 "tests.test_detector":{
  "__set__":true,
  "elements":[
   "xrd_simulator"
  ]
 },
 "tests.test_detectors":{
  "__set__":true,
  "elements":[
   "tsod"
  ]
 },
 "tests.test_determinism":{
  "__set__":true,
  "elements":[
   "aesara",
   "theano-pymc"
  ]
 },
 "tests.test_df_image":{
  "__set__":true,
  "elements":[
   "dataframe_image"
  ]
 },
 "tests.test_dfs0":{
  "__set__":true,
  "elements":[
   "mikeio"
  ]
 },
 "tests.test_dfs1":{
  "__set__":true,
  "elements":[
   "mikeio"
  ]
 },
 "tests.test_dfs2":{
  "__set__":true,
  "elements":[
   "mikeio"
  ]
 },
 "tests.test_dfs3":{
  "__set__":true,
  "elements":[
   "mikeio"
  ]
 },
 "tests.test_dfsu":{
  "__set__":true,
  "elements":[
   "mikeio"
  ]
 },
 "tests.test_dfsu_plot":{
  "__set__":true,
  "elements":[
   "mikeio"
  ]
 },
 "tests.test_dialect":{
  "__set__":true,
  "elements":[
   "kylinpy"
  ]
 },
 "tests.test_dice":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_dict_tool":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.test_dictcursor":{
  "__set__":true,
  "elements":[
   "aiomysql"
  ]
 },
 "tests.test_dictionary_output":{
  "__set__":true,
  "elements":[
   "aesara",
   "theano-pymc"
  ]
 },
 "tests.test_directionality":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.test_discovery":{
  "__set__":true,
  "elements":[
   "intake-parquet"
  ]
 },
 "tests.test_discrete":{
  "__set__":true,
  "elements":[
   "andes"
  ]
 },
 "tests.test_display":{
  "__set__":true,
  "elements":[
   "dphtools",
   "lux-api",
   "typhos"
  ]
 },
 "tests.test_display_matplotlib":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_display_plotly":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_display_utility":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_distributions":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.test_django":{
  "__set__":true,
  "elements":[
   "autodynatrace"
  ]
 },
 "tests.test_dlm_perturbation":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.test_doc":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_doclets":{
  "__set__":true,
  "elements":[
   "sphinx-js"
  ]
 },
 "tests.test_docs":{
  "__set__":true,
  "elements":[
   "embetter",
   "magicgui",
   "scikit-partial"
  ]
 },
 "tests.test_docstrings":{
  "__set__":true,
  "elements":[
   "human-learn",
   "pyomeca",
   "redframes"
  ]
 },
 "tests.test_doctor":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_document":{
  "__set__":true,
  "elements":[
   "shared"
  ]
 },
 "tests.test_document_store":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.test_documentation_code_blocks":{
  "__set__":true,
  "elements":[
   "pyomeca"
  ]
 },
 "tests.test_domain":{
  "__set__":true,
  "elements":[
   "py-cordex",
   "pyremo"
  ]
 },
 "tests.test_dossier":{
  "__set__":true,
  "elements":[
   "shared"
  ]
 },
 "tests.test_dotnet":{
  "__set__":true,
  "elements":[
   "mikeio"
  ]
 },
 "tests.test_draw_utils":{
  "__set__":true,
  "elements":[
   "seqlike"
  ]
 },
 "tests.test_drift_removal":{
  "__set__":true,
  "elements":[
   "cmip6_preprocessing",
   "xmip"
  ]
 },
 "tests.test_dsamp":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_dualquaternion":{
  "__set__":true,
  "elements":[
   "spatialmath-python"
  ]
 },
 "tests.test_dump":{
  "__set__":true,
  "elements":[
   "goosehdf5",
   "tifftools"
  ]
 },
 "tests.test_dump_n_load":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.test_dupe_columns":{
  "__set__":true,
  "elements":[
   "redframes"
  ]
 },
 "tests.test_dynamic_routes":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_dynamodb":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests.test_ec2":{
  "__set__":true,
  "elements":[
   "aiobotocore",
   "awacs"
  ]
 },
 "tests.test_edr":{
  "__set__":true,
  "elements":[
   "panedr"
  ]
 },
 "tests.test_elliptics":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_em":{
  "__set__":true,
  "elements":[
   "extract_model"
  ]
 },
 "tests.test_embeddings":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.test_en":{
  "__set__":true,
  "elements":[
   "gruut"
  ]
 },
 "tests.test_en_phonemizer":{
  "__set__":true,
  "elements":[
   "gruut"
  ]
 },
 "tests.test_en_tokenizer":{
  "__set__":true,
  "elements":[
   "gruut"
  ]
 },
 "tests.test_encode":{
  "__set__":true,
  "elements":[
   "poster"
  ]
 },
 "tests.test_encoders":{
  "__set__":true,
  "elements":[
   "seqlike"
  ]
 },
 "tests.test_end2end":{
  "__set__":true,
  "elements":[
   "stitchm"
  ]
 },
 "tests.test_endless_cl_sim":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.test_endpoint":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_endpoint.test_endpoint":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_endpoint.test_resources":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_english_pipeline":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_entities":{
  "__set__":true,
  "elements":[
   "flask-security-too",
   "openfisca-france",
   "verta"
  ]
 },
 "tests.test_enum_serialization":{
  "__set__":true,
  "elements":[
   "servicestack"
  ]
 },
 "tests.test_environment":{
  "__set__":true,
  "elements":[
   "deepforest"
  ]
 },
 "tests.test_eo":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.test_ephemeris":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_equality":{
  "__set__":true,
  "elements":[
   "awacs"
  ]
 },
 "tests.test_erd":{
  "__set__":true,
  "elements":[
   "erdantic"
  ]
 },
 "tests.test_err":{
  "__set__":true,
  "elements":[
   "biom-format"
  ]
 },
 "tests.test_error_generation":{
  "__set__":true,
  "elements":[
   "swot_simulator"
  ]
 },
 "tests.test_error_utils":{
  "__set__":true,
  "elements":[
   "swot_simulator"
  ]
 },
 "tests.test_error_warning":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests.test_errorpages":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_errors":{
  "__set__":true,
  "elements":[
   "flask-restplus",
   "rivgraph"
  ]
 },
 "tests.test_escape_magics":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_estimation":{
  "__set__":true,
  "elements":[
   "lifelines"
  ]
 },
 "tests.test_estimators":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_basics":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_deadzone":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_demographic_parity":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_equal_opportunity":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_gmm_naive_bayes":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_imbalanced_linear_regression":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_lad_regression":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_lowess":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_mixture_classifier":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_mixture_detector":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_neighbor_classifier":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_pca_reconstruction":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_probweight_regression":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_quantile_regression":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_randomregressor":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_umap_reconstruction":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_eum":{
  "__set__":true,
  "elements":[
   "mikeio"
  ]
 },
 "tests.test_evaluate":{
  "__set__":true,
  "elements":[
   "deepforest"
  ]
 },
 "tests.test_evaluation":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_evaluation.test_evaluation_content_based":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_evaluation.test_evaluation_coselection":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_evaluation.test_evaluation_rouge":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_evaluations":{
  "__set__":true,
  "elements":[
   "pycsep"
  ]
 },
 "tests.test_evaluator":{
  "__set__":true,
  "elements":[
   "pyxel-sim",
   "xopt"
  ]
 },
 "tests.test_evapotranspiration":{
  "__set__":true,
  "elements":[
   "openamundsen"
  ]
 },
 "tests.test_events":{
  "__set__":true,
  "elements":[
   "magicgui"
  ]
 },
 "tests.test_eventstreams":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests.test_evolution":{
  "__set__":true,
  "elements":[
   "plonk"
  ]
 },
 "tests.test_examplefiles":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_examples":{
  "__set__":true,
  "elements":[
   "awacs",
   "btrack",
   "larch",
   "localtileserver",
   "moviepy",
   "point_cloud_utils"
  ]
 },
 "tests.test_exceptions":{
  "__set__":true,
  "elements":[
   "hydrofunctions",
   "magpylib",
   "sanic",
   "webdavclient3",
   "yarg"
  ]
 },
 "tests.test_exceptions_handler":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_execute_many":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_executor":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests.test_executor_shell":{
  "__set__":true,
  "elements":[
   "qme"
  ]
 },
 "tests.test_executor_slurm":{
  "__set__":true,
  "elements":[
   "qme"
  ]
 },
 "tests.test_expectations":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_experimental":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.test_experimentrun":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_experimentrun.test_artifacts":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_experimentrun.test_attributes":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_experimentrun.test_environment":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_experimentrun.test_log_code":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_experimentrun.test_requirements":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_export":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests.test_exporters":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.test_ext_integration":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_extension":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_external":{
  "__set__":true,
  "elements":[
   "ablog"
  ]
 },
 "tests.test_externalsource":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_extra":{
  "__set__":true,
  "elements":[
   "grayskull",
   "soupsieve"
  ]
 },
 "tests.test_extra.test_attribute":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_extra.test_contains":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_extra.test_custom":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_extra.test_defined":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_extraction":{
  "__set__":true,
  "elements":[
   "imagedataextractor"
  ]
 },
 "tests.test_ezc3d":{
  "__set__":true,
  "elements":[
   "pyomeca"
  ]
 },
 "tests.test_ezhil":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_factory":{
  "__set__":true,
  "elements":[
   "grayskull",
   "magicgui"
  ]
 },
 "tests.test_fancy_repr":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.test_fastai":{
  "__set__":true,
  "elements":[
   "dvclive"
  ]
 },
 "tests.test_features":{
  "__set__":true,
  "elements":[
   "causalml",
   "gpflow",
   "pyannote.core"
  ]
 },
 "tests.test_fetching":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_ffmpeg_reader":{
  "__set__":true,
  "elements":[
   "moviepy"
  ]
 },
 "tests.test_field_cylinder":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_field_defaults":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_field_functions":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_fields":{
  "__set__":true,
  "elements":[
   "flask-restplus"
  ]
 },
 "tests.test_fields_mask":{
  "__set__":true,
  "elements":[
   "flask-restplus"
  ]
 },
 "tests.test_fil2h5":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_file":{
  "__set__":true,
  "elements":[
   "pathy"
  ]
 },
 "tests.test_file_handler":{
  "__set__":true,
  "elements":[
   "stitchm"
  ]
 },
 "tests.test_file_processing":{
  "__set__":true,
  "elements":[
   "muttlib"
  ]
 },
 "tests.test_file_source":{
  "__set__":true,
  "elements":[
   "intake-geopandas"
  ]
 },
 "tests.test_file_system":{
  "__set__":true,
  "elements":[
   "pycsep"
  ]
 },
 "tests.test_file_wrapper":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_filefinder":{
  "__set__":true,
  "elements":[
   "cellpy"
  ]
 },
 "tests.test_fileio_read_csv_c3d":{
  "__set__":true,
  "elements":[
   "pyomeca"
  ]
 },
 "tests.test_fileio_read_other_formats":{
  "__set__":true,
  "elements":[
   "pyomeca"
  ]
 },
 "tests.test_fileio_write":{
  "__set__":true,
  "elements":[
   "pyomeca"
  ]
 },
 "tests.test_files":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.test_filesystem":{
  "__set__":true,
  "elements":[
   "qme"
  ]
 },
 "tests.test_filetree":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_filetree.test_query":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_filetree.test_read":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_filetree.test_registration":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_filetree.test_template":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_filterbank_voyager":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_filtering":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_fitfuncs":{
  "__set__":true,
  "elements":[
   "dphtools"
  ]
 },
 "tests.test_fixes_applied":{
  "__set__":true,
  "elements":[
   "daops"
  ]
 },
 "tests.test_fixtures":{
  "__set__":true,
  "elements":[
   "pangeo-forge-recipes"
  ]
 },
 "tests.test_flake8":{
  "__set__":true,
  "elements":[
   "yt_astro_analysis"
  ]
 },
 "tests.test_fmnist_benckmarks":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.test_folium":{
  "__set__":true,
  "elements":[
   "localtileserver"
  ]
 },
 "tests.test_forecast":{
  "__set__":true,
  "elements":[
   "muttlib",
   "pycsep"
  ]
 },
 "tests.test_format":{
  "__set__":true,
  "elements":[
   "emperor"
  ]
 },
 "tests.test_formats":{
  "__set__":true,
  "elements":[
   "jupytext",
   "quilt",
   "quilt3"
  ]
 },
 "tests.test_formatter":{
  "__set__":true,
  "elements":[
   "pyathena"
  ]
 },
 "tests.test_foundry_gha":{
  "__set__":true,
  "elements":[
   "foundry_ml"
  ]
 },
 "tests.test_fr":{
  "__set__":true,
  "elements":[
   "gruut"
  ]
 },
 "tests.test_fr_phonemizer":{
  "__set__":true,
  "elements":[
   "gruut"
  ]
 },
 "tests.test_frames":{
  "__set__":true,
  "elements":[
   "pyopenrivercam"
  ]
 },
 "tests.test_from_clipboard":{
  "__set__":true,
  "elements":[
   "ascii_magic"
  ]
 },
 "tests.test_from_dalle":{
  "__set__":true,
  "elements":[
   "ascii_magic"
  ]
 },
 "tests.test_from_file":{
  "__set__":true,
  "elements":[
   "ascii_magic"
  ]
 },
 "tests.test_from_image_object":{
  "__set__":true,
  "elements":[
   "ascii_magic"
  ]
 },
 "tests.test_from_url":{
  "__set__":true,
  "elements":[
   "ascii_magic"
  ]
 },
 "tests.test_func":{
  "__set__":true,
  "elements":[
   "typhos"
  ]
 },
 "tests.test_func_chainer":{
  "__set__":true,
  "elements":[
   "daops"
  ]
 },
 "tests.test_func_utils":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.test_functions":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_fx":{
  "__set__":true,
  "elements":[
   "moviepy"
  ]
 },
 "tests.test_g2p":{
  "__set__":true,
  "elements":[
   "gruut"
  ]
 },
 "tests.test_gateway":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.test_gcsuri":{
  "__set__":true,
  "elements":[
   "autouri"
  ]
 },
 "tests.test_gdrive":{
  "__set__":true,
  "elements":[
   "muttlib"
  ]
 },
 "tests.test_gemgis":{
  "__set__":true,
  "elements":[
   "gemgis"
  ]
 },
 "tests.test_general_util":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_generate_datasets":{
  "__set__":true,
  "elements":[
   "lifelines"
  ]
 },
 "tests.test_generated":{
  "__set__":true,
  "elements":[
   "codext"
  ]
 },
 "tests.test_generic":{
  "__set__":true,
  "elements":[
   "aiida-core",
   "mikeio",
   "mpl-interactions",
   "nr.types",
   "xclim"
  ]
 },
 "tests.test_geo":{
  "__set__":true,
  "elements":[
   "py-tools-ds"
  ]
 },
 "tests.test_geo.test_coord_grid":{
  "__set__":true,
  "elements":[
   "py-tools-ds"
  ]
 },
 "tests.test_geo.test_coord_trafo":{
  "__set__":true,
  "elements":[
   "py-tools-ds"
  ]
 },
 "tests.test_geo.test_map_info":{
  "__set__":true,
  "elements":[
   "py-tools-ds"
  ]
 },
 "tests.test_geo.test_projection":{
  "__set__":true,
  "elements":[
   "py-tools-ds"
  ]
 },
 "tests.test_geo.test_vector":{
  "__set__":true,
  "elements":[
   "py-tools-ds"
  ]
 },
 "tests.test_geo.test_vector.test_geometry":{
  "__set__":true,
  "elements":[
   "py-tools-ds"
  ]
 },
 "tests.test_geo_utils":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.test_geoarray":{
  "__set__":true,
  "elements":[
   "geoarray"
  ]
 },
 "tests.test_geofile":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_geofileops_singlelayer":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_geofileops_singlelayer_gpd":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_geofileops_singlelayer_sql":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_geofileops_twolayers":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_geofiletype":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_geom3d":{
  "__set__":true,
  "elements":[
   "spatialmath-python"
  ]
 },
 "tests.test_geometry_util":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_geoseries_util":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_geotiff":{
  "__set__":true,
  "elements":[
   "python-geotiff"
  ]
 },
 "tests.test_getBH_dict":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_getBH_interfaces":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_getBH_level2":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_gfile":{
  "__set__":true,
  "elements":[
   "pyremo"
  ]
 },
 "tests.test_github_recipes":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.test_gliders":{
  "__set__":true,
  "elements":[
   "ioos_qc"
  ]
 },
 "tests.test_golden_rules":{
  "__set__":true,
  "elements":[
   "gruut"
  ]
 },
 "tests.test_goofit":{
  "__set__":true,
  "elements":[
   "decaylanguage"
  ]
 },
 "tests.test_gpcca":{
  "__set__":true,
  "elements":[
   "pygpcca"
  ]
 },
 "tests.test_gplvm":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_gpu":{
  "__set__":true,
  "elements":[
   "histogrammar"
  ]
 },
 "tests.test_graceful_shutdown":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_gradient":{
  "__set__":true,
  "elements":[
   "aesara",
   "theano-pymc"
  ]
 },
 "tests.test_greedy":{
  "__set__":true,
  "elements":[
   "greedy"
  ]
 },
 "tests.test_grid_util":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_gridcal":{
  "__set__":true,
  "elements":[
   "andes"
  ]
 },
 "tests.test_gridded_output":{
  "__set__":true,
  "elements":[
   "openamundsen"
  ]
 },
 "tests.test_grids":{
  "__set__":true,
  "elements":[
   "cmip6_preprocessing",
   "gridtest",
   "xmip"
  ]
 },
 "tests.test_gridtest":{
  "__set__":true,
  "elements":[
   "gridtest"
  ]
 },
 "tests.test_group":{
  "__set__":true,
  "elements":[
   "andes"
  ]
 },
 "tests.test_groupby":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests.test_gs_specific":{
  "__set__":true,
  "elements":[
   "cloudpathlib"
  ]
 },
 "tests.test_guessing":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_guppi":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_h52fil":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_h5diag":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_h5py":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_handler":{
  "__set__":true,
  "elements":[
   "tranquilizer"
  ]
 },
 "tests.test_handler_annotations":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_has_field":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_has_field_many":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_hashes":{
  "__set__":true,
  "elements":[
   "sketchnu"
  ]
 },
 "tests.test_hashing":{
  "__set__":true,
  "elements":[
   "flask-security-too"
  ]
 },
 "tests.test_header":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_headers":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_heavy":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_heavyhitters":{
  "__set__":true,
  "elements":[
   "sketchnu"
  ]
 },
 "tests.test_helper":{
  "__set__":true,
  "elements":[
   "aiida-castep",
   "geofileops",
   "moviepy"
  ]
 },
 "tests.test_helper_method":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.test_helpers":{
  "__set__":true,
  "elements":[
   "awacs",
   "cellpy",
   "dlint",
   "hydrofunctions",
   "localtileserver",
   "mikeio",
   "mpl-interactions",
   "notion-client",
   "pytermgui",
   "sanic",
   "sketchnu"
  ]
 },
 "tests.test_helpers.test_bad_builtin_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_helpers.test_bad_kwarg_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_helpers.test_bad_module_attribute_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_helpers.test_bad_module_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_helpers.test_bad_name_attribute_use":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_hickle":{
  "__set__":true,
  "elements":[
   "hickle"
  ]
 },
 "tests.test_hickle_helpers":{
  "__set__":true,
  "elements":[
   "hickle"
  ]
 },
 "tests.test_hierarchical_clustering":{
  "__set__":true,
  "elements":[
   "matrixprofile"
  ]
 },
 "tests.test_high_level_generators":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.test_highlight_markup_literal":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.test_histograms":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_hmc":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_hocon_string":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.test_homegenous_transform":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_hook":{
  "__set__":true,
  "elements":[
   "edgetest-conda",
   "edgetest-hub",
   "edgetest-pip-tools"
  ]
 },
 "tests.test_html_formatter":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_html_parser":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_http":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_http_alt_svc":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_httpurl":{
  "__set__":true,
  "elements":[
   "autouri"
  ]
 },
 "tests.test_huge_message":{
  "__set__":true,
  "elements":[
   "pydifact"
  ]
 },
 "tests.test_huggingface":{
  "__set__":true,
  "elements":[
   "dvclive"
  ]
 },
 "tests.test_human_text":{
  "__set__":true,
  "elements":[
   "csv-diff"
  ]
 },
 "tests.test_hybrid36":{
  "__set__":true,
  "elements":[
   "propka"
  ]
 },
 "tests.test_hydrofunctions":{
  "__set__":true,
  "elements":[
   "hydrofunctions"
  ]
 },
 "tests.test_hyperloglog":{
  "__set__":true,
  "elements":[
   "sketchnu"
  ]
 },
 "tests.test_hyperparameter":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.test_iam":{
  "__set__":true,
  "elements":[
   "awacs"
  ]
 },
 "tests.test_ica":{
  "__set__":true,
  "elements":[
   "cellpy"
  ]
 },
 "tests.test_idce":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_identify_alphabet":{
  "__set__":true,
  "elements":[
   "seqlike"
  ]
 },
 "tests.test_ifelse":{
  "__set__":true,
  "elements":[
   "aesara",
   "theano-pymc"
  ]
 },
 "tests.test_im_utils":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.test_image":{
  "__set__":true,
  "elements":[
   "magicgui"
  ]
 },
 "tests.test_import":{
  "__set__":true,
  "elements":[
   "dbt",
   "panda3d_viewer",
   "python-utils",
   "rse"
  ]
 },
 "tests.test_imported_enums":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_imports":{
  "__set__":true,
  "elements":[
   "glidertools",
   "optuna"
  ]
 },
 "tests.test_in_out":{
  "__set__":true,
  "elements":[
   "cbsyst"
  ]
 },
 "tests.test_index":{
  "__set__":true,
  "elements":[
   "redframes"
  ]
 },
 "tests.test_indexer":{
  "__set__":true,
  "elements":[
   "metview-python"
  ]
 },
 "tests.test_indices":{
  "__set__":true,
  "elements":[
   "xclim"
  ]
 },
 "tests.test_ingv_readers":{
  "__set__":true,
  "elements":[
   "pycsep"
  ]
 },
 "tests.test_inherit":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_init":{
  "__set__":true,
  "elements":[
   "qhub",
   "sphinx-js"
  ]
 },
 "tests.test_initial_point":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.test_inline_pronunciations":{
  "__set__":true,
  "elements":[
   "gruut"
  ]
 },
 "tests.test_input_checks":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_input_output":{
  "__set__":true,
  "elements":[
   "pydifact"
  ]
 },
 "tests.test_input_parameters":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.test_inputs":{
  "__set__":true,
  "elements":[
   "flask-restplus"
  ]
 },
 "tests.test_insights":{
  "__set__":true,
  "elements":[
   "mpire"
  ]
 },
 "tests.test_inspect":{
  "__set__":true,
  "elements":[
   "servicestack"
  ]
 },
 "tests.test_inspection_utils":{
  "__set__":true,
  "elements":[
   "pandera-core"
  ]
 },
 "tests.test_installation":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_int_mats":{
  "__set__":true,
  "elements":[
   "pfapack"
  ]
 },
 "tests.test_integraiton":{
  "__set__":true,
  "elements":[
   "condorpy"
  ]
 },
 "tests.test_integration":{
  "__set__":true,
  "elements":[
   "cmyt",
   "edgetest",
   "mpl_plotter",
   "pymapd",
   "pyomniscidb",
   "vizlo"
  ]
 },
 "tests.test_integration_cfg":{
  "__set__":true,
  "elements":[
   "edgetest"
  ]
 },
 "tests.test_integration_toml":{
  "__set__":true,
  "elements":[
   "edgetest"
  ]
 },
 "tests.test_integrations":{
  "__set__":true,
  "elements":[
   "cloudpathlib",
   "pytmc",
   "verta"
  ]
 },
 "tests.test_interchange":{
  "__set__":true,
  "elements":[
   "redframes"
  ]
 },
 "tests.test_interestingness":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests.test_interface":{
  "__set__":true,
  "elements":[
   "edgetest",
   "mols2grid",
   "nr.types"
  ]
 },
 "tests.test_interface_cfg":{
  "__set__":true,
  "elements":[
   "edgetest"
  ]
 },
 "tests.test_interface_toml":{
  "__set__":true,
  "elements":[
   "edgetest"
  ]
 },
 "tests.test_interpolate":{
  "__set__":true,
  "elements":[
   "xugrid"
  ]
 },
 "tests.test_interpolation":{
  "__set__":true,
  "elements":[
   "mikeio",
   "plonk"
  ]
 },
 "tests.test_inventory":{
  "__set__":true,
  "elements":[
   "radioactivedecay"
  ]
 },
 "tests.test_io":{
  "__set__":true,
  "elements":[
   "amset",
   "btrack",
   "graspy",
   "matrixprofile",
   "py-tools-ds",
   "redframes",
   "xopt"
  ]
 },
 "tests.test_io.test_raster":{
  "__set__":true,
  "elements":[
   "py-tools-ds"
  ]
 },
 "tests.test_io.test_raster.test_gdal":{
  "__set__":true,
  "elements":[
   "py-tools-ds"
  ]
 },
 "tests.test_io_util":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_ipc":{
  "__set__":true,
  "elements":[
   "pymapd"
  ]
 },
 "tests.test_ipygany":{
  "__set__":true,
  "elements":[
   "ipygany"
  ]
 },
 "tests.test_ipynb_to_R":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_ipynb_to_py":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_ipynb_to_rmd":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_ir":{
  "__set__":true,
  "elements":[
   "sphinx-js"
  ]
 },
 "tests.test_irc_formatter":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_is_initialized":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_isocolor":{
  "__set__":true,
  "elements":[
   "ipygany"
  ]
 },
 "tests.test_issue_11":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_issue_69":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_issues":{
  "__set__":true,
  "elements":[
   "aiomysql",
   "moviepy"
  ]
 },
 "tests.test_it":{
  "__set__":true,
  "elements":[
   "awslogs"
  ]
 },
 "tests.test_item":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.test_item_collection":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.test_item_search":{
  "__set__":true,
  "elements":[
   "pystac-client"
  ]
 },
 "tests.test_items":{
  "__set__":true,
  "elements":[
   "pyrobuf",
   "tomlkit"
  ]
 },
 "tests.test_ivlearner":{
  "__set__":true,
  "elements":[
   "causalml"
  ]
 },
 "tests.test_java":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_javascript":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_job":{
  "__set__":true,
  "elements":[
   "condorpy"
  ]
 },
 "tests.test_journals":{
  "__set__":true,
  "elements":[
   "goosebib"
  ]
 },
 "tests.test_jp2box":{
  "__set__":true,
  "elements":[
   "glymur"
  ]
 },
 "tests.test_jp2box_jpx":{
  "__set__":true,
  "elements":[
   "glymur"
  ]
 },
 "tests.test_jp2box_uuid":{
  "__set__":true,
  "elements":[
   "glymur"
  ]
 },
 "tests.test_jp2box_xml":{
  "__set__":true,
  "elements":[
   "glymur"
  ]
 },
 "tests.test_jp2k":{
  "__set__":true,
  "elements":[
   "glymur"
  ]
 },
 "tests.test_json_decoding":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_json_encoding":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_jsonapi":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_jsonapi.test_creating_resources":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_jsonapi.test_deleting_resources":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_jsonapi.test_document_structure":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_jsonapi.test_fetching_data":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_jsonapi.test_server_responsibilities":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_jsonapi.test_updating_relationships":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_jsonapi.test_updating_resources":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_jsonpatch":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_jsonserviceclient":{
  "__set__":true,
  "elements":[
   "servicestack"
  ]
 },
 "tests.test_julia":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_jupytext_errors":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_ke3_service":{
  "__set__":true,
  "elements":[
   "kylinpy"
  ]
 },
 "tests.test_ke4_model_source":{
  "__set__":true,
  "elements":[
   "kylinpy"
  ]
 },
 "tests.test_ke4_service":{
  "__set__":true,
  "elements":[
   "kylinpy"
  ]
 },
 "tests.test_keep_alive_timeout":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_keras":{
  "__set__":true,
  "elements":[
   "dvclive"
  ]
 },
 "tests.test_keras_retinanet":{
  "__set__":true,
  "elements":[
   "deepforest"
  ]
 },
 "tests.test_kerns":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_keys":{
  "__set__":true,
  "elements":[
   "saws"
  ]
 },
 "tests.test_kim_convergence":{
  "__set__":true,
  "elements":[
   "kim-convergence"
  ]
 },
 "tests.test_kim_convergence.test_batch":{
  "__set__":true,
  "elements":[
   "kim-convergence"
  ]
 },
 "tests.test_kim_convergence.test_outlier":{
  "__set__":true,
  "elements":[
   "kim-convergence"
  ]
 },
 "tests.test_kim_convergence.test_scale":{
  "__set__":true,
  "elements":[
   "kim-convergence"
  ]
 },
 "tests.test_kim_convergence.test_stats":{
  "__set__":true,
  "elements":[
   "kim-convergence"
  ]
 },
 "tests.test_kim_convergence.test_stats_beta_dist":{
  "__set__":true,
  "elements":[
   "kim-convergence"
  ]
 },
 "tests.test_kim_convergence.test_stats_nonnormal_test":{
  "__set__":true,
  "elements":[
   "kim-convergence"
  ]
 },
 "tests.test_kim_convergence.test_stats_normal_test":{
  "__set__":true,
  "elements":[
   "kim-convergence"
  ]
 },
 "tests.test_kim_convergence.test_stats_s_normal_dist":{
  "__set__":true,
  "elements":[
   "kim-convergence"
  ]
 },
 "tests.test_kim_convergence.test_stats_t_dist":{
  "__set__":true,
  "elements":[
   "kim-convergence"
  ]
 },
 "tests.test_kim_convergence.test_timeseries":{
  "__set__":true,
  "elements":[
   "kim-convergence"
  ]
 },
 "tests.test_kim_convergence.test_timeseries_equilibration_length":{
  "__set__":true,
  "elements":[
   "kim-convergence"
  ]
 },
 "tests.test_kim_convergence.test_ucl":{
  "__set__":true,
  "elements":[
   "kim-convergence"
  ]
 },
 "tests.test_kim_convergence.test_ucl_mser_m":{
  "__set__":true,
  "elements":[
   "kim-convergence"
  ]
 },
 "tests.test_kim_edn":{
  "__set__":true,
  "elements":[
   "kim-edn"
  ]
 },
 "tests.test_kim_edn.test_comment":{
  "__set__":true,
  "elements":[
   "kim-edn"
  ]
 },
 "tests.test_kim_edn.test_decode":{
  "__set__":true,
  "elements":[
   "kim-edn"
  ]
 },
 "tests.test_kim_edn.test_default":{
  "__set__":true,
  "elements":[
   "kim-edn"
  ]
 },
 "tests.test_kim_edn.test_dump":{
  "__set__":true,
  "elements":[
   "kim-edn"
  ]
 },
 "tests.test_kim_edn.test_encode_basestring_ascii":{
  "__set__":true,
  "elements":[
   "kim-edn"
  ]
 },
 "tests.test_kim_edn.test_enum":{
  "__set__":true,
  "elements":[
   "kim-edn"
  ]
 },
 "tests.test_kim_edn.test_fail":{
  "__set__":true,
  "elements":[
   "kim-edn"
  ]
 },
 "tests.test_kim_edn.test_float":{
  "__set__":true,
  "elements":[
   "kim-edn"
  ]
 },
 "tests.test_kim_edn.test_indent":{
  "__set__":true,
  "elements":[
   "kim-edn"
  ]
 },
 "tests.test_kim_edn.test_pass1":{
  "__set__":true,
  "elements":[
   "kim-edn"
  ]
 },
 "tests.test_kim_edn.test_pass2":{
  "__set__":true,
  "elements":[
   "kim-edn"
  ]
 },
 "tests.test_kim_edn.test_pass3":{
  "__set__":true,
  "elements":[
   "kim-edn"
  ]
 },
 "tests.test_kim_edn.test_recursion":{
  "__set__":true,
  "elements":[
   "kim-edn"
  ]
 },
 "tests.test_kim_edn.test_scanstring":{
  "__set__":true,
  "elements":[
   "kim-edn"
  ]
 },
 "tests.test_kim_edn.test_unicode":{
  "__set__":true,
  "elements":[
   "kim-edn"
  ]
 },
 "tests.test_kim_property":{
  "__set__":true,
  "elements":[
   "kim-property"
  ]
 },
 "tests.test_kim_property.test_create":{
  "__set__":true,
  "elements":[
   "kim-property"
  ]
 },
 "tests.test_kim_property.test_definition":{
  "__set__":true,
  "elements":[
   "kim-property"
  ]
 },
 "tests.test_kim_property.test_destroy":{
  "__set__":true,
  "elements":[
   "kim-property"
  ]
 },
 "tests.test_kim_property.test_instance":{
  "__set__":true,
  "elements":[
   "kim-property"
  ]
 },
 "tests.test_kim_property.test_kim_property":{
  "__set__":true,
  "elements":[
   "kim-property"
  ]
 },
 "tests.test_kim_property.test_modify":{
  "__set__":true,
  "elements":[
   "kim-property"
  ]
 },
 "tests.test_kim_property.test_numeric":{
  "__set__":true,
  "elements":[
   "kim-property"
  ]
 },
 "tests.test_kim_property.test_pickle":{
  "__set__":true,
  "elements":[
   "kim-property"
  ]
 },
 "tests.test_kldiv":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_knitr_spin":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_known_good":{
  "__set__":true,
  "elements":[
   "andes"
  ]
 },
 "tests.test_kotlin":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_kylin_service":{
  "__set__":true,
  "elements":[
   "kylinpy"
  ]
 },
 "tests.test_kylin_types":{
  "__set__":true,
  "elements":[
   "kylinpy"
  ]
 },
 "tests.test_kylinpy":{
  "__set__":true,
  "elements":[
   "kylinpy"
  ]
 },
 "tests.test_label":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.test_labels":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.test_ladybugs":{
  "__set__":true,
  "elements":[
   "redframes"
  ]
 },
 "tests.test_lambda":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests.test_lang":{
  "__set__":true,
  "elements":[
   "gruut"
  ]
 },
 "tests.test_language_model":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.test_latent_class":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_latentdistributiontest":{
  "__set__":true,
  "elements":[
   "graspy"
  ]
 },
 "tests.test_latentpositiontest":{
  "__set__":true,
  "elements":[
   "graspy"
  ]
 },
 "tests.test_latex_formatter":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_lattice":{
  "__set__":true,
  "elements":[
   "crystals"
  ]
 },
 "tests.test_laue":{
  "__set__":true,
  "elements":[
   "xrd_simulator"
  ]
 },
 "tests.test_launcher":{
  "__set__":true,
  "elements":[
   "swot_simulator"
  ]
 },
 "tests.test_layout":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.test_layouts":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.test_leaflet":{
  "__set__":true,
  "elements":[
   "localtileserver"
  ]
 },
 "tests.test_legacy_load":{
  "__set__":true,
  "elements":[
   "hickle"
  ]
 },
 "tests.test_lemmatizer":{
  "__set__":true,
  "elements":[
   "python-flair",
   "stanza"
  ]
 },
 "tests.test_level1":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level1.test_active":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level1.test_at_rule":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level1.test_class":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level1.test_comments":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level1.test_descendant":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level1.test_escapes":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level1.test_id":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level1.test_link":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level1.test_list":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level1.test_pseudo_class":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level1.test_pseudo_element":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level1.test_type":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level1.test_visited":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level2":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level2.test_attribute":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level2.test_child":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level2.test_first_child":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level2.test_focus":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level2.test_hover":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level2.test_lang":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level2.test_next_sibling":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level2.test_universal_type":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_attribute":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_checked":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_disabled":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_empty":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_enabled":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_first_of_type":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_last_child":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_last_of_type":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_namespace":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_not":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_nth_child":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_nth_last_child":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_nth_last_of_type":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_nth_of_type":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_only_child":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_only_of_type":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_root":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_subsequent_sibling":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level3.test_target":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_any_link":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_attribute":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_current":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_default":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_dir":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_focus_visible":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_focus_within":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_future":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_has":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_host":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_host_context":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_in_range":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_indeterminate":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_is":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_lang":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_local_link":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_matches":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_not":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_nth_child":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_optional":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_out_of_range":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_past":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_paused":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_placeholder_shown":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_playing":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_read_only":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_read_write":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_required":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_scope":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_target_within":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_user_invalid":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_level4.test_where":{
  "__set__":true,
  "elements":[
   "soupsieve"
  ]
 },
 "tests.test_lexers_other":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_lgbm":{
  "__set__":true,
  "elements":[
   "dvclive"
  ]
 },
 "tests.test_lib":{
  "__set__":true,
  "elements":[
   "edgetest",
   "xyzservices"
  ]
 },
 "tests.test_libtiff":{
  "__set__":true,
  "elements":[
   "glymur"
  ]
 },
 "tests.test_lightning":{
  "__set__":true,
  "elements":[
   "dvclive"
  ]
 },
 "tests.test_likelihoods":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_line":{
  "__set__":true,
  "elements":[
   "dexplot"
  ]
 },
 "tests.test_linear":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_linear_diffusion":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_linear_model":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_link":{
  "__set__":true,
  "elements":[
   "nbgitpuller-link",
   "pystac"
  ]
 },
 "tests.test_linker":{
  "__set__":true,
  "elements":[
   "dbt"
  ]
 },
 "tests.test_lint":{
  "__set__":true,
  "elements":[
   "pytmc"
  ]
 },
 "tests.test_lists":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_ln_utils":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.test_load_local":{
  "__set__":true,
  "elements":[
   "aiomysql"
  ]
 },
 "tests.test_load_multiple":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_loaders":{
  "__set__":true,
  "elements":[
   "pymapd"
  ]
 },
 "tests.test_local":{
  "__set__":true,
  "elements":[
   "cloudpathlib"
  ]
 },
 "tests.test_locking":{
  "__set__":true,
  "elements":[
   "pangeo-forge-recipes"
  ]
 },
 "tests.test_log":{
  "__set__":true,
  "elements":[
   "typhos"
  ]
 },
 "tests.test_log_code":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_logger":{
  "__set__":true,
  "elements":[
   "stitchm"
  ]
 },
 "tests.test_loggers":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.test_logging":{
  "__set__":true,
  "elements":[
   "daops",
   "optuna",
   "sanic"
  ]
 },
 "tests.test_logo":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_magicgui":{
  "__set__":true,
  "elements":[
   "magicgui"
  ]
 },
 "tests.test_main":{
  "__set__":true,
  "elements":[
   "deepforest",
   "dvclive",
   "mikeio",
   "sumy",
   "tifftools",
   "tranquilizer"
  ]
 },
 "tests.test_maintainence":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests.test_manager":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_manual":{
  "__set__":true,
  "elements":[
   "codext"
  ]
 },
 "tests.test_maps_ordereddict":{
  "__set__":true,
  "elements":[
   "nr.types"
  ]
 },
 "tests.test_markdown":{
  "__set__":true,
  "elements":[
   "mktestdocs"
  ]
 },
 "tests.test_markdown_lexer":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_marker":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_marker_casadi":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_marshalling":{
  "__set__":true,
  "elements":[
   "flask-restplus"
  ]
 },
 "tests.test_mase":{
  "__set__":true,
  "elements":[
   "graspy"
  ]
 },
 "tests.test_mask":{
  "__set__":true,
  "elements":[
   "pyopenrivercam"
  ]
 },
 "tests.test_mass2":{
  "__set__":true,
  "elements":[
   "matrixprofile"
  ]
 },
 "tests.test_match":{
  "__set__":true,
  "elements":[
   "causalml"
  ]
 },
 "tests.test_match_fils":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_math":{
  "__set__":true,
  "elements":[
   "pycsep",
   "pymc-base"
  ]
 },
 "tests.test_maths":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_mds":{
  "__set__":true,
  "elements":[
   "graspy"
  ]
 },
 "tests.test_mean_functions":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_merge_from":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_mesh":{
  "__set__":true,
  "elements":[
   "mikeio"
  ]
 },
 "tests.test_meshkernel_utils":{
  "__set__":true,
  "elements":[
   "xugrid"
  ]
 },
 "tests.test_message":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_message_field_types":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_message_init_kwargs":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_message_with_colon_at_end":{
  "__set__":true,
  "elements":[
   "pydifact"
  ]
 },
 "tests.test_message_with_no_fields":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_meta":{
  "__set__":true,
  "elements":[
   "nr.types",
   "scikit-lego"
  ]
 },
 "tests.test_meta.test_confusion_balancer":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_meta.test_decay_estimator":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_meta.test_estimatortransformer":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_meta.test_grouped_model":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_meta.test_grouped_predictor":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_meta.test_grouped_transformer":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_meta.test_outlier_classifier":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_meta.test_outlier_remover":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_meta.test_regression_outlier":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_meta.test_subjective_classifier":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_meta.test_thresholder":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_meta.test_zero_inflated_regressor":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_meta_learners":{
  "__set__":true,
  "elements":[
   "causalml"
  ]
 },
 "tests.test_metadata":{
  "__set__":true,
  "elements":[
   "autouri",
   "flask-restless",
   "geoarray",
   "openfisca-france",
   "verta"
  ]
 },
 "tests.test_metadata_filter":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_meteo":{
  "__set__":true,
  "elements":[
   "openamundsen"
  ]
 },
 "tests.test_meteo_input":{
  "__set__":true,
  "elements":[
   "openamundsen"
  ]
 },
 "tests.test_method_equivalence":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_methods":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_metrics":{
  "__set__":true,
  "elements":[
   "avalanche-lib",
   "scikit-lego"
  ]
 },
 "tests.test_metrics.test_correlation_score":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_metrics.test_equal_opportunity":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_metrics.test_p_percent":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_metrics.test_subset_metric":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_metview":{
  "__set__":true,
  "elements":[
   "metview-python"
  ]
 },
 "tests.test_mex":{
  "__set__":true,
  "elements":[
   "msal"
  ]
 },
 "tests.test_middleware":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_middlewares":{
  "__set__":true,
  "elements":[
   "tinydb"
  ]
 },
 "tests.test_migrations":{
  "__set__":true,
  "elements":[
   "djangocms-admin-style"
  ]
 },
 "tests.test_mirror":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_misc":{
  "__set__":true,
  "elements":[
   "flask-security-too",
   "gemgis",
   "gpflow",
   "magpylib",
   "moviepy",
   "trio-asyncio",
   "trio_asyncio",
   "xdmfwrite_h5py"
  ]
 },
 "tests.test_missing_plotly":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_mktestdocs":{
  "__set__":true,
  "elements":[
   "mktestdocs"
  ]
 },
 "tests.test_mlconjug":{
  "__set__":true,
  "elements":[
   "mlconjug3"
  ]
 },
 "tests.test_mmcv":{
  "__set__":true,
  "elements":[
   "dvclive"
  ]
 },
 "tests.test_mnist_benckmarks":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.test_mock":{
  "__set__":true,
  "elements":[
   "aiida-castep"
  ]
 },
 "tests.test_model":{
  "__set__":true,
  "elements":[
   "deepforest",
   "flask-restplus",
   "gpflow",
   "openamundsen",
   "pymc-base"
  ]
 },
 "tests.test_model5":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_model_basicCh":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicChRt_and_basicChRtTh":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicChSa":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicDd":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicDdHy":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicDdRt":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicDdSt":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicDdVs":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicHyRt":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicHySa":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicHyVs":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicHy_and_basicHySt":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicRtSa_basicSa_basicSaVs":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicRtTh":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicRtVs":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicSaVs":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicStVs":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicSt_basicStTh":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicTh":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicThVs":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_basicVs":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_model_creation":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_model_graph":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.test_model_group":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_model_registry":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_model_registry.test_model":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_model_registry.test_model_base":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_model_registry.test_model_version":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_model_selection":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_model_selection.test_klusterfold":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_model_selection.test_timegapsplit":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_modeline":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_models":{
  "__set__":true,
  "elements":[
   "avalanche-lib",
   "btrack",
   "graspy",
   "python-flair",
   "sumy"
  ]
 },
 "tests.test_models.test_dom":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_models.test_tf":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_models_accuracy":{
  "__set__":true,
  "elements":[
   "pyprocessmacro"
  ]
 },
 "tests.test_modules":{
  "__set__":true,
  "elements":[
   "xclim"
  ]
 },
 "tests.test_molgrid":{
  "__set__":true,
  "elements":[
   "mols2grid"
  ]
 },
 "tests.test_monitor":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests.test_motd":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_motion":{
  "__set__":true,
  "elements":[
   "pytmc",
   "xrd_simulator"
  ]
 },
 "tests.test_mpdist":{
  "__set__":true,
  "elements":[
   "matrixprofile"
  ]
 },
 "tests.test_mpx":{
  "__set__":true,
  "elements":[
   "matrixprofile"
  ]
 },
 "tests.test_mrs":{
  "__set__":true,
  "elements":[
   "suspect"
  ]
 },
 "tests.test_mrs.test_base":{
  "__set__":true,
  "elements":[
   "suspect"
  ]
 },
 "tests.test_mrs.test_basis":{
  "__set__":true,
  "elements":[
   "suspect"
  ]
 },
 "tests.test_mrs.test_core":{
  "__set__":true,
  "elements":[
   "suspect"
  ]
 },
 "tests.test_mrs.test_fitting":{
  "__set__":true,
  "elements":[
   "suspect"
  ]
 },
 "tests.test_mrs.test_ima":{
  "__set__":true,
  "elements":[
   "suspect"
  ]
 },
 "tests.test_mrs.test_image":{
  "__set__":true,
  "elements":[
   "suspect"
  ]
 },
 "tests.test_mrs.test_io":{
  "__set__":true,
  "elements":[
   "suspect"
  ]
 },
 "tests.test_mrs.test_mrsdata":{
  "__set__":true,
  "elements":[
   "suspect"
  ]
 },
 "tests.test_mrs.test_processing":{
  "__set__":true,
  "elements":[
   "suspect"
  ]
 },
 "tests.test_mrs.test_rda":{
  "__set__":true,
  "elements":[
   "suspect"
  ]
 },
 "tests.test_mrs.test_twix":{
  "__set__":true,
  "elements":[
   "suspect"
  ]
 },
 "tests.test_mturk":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests.test_multi_client_it":{
  "__set__":true,
  "elements":[
   "webdavclient3"
  ]
 },
 "tests.test_multi_serve":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_multiclass":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_multiple":{
  "__set__":true,
  "elements":[
   "baycomp"
  ]
 },
 "tests.test_multiprocessing":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_multitasking":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.test_mwt_expander":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_named_routes":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_namespace":{
  "__set__":true,
  "elements":[
   "dlint",
   "flask-restplus"
  ]
 },
 "tests.test_nan":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests.test_natural_coordinates":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_natural_coordinates_casadi":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_natural_segment":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_natural_segment_casadi":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_natural_velocities":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_natural_velocities_casadi":{
  "__set__":true,
  "elements":[
   "bionc"
  ]
 },
 "tests.test_nb_enfants":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.test_nb_subproc_thread":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.test_nbextension_path":{
  "__set__":true,
  "elements":[
   "pydeck"
  ]
 },
 "tests.test_nc_mt_scenario":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.test_nc_sit_scenario":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.test_ner_tagger":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_nested_issue55":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_network_io":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.test_nextset":{
  "__set__":true,
  "elements":[
   "aiomysql"
  ]
 },
 "tests.test_ni_sit_scenario":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.test_njobs":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_nl_1":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_nnnl":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_node":{
  "__set__":true,
  "elements":[
   "condorpy"
  ]
 },
 "tests.test_nodes":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.test_normalisation":{
  "__set__":true,
  "elements":[
   "stitchm"
  ]
 },
 "tests.test_not_vanilla_options":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_notebook":{
  "__set__":true,
  "elements":[
   "birdy",
   "nb_cron"
  ]
 },
 "tests.test_notebooks":{
  "__set__":true,
  "elements":[
   "gpflow",
   "histogrammar"
  ]
 },
 "tests.test_notinstalled":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_nuclide":{
  "__set__":true,
  "elements":[
   "radioactivedecay"
  ]
 },
 "tests.test_numba":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_numeric":{
  "__set__":true,
  "elements":[
   "py-tools-ds"
  ]
 },
 "tests.test_numeric.test_array":{
  "__set__":true,
  "elements":[
   "py-tools-ds"
  ]
 },
 "tests.test_numeric.test_vector":{
  "__set__":true,
  "elements":[
   "py-tools-ds"
  ]
 },
 "tests.test_numerical":{
  "__set__":true,
  "elements":[
   "openamundsen"
  ]
 },
 "tests.test_numerical_stability":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_numpy":{
  "__set__":true,
  "elements":[
   "histogrammar"
  ]
 },
 "tests.test_obj_BaseGeo":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_obj_BaseGeo_v4motion":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_obj_Collection":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_obj_Collection_child_parent":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_obj_Collection_v4motion":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_obj_Cuboid":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_obj_Cylinder":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_obj_CylinderSegment":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_obj_Dipole":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_obj_Line":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_obj_Loop":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_obj_Sensor":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_obj_Sphere":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_object_creation":{
  "__set__":true,
  "elements":[
   "pyomeca"
  ]
 },
 "tests.test_objectiveclexer":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_observatory":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_ocv_relax":{
  "__set__":true,
  "elements":[
   "cellpy"
  ]
 },
 "tests.test_ogr_util":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_omni":{
  "__set__":true,
  "elements":[
   "graspy"
  ]
 },
 "tests.test_oneof":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_online_resources":{
  "__set__":true,
  "elements":[
   "hydrofunctions"
  ]
 },
 "tests.test_openjp2":{
  "__set__":true,
  "elements":[
   "glymur"
  ]
 },
 "tests.test_operations":{
  "__set__":true,
  "elements":[
   "tinydb"
  ]
 },
 "tests.test_optics":{
  "__set__":true,
  "elements":[
   "glidertools"
  ]
 },
 "tests.test_optimizers":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox",
   "gpflow"
  ]
 },
 "tests.test_options":{
  "__set__":true,
  "elements":[
   "pyxel-sim",
   "saws",
   "tifftools"
  ]
 },
 "tests.test_ordinal":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.test_organization":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_output":{
  "__set__":true,
  "elements":[
   "andes"
  ]
 },
 "tests.test_package":{
  "__set__":true,
  "elements":[
   "yarg"
  ]
 },
 "tests.test_package_api":{
  "__set__":true,
  "elements":[
   "doppel-cli"
  ]
 },
 "tests.test_package_collection":{
  "__set__":true,
  "elements":[
   "doppel-cli"
  ]
 },
 "tests.test_package_functions":{
  "__set__":true,
  "elements":[
   "stitchm"
  ]
 },
 "tests.test_pairwise_dist":{
  "__set__":true,
  "elements":[
   "matrixprofile"
  ]
 },
 "tests.test_palaeoB":{
  "__set__":true,
  "elements":[
   "cbsyst"
  ]
 },
 "tests.test_pandapower":{
  "__set__":true,
  "elements":[
   "andes"
  ]
 },
 "tests.test_pandas":{
  "__set__":true,
  "elements":[
   "emperor",
   "lux-api"
  ]
 },
 "tests.test_pandas_coverage":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests.test_pandas_cursor":{
  "__set__":true,
  "elements":[
   "pyathena"
  ]
 },
 "tests.test_pandas_histogrammar":{
  "__set__":true,
  "elements":[
   "histogrammar"
  ]
 },
 "tests.test_panel":{
  "__set__":true,
  "elements":[
   "typhos"
  ]
 },
 "tests.test_panes":{
  "__set__":true,
  "elements":[
   "mpl_plotter"
  ]
 },
 "tests.test_param":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_parameters":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.test_parametric":{
  "__set__":true,
  "elements":[
   "plum-dispatch"
  ]
 },
 "tests.test_params":{
  "__set__":true,
  "elements":[
   "mpire"
  ]
 },
 "tests.test_parse":{
  "__set__":true,
  "elements":[
   "biom-format",
   "yarg"
  ]
 },
 "tests.test_parser":{
  "__set__":true,
  "elements":[
   "aiida-castep",
   "lux-api",
   "pydifact",
   "pyrobuf",
   "pytermgui",
   "tomlkit"
  ]
 },
 "tests.test_parser.test_field_validity":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_parser.test_map_field":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_parser.test_missing_lbraces":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_parser.test_oneof":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_parser.test_syntax":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_parser_custom":{
  "__set__":true,
  "elements":[
   "rse"
  ]
 },
 "tests.test_parser_github":{
  "__set__":true,
  "elements":[
   "rse"
  ]
 },
 "tests.test_parser_gitlab":{
  "__set__":true,
  "elements":[
   "rse"
  ]
 },
 "tests.test_parser_zenodo":{
  "__set__":true,
  "elements":[
   "rse"
  ]
 },
 "tests.test_parsers":{
  "__set__":true,
  "elements":[
   "crystals",
   "sphinx-js"
  ]
 },
 "tests.test_parsing":{
  "__set__":true,
  "elements":[
   "pytmc"
  ]
 },
 "tests.test_passwordless":{
  "__set__":true,
  "elements":[
   "flask-security-too"
  ]
 },
 "tests.test_pastel":{
  "__set__":true,
  "elements":[
   "pastel"
  ]
 },
 "tests.test_patches":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests.test_path":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_path_or_fobj":{
  "__set__":true,
  "elements":[
   "tifftools"
  ]
 },
 "tests.test_paths":{
  "__set__":true,
  "elements":[
   "andes",
   "goosehdf5",
   "jupyter_server"
  ]
 },
 "tests.test_patterns":{
  "__set__":true,
  "elements":[
   "pangeo-forge-recipes"
  ]
 },
 "tests.test_payload":{
  "__set__":true,
  "elements":[
   "flask-restplus"
  ]
 },
 "tests.test_payload_too_large":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_pec":{
  "__set__":true,
  "elements":[
   "cellpy"
  ]
 },
 "tests.test_pep8":{
  "__set__":true,
  "elements":[
   "isofit"
  ]
 },
 "tests.test_performance":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests.test_perllexer":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_permissions":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_permissions.conftest":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_permissions.test_lazy_lists":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_permissions.test_sharing_old":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_permissions.test_visibility_api":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_permissions.test_visibility_e2e":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_permissions.test_workspace":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_persistence":{
  "__set__":true,
  "elements":[
   "magicgui",
   "tsod"
  ]
 },
 "tests.test_pfaffian":{
  "__set__":true,
  "elements":[
   "pfapack"
  ]
 },
 "tests.test_pflow_matpower":{
  "__set__":true,
  "elements":[
   "andes"
  ]
 },
 "tests.test_pfs":{
  "__set__":true,
  "elements":[
   "mikeio"
  ]
 },
 "tests.test_phase":{
  "__set__":true,
  "elements":[
   "xrd_simulator"
  ]
 },
 "tests.test_phone":{
  "__set__":true,
  "elements":[
   "gruut-ipa"
  ]
 },
 "tests.test_phonemes":{
  "__set__":true,
  "elements":[
   "gruut-ipa"
  ]
 },
 "tests.test_php":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_physics":{
  "__set__":true,
  "elements":[
   "pyremo"
  ]
 },
 "tests.test_physics_consistency":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_pickle":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_pickle_unpickle_theano_fn":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.test_pipelines":{
  "__set__":true,
  "elements":[
   "explainerdashboard",
   "pangeo-forge-recipes"
  ]
 },
 "tests.test_pipelining":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_plaintext_parser":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_platform":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.test_plbvfu1":{
  "__set__":true,
  "elements":[
   "andes"
  ]
 },
 "tests.test_plot":{
  "__set__":true,
  "elements":[
   "graspy",
   "typhos",
   "xugrid"
  ]
 },
 "tests.test_plots":{
  "__set__":true,
  "elements":[
   "pycsep",
   "radioactivedecay"
  ]
 },
 "tests.test_plotting":{
  "__set__":true,
  "elements":[
   "blimpy",
   "lifelines",
   "muttlib"
  ]
 },
 "tests.test_plugin":{
  "__set__":true,
  "elements":[
   "pyls-memestra"
  ]
 },
 "tests.test_plugins":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.test_plugins.fake_actions":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.test_plugins.fake_configs":{
  "__set__":true,
  "elements":[
   "great-expectations"
  ]
 },
 "tests.test_plume":{
  "__set__":true,
  "elements":[
   "sed-plume"
  ]
 },
 "tests.test_point_output":{
  "__set__":true,
  "elements":[
   "openamundsen"
  ]
 },
 "tests.test_polycrystal":{
  "__set__":true,
  "elements":[
   "xrd_simulator"
  ]
 },
 "tests.test_pool":{
  "__set__":true,
  "elements":[
   "aiomysql",
   "mpire"
  ]
 },
 "tests.test_pos":{
  "__set__":true,
  "elements":[
   "gruut"
  ]
 },
 "tests.test_pose2d":{
  "__set__":true,
  "elements":[
   "spatialmath-python"
  ]
 },
 "tests.test_pose3d":{
  "__set__":true,
  "elements":[
   "spatialmath-python"
  ]
 },
 "tests.test_positioner":{
  "__set__":true,
  "elements":[
   "typhos"
  ]
 },
 "tests.test_postlist":{
  "__set__":true,
  "elements":[
   "ablog"
  ]
 },
 "tests.test_postman":{
  "__set__":true,
  "elements":[
   "flask-restplus"
  ]
 },
 "tests.test_postprocessing":{
  "__set__":true,
  "elements":[
   "cmip6_preprocessing",
   "xmip"
  ]
 },
 "tests.test_praat":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_precip":{
  "__set__":true,
  "elements":[
   "xclim"
  ]
 },
 "tests.test_precip_changer":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_predict":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_prepare":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_prepare_resources":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_preproc":{
  "__set__":true,
  "elements":[
   "pyremo"
  ]
 },
 "tests.test_preprocess":{
  "__set__":true,
  "elements":[
   "deepforest",
   "matrixprofile"
  ]
 },
 "tests.test_preprocessing":{
  "__set__":true,
  "elements":[
   "cmip6_preprocessing",
   "openfisca-france",
   "py-cordex",
   "scikit-lego",
   "xmip"
  ]
 },
 "tests.test_preprocessing.test_columncapper":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_preprocessing.test_columndropper":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_preprocessing.test_columnselector":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_preprocessing.test_dictmapper":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_preprocessing.test_identitytransformer":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_preprocessing.test_informationfilter":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_preprocessing.test_interval_encoder":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_preprocessing.test_orthogonal_transformer":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_preprocessing.test_outlier_remover":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_preprocessing.test_pandastypeselector":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_preprocessing.test_patsy_transformer":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_preprocessing.test_randomadder":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_preprocessing.test_repeatingbasisfunction":{
  "__set__":true,
  "elements":[
   "scikit-lego"
  ]
 },
 "tests.test_preprocessing_cloud":{
  "__set__":true,
  "elements":[
   "cmip6_preprocessing",
   "xmip"
  ]
 },
 "tests.test_preserve_empty_cells":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_presets":{
  "__set__":true,
  "elements":[
   "mpl_plotter"
  ]
 },
 "tests.test_pretrain":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_printing":{
  "__set__":true,
  "elements":[
   "aesara",
   "glymur",
   "pymc-base",
   "theano-pymc"
  ]
 },
 "tests.test_priors":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_privy":{
  "__set__":true,
  "elements":[
   "dbxfs"
  ]
 },
 "tests.test_prms":{
  "__set__":true,
  "elements":[
   "cellpy"
  ]
 },
 "tests.test_processing_algebra":{
  "__set__":true,
  "elements":[
   "pyomeca"
  ]
 },
 "tests.test_processing_filter":{
  "__set__":true,
  "elements":[
   "pyomeca"
  ]
 },
 "tests.test_processing_interp":{
  "__set__":true,
  "elements":[
   "pyomeca"
  ]
 },
 "tests.test_processing_marker":{
  "__set__":true,
  "elements":[
   "pyomeca"
  ]
 },
 "tests.test_processing_misc":{
  "__set__":true,
  "elements":[
   "pyomeca"
  ]
 },
 "tests.test_processing_rt":{
  "__set__":true,
  "elements":[
   "pyomeca"
  ]
 },
 "tests.test_profile":{
  "__set__":true,
  "elements":[
   "plonk"
  ]
 },
 "tests.test_profiling":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_project":{
  "__set__":true,
  "elements":[
   "pytmc"
  ]
 },
 "tests.test_promotion":{
  "__set__":true,
  "elements":[
   "plum-dispatch"
  ]
 },
 "tests.test_pronunciation":{
  "__set__":true,
  "elements":[
   "gruut-ipa"
  ]
 },
 "tests.test_propensity":{
  "__set__":true,
  "elements":[
   "causalml"
  ]
 },
 "tests.test_properties":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_protobuf":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_protonate":{
  "__set__":true,
  "elements":[
   "propka"
  ]
 },
 "tests.test_protos":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_providers":{
  "__set__":true,
  "elements":[
   "xyzservices"
  ]
 },
 "tests.test_proxy":{
  "__set__":true,
  "elements":[
   "nr.types"
  ]
 },
 "tests.test_prsint":{
  "__set__":true,
  "elements":[
   "pyremo"
  ]
 },
 "tests.test_psse_parser":{
  "__set__":true,
  "elements":[
   "andes"
  ]
 },
 "tests.test_psycopg":{
  "__set__":true,
  "elements":[
   "autodynatrace"
  ]
 },
 "tests.test_ptr":{
  "__set__":true,
  "elements":[
   "graspy"
  ]
 },
 "tests.test_py_base":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.test_pydantic":{
  "__set__":true,
  "elements":[
   "erdantic",
   "xopt"
  ]
 },
 "tests.test_pypi":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.test_pyplot":{
  "__set__":true,
  "elements":[
   "mpl-interactions"
  ]
 },
 "tests.test_pyremo":{
  "__set__":true,
  "elements":[
   "pyremo"
  ]
 },
 "tests.test_pystac_api":{
  "__set__":true,
  "elements":[
   "pystac-client"
  ]
 },
 "tests.test_pysyncrosim":{
  "__set__":true,
  "elements":[
   "pysyncrosim"
  ]
 },
 "tests.test_pytensorf":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.test_python":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_python_api":{
  "__set__":true,
  "elements":[
   "remove_dagmc_tags"
  ]
 },
 "tests.test_python_utils":{
  "__set__":true,
  "elements":[
   "python-utils"
  ]
 },
 "tests.test_qartod":{
  "__set__":true,
  "elements":[
   "ioos_qc"
  ]
 },
 "tests.test_qbasiclexer":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_qmnl":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_quaternion":{
  "__set__":true,
  "elements":[
   "spatialmath-python"
  ]
 },
 "tests.test_queries":{
  "__set__":true,
  "elements":[
   "tinydb"
  ]
 },
 "tests.test_query":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_quick_test":{
  "__set__":true,
  "elements":[
   "ascii_magic"
  ]
 },
 "tests.test_quickle":{
  "__set__":true,
  "elements":[
   "quickle"
  ]
 },
 "tests.test_r":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_race_cond":{
  "__set__":true,
  "elements":[
   "autouri"
  ]
 },
 "tests.test_radiation":{
  "__set__":true,
  "elements":[
   "openamundsen"
  ]
 },
 "tests.test_radionuclide":{
  "__set__":true,
  "elements":[
   "radioactivedecay"
  ]
 },
 "tests.test_random_signal":{
  "__set__":true,
  "elements":[
   "swot_simulator"
  ]
 },
 "tests.test_randomforest_explainer":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_raster":{
  "__set__":true,
  "elements":[
   "gemgis"
  ]
 },
 "tests.test_raster_input":{
  "__set__":true,
  "elements":[
   "openamundsen"
  ]
 },
 "tests.test_rate":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.test_rating":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.test_reacnetgen":{
  "__set__":true,
  "elements":[
   "reacnetgenerator"
  ]
 },
 "tests.test_read_all_py":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_read_incomplete_rmd":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_read_simple_R":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_read_simple_julia":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_read_simple_markdown":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_read_simple_percent":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_read_simple_python":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_read_simple_rmd":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_read_simple_scheme":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_read_simple_sphinx":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_read_tiff":{
  "__set__":true,
  "elements":[
   "tifftools"
  ]
 },
 "tests.test_readme":{
  "__set__":true,
  "elements":[
   "redframes",
   "tifftools"
  ]
 },
 "tests.test_rebuild_vrts":{
  "__set__":true,
  "elements":[
   "rabpro"
  ]
 },
 "tests.test_recipe_item":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.test_recognise":{
  "__set__":true,
  "elements":[
   "goosebib"
  ]
 },
 "tests.test_record":{
  "__set__":true,
  "elements":[
   "aesara",
   "pytmc",
   "theano-pymc"
  ]
 },
 "tests.test_recoverable":{
  "__set__":true,
  "elements":[
   "flask-security-too"
  ]
 },
 "tests.test_recreateDB":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_redirect":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_reflectbitorder":{
  "__set__":true,
  "elements":[
   "crccheck"
  ]
 },
 "tests.test_reformat":{
  "__set__":true,
  "elements":[
   "goosebib"
  ]
 },
 "tests.test_regex":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.test_regex_tokenizer":{
  "__set__":true,
  "elements":[
   "gruut"
  ]
 },
 "tests.test_regexlexer":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_regexopt":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_regimes":{
  "__set__":true,
  "elements":[
   "matrixprofile"
  ]
 },
 "tests.test_regionmask":{
  "__set__":true,
  "elements":[
   "cmip6_preprocessing",
   "xmip"
  ]
 },
 "tests.test_regions":{
  "__set__":true,
  "elements":[
   "py-cordex",
   "pycsep"
  ]
 },
 "tests.test_registerable":{
  "__set__":true,
  "elements":[
   "flask-security-too"
  ]
 },
 "tests.test_regression_base":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_regression_explainer":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_regressions":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_regrid":{
  "__set__":true,
  "elements":[
   "esmlab"
  ]
 },
 "tests.test_relation_classifier":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.test_relational":{
  "__set__":true,
  "elements":[
   "qme"
  ]
 },
 "tests.test_release":{
  "__set__":true,
  "elements":[
   "yarg"
  ]
 },
 "tests.test_reloader":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_remo_ds":{
  "__set__":true,
  "elements":[
   "pyremo"
  ]
 },
 "tests.test_render":{
  "__set__":true,
  "elements":[
   "qhub"
  ]
 },
 "tests.test_repeated_enum":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_reply_handling":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.test_report":{
  "__set__":true,
  "elements":[
   "dvclive",
   "edgetest"
  ]
 },
 "tests.test_reporters":{
  "__set__":true,
  "elements":[
   "doppel-cli"
  ]
 },
 "tests.test_reporting":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_repr":{
  "__set__":true,
  "elements":[
   "andes"
  ]
 },
 "tests.test_reqparse":{
  "__set__":true,
  "elements":[
   "flask-restplus"
  ]
 },
 "tests.test_request":{
  "__set__":true,
  "elements":[
   "ooipy",
   "sanic"
  ]
 },
 "tests.test_request_cancel":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_request_construction":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.test_request_data":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_request_stream":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_requests":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_requirements":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_res1d":{
  "__set__":true,
  "elements":[
   "mikeio"
  ]
 },
 "tests.test_resolvable":{
  "__set__":true,
  "elements":[
   "plum-dispatch"
  ]
 },
 "tests.test_resource":{
  "__set__":true,
  "elements":[
   "tranquilizer"
  ]
 },
 "tests.test_resource_analysis":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.test_resourcerelease":{
  "__set__":true,
  "elements":[
   "moviepy"
  ]
 },
 "tests.test_resourcereleasedemo":{
  "__set__":true,
  "elements":[
   "moviepy"
  ]
 },
 "tests.test_resources":{
  "__set__":true,
  "elements":[
   "pcmdi_metrics",
   "saws"
  ]
 },
 "tests.test_response":{
  "__set__":true,
  "elements":[
   "aiobotocore",
   "flask-security-too",
   "sanic"
  ]
 },
 "tests.test_response_timeout":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_restapi":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.test_result_set":{
  "__set__":true,
  "elements":[
   "pyathena"
  ]
 },
 "tests.test_results_set":{
  "__set__":true,
  "elements":[
   "pymapd",
   "pyomniscidb"
  ]
 },
 "tests.test_rfc822":{
  "__set__":true,
  "elements":[
   "pyproject-metadata"
  ]
 },
 "tests.test_riccati":{
  "__set__":true,
  "elements":[
   "riccati"
  ]
 },
 "tests.test_river_utils":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.test_rmd_to_ipynb":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_rootcling":{
  "__set__":true,
  "elements":[
   "histogrammar"
  ]
 },
 "tests.test_rop":{
  "__set__":true,
  "elements":[
   "aesara",
   "theano-pymc"
  ]
 },
 "tests.test_routes":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_rsmq":{
  "__set__":true,
  "elements":[
   "pyrsmq"
  ]
 },
 "tests.test_rt_libradtran":{
  "__set__":true,
  "elements":[
   "isofit"
  ]
 },
 "tests.test_rtf_formatter":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_ruby":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_run":{
  "__set__":true,
  "elements":[
   "e3sm_diags",
   "propka"
  ]
 },
 "tests.test_run_length":{
  "__set__":true,
  "elements":[
   "xclim"
  ]
 },
 "tests.test_runner":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.test_runtime_udf":{
  "__set__":true,
  "elements":[
   "pymapd",
   "pyomniscidb"
  ]
 },
 "tests.test_s3":{
  "__set__":true,
  "elements":[
   "awacs"
  ]
 },
 "tests.test_s3_specific":{
  "__set__":true,
  "elements":[
   "cloudpathlib"
  ]
 },
 "tests.test_s3uri":{
  "__set__":true,
  "elements":[
   "autouri"
  ]
 },
 "tests.test_save_multiple":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_saws":{
  "__set__":true,
  "elements":[
   "saws"
  ]
 },
 "tests.test_scalebar_detection":{
  "__set__":true,
  "elements":[
   "imagedataextractor"
  ]
 },
 "tests.test_scaling":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_scanf":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.test_scatter":{
  "__set__":true,
  "elements":[
   "dexplot"
  ]
 },
 "tests.test_scatterer":{
  "__set__":true,
  "elements":[
   "xrd_simulator"
  ]
 },
 "tests.test_scenarios":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.test_schema":{
  "__set__":true,
  "elements":[
   "edgetest",
   "qhub",
   "yggdrasil"
  ]
 },
 "tests.test_scipy":{
  "__set__":true,
  "elements":[
   "hickle"
  ]
 },
 "tests.test_scrimp":{
  "__set__":true,
  "elements":[
   "matrixprofile"
  ]
 },
 "tests.test_scripts":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_scripts.test_atlasq_list_summary":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_scripts.test_atlasq_ohi":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_scripts.test_atlasq_query":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_scripts.test_fsl_apply_x5":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_scripts.test_fsl_convert_x5":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_scripts.test_fsl_ents":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_scripts.test_imglob":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_scripts.test_immv_imcp":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_scripts.test_resample_image":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_search":{
  "__set__":true,
  "elements":[
   "quilt",
   "quilt3"
  ]
 },
 "tests.test_sections":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.test_segment":{
  "__set__":true,
  "elements":[
   "pyannote.core",
   "pydifact"
  ]
 },
 "tests.test_segmentation":{
  "__set__":true,
  "elements":[
   "medcam"
  ]
 },
 "tests.test_segmentation.unet_seg_dataset":{
  "__set__":true,
  "elements":[
   "medcam"
  ]
 },
 "tests.test_segmentation.unet_seg_test":{
  "__set__":true,
  "elements":[
   "medcam"
  ]
 },
 "tests.test_segmentcollection":{
  "__set__":true,
  "elements":[
   "pydifact"
  ]
 },
 "tests.test_sel2d":{
  "__set__":true,
  "elements":[
   "extract_model"
  ]
 },
 "tests.test_select":{
  "__set__":true,
  "elements":[
   "mols2grid"
  ]
 },
 "tests.test_select_dimension":{
  "__set__":true,
  "elements":[
   "graspy"
  ]
 },
 "tests.test_semgrex":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_sensitivity":{
  "__set__":true,
  "elements":[
   "causalml"
  ]
 },
 "tests.test_sentence":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.test_sequence_tagger":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.test_serialization":{
  "__set__":true,
  "elements":[
   "flask-restless",
   "pangeo-forge-recipes",
   "servicestack"
  ]
 },
 "tests.test_serialize":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.test_serializer":{
  "__set__":true,
  "elements":[
   "pydifact"
  ]
 },
 "tests.test_series":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests.test_server":{
  "__set__":true,
  "elements":[
   "poster"
  ]
 },
 "tests.test_server_events":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_server_heartbeat":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.test_server_loop":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_server_misc":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_server_request":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_server_start":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_serverapp":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.test_servicedesk":{
  "__set__":true,
  "elements":[
   "atlassian-python-api"
  ]
 },
 "tests.test_services":{
  "__set__":true,
  "elements":[
   "andes",
   "yggdrasil"
  ]
 },
 "tests.test_session":{
  "__set__":true,
  "elements":[
   "aiobotocore",
   "gpflow",
   "quilt",
   "quilt3"
  ]
 },
 "tests.test_set":{
  "__set__":true,
  "elements":[
   "tifftools"
  ]
 },
 "tests.test_set_decoded_components":{
  "__set__":true,
  "elements":[
   "glymur"
  ]
 },
 "tests.test_setgetOption":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_settings":{
  "__set__":true,
  "elements":[
   "chebfun",
   "django-versatileimagefield",
   "planetary-computer",
   "pydeck"
  ]
 },
 "tests.test_setup":{
  "__set__":true,
  "elements":[
   "blimpy",
   "optimade"
  ]
 },
 "tests.test_setup_commands":{
  "__set__":true,
  "elements":[
   "stitchm"
  ]
 },
 "tests.test_sg":{
  "__set__":true,
  "elements":[
   "graspy"
  ]
 },
 "tests.test_shapely":{
  "__set__":true,
  "elements":[
   "mikeio"
  ]
 },
 "tests.test_sharing":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_shell":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_show_versions":{
  "__set__":true,
  "elements":[
   "pyxel-sim"
  ]
 },
 "tests.test_side_effects":{
  "__set__":true,
  "elements":[
   "redframes"
  ]
 },
 "tests.test_sign_assets":{
  "__set__":true,
  "elements":[
   "planetary-computer"
  ]
 },
 "tests.test_signal":{
  "__set__":true,
  "elements":[
   "mpire"
  ]
 },
 "tests.test_signal_handlers":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_signals":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_signature":{
  "__set__":true,
  "elements":[
   "magicgui",
   "plum-dispatch"
  ]
 },
 "tests.test_signed_integer":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_signing":{
  "__set__":true,
  "elements":[
   "planetary-computer"
  ]
 },
 "tests.test_sigproc":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_simple_detachment_limited":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_simplify":{
  "__set__":true,
  "elements":[
   "flake8-simplify"
  ]
 },
 "tests.test_sims":{
  "__set__":true,
  "elements":[
   "graspy"
  ]
 },
 "tests.test_sims_corr":{
  "__set__":true,
  "elements":[
   "graspy"
  ]
 },
 "tests.test_simulation":{
  "__set__":true,
  "elements":[
   "plonk"
  ]
 },
 "tests.test_single":{
  "__set__":true,
  "elements":[
   "baycomp"
  ]
 },
 "tests.test_single_file_stac":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.test_singularity":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.test_skimp":{
  "__set__":true,
  "elements":[
   "matrixprofile"
  ]
 },
 "tests.test_sklearn":{
  "__set__":true,
  "elements":[
   "graspy"
  ]
 },
 "tests.test_skorch_models":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_slicing":{
  "__set__":true,
  "elements":[
   "glymur"
  ]
 },
 "tests.test_smarty":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_snap":{
  "__set__":true,
  "elements":[
   "plonk",
   "xugrid"
  ]
 },
 "tests.test_snapshot":{
  "__set__":true,
  "elements":[
   "andes"
  ]
 },
 "tests.test_snippets":{
  "__set__":true,
  "elements":[
   "matrixprofile"
  ]
 },
 "tests.test_snow":{
  "__set__":true,
  "elements":[
   "openamundsen"
  ]
 },
 "tests.test_sns":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests.test_sorting":{
  "__set__":true,
  "elements":[
   "extract_model"
  ]
 },
 "tests.test_source":{
  "__set__":true,
  "elements":[
   "intake-parquet"
  ]
 },
 "tests.test_spark":{
  "__set__":true,
  "elements":[
   "intake-spark"
  ]
 },
 "tests.test_spark_histogrammar":{
  "__set__":true,
  "elements":[
   "histogrammar"
  ]
 },
 "tests.test_spatial":{
  "__set__":true,
  "elements":[
   "mikeio",
   "pycsep"
  ]
 },
 "tests.test_spatialvector":{
  "__set__":true,
  "elements":[
   "spatialmath-python"
  ]
 },
 "tests.test_spec":{
  "__set__":true,
  "elements":[
   "histogrammar"
  ]
 },
 "tests.test_specs":{
  "__set__":true,
  "elements":[
   "adagio"
  ]
 },
 "tests.test_spectral_embed":{
  "__set__":true,
  "elements":[
   "graspy"
  ]
 },
 "tests.test_sph":{
  "__set__":true,
  "elements":[
   "plonk"
  ]
 },
 "tests.test_split":{
  "__set__":true,
  "elements":[
   "tifftools"
  ]
 },
 "tests.test_sql":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_sql_source":{
  "__set__":true,
  "elements":[
   "intake-geopandas"
  ]
 },
 "tests.test_sqla_types":{
  "__set__":true,
  "elements":[
   "kylinpy"
  ]
 },
 "tests.test_sqlalchemy_athena":{
  "__set__":true,
  "elements":[
   "pyathena"
  ]
 },
 "tests.test_sqlite_phonemizer":{
  "__set__":true,
  "elements":[
   "gruut"
  ]
 },
 "tests.test_sqlite_util":{
  "__set__":true,
  "elements":[
   "geofileops"
  ]
 },
 "tests.test_sqs":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests.test_sscursor":{
  "__set__":true,
  "elements":[
   "aiomysql"
  ]
 },
 "tests.test_ssml":{
  "__set__":true,
  "elements":[
   "gruut"
  ]
 },
 "tests.test_stac_api_io":{
  "__set__":true,
  "elements":[
   "pystac-client"
  ]
 },
 "tests.test_stac_io":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.test_stack":{
  "__set__":true,
  "elements":[
   "pastel"
  ]
 },
 "tests.test_standard_metadata":{
  "__set__":true,
  "elements":[
   "pyproject-metadata"
  ]
 },
 "tests.test_stat_dist":{
  "__set__":true,
  "elements":[
   "pygpcca"
  ]
 },
 "tests.test_static":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_station":{
  "__set__":true,
  "elements":[
   "hydrofunctions"
  ]
 },
 "tests.test_statistics":{
  "__set__":true,
  "elements":[
   "esmlab",
   "lifelines",
   "matrixprofile"
  ]
 },
 "tests.test_stats":{
  "__set__":true,
  "elements":[
   "pycsep"
  ]
 },
 "tests.test_status":{
  "__set__":true,
  "elements":[
   "typhos"
  ]
 },
 "tests.test_stax":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_stemmers":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_stix":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_stomp":{
  "__set__":true,
  "elements":[
   "matrixprofile"
  ]
 },
 "tests.test_storage":{
  "__set__":true,
  "elements":[
   "pangeo-forge-recipes"
  ]
 },
 "tests.test_storages":{
  "__set__":true,
  "elements":[
   "tinydb"
  ]
 },
 "tests.test_stream":{
  "__set__":true,
  "elements":[
   "nr.types"
  ]
 },
 "tests.test_streamflow":{
  "__set__":true,
  "elements":[
   "xclim"
  ]
 },
 "tests.test_streaming":{
  "__set__":true,
  "elements":[
   "poster"
  ]
 },
 "tests.test_streamio":{
  "__set__":true,
  "elements":[
   "propka"
  ]
 },
 "tests.test_stringparser":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_struct":{
  "__set__":true,
  "elements":[
   "quickle"
  ]
 },
 "tests.test_structs":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.test_structured":{
  "__set__":true,
  "elements":[
   "nr.types"
  ]
 },
 "tests.test_structured_utils":{
  "__set__":true,
  "elements":[
   "nr.types"
  ]
 },
 "tests.test_study":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.test_stuf":{
  "__set__":true,
  "elements":[
   "stuf"
  ]
 },
 "tests.test_style":{
  "__set__":true,
  "elements":[
   "metview-python",
   "pastel"
  ]
 },
 "tests.test_styles":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.test_substitute":{
  "__set__":true,
  "elements":[
   "gridtest"
  ]
 },
 "tests.test_suds":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.test_suffix_tree":{
  "__set__":true,
  "elements":[
   "sphinx-js"
  ]
 },
 "tests.test_suite":{
  "__set__":true,
  "elements":[
   "typhos"
  ]
 },
 "tests.test_summaries":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.test_summarize_mtz_dtypes":{
  "__set__":true,
  "elements":[
   "reciprocalspaceship"
  ]
 },
 "tests.test_summarizers":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_summarizers.test_edmundson":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_summarizers.test_kl":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_summarizers.test_lex_rank":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_summarizers.test_lsa":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_summarizers.test_luhn":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_summarizers.test_luhn_sentence_rating":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_summarizers.test_random":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_summarizers.test_reduction":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_summarizers.test_sum_basic":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_summarizers.test_text_rank":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_summary_writer":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.test_sumtype":{
  "__set__":true,
  "elements":[
   "nr.types"
  ]
 },
 "tests.test_supercell":{
  "__set__":true,
  "elements":[
   "crystals"
  ]
 },
 "tests.test_svd":{
  "__set__":true,
  "elements":[
   "graspy"
  ]
 },
 "tests.test_swagger":{
  "__set__":true,
  "elements":[
   "flask-restplus"
  ]
 },
 "tests.test_swagger_utils":{
  "__set__":true,
  "elements":[
   "flask-restplus"
  ]
 },
 "tests.test_sync":{
  "__set__":true,
  "elements":[
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.test_syntax_v1":{
  "__set__":true,
  "elements":[
   "pydifact"
  ]
 },
 "tests.test_table":{
  "__set__":true,
  "elements":[
   "biom-format",
   "magicgui",
   "pdfme"
  ]
 },
 "tests.test_table_source":{
  "__set__":true,
  "elements":[
   "kylinpy"
  ]
 },
 "tests.test_tables":{
  "__set__":true,
  "elements":[
   "py-cordex",
   "tinydb"
  ]
 },
 "tests.test_tagger":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_tailing_slash_client_it":{
  "__set__":true,
  "elements":[
   "webdavclient3"
  ]
 },
 "tests.test_tars":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.test_tasks":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_tax_rates":{
  "__set__":true,
  "elements":[
   "openfisca-france"
  ]
 },
 "tests.test_tds_resume":{
  "__set__":true,
  "elements":[
   "andes"
  ]
 },
 "tests.test_team_rating":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.test_techstacks":{
  "__set__":true,
  "elements":[
   "servicestack"
  ]
 },
 "tests.test_telemetry":{
  "__set__":true,
  "elements":[
   "quilt3"
  ]
 },
 "tests.test_tempeh":{
  "__set__":true,
  "elements":[
   "tempeh"
  ]
 },
 "tests.test_temperature":{
  "__set__":true,
  "elements":[
   "xclim"
  ]
 },
 "tests.test_templates":{
  "__set__":true,
  "elements":[
   "condorpy",
   "xrd_simulator"
  ]
 },
 "tests.test_terminal":{
  "__set__":true,
  "elements":[
   "jupyter_server"
  ]
 },
 "tests.test_terminal_formatter":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_terrain":{
  "__set__":true,
  "elements":[
   "openamundsen"
  ]
 },
 "tests.test_test_client_port":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_testing":{
  "__set__":true,
  "elements":[
   "sphinx-js"
  ]
 },
 "tests.test_tex":{
  "__set__":true,
  "elements":[
   "goosebib"
  ]
 },
 "tests.test_text":{
  "__set__":true,
  "elements":[
   "embetter",
   "pdfme"
  ]
 },
 "tests.test_text_classifier":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.test_text_processor":{
  "__set__":true,
  "elements":[
   "gruut"
  ]
 },
 "tests.test_text_regressor":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.test_text_to_phonemes":{
  "__set__":true,
  "elements":[
   "gruut"
  ]
 },
 "tests.test_textfmts":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_textnets":{
  "__set__":true,
  "elements":[
   "textnets"
  ]
 },
 "tests.test_tfrecords":{
  "__set__":true,
  "elements":[
   "deepforest"
  ]
 },
 "tests.test_theseus_layer":{
  "__set__":true,
  "elements":[
   "theseus-ai"
  ]
 },
 "tests.test_tie_point_grid":{
  "__set__":true,
  "elements":[
   "arosics"
  ]
 },
 "tests.test_tiff2jp2":{
  "__set__":true,
  "elements":[
   "glymur"
  ]
 },
 "tests.test_time_series":{
  "__set__":true,
  "elements":[
   "plonk"
  ]
 },
 "tests.test_time_utilities":{
  "__set__":true,
  "elements":[
   "pycsep"
  ]
 },
 "tests.test_timeline":{
  "__set__":true,
  "elements":[
   "pyannote.core"
  ]
 },
 "tests.test_timeout_logic":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_timezone":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.test_timing":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.test_tinydb":{
  "__set__":true,
  "elements":[
   "tinydb"
  ]
 },
 "tests.test_tinyimagenet":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.test_tls":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_to_file":{
  "__set__":true,
  "elements":[
   "ascii_magic"
  ]
 },
 "tests.test_to_html_file":{
  "__set__":true,
  "elements":[
   "ascii_magic"
  ]
 },
 "tests.test_to_terminal":{
  "__set__":true,
  "elements":[
   "ascii_magic"
  ]
 },
 "tests.test_token":{
  "__set__":true,
  "elements":[
   "pydifact",
   "pygments"
  ]
 },
 "tests.test_token_cache":{
  "__set__":true,
  "elements":[
   "msal"
  ]
 },
 "tests.test_tokenize_data":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_tokenize_sentence":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.test_tokenize_utils":{
  "__set__":true,
  "elements":[
   "stanza"
  ]
 },
 "tests.test_tokenizer":{
  "__set__":true,
  "elements":[
   "pydifact",
   "stanza"
  ]
 },
 "tests.test_tokenizers":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_toml_document":{
  "__set__":true,
  "elements":[
   "tomlkit"
  ]
 },
 "tests.test_toml_file":{
  "__set__":true,
  "elements":[
   "tomlkit"
  ]
 },
 "tests.test_toml_spec_tests":{
  "__set__":true,
  "elements":[
   "tomlkit"
  ]
 },
 "tests.test_toml_tests":{
  "__set__":true,
  "elements":[
   "tomlkit"
  ]
 },
 "tests.test_toolbar":{
  "__set__":true,
  "elements":[
   "saws"
  ]
 },
 "tests.test_tools":{
  "__set__":true,
  "elements":[
   "moviepy",
   "reacnetgenerator",
   "yggdrasil"
  ]
 },
 "tests.test_top_k_discords":{
  "__set__":true,
  "elements":[
   "matrixprofile"
  ]
 },
 "tests.test_top_k_motifs":{
  "__set__":true,
  "elements":[
   "matrixprofile"
  ]
 },
 "tests.test_touchup":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_tqdm":{
  "__set__":true,
  "elements":[
   "magicgui"
  ]
 },
 "tests.test_track_packages":{
  "__set__":true,
  "elements":[
   "grayskull"
  ]
 },
 "tests.test_trackable":{
  "__set__":true,
  "elements":[
   "flask-security-too"
  ]
 },
 "tests.test_tracker":{
  "__set__":true,
  "elements":[
   "btrack"
  ]
 },
 "tests.test_tracklets":{
  "__set__":true,
  "elements":[
   "btrack"
  ]
 },
 "tests.test_trainer":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.test_transect":{
  "__set__":true,
  "elements":[
   "pyopenrivercam"
  ]
 },
 "tests.test_transform":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_transform.test_affine":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_transform.test_flirt":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_transform.test_fnirt":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_transform.test_nonlinear":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_transform.test_x5":{
  "__set__":true,
  "elements":[
   "fslpy"
  ]
 },
 "tests.test_transforms":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_transport":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.test_transport_http":{
  "__set__":true,
  "elements":[
   "suds-jurko"
  ]
 },
 "tests.test_tree":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_trial":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.test_triang":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_tridiag":{
  "__set__":true,
  "elements":[
   "openamundsen"
  ]
 },
 "tests.test_trust_notebook":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_trusted_context_connect":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_trusted_context_pconnect":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_tsne":{
  "__set__":true,
  "elements":[
   "fasttsne"
  ]
 },
 "tests.test_tutorial":{
  "__set__":true,
  "elements":[
   "pyremo"
  ]
 },
 "tests.test_twist":{
  "__set__":true,
  "elements":[
   "spatialmath-python"
  ]
 },
 "tests.test_twisted":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_twisted.test_inlinecallbacks_yield_statement":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_twisted.test_returnvalue_in_inlinecallbacks":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_twisted.test_yield_return_statement":{
  "__set__":true,
  "elements":[
   "dlint"
  ]
 },
 "tests.test_two_factor":{
  "__set__":true,
  "elements":[
   "flask-security-too"
  ]
 },
 "tests.test_type":{
  "__set__":true,
  "elements":[
   "lux-api",
   "plum-dispatch"
  ]
 },
 "tests.test_type_hints":{
  "__set__":true,
  "elements":[
   "redframes"
  ]
 },
 "tests.test_typed_lists":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_typedoc":{
  "__set__":true,
  "elements":[
   "sphinx-js"
  ]
 },
 "tests.test_types":{
  "__set__":true,
  "elements":[
   "magicgui",
   "tranquilizer"
  ]
 },
 "tests.test_typing":{
  "__set__":true,
  "elements":[
   "erdantic",
   "hydrofunctions"
  ]
 },
 "tests.test_ugrid1d":{
  "__set__":true,
  "elements":[
   "xugrid"
  ]
 },
 "tests.test_ugrid2d":{
  "__set__":true,
  "elements":[
   "xugrid"
  ]
 },
 "tests.test_ugrid_dataset":{
  "__set__":true,
  "elements":[
   "xugrid"
  ]
 },
 "tests.test_ui":{
  "__set__":true,
  "elements":[
   "chebfun"
  ]
 },
 "tests.test_uncertain_conditional":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_unicode":{
  "__set__":true,
  "elements":[
   "jupytext"
  ]
 },
 "tests.test_unicode_strings":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_unified_signin":{
  "__set__":true,
  "elements":[
   "flask-security-too"
  ]
 },
 "tests.test_unistring":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_units":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.test_unix_socket":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_unknown_field":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_unpack":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_updates":{
  "__set__":true,
  "elements":[
   "aesara",
   "theano-pymc"
  ]
 },
 "tests.test_updating":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_updatingrelationship":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_uplift_trees":{
  "__set__":true,
  "elements":[
   "causalml"
  ]
 },
 "tests.test_url_building":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_url_for":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_url_for_static":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_using_api":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_utf8":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_util":{
  "__set__":true,
  "elements":[
   "amset",
   "biom-format",
   "borb",
   "dlint",
   "emperor",
   "ncar-jobqueue",
   "pdpipe",
   "plum-dispatch",
   "pygments",
   "pymc-base",
   "quilt",
   "quilt3",
   "yodatools"
  ]
 },
 "tests.test_util_manipulation":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_utilities":{
  "__set__":true,
  "elements":[
   "chebfun",
   "deepforest",
   "localtileserver"
  ]
 },
 "tests.test_utility":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_utility_spec":{
  "__set__":true,
  "elements":[
   "larch"
  ]
 },
 "tests.test_utils":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox",
   "aiida-castep",
   "airflow",
   "artificial-adversary",
   "baycomp",
   "birdy",
   "blimpy",
   "btrack",
   "causalml",
   "clisops",
   "cmip6_preprocessing",
   "cmyt",
   "dphtools",
   "edgetest",
   "extract_model",
   "flask-restplus",
   "flask-security-too",
   "gemgis",
   "graspy",
   "grayskull",
   "ioos_qc",
   "jupyter_server",
   "lux-api",
   "matrixprofile",
   "mols2grid",
   "mpire",
   "muttlib",
   "neutronics_material_maker",
   "onnx-caffe2",
   "pangeo-forge-recipes",
   "pygpcca",
   "pyremo",
   "pyrsmq",
   "pystac",
   "python-flair",
   "rabpro",
   "radioactivedecay",
   "sanic",
   "stanza",
   "stuf",
   "sumy",
   "tinydb",
   "tomlkit",
   "typhos",
   "verta",
   "xclim",
   "xmip",
   "xopt",
   "xrd_simulator"
  ]
 },
 "tests.test_utils.fake_datetime":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.test_utils.test_arg_handler":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_utils.test_compat":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_utils.test_file_utils":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_utils.test_histogram":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_utils.test_pagination":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_utils.test_pip_requirements":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_utils.test_time_utils":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_utils.test_unicode_compatible_class":{
  "__set__":true,
  "elements":[
   "sumy"
  ]
 },
 "tests.test_utils.test_utils":{
  "__set__":true,
  "elements":[
   "sumy",
   "verta"
  ]
 },
 "tests.test_utils_typing":{
  "__set__":true,
  "elements":[
   "nr.types"
  ]
 },
 "tests.test_validation":{
  "__set__":true,
  "elements":[
   "flask-restless"
  ]
 },
 "tests.test_value_optimization":{
  "__set__":true,
  "elements":[
   "causalml"
  ]
 },
 "tests.test_variational":{
  "__set__":true,
  "elements":[
   "gpflow"
  ]
 },
 "tests.test_varint_encoding":{
  "__set__":true,
  "elements":[
   "pyrobuf"
  ]
 },
 "tests.test_vector":{
  "__set__":true,
  "elements":[
   "gemgis"
  ]
 },
 "tests.test_vector_pipeline":{
  "__set__":true,
  "elements":[
   "rabpro"
  ]
 },
 "tests.test_velocimetry":{
  "__set__":true,
  "elements":[
   "pyopenrivercam"
  ]
 },
 "tests.test_version":{
  "__set__":true,
  "elements":[
   "aiobotocore",
   "geofileops",
   "jupyter_server",
   "propka",
   "pystac"
  ]
 },
 "tests.test_versioning":{
  "__set__":true,
  "elements":[
   "sanic",
   "verta"
  ]
 },
 "tests.test_versioning.test_code":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_versioning.test_configuration":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_versioning.test_dataset":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_versioning.test_environment":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_versioning.test_repository":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.test_versions":{
  "__set__":true,
  "elements":[
   "awslogs"
  ]
 },
 "tests.test_vhosts":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_video":{
  "__set__":true,
  "elements":[
   "pyopenrivercam"
  ]
 },
 "tests.test_videotools":{
  "__set__":true,
  "elements":[
   "moviepy"
  ]
 },
 "tests.test_views":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_vis":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests.test_vision":{
  "__set__":true,
  "elements":[
   "embetter"
  ]
 },
 "tests.test_visual":{
  "__set__":true,
  "elements":[
   "python-flair"
  ]
 },
 "tests.test_visualization":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox",
   "gemgis",
   "plonk"
  ]
 },
 "tests.test_visualize":{
  "__set__":true,
  "elements":[
   "deepforest",
   "matrixprofile"
  ]
 },
 "tests.test_vocs":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.test_voronoi":{
  "__set__":true,
  "elements":[
   "xugrid"
  ]
 },
 "tests.test_voyager_data_load":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_vs_mag2":{
  "__set__":true,
  "elements":[
   "magpylib"
  ]
 },
 "tests.test_vsa_aeff":{
  "__set__":true,
  "elements":[
   "terrainbento"
  ]
 },
 "tests.test_vsi":{
  "__set__":true,
  "elements":[
   "localtileserver"
  ]
 },
 "tests.test_vue_widget":{
  "__set__":true,
  "elements":[
   "ipyvue"
  ]
 },
 "tests.test_waiter":{
  "__set__":true,
  "elements":[
   "aiobotocore"
  ]
 },
 "tests.test_walk":{
  "__set__":true,
  "elements":[
   "rivgraph"
  ]
 },
 "tests.test_warn":{
  "__set__":true,
  "elements":[
   "ibm_db"
  ]
 },
 "tests.test_warnings":{
  "__set__":true,
  "elements":[
   "glymur"
  ]
 },
 "tests.test_warp":{
  "__set__":true,
  "elements":[
   "ipygany"
  ]
 },
 "tests.test_waterfall":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_waterfall2":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_wdl_parser":{
  "__set__":true,
  "elements":[
   "caper"
  ]
 },
 "tests.test_web":{
  "__set__":true,
  "elements":[
   "gemgis"
  ]
 },
 "tests.test_websockets":{
  "__set__":true,
  "elements":[
   "sanic"
  ]
 },
 "tests.test_whiley":{
  "__set__":true,
  "elements":[
   "pygments"
  ]
 },
 "tests.test_widgets":{
  "__set__":true,
  "elements":[
   "magicgui",
   "typhos"
  ]
 },
 "tests.test_workflow":{
  "__set__":true,
  "elements":[
   "condorpy"
  ]
 },
 "tests.test_workflows":{
  "__set__":true,
  "elements":[
   "quilt3"
  ]
 },
 "tests.test_wps_caps":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_client":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_climatology_esp":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_climpred_hindcast_verification":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_era5":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_forecast_evaluation":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_forecast_flood_risk":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_forecast_graphs":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_generic_raster_subset":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_generic_shape_properties":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_generic_terrain_analysis":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_generic_zonal_stats":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_graph_fit":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_graph_tsstats":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_hindcast":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_hydrobasins_shape_selection":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_nalcms_zonal_stats":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_nrcan_daily":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_objective_functions":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_ostrich_gr4j_cemaneige":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_ostrich_hbv_ec":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_ostrich_hmets":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_ostrich_mohyse":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_raven":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_raven_gr4j_cemaneige":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_raven_hbv_ec":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_raven_hmets":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_raven_mohyse":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_raven_multi_model":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_realtime_forecast":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wps_regionalization":{
  "__set__":true,
  "elements":[
   "raven-wps"
  ]
 },
 "tests.test_wrapper":{
  "__set__":true,
  "elements":[
   "otwrapy"
  ]
 },
 "tests.test_write":{
  "__set__":true,
  "elements":[
   "tomlkit"
  ]
 },
 "tests.test_write_tiff":{
  "__set__":true,
  "elements":[
   "tifftools"
  ]
 },
 "tests.test_write_to_fil":{
  "__set__":true,
  "elements":[
   "blimpy"
  ]
 },
 "tests.test_writers":{
  "__set__":true,
  "elements":[
   "crystals"
  ]
 },
 "tests.test_writing":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.test_writing_tiles":{
  "__set__":true,
  "elements":[
   "glymur"
  ]
 },
 "tests.test_wstrust":{
  "__set__":true,
  "elements":[
   "msal"
  ]
 },
 "tests.test_xarray":{
  "__set__":true,
  "elements":[
   "daops",
   "flox"
  ]
 },
 "tests.test_xarray.test_xarray_aggregation":{
  "__set__":true,
  "elements":[
   "daops"
  ]
 },
 "tests.test_xgboost":{
  "__set__":true,
  "elements":[
   "dvclive"
  ]
 },
 "tests.test_xgboost_explainer":{
  "__set__":true,
  "elements":[
   "explainerdashboard"
  ]
 },
 "tests.test_xml_collector":{
  "__set__":true,
  "elements":[
   "pytmc"
  ]
 },
 "tests.test_xml_obj":{
  "__set__":true,
  "elements":[
   "pytmc"
  ]
 },
 "tests.test_xns11":{
  "__set__":true,
  "elements":[
   "mikeio"
  ]
 },
 "tests.test_xopt":{
  "__set__":true,
  "elements":[
   "xopt"
  ]
 },
 "tests.test_xsum":{
  "__set__":true,
  "elements":[
   "xsum"
  ]
 },
 "tests.test_xsum.test_xsum":{
  "__set__":true,
  "elements":[
   "xsum"
  ]
 },
 "tests.test_xyz":{
  "__set__":true,
  "elements":[
   "mikeio"
  ]
 },
 "tests.test_yamlfile":{
  "__set__":true,
  "elements":[
   "yggdrasil"
  ]
 },
 "tests.testbasic":{
  "__set__":true,
  "elements":[
   "histogrammar"
  ]
 },
 "tests.testgpu":{
  "__set__":true,
  "elements":[
   "histogrammar"
  ]
 },
 "tests.testing":{
  "__set__":true,
  "elements":[
   "sphinx-js"
  ]
 },
 "tests.testing_utilities":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.testnumpy":{
  "__set__":true,
  "elements":[
   "histogrammar"
  ]
 },
 "tests.testrootcling":{
  "__set__":true,
  "elements":[
   "histogrammar"
  ]
 },
 "tests.tests":{
  "__set__":true,
  "elements":[
   "django-versatileimagefield",
   "fancylog",
   "ffx",
   "moviepy",
   "neurokit2",
   "openmichrom",
   "plantcv",
   "portalocker"
  ]
 },
 "tests.tests.test_DUMMY":{
  "__set__":true,
  "elements":[
   "fancylog"
  ]
 },
 "tests.tests_bio":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_complexity":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_data":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_ecg":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_ecg_delineate":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_ecg_findpeaks":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_eda":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_eeg":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_emg":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_eog":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_epochs":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_events":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_for_travis":{
  "__set__":true,
  "elements":[
   "cellpy"
  ]
 },
 "tests.tests_hrv":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_microstates":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_ppg":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_rsp":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_signal":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_signal_fixpeaks":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.tests_stats":{
  "__set__":true,
  "elements":[
   "neurokit2"
  ]
 },
 "tests.testspec":{
  "__set__":true,
  "elements":[
   "histogrammar"
  ]
 },
 "tests.text_stages":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.text_stages.test_drop_tokens_by_length":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.text_stages.test_drop_tokens_by_list":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.text_stages.test_regex_replace":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.theanolm":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.theanolm.basiclayer_test":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.theanolm.classdistribution_test":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.theanolm.iterators_test":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.theanolm.lattice_test":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.theanolm.latticedecoder_test":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.theanolm.operations_test":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.theanolm.probfunctions_test":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.theanolm.recurrentstate_test":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.theanolm.score_test":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.theanolm.statistics_test":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.theanolm.textsampler_test":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.theanolm.textscorer_test":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.theanolm.trainers_test":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.theanolm.vocabulary_test":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.theanolm.wordclass_test":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.ti_deps":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.ti_deps.contexts":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.ti_deps.deps":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.ti_deps.deps.dag_ti_slots_available_dep":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.ti_deps.deps.dag_unpaused_dep":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.ti_deps.deps.dagrun_exists_dep":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.ti_deps.deps.fake_models":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.ti_deps.deps.not_in_retry_period_dep":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.ti_deps.deps.not_running_dep":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.ti_deps.deps.not_skipped_dep":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.ti_deps.deps.pool_has_space_dep":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.ti_deps.deps.prev_dagrun_dep":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.ti_deps.deps.runnable_exec_date_dep":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.ti_deps.deps.trigger_rule_dep":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.ti_deps.deps.valid_state_dep":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.time_strategies":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.timing_test":{
  "__set__":true,
  "elements":[
   "eventkit"
  ]
 },
 "tests.token":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.token.conftest":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.token.test_auth":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.token.test_basic":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.toolkit":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.export":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.export.html_to_pdf":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.export.html_to_pdf.test_export_html_to_pdf":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.export.markdown_to_pdf":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.export.markdown_to_pdf.test_export_markdown_to_pdf":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.export.pdf_to_jpg":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.export.pdf_to_jpg.test_export_pdf_to_jpg":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.export.pdf_to_json":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.export.pdf_to_json.test_export_pdf_to_json":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.export.pdf_to_mp3":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.export.pdf_to_mp3.test_export_to_mp3":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.export.pdf_to_svg":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.export.pdf_to_svg.test_export_pdf_to_svg":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.image":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.image.test_extract_images":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.image.test_optimize_images":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.ocr":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.ocr.test_extract_text_using_ocr":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.redact":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.redact.test_redact_common_regular_expressions":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.table":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.table.test_detect_table":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.text":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.text.test_extract_courier_text":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.text.test_extract_keywords":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.text.test_extract_red_text":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.text.test_extract_regex":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.text.test_extract_text":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.text.test_extract_text_from_self_made_invoice":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.toolkit.text.test_part_of_speech_tagger":{
  "__set__":true,
  "elements":[
   "borb"
  ]
 },
 "tests.tools":{
  "__set__":true,
  "elements":[
   "aiida-core",
   "amset",
   "diffprivlib",
   "xyzspaces"
  ]
 },
 "tests.tools.data":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.data.orbital":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.data.orbital.test_orbitals":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.dbimporters":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.dbimporters.test_icsd":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.dbimporters.test_materialsproject":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.graph":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.graph.test_age":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.graph.test_graph_traversers":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.groups":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.groups.test_paths":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.common":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.common.test_archive":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.migration":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.migration.test_migration":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.migration.test_migrations":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.migration.test_v02_to_v03":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.migration.test_v03_to_v04":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.migration.test_v04_to_v05":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.migration.test_v05_to_v06":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.migration.test_v06_to_v07":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.migration.test_v07_to_v08":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.migration.test_v08_to_v09":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.orm":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.orm.test_attributes":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.orm.test_calculations":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.orm.test_codes":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.orm.test_comments":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.orm.test_computers":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.orm.test_extras":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.orm.test_groups":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.orm.test_links":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.orm.test_logs":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.orm.test_users":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.test_complex":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.test_prov_redesign":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.test_simple":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.test_specific_import":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.importexport.utils":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.test_count_nonzero":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.tools.test_deformation":{
  "__set__":true,
  "elements":[
   "amset"
  ]
 },
 "tests.tools.test_histogram":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.tools.test_histogram2d":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.tools.test_histogramdd":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.tools.test_mean":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.tools.test_median":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.tools.test_nanmean":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.tools.test_nanstd":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.tools.test_nansum":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.tools.test_nanvar":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.tools.test_percentile":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.tools.test_quantile":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.tools.test_std":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.tools.test_sum":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.tools.test_tools":{
  "__set__":true,
  "elements":[
   "xyzspaces"
  ]
 },
 "tests.tools.test_var":{
  "__set__":true,
  "elements":[
   "diffprivlib"
  ]
 },
 "tests.tools.visualization":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tools.visualization.test_graph":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.topology":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.topology.test_bulk_topology":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.topology.test_topology":{
  "__set__":true,
  "elements":[
   "tyssue"
  ]
 },
 "tests.torsion":{
  "__set__":true,
  "elements":[
   "polyfempy"
  ]
 },
 "tests.training":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.training.test_ar1":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.training.test_losses":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.training.test_online_strategies":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.training.test_plugins":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.training.test_replay":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.training.test_strategies":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.training.test_strategies_accuracy":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.training.test_stream_completeness":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.training.test_supervised_regression":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.transform_test":{
  "__set__":true,
  "elements":[
   "eventkit"
  ]
 },
 "tests.transformation":{
  "__set__":true,
  "elements":[
   "pdfstream"
  ]
 },
 "tests.transformation.test_cli":{
  "__set__":true,
  "elements":[
   "pdfstream"
  ]
 },
 "tests.transformation.test_main":{
  "__set__":true,
  "elements":[
   "pdfstream"
  ]
 },
 "tests.transformation.test_tools":{
  "__set__":true,
  "elements":[
   "pdfstream"
  ]
 },
 "tests.transforms":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.transforms._test_trafos2":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.transforms.test_geometric_transform":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.transforms.test_integral":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.transforms.test_map_coordinates":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.transforms.test_trafos":{
  "__set__":true,
  "elements":[
   "gputools"
  ]
 },
 "tests.transports":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.transports.test_all_plugins":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.transports.test_local":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.transports.test_ssh":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.tuning":{
  "__set__":true,
  "elements":[
   "pymc-base",
   "wrighttools"
  ]
 },
 "tests.tuning.spectral_delay_correction":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.tuning.spectral_delay_correction.process_wigner":{
  "__set__":true,
  "elements":[
   "wrighttools"
  ]
 },
 "tests.tuning.test_scaling":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.tuning.test_starting":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.two_funcs":{
  "__set__":true,
  "elements":[
   "tranquilizer"
  ]
 },
 "tests.typed_list":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.typed_list.test_basic":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.typed_list.test_opt":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.typed_list.test_type":{
  "__set__":true,
  "elements":[
   "theano-pymc"
  ]
 },
 "tests.typewriter":{
  "__set__":true,
  "elements":[
   "pytermgui"
  ]
 },
 "tests.unit":{
  "__set__":true,
  "elements":[
   "fair-research-login",
   "google-cloud-bigquery",
   "google-cloud-monitoring",
   "google-cloud-resource-manager",
   "graypy",
   "histolab",
   "jupyterlab-git",
   "neo4j-python-driver",
   "python-gitlab",
   "readchar",
   "serverlessrepo",
   "small-text"
  ]
 },
 "tests.unit.conftest":{
  "__set__":true,
  "elements":[
   "fair-research-login",
   "python-gitlab",
   "serverlessrepo"
  ]
 },
 "tests.unit.data":{
  "__set__":true,
  "elements":[
   "histolab",
   "neo4j-python-driver"
  ]
 },
 "tests.unit.data.test_data":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.unit.data.test_packing":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.filters":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.unit.filters.test_image_filters":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.unit.filters.test_morphological_filters":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.unit.filters.test_util":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.unit.gapic":{
  "__set__":true,
  "elements":[
   "google-cloud-resource-manager"
  ]
 },
 "tests.unit.gapic.resourcemanager_v3":{
  "__set__":true,
  "elements":[
   "google-cloud-resource-manager"
  ]
 },
 "tests.unit.gapic.resourcemanager_v3.test_folders":{
  "__set__":true,
  "elements":[
   "google-cloud-resource-manager"
  ]
 },
 "tests.unit.gapic.resourcemanager_v3.test_organizations":{
  "__set__":true,
  "elements":[
   "google-cloud-resource-manager"
  ]
 },
 "tests.unit.gapic.resourcemanager_v3.test_projects":{
  "__set__":true,
  "elements":[
   "google-cloud-resource-manager"
  ]
 },
 "tests.unit.gapic.resourcemanager_v3.test_tag_bindings":{
  "__set__":true,
  "elements":[
   "google-cloud-resource-manager"
  ]
 },
 "tests.unit.gapic.resourcemanager_v3.test_tag_keys":{
  "__set__":true,
  "elements":[
   "google-cloud-resource-manager"
  ]
 },
 "tests.unit.gapic.resourcemanager_v3.test_tag_values":{
  "__set__":true,
  "elements":[
   "google-cloud-resource-manager"
  ]
 },
 "tests.unit.helper":{
  "__set__":true,
  "elements":[
   "graypy"
  ]
 },
 "tests.unit.io":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.io.conftest":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.io.test_class_bolt":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.io.test_class_bolt3":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.io.test_class_bolt4x0":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.io.test_direct":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.io.test_routing":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.mixins":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.mixins.test_meta_mixins":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.mixins.test_mixin_methods":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.mixins.test_object_mixins_attributes":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.mocks":{
  "__set__":true,
  "elements":[
   "fair-research-login"
  ]
 },
 "tests.unit.objects":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.conftest":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_appearance":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_applications":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_audit_events":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_badges":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_bridges":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_commits":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_deploy_tokens":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_deployments":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_environments":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_groups":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_hooks":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_issues":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_job_artifacts":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_jobs":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_keys":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_members":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_merge_request_pipelines":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_merge_requests":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_mro":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_packages":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_personal_access_tokens":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_pipeline_schedules":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_pipelines":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_project_access_tokens":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_project_import_export":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_project_merge_request_approvals":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_project_statistics":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_projects":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_releases":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_remote_mirrors":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_repositories":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_resource_label_events":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_resource_milestone_events":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_resource_state_events":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_runners":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_services":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_snippets":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_submodules":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_todos":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_users":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.objects.test_variables":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.small_text":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.classifiers":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.classifiers.test_classifiers":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.classifiers.test_factories":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.conftest":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.data":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.data.test_datasets":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.data.test_sampling":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.initialization":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.initialization.test_strategies":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.pytorch":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.pytorch.classifiers":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.pytorch.classifiers.test_base":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.pytorch.classifiers.test_factories":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.pytorch.classifiers.test_kimcnn":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.pytorch.models":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.pytorch.models.test_kimcnn":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.pytorch.test_datasets":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.pytorch.test_strategies":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.pytorch.test_utils":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.pytorch.utils":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.pytorch.utils.test_data":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.pytorch.utils.test_labels":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.transformers":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.transformers.classifiers":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.transformers.classifiers.test_classification":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.transformers.classifiers.test_factories":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.integrations.transformers.test_datasets":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.query_strategies":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.query_strategies.test_base":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.query_strategies.test_coresets":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.query_strategies.test_strategies":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.stopping_criteria":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.stopping_criteria.test_base":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.stopping_criteria.test_kappa":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.test_active_learner":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.test_base":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.test_version":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.utils":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.utils.test_classification":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.utils.test_clustering":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.utils.test_data":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.utils.test_datetime":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.utils.test_labels":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.small_text.utils.test_logging":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.unit.test_ExcludeFilter":{
  "__set__":true,
  "elements":[
   "graypy"
  ]
 },
 "tests.unit.test_GELFRabbitHandler":{
  "__set__":true,
  "elements":[
   "graypy"
  ]
 },
 "tests.unit.test__dataframe":{
  "__set__":true,
  "elements":[
   "google-cloud-monitoring"
  ]
 },
 "tests.unit.test__helpers":{
  "__set__":true,
  "elements":[
   "google-cloud-bigquery"
  ]
 },
 "tests.unit.test__http":{
  "__set__":true,
  "elements":[
   "google-cloud-bigquery",
   "google-cloud-monitoring"
  ]
 },
 "tests.unit.test_addressing":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.test_api":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.test_application_metadata":{
  "__set__":true,
  "elements":[
   "serverlessrepo"
  ]
 },
 "tests.unit.test_application_policy":{
  "__set__":true,
  "elements":[
   "serverlessrepo"
  ]
 },
 "tests.unit.test_base":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.test_branch":{
  "__set__":true,
  "elements":[
   "jupyterlab-git"
  ]
 },
 "tests.unit.test_cli":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.test_client":{
  "__set__":true,
  "elements":[
   "fair-research-login",
   "google-cloud-bigquery",
   "google-cloud-monitoring"
  ]
 },
 "tests.unit.test_clone":{
  "__set__":true,
  "elements":[
   "jupyterlab-git"
  ]
 },
 "tests.unit.test_code_handler":{
  "__set__":true,
  "elements":[
   "fair-research-login"
  ]
 },
 "tests.unit.test_compositions":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.unit.test_conf":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.test_config":{
  "__set__":true,
  "elements":[
   "jupyterlab-git",
   "python-gitlab"
  ]
 },
 "tests.unit.test_data":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.test_dataset":{
  "__set__":true,
  "elements":[
   "google-cloud-bigquery"
  ]
 },
 "tests.unit.test_diff":{
  "__set__":true,
  "elements":[
   "jupyterlab-git"
  ]
 },
 "tests.unit.test_exceptions":{
  "__set__":true,
  "elements":[
   "histolab",
   "neo4j-python-driver",
   "python-gitlab"
  ]
 },
 "tests.unit.test_gitlab":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.test_gitlab_auth":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.test_gitlab_http_methods":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.test_group":{
  "__set__":true,
  "elements":[
   "google-cloud-monitoring"
  ]
 },
 "tests.unit.test_handler":{
  "__set__":true,
  "elements":[
   "graypy"
  ]
 },
 "tests.unit.test_handlers":{
  "__set__":true,
  "elements":[
   "jupyterlab-git"
  ]
 },
 "tests.unit.test_import_neo4j":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.test_job":{
  "__set__":true,
  "elements":[
   "google-cloud-bigquery"
  ]
 },
 "tests.unit.test_key":{
  "__set__":true,
  "elements":[
   "readchar"
  ]
 },
 "tests.unit.test_label":{
  "__set__":true,
  "elements":[
   "google-cloud-monitoring"
  ]
 },
 "tests.unit.test_local_server":{
  "__set__":true,
  "elements":[
   "fair-research-login"
  ]
 },
 "tests.unit.test_masks":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.unit.test_metric":{
  "__set__":true,
  "elements":[
   "google-cloud-monitoring"
  ]
 },
 "tests.unit.test_parser":{
  "__set__":true,
  "elements":[
   "serverlessrepo"
  ]
 },
 "tests.unit.test_permission_helper":{
  "__set__":true,
  "elements":[
   "serverlessrepo"
  ]
 },
 "tests.unit.test_publish":{
  "__set__":true,
  "elements":[
   "serverlessrepo"
  ]
 },
 "tests.unit.test_pushpull":{
  "__set__":true,
  "elements":[
   "jupyterlab-git"
  ]
 },
 "tests.unit.test_query":{
  "__set__":true,
  "elements":[
   "google-cloud-bigquery",
   "google-cloud-monitoring"
  ]
 },
 "tests.unit.test_readkey":{
  "__set__":true,
  "elements":[
   "readchar"
  ]
 },
 "tests.unit.test_record":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.test_resource":{
  "__set__":true,
  "elements":[
   "google-cloud-monitoring"
  ]
 },
 "tests.unit.test_schema":{
  "__set__":true,
  "elements":[
   "google-cloud-bigquery"
  ]
 },
 "tests.unit.test_scorer":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.unit.test_security":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.test_slide":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.unit.test_storage_classes":{
  "__set__":true,
  "elements":[
   "fair-research-login"
  ]
 },
 "tests.unit.test_storage_tools":{
  "__set__":true,
  "elements":[
   "fair-research-login"
  ]
 },
 "tests.unit.test_table":{
  "__set__":true,
  "elements":[
   "google-cloud-bigquery"
  ]
 },
 "tests.unit.test_tile":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.unit.test_tiler":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.unit.test_timeseries":{
  "__set__":true,
  "elements":[
   "google-cloud-monitoring"
  ]
 },
 "tests.unit.test_types":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver",
   "python-gitlab"
  ]
 },
 "tests.unit.test_util":{
  "__set__":true,
  "elements":[
   "histolab"
  ]
 },
 "tests.unit.test_utils":{
  "__set__":true,
  "elements":[
   "python-gitlab"
  ]
 },
 "tests.unit.time":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.time.test_clock":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.time.test_clocktime":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.time.test_date":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.time.test_datetime":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.time.test_duration":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.time.test_hydration":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit.time.test_time":{
  "__set__":true,
  "elements":[
   "neo4j-python-driver"
  ]
 },
 "tests.unit_tests":{
  "__set__":true,
  "elements":[
   "param_persist",
   "verta",
   "vizlo"
  ]
 },
 "tests.unit_tests.agents":{
  "__set__":true,
  "elements":[
   "param_persist"
  ]
 },
 "tests.unit_tests.agents.sqlalchemy_agent":{
  "__set__":true,
  "elements":[
   "param_persist"
  ]
 },
 "tests.unit_tests.agents.sqlalchemy_agent.conftest":{
  "__set__":true,
  "elements":[
   "param_persist"
  ]
 },
 "tests.unit_tests.agents.sqlalchemy_agent.test_sqlalchemy_agent":{
  "__set__":true,
  "elements":[
   "param_persist"
  ]
 },
 "tests.unit_tests.agents.test_base_agent":{
  "__set__":true,
  "elements":[
   "param_persist"
  ]
 },
 "tests.unit_tests.conftest":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.unit_tests.registry":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.unit_tests.registry.test_registered_model_version":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.unit_tests.sqlalchemy_data_models":{
  "__set__":true,
  "elements":[
   "param_persist"
  ]
 },
 "tests.unit_tests.sqlalchemy_data_models.conftest":{
  "__set__":true,
  "elements":[
   "param_persist"
  ]
 },
 "tests.unit_tests.sqlalchemy_data_models.test_instance_model":{
  "__set__":true,
  "elements":[
   "param_persist"
  ]
 },
 "tests.unit_tests.sqlalchemy_data_models.test_param_model":{
  "__set__":true,
  "elements":[
   "param_persist"
  ]
 },
 "tests.unit_tests.strategies":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.unit_tests.test_endpoint_class":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.unit_tests.test_solving":{
  "__set__":true,
  "elements":[
   "vizlo"
  ]
 },
 "tests.unit_tests.test_transformation":{
  "__set__":true,
  "elements":[
   "vizlo"
  ]
 },
 "tests.unit_tests.test_visualization":{
  "__set__":true,
  "elements":[
   "vizlo"
  ]
 },
 "tests.unit_tests_utils":{
  "__set__":true,
  "elements":[
   "avalanche-lib"
  ]
 },
 "tests.units":{
  "__set__":true,
  "elements":[
   "tsfresh",
   "wrighttools"
  ]
 },
 "tests.units.feature_extraction":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.feature_extraction.test_extraction":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.feature_extraction.test_feature_calculations":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.feature_extraction.test_settings":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.feature_selection":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.feature_selection.test_checks":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.feature_selection.test_feature_significance":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.feature_selection.test_relevance":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.feature_selection.test_selection":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.feature_selection.test_significance_tests":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.scripts":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.scripts.test_run_tsfresh":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.transformers":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.transformers.test_feature_augmenter":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.transformers.test_feature_selector":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.transformers.test_per_column_imputer":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.transformers.test_relevant_feature_augmenter":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.utilities":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.utilities.test_dataframe_functions":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.utilities.test_distribution":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.units.utilities.test_string_manipilations":{
  "__set__":true,
  "elements":[
   "tsfresh"
  ]
 },
 "tests.unittest_brain":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_brain_numpy_core_fromnumeric":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_brain_numpy_core_function_base":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_brain_numpy_core_multiarray":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_brain_numpy_core_numeric":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_brain_numpy_core_numerictypes":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_brain_numpy_core_umath":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_brain_numpy_ndarray":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_brain_numpy_random_mtrand":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_builder":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_helpers":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_inference":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_lookup":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_manager":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_modutils":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_nodes":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_object_model":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_objects":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_protocols":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_python3":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_raw_building":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_regrtest":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_scoped_nodes":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_tools":{
  "__set__":true,
  "elements":[
   "aesara",
   "theano-pymc"
  ]
 },
 "tests.unittest_transforms":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittest_utils":{
  "__set__":true,
  "elements":[
   "astroid"
  ]
 },
 "tests.unittests":{
  "__set__":true,
  "elements":[
   "pyxel-sim"
  ]
 },
 "tests.unittests.test_arguments":{
  "__set__":true,
  "elements":[
   "pyxel-sim"
  ]
 },
 "tests.unittests.test_calibration":{
  "__set__":true,
  "elements":[
   "pyxel-sim"
  ]
 },
 "tests.unittests.test_detector":{
  "__set__":true,
  "elements":[
   "pyxel-sim"
  ]
 },
 "tests.unittests.test_environment":{
  "__set__":true,
  "elements":[
   "pyxel-sim"
  ]
 },
 "tests.unittests.test_fitting":{
  "__set__":true,
  "elements":[
   "pyxel-sim"
  ]
 },
 "tests.unittests.test_model_function":{
  "__set__":true,
  "elements":[
   "pyxel-sim"
  ]
 },
 "tests.unittests.test_pyxel_loader":{
  "__set__":true,
  "elements":[
   "pyxel-sim"
  ]
 },
 "tests.urls":{
  "__set__":true,
  "elements":[
   "django-versatileimagefield"
  ]
 },
 "tests.usecases":{
  "__set__":true,
  "elements":[
   "gitflow"
  ]
 },
 "tests.usecases.test_creation":{
  "__set__":true,
  "elements":[
   "gitflow"
  ]
 },
 "tests.util":{
  "__set__":true,
  "elements":[
   "deeptime",
   "intake-spark",
   "openskill",
   "plum-dispatch",
   "pyathena",
   "quacc",
   "shared"
  ]
 },
 "tests.util.conftest":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.util.test_atoms":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.util.test_calc":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.util.test_data":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.util.test_decorators":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.util.test_ladder_pairs":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.util.test_pop_analysis":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.util.test_pytorch":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.util.test_quantity_statistics":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.util.test_rankings":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.util.test_score":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.util.test_slabs":{
  "__set__":true,
  "elements":[
   "quacc"
  ]
 },
 "tests.util.test_sparse_utils":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.util.test_types":{
  "__set__":true,
  "elements":[
   "deeptime"
  ]
 },
 "tests.util.test_unwind":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.util.test_util_a":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.util.test_util_c":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.util.test_util_sum_q":{
  "__set__":true,
  "elements":[
   "openskill"
  ]
 },
 "tests.utilities":{
  "__set__":true,
  "elements":[
   "chebfun"
  ]
 },
 "tests.utils":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox",
   "aiida-castep",
   "aiida-core",
   "airflow",
   "baycomp",
   "bionc",
   "crystals",
   "dpu-utils",
   "erdantic",
   "esmlab",
   "extract_model",
   "genestboost",
   "intake-parquet",
   "iohexperimenter",
   "ipygany",
   "jupyter_server",
   "jupytext",
   "landlab",
   "modelbase",
   "mpire",
   "mvt",
   "nr.types",
   "pdfme",
   "pdfstream",
   "polyfempy",
   "pyannote.core",
   "pybtex",
   "pyomeca",
   "pyoos",
   "pystac",
   "quilt",
   "quilt3",
   "small-text",
   "sumy",
   "superset",
   "triad",
   "trio-asyncio",
   "trio_asyncio",
   "tyssue",
   "verta",
   "xcube_geodb",
   "xplique",
   "xyzspaces"
  ]
 },
 "tests.utils.archives":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.utils.compression":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.utils.configuration":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.utils.convert_examples":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.datasets":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.utils.dates":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.utils.dispatcher_examples":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.dispatcher_examples.examples":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.dispatcher_examples.invalid":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.gradients_test":{
  "__set__":true,
  "elements":[
   "genestboost"
  ]
 },
 "tests.utils.object_factory":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.utils.processes":{
  "__set__":true,
  "elements":[
   "aiida-core"
  ]
 },
 "tests.utils.stac_io_mock":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.utils.test_assertion":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.test_cases":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.utils.test_chunkwriter":{
  "__set__":true,
  "elements":[
   "dpu-utils"
  ]
 },
 "tests.utils.test_class_extension":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.test_convert":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.test_count_repeats":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.utils.test_dct_ops":{
  "__set__":true,
  "elements":[
   "pdfstream"
  ]
 },
 "tests.utils.test_decorators":{
  "__set__":true,
  "elements":[
   "landlab",
   "tyssue"
  ]
 },
 "tests.utils.test_dispatcher":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.test_distance_from_divide":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.utils.test_flow__distance":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.utils.test_funcdef":{
  "__set__":true,
  "elements":[
   "nr.types"
  ]
 },
 "tests.utils.test_function":{
  "__set__":true,
  "elements":[
   "nr.types"
  ]
 },
 "tests.utils.test_halo":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.utils.test_hash":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.test_iter":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.test_iterators":{
  "__set__":true,
  "elements":[
   "dpu-utils"
  ]
 },
 "tests.utils.test_json":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.test_jupyter":{
  "__set__":true,
  "elements":[
   "pdfstream"
  ]
 },
 "tests.utils.test_matrix":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.utils.test_neighbor_node_array":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.utils.test_pandas_like":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.test_plotting":{
  "__set__":true,
  "elements":[
   "modelbase"
  ]
 },
 "tests.utils.test_pyarrow":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.test_pyarrow_convert":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.test_rename":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.test_return_grid":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.utils.test_richpath":{
  "__set__":true,
  "elements":[
   "dpu-utils"
  ]
 },
 "tests.utils.test_schema":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.test_source_tracking_algorithm":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.utils.test_stable_priority_queue":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.utils.test_string":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.test_structured_grid":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.utils.test_threading":{
  "__set__":true,
  "elements":[
   "triad"
  ]
 },
 "tests.utils.test_time":{
  "__set__":true,
  "elements":[
   "esmlab"
  ]
 },
 "tests.utils.test_utils":{
  "__set__":true,
  "elements":[
   "tyssue",
   "xyzspaces"
  ]
 },
 "tests.utils.test_warppers":{
  "__set__":true,
  "elements":[
   "pdfstream"
  ]
 },
 "tests.utils.test_watershed":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.utils.testing":{
  "__set__":true,
  "elements":[
   "small-text"
  ]
 },
 "tests.utils.validator":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.utils_test":{
  "__set__":true,
  "elements":[
   "llnl-sina"
  ]
 },
 "tests.utils_tests":{
  "__set__":true,
  "elements":[
   "labelme",
   "superset"
  ]
 },
 "tests.utils_tests.test_draw":{
  "__set__":true,
  "elements":[
   "labelme"
  ]
 },
 "tests.utils_tests.test_image":{
  "__set__":true,
  "elements":[
   "labelme"
  ]
 },
 "tests.utils_tests.test_shape":{
  "__set__":true,
  "elements":[
   "labelme"
  ]
 },
 "tests.utils_tests.util":{
  "__set__":true,
  "elements":[
   "labelme"
  ]
 },
 "tests.validation":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.validation.test_schema_uri_map":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.validation.test_validate":{
  "__set__":true,
  "elements":[
   "pystac"
  ]
 },
 "tests.values":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.values.conftest":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.values.test_synthetic":{
  "__set__":true,
  "elements":[
   "landlab"
  ]
 },
 "tests.variational":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.variational.test_approximations":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.variational.test_callbacks":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.variational.test_inference":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.variational.test_minibatch_rv":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.variational.test_opvi":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.variational.test_updates":{
  "__set__":true,
  "elements":[
   "pymc-base"
  ]
 },
 "tests.versioning":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.versioning.environment":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.versioning.environment.conftest":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.versioning.environment.test_docker":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.versioning.environment.test_environment":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.versioning.environment.test_python":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.versioning.test_code":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.versioning.test_configuration":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.versioning.test_dataset":{
  "__set__":true,
  "elements":[
   "verta"
  ]
 },
 "tests.view_scaffold":{
  "__set__":true,
  "elements":[
   "flask-security-too"
  ]
 },
 "tests.visualization":{
  "__set__":true,
  "elements":[
   "pdfstream"
  ]
 },
 "tests.visualization.test_main":{
  "__set__":true,
  "elements":[
   "pdfstream"
  ]
 },
 "tests.visualization.test_tools":{
  "__set__":true,
  "elements":[
   "pdfstream"
  ]
 },
 "tests.visualization_tests":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.visualization_tests.matplotlib_tests":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.visualization_tests.matplotlib_tests.test_edf":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.visualization_tests.test_contour":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.visualization_tests.test_edf":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.visualization_tests.test_intermediate_plot":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.visualization_tests.test_optimization_history":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.visualization_tests.test_parallel_coordinate":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.visualization_tests.test_param_importances":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.visualization_tests.test_slice":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.visualization_tests.test_utils":{
  "__set__":true,
  "elements":[
   "optuna"
  ]
 },
 "tests.viz":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.viz.test_jupyter_utils":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.viz.test_plot_utils":{
  "__set__":true,
  "elements":[
   "pyusid"
  ]
 },
 "tests.viz_tests":{
  "__set__":true,
  "elements":[
   "superset"
  ]
 },
 "tests.waiters":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.waiters.conftest":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.waiters.test_waiters":{
  "__set__":true,
  "elements":[
   "datarobot"
  ]
 },
 "tests.way_test":{
  "__set__":true,
  "elements":[
   "osmapi"
  ]
 },
 "tests.weak_learners":{
  "__set__":true,
  "elements":[
   "genestboost"
  ]
 },
 "tests.weak_learners.simple_pls_data":{
  "__set__":true,
  "elements":[
   "genestboost"
  ]
 },
 "tests.weak_learners.simple_pls_test":{
  "__set__":true,
  "elements":[
   "genestboost"
  ]
 },
 "tests.widgets_tests":{
  "__set__":true,
  "elements":[
   "labelme"
  ]
 },
 "tests.widgets_tests.test_label_dialog":{
  "__set__":true,
  "elements":[
   "labelme"
  ]
 },
 "tests.wordclasses":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.wordclasses.bigramoptimizer_test":{
  "__set__":true,
  "elements":[
   "theanolm"
  ]
 },
 "tests.wrappers":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox",
   "pdpipe"
  ]
 },
 "tests.wrappers.test_expectation":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.wrappers.test_fitonly":{
  "__set__":true,
  "elements":[
   "pdpipe"
  ]
 },
 "tests.wrappers.test_query_efficient_bb":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.wrappers.test_wrapper":{
  "__set__":true,
  "elements":[
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.www":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.www.api":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.www.api.experimental":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.www.api.experimental.test_endpoints":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.www.api.experimental.test_kerberos_endpoints":{
  "__set__":true,
  "elements":[
   "airflow"
  ]
 },
 "tests.x-custom_tests":{
  "__set__":true,
  "elements":[
   "sheet2dict"
  ]
 },
 "tests.x_square_test":{
  "__set__":true,
  "elements":[
   "ffx"
  ]
 },
 "tests.xr":{
  "__set__":true,
  "elements":[
   "extract_model"
  ]
 },
 "tests.xr.test_triangular_mesh_netcdf":{
  "__set__":true,
  "elements":[
   "extract_model"
  ]
 },
 "tests.zipf":{
  "__set__":true,
  "elements":[
   "sketchnu"
  ]
 },
 "tests_negative":{
  "__set__":true,
  "elements":[
   "webdriver-manager"
  ]
 },
 "tests_negative.test_browsers_not_installed":{
  "__set__":true,
  "elements":[
   "webdriver-manager"
  ]
 },
 "tests_sql":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests_sql.conftest":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests_sql.context":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests_sql.test_sql_compiler":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests_sql.test_sql_executor":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests_sql.test_sql_export":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "tests_sql.test_sql_interestingness":{
  "__set__":true,
  "elements":[
   "lux-api"
  ]
 },
 "testslide":{
  "__set__":true,
  "elements":[
   "testslide"
  ]
 },
 "testslide.cli":{
  "__set__":true,
  "elements":[
   "testslide"
  ]
 },
 "testslide.dsl":{
  "__set__":true,
  "elements":[
   "testslide"
  ]
 },
 "testslide.import_profiler":{
  "__set__":true,
  "elements":[
   "testslide"
  ]
 },
 "testslide.lib":{
  "__set__":true,
  "elements":[
   "testslide"
  ]
 },
 "testslide.matchers":{
  "__set__":true,
  "elements":[
   "testslide"
  ]
 },
 "testslide.mock_callable":{
  "__set__":true,
  "elements":[
   "testslide"
  ]
 },
 "testslide.mock_constructor":{
  "__set__":true,
  "elements":[
   "testslide"
  ]
 },
 "testslide.patch":{
  "__set__":true,
  "elements":[
   "testslide"
  ]
 },
 "testslide.patch_attribute":{
  "__set__":true,
  "elements":[
   "testslide"
  ]
 },
 "testslide.runner":{
  "__set__":true,
  "elements":[
   "testslide"
  ]
 },
 "testslide.strict_mock":{
  "__set__":true,
  "elements":[
   "testslide"
  ]
 }
}
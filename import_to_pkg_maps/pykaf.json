{
 "pykafka":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.balancedconsumer":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.broker":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.cli":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.cli.kafka_tools":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.client":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.cluster":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.common":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.connection":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.exceptions":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.handlers":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.managedbalancedconsumer":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.membershipprotocol":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.partition":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.partitioners":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.producer":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.protocol":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.protocol.admin":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.protocol.base":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.protocol.fetch":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.protocol.group_membership":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.protocol.message":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.protocol.metadata":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.protocol.offset":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.protocol.offset_commit":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.protocol.produce":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.rdkafka":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.rdkafka._rd_kafka":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.rdkafka.helpers":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.rdkafka.producer":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.rdkafka.simple_consumer":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.simpleconsumer":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.test":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.test.kafka_instance":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.test.utils":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.topic":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.utils":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.utils.compat":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.utils.compression":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.utils.error_handlers":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.utils.socket":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 },
 "pykafka.utils.struct_helpers":{
  "__set__":true,
  "elements":[
   "pykafka"
  ]
 }
}
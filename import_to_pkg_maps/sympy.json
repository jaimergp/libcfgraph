{
 "sympy":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.abc":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.algebras":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.algebras.quaternion":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.algebras.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.algebras.tests.test_quaternion":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions.ask":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions.ask_generated":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions.assume":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions.cnf":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions.facts":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions.handlers":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions.handlers.calculus":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions.handlers.common":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions.handlers.matrices":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions.handlers.ntheory":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions.handlers.order":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions.handlers.sets":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions.predicates":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions.predicates.calculus":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions.predicates.common":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions.predicates.matrices":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions.predicates.ntheory":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions.predicates.order":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions.predicates.sets":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions.refine":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions.relation":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions.relation.binrel":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions.relation.equality":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions.satask":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions.sathandlers":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions.tests.test_assumptions_2":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions.tests.test_context":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions.tests.test_matrices":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions.tests.test_query":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions.tests.test_refine":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions.tests.test_satask":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions.tests.test_sathandlers":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions.tests.test_wrapper":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.assumptions.wrapper":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.benchmarks":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.benchmarks.bench_discrete_log":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.benchmarks.bench_meijerint":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.benchmarks.bench_symbench":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.calculus":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.calculus.accumulationbounds":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.calculus.euler":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.calculus.finite_diff":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.calculus.singularities":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.calculus.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.calculus.tests.test_accumulationbounds":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.calculus.tests.test_euler":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.calculus.tests.test_finite_diff":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.calculus.tests.test_singularities":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.calculus.tests.test_util":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.calculus.util":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.categories":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.categories.baseclasses":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.categories.diagram_drawing":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.categories.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.categories.tests.test_baseclasses":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.categories.tests.test_drawing":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.codegen":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.codegen.abstract_nodes":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.codegen.algorithms":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.codegen.approximations":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.codegen.array_utils":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.codegen.ast":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.codegen.cfunctions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.codegen.cnodes":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.codegen.cutils":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.codegen.cxxnodes":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.codegen.ffunctions":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.codegen.fnodes":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.codegen.futils":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.codegen.matrix_nodes":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.codegen.numpy_nodes":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.codegen.pynodes":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.codegen.pyutils":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.codegen.rewriting":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.codegen.scipy_nodes":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.codegen.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.codegen.tests.test_abstract_nodes":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.codegen.tests.test_algorithms":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.codegen.tests.test_applications":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.codegen.tests.test_approximations":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.codegen.tests.test_array_utils":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.codegen.tests.test_ast":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.codegen.tests.test_cfunctions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.codegen.tests.test_cnodes":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.codegen.tests.test_cxxnodes":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.codegen.tests.test_fnodes":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.codegen.tests.test_numpy_nodes":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.codegen.tests.test_pynodes":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.codegen.tests.test_pyutils":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.codegen.tests.test_rewriting":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.codegen.tests.test_scipy_nodes":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.coset_table":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.fp_groups":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.free_groups":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.galois":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.generators":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.graycode":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.group_constructs":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.group_numbers":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.homomorphisms":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.named_groups":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.partitions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.pc_groups":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.perm_groups":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.permutations":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.polyhedron":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.prufer":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.rewritingsystem":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.rewritingsystem_fsm":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.schur_number":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.subsets":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.tensor_can":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.tests.test_coset_table":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.tests.test_fp_groups":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.tests.test_free_groups":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.tests.test_galois":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.tests.test_generators":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.tests.test_graycode":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.tests.test_group_constructs":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.tests.test_group_numbers":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.tests.test_homomorphisms":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.tests.test_named_groups":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.tests.test_partitions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.tests.test_pc_groups":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.tests.test_perm_groups":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.tests.test_permutations":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.tests.test_polyhedron":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.tests.test_prufer":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.tests.test_rewriting":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.tests.test_schur_number":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.tests.test_subsets":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.tests.test_tensor_can":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.tests.test_testutil":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.tests.test_util":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.testutil":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.combinatorics.util":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.concrete":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.concrete.delta":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.concrete.expr_with_intlimits":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.concrete.expr_with_limits":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.concrete.gosper":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.concrete.guess":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.concrete.products":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.concrete.summations":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.concrete.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.concrete.tests.test_delta":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.concrete.tests.test_gosper":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.concrete.tests.test_guess":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.concrete.tests.test_products":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.concrete.tests.test_sums_products":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.conftest":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core._print_helpers":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.add":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.alphabets":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.assumptions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.assumptions_generated":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.backend":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.basic":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.benchmarks":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.benchmarks.bench_arit":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.benchmarks.bench_assumptions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.benchmarks.bench_basic":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.benchmarks.bench_expand":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.benchmarks.bench_numbers":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.benchmarks.bench_sympify":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.cache":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.compatibility":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.containers":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.core":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.coreerrors":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.decorators":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.evalf":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.evaluate":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.core.expr":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.exprtools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.facts":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.function":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.kind":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.logic":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.mod":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.mul":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.multidimensional":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.numbers":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.operations":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.parameters":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.power":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.random":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.relational":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.rules":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.singleton":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.sorting":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.symbol":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.sympify":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_args":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_arit":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_assumptions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_basic":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_cache":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_compatibility":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_complex":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_constructor_postprocessor":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_containers":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_count_ops":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_diff":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_equal":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_eval":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_eval_power":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.core.tests.test_evalf":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_evaluate":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.core.tests.test_expand":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_expr":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_exprtools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_facts":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_function":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_kind":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_logic":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_match":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_multidimensional":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_noncommutative":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_numbers":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_operations":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_parameters":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_power":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_priority":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_random":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_relational":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_rules":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_singleton":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_sorting":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_subs":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_symbol":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_sympify":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_trace":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.core.tests.test_traversal":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_truediv":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_var":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.tests.test_wester":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.core.trace":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.core.traversal":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.crypto":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.crypto.crypto":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.crypto.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.crypto.tests.test_crypto":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.deprecated":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.deprecated.class_registry":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.deprecated.tests":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.deprecated.tests.test_class_registry":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.deprecated.tests.test_deprecated_imports":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.diffgeom":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.diffgeom.diffgeom":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.diffgeom.rn":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.diffgeom.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.diffgeom.tests.test_class_structure":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.diffgeom.tests.test_diffgeom":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.diffgeom.tests.test_function_diffgeom_book":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.diffgeom.tests.test_hyperbolic_space":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.discrete":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.discrete.convolution":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.discrete.convolutions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.discrete.recurrence":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.discrete.recurrences":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.discrete.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.discrete.tests.test_convolution":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.discrete.tests.test_convolutions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.discrete.tests.test_recurrence":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.discrete.tests.test_recurrences":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.discrete.tests.test_transforms":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.discrete.transforms":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.external":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.external.gmpy":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.external.importtools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.external.pythonmpq":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.external.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.external.tests.test_autowrap":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.external.tests.test_codegen":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.external.tests.test_importtools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.external.tests.test_numpy":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.external.tests.test_pythonmpq":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.external.tests.test_sage":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.external.tests.test_scipy":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.combinatorial":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.combinatorial.factorials":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.combinatorial.numbers":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.combinatorial.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.combinatorial.tests.test_comb_factorials":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.combinatorial.tests.test_comb_numbers":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.elementary":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.elementary._trigonometric_special":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.elementary.benchmarks":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.elementary.benchmarks.bench_exp":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.elementary.complexes":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.elementary.exponential":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.elementary.hyperbolic":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.elementary.integers":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.elementary.miscellaneous":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.elementary.piecewise":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.elementary.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.elementary.tests.test_complexes":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.elementary.tests.test_exponential":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.elementary.tests.test_hyperbolic":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.elementary.tests.test_integers":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.elementary.tests.test_interface":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.elementary.tests.test_miscellaneous":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.elementary.tests.test_piecewise":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.elementary.tests.test_trigonometric":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.elementary.trigonometric":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.special":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.special.benchmarks":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.special.benchmarks.bench_special":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.special.bessel":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.special.beta_functions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.special.bsplines":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.special.delta_functions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.special.elliptic_integrals":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.special.error_functions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.special.gamma_functions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.special.hyper":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.special.mathieu_functions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.special.polynomials":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.special.singularity_functions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.special.spherical_harmonics":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.special.tensor_functions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.special.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.special.tests.test_bessel":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.special.tests.test_beta_functions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.special.tests.test_bsplines":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.special.tests.test_delta_functions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.special.tests.test_elliptic_integrals":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.special.tests.test_error_functions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.special.tests.test_gamma_functions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.special.tests.test_hyper":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.special.tests.test_mathieu":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.special.tests.test_singularity_functions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.special.tests.test_spec_polynomials":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.special.tests.test_spherical_harmonics":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.special.tests.test_tensor_functions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.special.tests.test_zeta_functions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.functions.special.zeta_functions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.galgebra":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.geometry":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.geometry.curve":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.geometry.ellipse":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.geometry.entity":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.geometry.exceptions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.geometry.line":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.geometry.line3d":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.geometry.parabola":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.geometry.plane":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.geometry.point":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.geometry.polygon":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.geometry.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.geometry.tests.test_curve":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.geometry.tests.test_ellipse":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.geometry.tests.test_entity":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.geometry.tests.test_geometrysets":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.geometry.tests.test_line":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.geometry.tests.test_parabola":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.geometry.tests.test_plane":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.geometry.tests.test_point":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.geometry.tests.test_polygon":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.geometry.tests.test_util":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.geometry.util":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.holonomic":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.holonomic.holonomic":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.holonomic.holonomicerrors":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.holonomic.linearsolver":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.holonomic.numerical":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.holonomic.recurrence":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.holonomic.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.holonomic.tests.test_holonomic":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.holonomic.tests.test_recurrence":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.benchmarks":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.benchmarks.bench_integrate":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.benchmarks.bench_trigintegrate":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.deltafunctions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.heurisch":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.integrals":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.intpoly":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.laplace":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.manualintegrate":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.meijerint":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.meijerint_doc":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.prde":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.quadrature":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rationaltools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rde":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.risch":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.constraints":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.parsetools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.parsetools.generate_rules":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.parsetools.generate_tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.parsetools.parse":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.parsetools.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.parsetools.tests.test_parse":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rubi":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rubi_tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rubi_tests.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rubi_tests.tests.test_1_2":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rubi_tests.tests.test_1_3":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rubi_tests.tests.test_1_4":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rubi_tests.tests.test_exponential":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rubi_tests.tests.test_hyperbolic_sine":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rubi_tests.tests.test_inverse_hyperbolic_sine":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rubi_tests.tests.test_inverse_sine":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rubi_tests.tests.test_logarithms":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rubi_tests.tests.test_miscellaneous_algebra":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rubi_tests.tests.test_secant":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rubi_tests.tests.test_sine":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rubi_tests.tests.test_special_functions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rubi_tests.tests.test_tangent":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rubi_tests.tests.test_trinomials":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rubimain":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rules":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rules.binomial_products":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rules.exponential":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rules.hyperbolic":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rules.integrand_simplification":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rules.inverse_hyperbolic":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rules.inverse_trig":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rules.linear_products":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rules.logarithms":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rules.miscellaneous_algebraic":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rules.miscellaneous_integration":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rules.miscellaneous_trig":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rules.piecewise_linear":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rules.quadratic_products":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rules.secant":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rules.sine":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rules.special_functions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rules.tangent":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.rules.trinomial_products":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.symbol":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.tests.test_1_2":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.integrals.rubi.tests.test_1_3":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.integrals.rubi.tests.test_1_4":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.integrals.rubi.tests.test_rubi_integrate":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.tests.test_utility_function":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.rubi.utility_function":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.singularityfunctions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.tests.test_deltafunctions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.tests.test_failing_integrals":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.tests.test_heurisch":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.tests.test_integrals":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.tests.test_intpoly":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.tests.test_laplace":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.tests.test_lineintegrals":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.tests.test_manual":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.tests.test_meijerint":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.tests.test_prde":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.tests.test_quadrature":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.tests.test_rationaltools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.tests.test_rde":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.tests.test_risch":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.tests.test_singularityfunctions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.tests.test_transforms":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.tests.test_trigonometry":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.transforms":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.integrals.trigonometry":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.interactive":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.interactive.ipythonprinting":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.interactive.printing":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.interactive.session":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.interactive.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.interactive.tests.test_interactive":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.interactive.tests.test_ipython":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.interactive.tests.test_ipythonprinting":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.interactive.traversal":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.liealgebras":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.liealgebras.cartan_matrix":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.liealgebras.cartan_type":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.liealgebras.dynkin_diagram":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.liealgebras.root_system":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.liealgebras.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.liealgebras.tests.test_cartan_matrix":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.liealgebras.tests.test_cartan_type":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.liealgebras.tests.test_dynkin_diagram":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.liealgebras.tests.test_root_system":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.liealgebras.tests.test_type_A":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.liealgebras.tests.test_type_B":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.liealgebras.tests.test_type_C":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.liealgebras.tests.test_type_D":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.liealgebras.tests.test_type_E":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.liealgebras.tests.test_type_F":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.liealgebras.tests.test_type_G":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.liealgebras.tests.test_weyl_group":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.liealgebras.type_a":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.liealgebras.type_b":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.liealgebras.type_c":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.liealgebras.type_d":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.liealgebras.type_e":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.liealgebras.type_f":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.liealgebras.type_g":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.liealgebras.weyl_group":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.logic":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.logic.algorithms":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.logic.algorithms.dpll":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.logic.algorithms.dpll2":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.logic.algorithms.minisat22_wrapper":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.logic.algorithms.pycosat_wrapper":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.logic.boolalg":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.logic.inference":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.logic.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.logic.tests.test_boolalg":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.logic.tests.test_dimacs":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.logic.tests.test_inference":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.logic.utilities":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.logic.utilities.dimacs":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.benchmarks":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.benchmarks.bench_matrix":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.common":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.decompositions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.dense":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.densearith":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.matrices.densesolve":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.matrices.densetools":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.matrices.determinant":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.eigen":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions._shape":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.adjoint":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.applyfunc":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.blockmatrix":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.companion":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.determinant":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.diagonal":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.dotproduct":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.factorizations":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.fourier":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.funcmatrix":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.hadamard":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.inverse":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.kronecker":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.matadd":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.matexpr":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.matmul":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.matpow":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.permutation":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.sets":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.slice":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.special":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.tests.test_adjoint":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.tests.test_applyfunc":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.tests.test_blockmatrix":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.tests.test_companion":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.tests.test_derivatives":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.tests.test_determinant":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.tests.test_diagonal":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.tests.test_dotproduct":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.tests.test_factorizations":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.tests.test_fourier":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.tests.test_funcmatrix":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.tests.test_hadamard":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.tests.test_indexing":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.tests.test_inverse":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.tests.test_kronecker":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.tests.test_matadd":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.tests.test_matexpr":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.tests.test_matmul":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.tests.test_matpow":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.tests.test_matrix_exprs":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.matrices.expressions.tests.test_permutation":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.tests.test_sets":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.tests.test_slice":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.tests.test_special":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.tests.test_trace":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.tests.test_transpose":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.trace":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.expressions.transpose":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.graph":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.immutable":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.inverse":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.matrices":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.normalforms":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.reductions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.repmatrix":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.solvers":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.sparse":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.sparsetools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.subspaces":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.tests.test_commonmatrix":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.tests.test_decompositions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.tests.test_densearith":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.matrices.tests.test_densesolve":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.matrices.tests.test_densetools":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.matrices.tests.test_determinant":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.tests.test_eigen":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.tests.test_graph":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.tests.test_immutable":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.tests.test_interactions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.tests.test_matrices":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.tests.test_normalforms":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.tests.test_reductions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.tests.test_solvers":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.tests.test_sparse":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.tests.test_sparsetools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.tests.test_subspaces":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.matrices.utilities":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.multipledispatch":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.multipledispatch.conflict":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.multipledispatch.core":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.multipledispatch.dispatcher":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.multipledispatch.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.multipledispatch.tests.test_conflict":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.multipledispatch.tests.test_core":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.multipledispatch.tests.test_dispatcher":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.multipledispatch.utils":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.ntheory":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.ntheory.bbp_pi":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.ntheory.continued_fraction":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.ntheory.digits":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.ntheory.ecm":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.ntheory.egyptian_fraction":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.ntheory.elliptic_curve":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.ntheory.factor_":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.ntheory.generate":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.ntheory.modular":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.ntheory.multinomial":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.ntheory.partitions_":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.ntheory.primetest":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.ntheory.qs":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.ntheory.residue_ntheory":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.ntheory.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.ntheory.tests.test_bbp_pi":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.ntheory.tests.test_continued_fraction":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.ntheory.tests.test_digits":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.ntheory.tests.test_ecm":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.ntheory.tests.test_egyptian_fraction":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.ntheory.tests.test_elliptic_curve":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.ntheory.tests.test_factor_":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.ntheory.tests.test_generate":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.ntheory.tests.test_modular":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.ntheory.tests.test_multinomial":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.ntheory.tests.test_partitions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.ntheory.tests.test_primetest":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.ntheory.tests.test_qs":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.ntheory.tests.test_residue":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.ast_parser":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.autolev":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.autolev._antlr":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.autolev._antlr.autolevlexer":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.autolev._antlr.autolevlistener":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.autolev._antlr.autolevparser":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.autolev._build_autolev_antlr":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.autolev._listener_autolev_antlr":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.autolev._parse_autolev_antlr":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.autolev.test-examples":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.parsing.autolev.test-examples.pydy-example-repo":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.parsing.autolev.test-examples.pydy-example-repo.chaos_pendulum":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.parsing.autolev.test-examples.pydy-example-repo.double_pendulum":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.parsing.autolev.test-examples.pydy-example-repo.mass_spring_damper":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.parsing.autolev.test-examples.pydy-example-repo.non_min_pendulum":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.parsing.autolev.test-examples.ruletest1":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.parsing.autolev.test-examples.ruletest10":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.parsing.autolev.test-examples.ruletest11":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.parsing.autolev.test-examples.ruletest12":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.parsing.autolev.test-examples.ruletest2":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.parsing.autolev.test-examples.ruletest3":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.parsing.autolev.test-examples.ruletest4":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.parsing.autolev.test-examples.ruletest5":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.parsing.autolev.test-examples.ruletest6":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.parsing.autolev.test-examples.ruletest7":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.parsing.autolev.test-examples.ruletest8":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.parsing.autolev.test-examples.ruletest9":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.parsing.c":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.c.c_parser":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.fortran":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.fortran.fortran_parser":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.latex":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.latex._antlr":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.latex._antlr.latexlexer":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.latex._antlr.latexparser":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.latex._build_latex_antlr":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.latex._parse_latex_antlr":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.latex.errors":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.mathematica":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.maxima":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.sym_expr":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.sympy_parser":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.sympy_tokenize":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.parsing.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.tests.test_ast_parser":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.tests.test_autolev":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.tests.test_c_parser":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.tests.test_fortran_parser":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.tests.test_implicit_multiplication_application":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.tests.test_latex":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.tests.test_latex_deps":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.tests.test_mathematica":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.tests.test_maxima":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.tests.test_sym_expr":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.parsing.tests.test_sympy_parser":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.continuum_mechanics":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.continuum_mechanics.beam":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.continuum_mechanics.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.continuum_mechanics.tests.test_beam":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.continuum_mechanics.tests.test_truss":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.continuum_mechanics.truss":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.control":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.control.control_plots":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.control.lti":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.control.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.control.tests.test_control_plots":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.control.tests.test_lti":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.gaussopt":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.physics.hep":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.hep.gamma_matrices":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.hep.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.hep.tests.test_gamma_matrices":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.hydrogen":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.matrices":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.mechanics":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.mechanics.body":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.mechanics.functions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.mechanics.joint":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.mechanics.jointsmethod":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.mechanics.kane":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.mechanics.lagrange":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.mechanics.linearize":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.mechanics.method":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.mechanics.models":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.mechanics.particle":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.mechanics.rigidbody":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.mechanics.system":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.mechanics.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.mechanics.tests.test_body":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.mechanics.tests.test_functions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.mechanics.tests.test_joint":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.mechanics.tests.test_jointsmethod":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.mechanics.tests.test_kane":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.mechanics.tests.test_kane2":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.mechanics.tests.test_kane3":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.mechanics.tests.test_kane4":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.mechanics.tests.test_lagrange":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.mechanics.tests.test_lagrange2":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.mechanics.tests.test_linearize":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.mechanics.tests.test_method":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.mechanics.tests.test_models":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.mechanics.tests.test_particle":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.mechanics.tests.test_rigidbody":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.mechanics.tests.test_system":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.optics":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.optics.gaussopt":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.optics.medium":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.optics.polarization":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.optics.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.optics.tests.test_gaussopt":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.optics.tests.test_medium":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.optics.tests.test_polarization":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.optics.tests.test_utils":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.optics.tests.test_waves":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.optics.utils":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.optics.waves":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.paulialgebra":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.pring":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.qho_1d":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.anticommutator":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.boson":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.cartesian":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.cg":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.circuitplot":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.circuitutils":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.commutator":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.constants":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.dagger":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.density":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.fermion":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.gate":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.grover":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.hilbert":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.identitysearch":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.innerproduct":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.matrixcache":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.matrixutils":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.operator":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.operatorordering":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.operatorset":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.pauli":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.piab":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.qapply":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.qasm":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.qexpr":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.qft":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.qubit":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.represent":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.sho1d":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.shor":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.spin":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.state":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tensorproduct":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests.test_anticommutator":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests.test_boson":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests.test_cartesian":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests.test_cg":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests.test_circuitplot":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests.test_circuitutils":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests.test_commutator":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests.test_constants":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests.test_dagger":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests.test_density":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests.test_fermion":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests.test_gate":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests.test_grover":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests.test_hilbert":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests.test_identitysearch":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests.test_innerproduct":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests.test_matrixutils":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests.test_operator":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests.test_operatorordering":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests.test_operatorset":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests.test_pauli":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests.test_piab":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests.test_printing":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests.test_qapply":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests.test_qasm":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests.test_qexpr":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests.test_qft":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests.test_qubit":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests.test_represent":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests.test_sho1d":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests.test_shor":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests.test_spin":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests.test_state":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests.test_tensorproduct":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.tests.test_trace":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.quantum.trace":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.secondquant":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.sho":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.tests.test_clebsch_gordan":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.tests.test_hydrogen":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.tests.test_paulialgebra":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.tests.test_physics_matrices":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.tests.test_pring":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.tests.test_qho_1d":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.tests.test_secondquant":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.tests.test_sho":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.tests.test_units":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.physics.units":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.units.definitions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.units.definitions.dimension_definitions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.units.definitions.unit_definitions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.units.dimensions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.units.prefixes":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.units.quantities":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.units.systems":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.units.systems.cgs":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.units.systems.length_weight_time":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.units.systems.mks":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.units.systems.mksa":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.units.systems.natural":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.units.systems.si":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.units.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.units.tests.test_dimensions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.units.tests.test_dimensionsystem":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.units.tests.test_prefixes":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.units.tests.test_quantities":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.units.tests.test_unit_system_cgs_gauss":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.units.tests.test_unitsystem":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.units.tests.test_util":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.units.unitsystem":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.units.util":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.unitsystems":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.physics.unitsystems.dimensions":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.physics.unitsystems.prefixes":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.physics.unitsystems.quantities":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.physics.unitsystems.simplifiers":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.physics.unitsystems.systems":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.physics.unitsystems.systems.mks":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.physics.unitsystems.systems.mksa":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.physics.unitsystems.systems.natural":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.physics.unitsystems.tests":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.physics.unitsystems.tests.test_dimensions":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.physics.unitsystems.tests.test_dimensionsystem":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.physics.unitsystems.tests.test_prefixes":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.physics.unitsystems.tests.test_quantities":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.physics.unitsystems.tests.test_simplifiers":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.physics.unitsystems.tests.test_units":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.physics.unitsystems.tests.test_unitsystem":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.physics.unitsystems.units":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.physics.vector":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.vector.dyadic":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.vector.fieldfunctions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.vector.frame":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.vector.functions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.vector.point":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.vector.printing":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.vector.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.vector.tests.test_dyadic":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.vector.tests.test_fieldfunctions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.vector.tests.test_frame":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.vector.tests.test_functions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.vector.tests.test_output":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.vector.tests.test_point":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.vector.tests.test_printing":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.vector.tests.test_vector":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.vector.vector":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.physics.wigner":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.experimental_lambdify":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.intervalmath":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.intervalmath.interval_arithmetic":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.intervalmath.interval_membership":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.intervalmath.lib_interval":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.intervalmath.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.intervalmath.tests.test_interval_functions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.intervalmath.tests.test_interval_membership":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.intervalmath.tests.test_intervalmath":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.plot":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.plot_implicit":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.pygletplot":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.pygletplot.color_scheme":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.pygletplot.managed_window":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.pygletplot.plot":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.pygletplot.plot_axes":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.pygletplot.plot_camera":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.pygletplot.plot_controller":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.pygletplot.plot_curve":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.pygletplot.plot_interval":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.pygletplot.plot_mode":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.pygletplot.plot_mode_base":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.pygletplot.plot_modes":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.pygletplot.plot_object":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.pygletplot.plot_rotation":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.pygletplot.plot_surface":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.pygletplot.plot_window":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.pygletplot.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.pygletplot.tests.test_plotting":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.pygletplot.util":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.tests.test_experimental_lambdify":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.tests.test_plot":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.tests.test_plot_implicit":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.tests.test_textplot":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.plotting.textplot":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.agca":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.agca.extensions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.agca.homomorphisms":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.agca.ideals":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.agca.modules":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.agca.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.agca.tests.test_extensions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.agca.tests.test_homomorphisms":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.agca.tests.test_ideals":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.agca.tests.test_modules":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.appellseqs":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.benchmarks":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.benchmarks.bench_galoispolys":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.benchmarks.bench_groebnertools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.benchmarks.bench_solvers":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.compatibility":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.constructor":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.densearith":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.densebasic":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.densetools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.dispersion":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.distributedmodules":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domainmatrix":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains.algebraicfield":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains.characteristiczero":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains.complexfield":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains.compositedomain":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains.domain":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains.domainelement":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains.expressiondomain":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains.expressionrawdomain":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains.field":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains.finitefield":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains.fractionfield":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains.gaussiandomains":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains.gmpyfinitefield":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains.gmpyintegerring":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains.gmpyrationalfield":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains.groundtypes":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains.integerring":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains.modularinteger":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains.mpelements":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains.old_fractionfield":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains.old_polynomialring":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains.polynomialring":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains.pythonfinitefield":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains.pythonintegerring":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains.pythonrational":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains.pythonrationalfield":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains.quotientring":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains.rationalfield":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains.realfield":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains.ring":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains.simpledomain":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains.tests.test_domains":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains.tests.test_polynomialring":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.domains.tests.test_quotientring":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.euclidtools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.factortools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.fglmtools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.fields":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.galoistools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.groebnertools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.heuristicgcd":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.matrices":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.matrices._typing":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.matrices.ddm":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.matrices.dense":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.matrices.domainmatrix":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.matrices.domainscalar":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.matrices.eigen":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.matrices.exceptions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.matrices.linsolve":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.matrices.lll":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.matrices.normalforms":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.matrices.sdm":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.matrices.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.matrices.tests.test_ddm":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.matrices.tests.test_dense":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.matrices.tests.test_domainmatrix":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.matrices.tests.test_domainscalar":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.matrices.tests.test_eigen":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.matrices.tests.test_linsolve":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.matrices.tests.test_lll":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.matrices.tests.test_normalforms":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.matrices.tests.test_sdm":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.modulargcd":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.monomials":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.multivariate_resultants":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.numberfields":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.numberfields.basis":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.numberfields.exceptions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.numberfields.galois_resolvents":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.numberfields.galoisgroups":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.numberfields.minpoly":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.numberfields.modules":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.numberfields.primes":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.numberfields.resolvent_lookup":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.numberfields.subfield":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.numberfields.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.numberfields.tests.test_basis":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.numberfields.tests.test_galoisgroups":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.numberfields.tests.test_minpoly":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.numberfields.tests.test_modules":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.numberfields.tests.test_numbers":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.numberfields.tests.test_primes":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.numberfields.tests.test_subfield":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.numberfields.tests.test_utilities":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.numberfields.utilities":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.orderings":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.orthopolys":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.partfrac":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.polyclasses":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.polyconfig":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.polyerrors":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.polyfuncs":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.polymatrix":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.polyoptions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.polyquinticconst":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.polyroots":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.polytools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.polyutils":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.rationaltools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.ring_series":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.rings":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.rootisolation":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.rootoftools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.solvers":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.specialpolys":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.sqfreetools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.subresultants_qq_zz":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_appellseqs":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_constructor":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_densearith":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_densebasic":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_densetools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_dispersion":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_distributedmodules":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_domainmatrix":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.polys.tests.test_euclidtools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_factortools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_fields":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_galoistools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_groebnertools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_heuristicgcd":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_injections":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_modulargcd":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_monomials":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_multivariate_resultants":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_numberfields":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.polys.tests.test_orderings":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_orthopolys":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_partfrac":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_polyclasses":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_polyfuncs":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_polymatrix":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_polyoptions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_polyroots":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_polytools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_polyutils":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_pythonrational":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_rationaltools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_ring_series":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_rings":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_rootisolation":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_rootoftools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_solvers":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_specialpolys":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_sqfreetools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.polys.tests.test_subresultants_qq_zz":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.aesaracode":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.c":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.ccode":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.codeprinter":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.conventions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.cxx":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.cxxcode":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.defaults":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.dot":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.fcode":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.fortran":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.glsl":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.gtk":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.jscode":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.julia":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.lambdarepr":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.latex":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.llvmjitcode":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.maple":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.mathematica":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.mathml":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.numpy":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.octave":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.precedence":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.pretty":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.pretty.pretty":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.pretty.pretty_symbology":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.pretty.stringpict":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.pretty.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.pretty.tests.test_pretty":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.preview":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.printer":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.pycode":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.python":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.rcode":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.repr":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.rust":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.smtlib":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.str":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tableform":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tensorflow":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tests.test_aesaracode":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tests.test_c":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tests.test_ccode":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.printing.tests.test_codeprinter":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tests.test_conventions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tests.test_cupy":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tests.test_cxx":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tests.test_cxxcode":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.printing.tests.test_dot":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tests.test_fcode":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.printing.tests.test_fortran":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tests.test_glsl":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tests.test_gtk":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tests.test_jax":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tests.test_jscode":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tests.test_julia":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tests.test_lambdarepr":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tests.test_latex":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tests.test_llvmjit":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tests.test_maple":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tests.test_mathematica":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tests.test_mathml":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tests.test_numpy":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tests.test_octave":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tests.test_precedence":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tests.test_preview":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tests.test_pycode":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tests.test_python":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tests.test_rcode":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tests.test_repr":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tests.test_rust":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tests.test_smtlib":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tests.test_str":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tests.test_tableform":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tests.test_tensorflow":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tests.test_theanocode":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tests.test_tree":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.theanocode":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.printing.tree":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.release":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.sandbox":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.sandbox.indexed_integrals":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.sandbox.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.sandbox.tests.test_indexed_integrals":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.series":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.series.acceleration":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.series.approximants":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.series.aseries":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.series.benchmarks":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.series.benchmarks.bench_limit":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.series.benchmarks.bench_order":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.series.formal":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.series.fourier":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.series.gruntz":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.series.kauers":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.series.limits":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.series.limitseq":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.series.order":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.series.residues":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.series.sequences":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.series.series":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.series.series_class":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.series.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.series.tests.test_approximants":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.series.tests.test_aseries":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.series.tests.test_demidovich":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.series.tests.test_formal":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.series.tests.test_fourier":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.series.tests.test_gruntz":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.series.tests.test_kauers":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.series.tests.test_limits":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.series.tests.test_limitseq":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.series.tests.test_lseries":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.series.tests.test_nseries":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.series.tests.test_order":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.series.tests.test_residues":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.series.tests.test_sequences":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.series.tests.test_series":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.sets":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.sets.conditionset":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.sets.contains":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.sets.fancysets":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.sets.handlers":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.sets.handlers.add":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.sets.handlers.comparison":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.sets.handlers.functions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.sets.handlers.intersection":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.sets.handlers.issubset":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.sets.handlers.mul":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.sets.handlers.power":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.sets.handlers.union":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.sets.ordinals":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.sets.powerset":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.sets.setexpr":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.sets.sets":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.sets.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.sets.tests.test_conditionset":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.sets.tests.test_contains":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.sets.tests.test_fancysets":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.sets.tests.test_ordinals":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.sets.tests.test_powerset":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.sets.tests.test_setexpr":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.sets.tests.test_sets":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.simplify":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.simplify.combsimp":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.simplify.cse_main":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.simplify.cse_opts":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.simplify.epathtools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.simplify.fu":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.simplify.gammasimp":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.simplify.hyperexpand":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.simplify.hyperexpand_doc":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.simplify.powsimp":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.simplify.radsimp":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.simplify.ratsimp":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.simplify.simplify":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.simplify.sqrtdenest":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.simplify.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.simplify.tests.test_combsimp":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.simplify.tests.test_cse":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.simplify.tests.test_epathtools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.simplify.tests.test_fu":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.simplify.tests.test_function":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.simplify.tests.test_gammasimp":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.simplify.tests.test_hyperexpand":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.simplify.tests.test_powsimp":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.simplify.tests.test_radsimp":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.simplify.tests.test_ratsimp":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.simplify.tests.test_rewrite":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.simplify.tests.test_simplify":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.simplify.tests.test_sqrtdenest":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.simplify.tests.test_traversaltools":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.simplify.tests.test_trigsimp":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.simplify.traversaltools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.simplify.trigsimp":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.benchmarks":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.benchmarks.bench_solvers":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.bivariate":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.decompogen":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.deutils":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.diophantine":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.diophantine.diophantine":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.diophantine.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.diophantine.tests.test_diophantine":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.inequalities":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.ode":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.ode.hypergeometric":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.ode.lie_group":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.ode.nonhomogeneous":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.ode.ode":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.ode.riccati":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.ode.single":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.ode.subscheck":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.ode.systems":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.ode.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.ode.tests.test_lie_group":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.ode.tests.test_ode":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.ode.tests.test_riccati":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.ode.tests.test_single":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.ode.tests.test_subscheck":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.ode.tests.test_systems":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.pde":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.polysys":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.recurr":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.solvers":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.solveset":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.tests.test_constantsimp":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.tests.test_decompogen":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.tests.test_diophantine":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.solvers.tests.test_inequalities":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.tests.test_numeric":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.tests.test_ode":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.solvers.tests.test_pde":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.tests.test_polysys":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.tests.test_recurr":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.tests.test_solvers":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.solvers.tests.test_solveset":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.compound_rv":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.crv":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.crv_types":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.drv":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.drv_types":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.error_prop":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.frv":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.frv_types":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.joint_rv":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.joint_rv_types":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.matrix_distributions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.random_matrix":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.random_matrix_models":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.rv":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.rv_interface":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.sampling":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.sampling.sample_numpy":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.sampling.sample_pymc":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.sampling.sample_pymc3":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.sampling.sample_scipy":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.sampling.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.sampling.tests.test_sample_continuous_rv":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.sampling.tests.test_sample_discrete_rv":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.sampling.tests.test_sample_finite_rv":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.stochastic_process":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.stochastic_process_types":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.symbolic_multivariate_probability":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.symbolic_probability":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.tests.test_compound_rv":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.tests.test_continuous_rv":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.tests.test_discrete_rv":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.tests.test_error_prop":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.tests.test_finite_rv":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.tests.test_joint_rv":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.tests.test_matrix_distributions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.tests.test_mix":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.tests.test_random_matrix":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.tests.test_rv":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.tests.test_stochastic_process":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.tests.test_symbolic_multivariate":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.stats.tests.test_symbolic_probability":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.strategies":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.strategies.branch":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.strategies.branch.core":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.strategies.branch.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.strategies.branch.tests.test_core":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.strategies.branch.tests.test_tools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.strategies.branch.tests.test_traverse":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.strategies.branch.tools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.strategies.branch.traverse":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.strategies.core":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.strategies.rl":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.strategies.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.strategies.tests.test_core":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.strategies.tests.test_rl":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.strategies.tests.test_strat":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.strategies.tests.test_tools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.strategies.tests.test_traverse":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.strategies.tests.test_tree":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.strategies.tools":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.strategies.traverse":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.strategies.tree":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.strategies.util":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.array_comprehension":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.array_derivatives":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.arrayop":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.dense_ndim_array":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.expressions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.expressions.array_expressions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.expressions.arrayexpr_derivatives":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.expressions.conv_array_to_indexed":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.expressions.conv_array_to_matrix":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.expressions.conv_indexed_to_array":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.expressions.conv_matrix_to_array":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.expressions.from_array_to_indexed":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.expressions.from_array_to_matrix":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.expressions.from_indexed_to_array":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.expressions.from_matrix_to_array":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.expressions.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.expressions.tests.test_array_expressions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.expressions.tests.test_arrayexpr_derivatives":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.expressions.tests.test_as_explicit":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.expressions.tests.test_convert_array_to_indexed":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.expressions.tests.test_convert_array_to_matrix":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.expressions.tests.test_convert_index_to_array":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.expressions.tests.test_convert_indexed_to_array":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.expressions.tests.test_convert_matrix_to_array":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.expressions.tests.test_deprecated_conv_modules":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.expressions.utils":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.mutable_ndim_array":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.ndim_array":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.sparse_ndim_array":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.tests.test_array_comprehension":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.tests.test_array_derivatives":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.tests.test_arrayop":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.tests.test_immutable_ndim_array":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.tests.test_mutable_ndim_array":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.tests.test_ndim_array":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.array.tests.test_ndim_array_conversions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.functions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.index_methods":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.indexed":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.tensor":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.tests.test_functions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.tests.test_index_methods":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.tests.test_indexed":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.tests.test_printing":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.tests.test_tensor":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.tests.test_tensor_element":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.tests.test_tensor_operators":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.tensor.toperators":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.testing":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.testing.benchmarking":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.testing.matrices":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.testing.pytest":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.testing.quality_unicode":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.testing.randtest":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.testing.runtests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.testing.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.testing.tests.diagnose_imports":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.testing.tests.test_code_quality":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.testing.tests.test_deprecated":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.testing.tests.test_module_imports":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.testing.tests.test_pytest":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.testing.tmpfiles":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.this":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.unify":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.unify.core":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.unify.rewrite":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.unify.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.unify.tests.test_rewrite":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.unify.tests.test_sympy":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.unify.tests.test_unify":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.unify.usympy":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities._compilation":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities._compilation.availability":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities._compilation.compilation":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities._compilation.runners":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities._compilation.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities._compilation.tests.test_compilation":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities._compilation.util":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.autowrap":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.benchmarking":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.codegen":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.decorator":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.enumerative":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.exceptions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.iterables":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.lambdify":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.magic":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.matchpy_connector":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.mathml":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.memoization":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.misc":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.pkgdata":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.pytest":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.quality_unicode":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.utilities.randtest":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.runtests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.source":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.tests.diagnose_imports":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.utilities.tests.test_autowrap":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.tests.test_code_quality":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.utilities.tests.test_codegen":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.tests.test_codegen_julia":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.tests.test_codegen_octave":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.tests.test_codegen_rust":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.tests.test_decorator":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.tests.test_deprecated":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.tests.test_enumerative":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.tests.test_exceptions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.tests.test_iterables":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.tests.test_lambdify":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.tests.test_matchpy_connector":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.tests.test_mathml":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.tests.test_misc":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.tests.test_module_imports":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.utilities.tests.test_pickling":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.tests.test_pytest":{
  "__set__":true,
  "elements":[
   "sympy"
  ]
 },
 "sympy.utilities.tests.test_source":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.tests.test_timeutils":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.tests.test_wester":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.tests.test_xxe":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.timeutils":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.utilities.tmpfiles":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.vector":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.vector.basisdependent":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.vector.coordsysrect":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.vector.deloperator":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.vector.dyadic":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.vector.functions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.vector.implicitregion":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.vector.integrals":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.vector.operators":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.vector.orienters":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.vector.parametricregion":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.vector.point":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.vector.scalar":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.vector.tests":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.vector.tests.test_coordsysrect":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.vector.tests.test_dyadic":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.vector.tests.test_field_functions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.vector.tests.test_functions":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.vector.tests.test_implicitregion":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.vector.tests.test_integrals":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.vector.tests.test_operators":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.vector.tests.test_parametricregion":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.vector.tests.test_printing":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.vector.tests.test_vector":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 },
 "sympy.vector.vector":{
  "__set__":true,
  "elements":[
   "finesse",
   "sympy"
  ]
 }
}
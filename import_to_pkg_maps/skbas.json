{
 "skbase":{
  "__set__":true,
  "elements":[
   "skbase"
  ]
 },
 "skbase._exceptions":{
  "__set__":true,
  "elements":[
   "skbase"
  ]
 },
 "skbase.base":{
  "__set__":true,
  "elements":[
   "skbase"
  ]
 },
 "skbase.base._base":{
  "__set__":true,
  "elements":[
   "skbase"
  ]
 },
 "skbase.base._meta":{
  "__set__":true,
  "elements":[
   "skbase"
  ]
 },
 "skbase.lookup":{
  "__set__":true,
  "elements":[
   "skbase"
  ]
 },
 "skbase.lookup._lookup":{
  "__set__":true,
  "elements":[
   "skbase"
  ]
 },
 "skbase.lookup.tests":{
  "__set__":true,
  "elements":[
   "skbase"
  ]
 },
 "skbase.lookup.tests.test_lookup":{
  "__set__":true,
  "elements":[
   "skbase"
  ]
 },
 "skbase.testing":{
  "__set__":true,
  "elements":[
   "skbase"
  ]
 },
 "skbase.testing.test_all_objects":{
  "__set__":true,
  "elements":[
   "skbase"
  ]
 },
 "skbase.testing.utils":{
  "__set__":true,
  "elements":[
   "skbase"
  ]
 },
 "skbase.testing.utils._conditional_fixtures":{
  "__set__":true,
  "elements":[
   "skbase"
  ]
 },
 "skbase.testing.utils._dependencies":{
  "__set__":true,
  "elements":[
   "skbase"
  ]
 },
 "skbase.testing.utils.deep_equals":{
  "__set__":true,
  "elements":[
   "skbase"
  ]
 },
 "skbase.testing.utils.inspect":{
  "__set__":true,
  "elements":[
   "skbase"
  ]
 },
 "skbase.testing.utils.tests":{
  "__set__":true,
  "elements":[
   "skbase"
  ]
 },
 "skbase.testing.utils.tests.test_check_dependencies":{
  "__set__":true,
  "elements":[
   "skbase"
  ]
 },
 "skbase.testing.utils.tests.test_deep_equals":{
  "__set__":true,
  "elements":[
   "skbase"
  ]
 },
 "skbase.tests":{
  "__set__":true,
  "elements":[
   "skbase"
  ]
 },
 "skbase.tests.conftest":{
  "__set__":true,
  "elements":[
   "skbase"
  ]
 },
 "skbase.tests.mock_package":{
  "__set__":true,
  "elements":[
   "skbase"
  ]
 },
 "skbase.tests.mock_package.test_mock_package":{
  "__set__":true,
  "elements":[
   "skbase"
  ]
 },
 "skbase.tests.test_base":{
  "__set__":true,
  "elements":[
   "skbase"
  ]
 },
 "skbase.tests.test_baseestimator":{
  "__set__":true,
  "elements":[
   "skbase"
  ]
 },
 "skbase.tests.test_exceptions":{
  "__set__":true,
  "elements":[
   "skbase"
  ]
 },
 "skbase.utils":{
  "__set__":true,
  "elements":[
   "skbase"
  ]
 },
 "skbase.utils._nested_iter":{
  "__set__":true,
  "elements":[
   "skbase"
  ]
 },
 "skbase.validate":{
  "__set__":true,
  "elements":[
   "skbase"
  ]
 },
 "skbase.validate._types":{
  "__set__":true,
  "elements":[
   "skbase"
  ]
 }
}
{
 "graph_adapter_tests":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_dask":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_dask.resources":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_dask.resources.bad_functions":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_dask.resources.config":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_dask.resources.config.default_config":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_dask.resources.config.default_config_2":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_dask.resources.config.user_specified_config":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_dask.resources.config_modifier":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_dask.resources.cyclic_functions":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_dask.resources.dummy_functions":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_dask.resources.example_module":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_dask.resources.extract_column_nodes":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_dask.resources.extract_columns_execution_count":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_dask.resources.functions_with_generics":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_dask.resources.layered_decorators":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_dask.resources.only_import_me":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_dask.resources.optional_dependencies":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_dask.resources.parametrized_inputs":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_dask.resources.parametrized_nodes":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_dask.resources.tagging":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_dask.resources.test_default_args":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_dask.resources.typing_vs_not_typing":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_dask.resources.very_simple_dag":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_dask.test_h_dask":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_ray":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_ray.resources":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_ray.resources.bad_functions":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_ray.resources.config":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_ray.resources.config.default_config":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_ray.resources.config.default_config_2":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_ray.resources.config.user_specified_config":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_ray.resources.config_modifier":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_ray.resources.cyclic_functions":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_ray.resources.dummy_functions":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_ray.resources.example_module":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_ray.resources.extract_column_nodes":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_ray.resources.extract_columns_execution_count":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_ray.resources.functions_with_generics":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_ray.resources.layered_decorators":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_ray.resources.only_import_me":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_ray.resources.optional_dependencies":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_ray.resources.parametrized_inputs":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_ray.resources.parametrized_nodes":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_ray.resources.tagging":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_ray.resources.test_default_args":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_ray.resources.typing_vs_not_typing":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_ray.resources.very_simple_dag":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_ray.test_h_ray":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_ray.test_h_ray_workflow":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_spark":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_spark.resources":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_spark.resources.bad_functions":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_spark.resources.config":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_spark.resources.config.default_config":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_spark.resources.config.default_config_2":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_spark.resources.config.user_specified_config":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_spark.resources.config_modifier":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_spark.resources.cyclic_functions":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_spark.resources.dummy_functions":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_spark.resources.example_module":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_spark.resources.extract_column_nodes":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_spark.resources.extract_columns_execution_count":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_spark.resources.functions_with_generics":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_spark.resources.layered_decorators":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_spark.resources.only_import_me":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_spark.resources.optional_dependencies":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_spark.resources.parametrized_inputs":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_spark.resources.parametrized_nodes":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_spark.resources.tagging":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_spark.resources.test_default_args":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_spark.resources.typing_vs_not_typing":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_spark.resources.very_simple_dag":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_adapter_tests.h_spark.test_h_spark":{
  "__set__":true,
  "elements":[
   "sf-hamilton"
  ]
 },
 "graph_tool":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.all":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.centrality":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.clustering":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.collection":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.collection.konect":{
  "__set__":true,
  "elements":[
   "graph-tool"
  ]
 },
 "graph_tool.collection.netzschleuder":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.collection.small":{
  "__set__":true,
  "elements":[
   "graph-tool-base"
  ]
 },
 "graph_tool.correlations":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.decorators":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.dl_import":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.draw":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.draw.cairo_draw":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.draw.graphviz_draw":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.draw.gtk_draw":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.dynamics":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.flow":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.generation":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.gt_io":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.inference":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.inference.base_states":{
  "__set__":true,
  "elements":[
   "graph-tool-base"
  ]
 },
 "graph_tool.inference.bisection":{
  "__set__":true,
  "elements":[
   "graph-tool"
  ]
 },
 "graph_tool.inference.blockmodel":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.inference.blockmodel_em":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.inference.clique_decomposition":{
  "__set__":true,
  "elements":[
   "graph-tool-base"
  ]
 },
 "graph_tool.inference.histogram":{
  "__set__":true,
  "elements":[
   "graph-tool-base"
  ]
 },
 "graph_tool.inference.latent_layers":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.inference.latent_multigraph":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.inference.layered_blockmodel":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.inference.mcmc":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.inference.minimize":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.inference.modularity":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.inference.nested_blockmodel":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.inference.norm_cut":{
  "__set__":true,
  "elements":[
   "graph-tool-base"
  ]
 },
 "graph_tool.inference.overlap_blockmodel":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.inference.partition_centroid":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.inference.partition_modes":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.inference.planted_partition":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.inference.ranked":{
  "__set__":true,
  "elements":[
   "graph-tool-base"
  ]
 },
 "graph_tool.inference.uncertain_blockmodel":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.inference.util":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.search":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.spectral":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.stats":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.topology":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graph_tool.util":{
  "__set__":true,
  "elements":[
   "graph-tool",
   "graph-tool-base"
  ]
 },
 "graphblas":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas._agg":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas._automethods":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas._infixmethods":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas._slice":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas._ss":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas._ss.descriptor":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas._ss.matrix":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas._ss.prefix_scan":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas._ss.utils":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas._ss.vector":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas._version":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.agg":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.base":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.binary":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.binary.numpy":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.descriptor":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.dtypes":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.exceptions":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.expr":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.formatting":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.indexunary":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.infix":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.io":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.mask":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.matrix":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.monoid":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.monoid.numpy":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.op":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.op.numpy":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.operator":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.recorder":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.scalar":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.select":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.semiring":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.semiring.numpy":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.ss":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.ss._core":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.tests":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.tests.conftest":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.tests.test_auto_init":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.tests.test_core":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.tests.test_descriptor":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.tests.test_dtype":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.tests.test_external_init":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.tests.test_formatting":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.tests.test_infix":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.tests.test_io":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.tests.test_mask":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.tests.test_matrix":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.tests.test_numpyops":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.tests.test_op":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.tests.test_operator_types":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.tests.test_pickle":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.tests.test_prefix_scan":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.tests.test_pygraphblas":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.tests.test_recorder":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.tests.test_resolving":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.tests.test_scalar":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.tests.test_ss_utils":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.tests.test_vector":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.unary":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.unary.numpy":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.utils":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphblas.vector":{
  "__set__":true,
  "elements":[
   "python-graphblas"
  ]
 },
 "graphbrain":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.agents":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.agents.actors":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.agents.agent":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.agents.claim_actors":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.agents.claims":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.agents.conflicts":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.agents.corefs_dets":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.agents.corefs_names":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.agents.corefs_onto":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.agents.corefs_unidecode":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.agents.csv_parser":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.agents.reddit_parser":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.agents.taxonomy":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.agents.txt_parser":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.cli":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.cognition":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.cognition.agent":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.cognition.agents":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.cognition.agents.actors":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.cognition.agents.claims":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.cognition.agents.conflicts":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.cognition.agents.conjunctions":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.cognition.agents.corefs_dets":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.cognition.agents.corefs_names":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.cognition.agents.corefs_onto":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.cognition.agents.corefs_unidecode":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.cognition.agents.csv_parser":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.cognition.agents.dir_parser":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.cognition.agents.iterator":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.cognition.agents.number":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.cognition.agents.reddit_parser":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.cognition.agents.taxonomy":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.cognition.agents.txt_parser":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.cognition.agents.wikipedia":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.cognition.system":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.colored":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.commands":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.commands.create":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.commands.export":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.commands.import":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.commands.info":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.commands.run":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.constants":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.data":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.hyperedge":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.hypergraph":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.logic":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.meaning":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.meaning.actors":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.meaning.concepts":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.meaning.corefs":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.meaning.lemmas":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.meaning.number":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.meaning.ontology":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.memory":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.memory.leveldb":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.memory.permutations":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.memory.sqlite":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.neuralcoref":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.neuralcoref.file_utils":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.neuralcoref.tests":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.neuralcoref.tests.disabled_test_neuralcoref":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.neuralcoref.tests.test_neuralcoref":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.neuralcoref.train":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.neuralcoref.train.algorithm":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.neuralcoref.train.compat":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.neuralcoref.train.conllparser":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.neuralcoref.train.dataset":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.neuralcoref.train.document":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.neuralcoref.train.evaluator":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.neuralcoref.train.learn":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.neuralcoref.train.model":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.neuralcoref.train.utils":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.notebook":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.op":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.parsers":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.parsers.alpha":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.parsers.alpha_beta":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.parsers.nlp":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.parsers.parser":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.parsers.parser_de":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.parsers.parser_en":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.parsers.text":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.patterns":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.scripts":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.scripts.extract-remaining-sentences":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.scripts.extract-sentences":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.scripts.generate-alpha-training-data":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.scripts.generate-parser-training-data":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.scripts.manual-parser-test":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.scripts.select-alpha-features":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.scripts.split-parser-training-data":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.scripts.test-alpha":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.scripts.test-parser":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.scripts.update-parser-tests":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.stats":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.stats.hyper_similarity":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.stats.word2vec_similarity":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.tests":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.tests.test_corefs":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.tests.test_hyperedge":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.tests.test_hypergraph":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.tests.test_logic":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.tests.test_patterns":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphbrain.tests.test_permutations":{
  "__set__":true,
  "elements":[
   "graphbrain"
  ]
 },
 "graphene":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.pyutils":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.pyutils.dataclasses":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.pyutils.version":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.relay":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.relay.connection":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.relay.mutation":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.relay.node":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.test":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.types":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.types.argument":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.types.base":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.types.base64":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.types.context":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.types.datetime":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.types.decimal":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.types.definitions":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.types.dynamic":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.types.enum":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.types.field":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.types.generic":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.types.inputfield":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.types.inputobjecttype":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.types.interface":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.types.json":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.types.mountedtype":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.types.mutation":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.types.objecttype":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.types.resolver":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.types.scalars":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.types.schema":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.types.structures":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.types.union":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.types.unmountedtype":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.types.utils":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.types.uuid":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.utils":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.utils.crunch":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.utils.dataloader":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.utils.deduplicator":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.utils.deprecated":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.utils.get_unbound_function":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.utils.is_introspection_key":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.utils.module_loading":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.utils.orderedtype":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.utils.props":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.utils.resolve_only_args":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.utils.str_converters":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.utils.subclass_with_meta":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.utils.thenables":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.utils.trim_docstring":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.validation":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.validation.depth_limit":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphene.validation.disable_introspection":{
  "__set__":true,
  "elements":[
   "graphene"
  ]
 },
 "graphistry":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.ArrowFileUploader":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.Engine":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.Plottable":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.PlotterBase":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry._version":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.ai_utils":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.arrow_uploader":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.bolt_util":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.compute":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.compute.ComputeMixin":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.compute.ast":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.compute.chain":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.compute.collapse":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.compute.filter_by_dict":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.compute.hop":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.constants":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.dgl_utils":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.feature_utils":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.gremlin":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.hyper":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.hyper_dask":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.layout":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.layout.gib":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.layout.gib.gib":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.layout.gib.partition":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.layout.gib.partitioned_layout":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.layout.gib.style":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.layout.gib.treemap":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.layout.graph":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.layout.graph.edge":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.layout.graph.edgeBase":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.layout.graph.graph":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.layout.graph.graphBase":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.layout.graph.vertex":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.layout.graph.vertexBase":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.layout.sugiyama":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.layout.sugiyama.sugiyamaLayout":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.layout.utils":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.layout.utils.dummyVertex":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.layout.utils.geometry":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.layout.utils.layer":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.layout.utils.layoutVertex":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.layout.utils.poset":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.layout.utils.rectangle":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.layout.utils.routing":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.layouts":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.networks":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.nodexlistry":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.plotter":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.plugins":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.plugins.cugraph":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.plugins.igraph":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.plugins_types":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.plugins_types.cugraph_types":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.pygraphistry":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.tigeristry":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.umap_utils":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphistry.util":{
  "__set__":true,
  "elements":[
   "graphistry"
  ]
 },
 "graphql_relay":{
  "__set__":true,
  "elements":[
   "graphql-relay"
  ]
 },
 "graphql_relay.connection":{
  "__set__":true,
  "elements":[
   "graphql-relay"
  ]
 },
 "graphql_relay.connection.array_connection":{
  "__set__":true,
  "elements":[
   "graphql-relay"
  ]
 },
 "graphql_relay.connection.arrayconnection":{
  "__set__":true,
  "elements":[
   "graphql-relay"
  ]
 },
 "graphql_relay.connection.connection":{
  "__set__":true,
  "elements":[
   "graphql-relay"
  ]
 },
 "graphql_relay.connection.connectiontypes":{
  "__set__":true,
  "elements":[
   "graphql-relay"
  ]
 },
 "graphql_relay.mutation":{
  "__set__":true,
  "elements":[
   "graphql-relay"
  ]
 },
 "graphql_relay.mutation.mutation":{
  "__set__":true,
  "elements":[
   "graphql-relay"
  ]
 },
 "graphql_relay.node":{
  "__set__":true,
  "elements":[
   "graphql-relay"
  ]
 },
 "graphql_relay.node.node":{
  "__set__":true,
  "elements":[
   "graphql-relay"
  ]
 },
 "graphql_relay.node.plural":{
  "__set__":true,
  "elements":[
   "graphql-relay"
  ]
 },
 "graphql_relay.utils":{
  "__set__":true,
  "elements":[
   "graphql-relay"
  ]
 },
 "graphql_relay.utils.base64":{
  "__set__":true,
  "elements":[
   "graphql-relay"
  ]
 },
 "graphql_relay.version":{
  "__set__":true,
  "elements":[
   "graphql-relay"
  ]
 },
 "graphtools":{
  "__set__":true,
  "elements":[
   "graphtools"
  ]
 },
 "graphtools.api":{
  "__set__":true,
  "elements":[
   "graphtools"
  ]
 },
 "graphtools.base":{
  "__set__":true,
  "elements":[
   "graphtools"
  ]
 },
 "graphtools.estimator":{
  "__set__":true,
  "elements":[
   "graphtools"
  ]
 },
 "graphtools.graphs":{
  "__set__":true,
  "elements":[
   "graphtools"
  ]
 },
 "graphtools.matrix":{
  "__set__":true,
  "elements":[
   "graphtools"
  ]
 },
 "graphtools.utils":{
  "__set__":true,
  "elements":[
   "graphtools"
  ]
 },
 "graphtools.version":{
  "__set__":true,
  "elements":[
   "graphtools"
  ]
 },
 "graphvite":{
  "__set__":true,
  "elements":[
   "graphvite-mini"
  ]
 },
 "graphvite.application":{
  "__set__":true,
  "elements":[
   "graphvite-mini"
  ]
 },
 "graphvite.application.application":{
  "__set__":true,
  "elements":[
   "graphvite-mini"
  ]
 },
 "graphvite.application.network":{
  "__set__":true,
  "elements":[
   "graphvite-mini"
  ]
 },
 "graphvite.base":{
  "__set__":true,
  "elements":[
   "graphvite-mini"
  ]
 },
 "graphvite.cmd":{
  "__set__":true,
  "elements":[
   "graphvite-mini"
  ]
 },
 "graphvite.dataset":{
  "__set__":true,
  "elements":[
   "graphvite-mini"
  ]
 },
 "graphvite.graph":{
  "__set__":true,
  "elements":[
   "graphvite-mini"
  ]
 },
 "graphvite.helper":{
  "__set__":true,
  "elements":[
   "graphvite-mini"
  ]
 },
 "graphvite.optimizer":{
  "__set__":true,
  "elements":[
   "graphvite-mini"
  ]
 },
 "graphvite.solver":{
  "__set__":true,
  "elements":[
   "graphvite-mini"
  ]
 },
 "graphvite.util":{
  "__set__":true,
  "elements":[
   "graphvite-mini"
  ]
 },
 "graphviz":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz._compat":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz._defaults":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz._tools":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz.backend":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz.backend._common":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz.backend.dot_command":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz.backend.execute":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz.backend.mixins":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz.backend.piping":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz.backend.rendering":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz.backend.unflattening":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz.backend.upstream_version":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz.backend.viewing":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz.base":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz.conftest":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz.copying":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz.dot":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz.encoding":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz.exceptions":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz.files":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz.graphs":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz.jupyter_integration":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz.lang":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz.parameters":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz.parameters.base":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz.parameters.engines":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz.parameters.formats":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz.parameters.formatters":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz.parameters.mixins":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz.parameters.renderers":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz.piping":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz.quoting":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz.rendering":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz.saving":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz.sources":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz.tools":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphviz.unflattening":{
  "__set__":true,
  "elements":[
   "python-graphviz"
  ]
 },
 "graphysio":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.algorithms":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.algorithms.filters":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.algorithms.waveform":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.dialogs":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.legend":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.main":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.mainui":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.plotwidgets":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.plotwidgets.curves":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.plotwidgets.plotwidget":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.plotwidgets.poiselector":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.plotwidgets.puplot":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.plotwidgets.spectrogram":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.plotwidgets.tsplot":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.readdata":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.readdata.baseclass":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.readdata.csv":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.readdata.edf":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.readdata.parquet":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.structures":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.transformations":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.ui":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.ui.csvrequest":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.ui.curveproperties":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.ui.curveselect":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.ui.cycledetect":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.ui.datetime":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.ui.filter":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.ui.loopwidget":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.ui.mainwindow":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.ui.periodexport":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.ui.poiwidget":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.ui.setuppuloop":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.utils":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.writedata":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.writedata.csv":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.writedata.edf":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.writedata.exporter":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.writedata.matlab":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 },
 "graphysio.writedata.parquet":{
  "__set__":true,
  "elements":[
   "graphysio"
  ]
 }
}
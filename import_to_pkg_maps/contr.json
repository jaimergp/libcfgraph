{
 "contracts":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.backported":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.docstring_parsing":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.enabling":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.inspection":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.interface":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.library":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.library.arithmetic":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.library.array":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.library.array_ops":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.library.attributes":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.library.comparison":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.library.compositions":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.library.dicts":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.library.dummy":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.library.extensions":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.library.files":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.library.isinstance_imp":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.library.lists":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.library.map":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.library.miscellaneous_aliases":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.library.scoped_variables":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.library.separate_context":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.library.seq":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.library.sets":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.library.simple_values":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.library.strings":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.library.suggester":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.library.tuple":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.library.types_misc":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.library.variables":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.main":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.main_actual":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.metaclass":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.pyparsing_utils":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.syntax":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.test_registrar":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.array_extended_test":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.friendliness_statistics":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.library":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.library.arithmetic_tc":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.library.array_elements_tc":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.library.array_tc":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.library.attr_tc":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.library.comparison_tc":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.library.compositions_tc":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.library.dicts_tc":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.library.dummy_tc":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.library.extensions_tc":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.library.files_tc":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.library.isinstance_tc":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.library.lists_tc":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.library.map_tc":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.library.miscellaneous_aliases_tc":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.library.separate_context_tc":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.library.seq_tc":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.library.simple_values_tc":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.library.strings_tc":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.library.test_scoped_variables":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.library.tuple_tc":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.library.types_tc":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.library.variables_tc":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.test_class_contracts":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.test_decorator":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.test_docstring_parsing":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.test_idioms":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.test_meta":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.test_multiple":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.test_new_contract":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.test_particulars":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.test_pickling":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.test_simple":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.test_unicode_literals":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.testing.utils":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.useful_contracts":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.useful_contracts.numbers":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.useful_contracts.numpy_specific":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contracts.utils":{
  "__set__":true,
  "elements":[
   "pycontracts"
  ]
 },
 "contrastive_learner":{
  "__set__":true,
  "elements":[
   "contrastive-learner"
  ]
 },
 "contrastive_learner.contrastive_learner":{
  "__set__":true,
  "elements":[
   "contrastive-learner"
  ]
 },
 "contrib_colormaps":{
  "__set__":true,
  "elements":[
   "contrib_colormaps"
  ]
 },
 "contrib_colormaps._version":{
  "__set__":true,
  "elements":[
   "contrib_colormaps"
  ]
 },
 "contrib_colormaps.core":{
  "__set__":true,
  "elements":[
   "contrib_colormaps"
  ]
 },
 "contrib_colormaps.plotting":{
  "__set__":true,
  "elements":[
   "contrib_colormaps"
  ]
 },
 "contrib_colormaps.tests":{
  "__set__":true,
  "elements":[
   "contrib_colormaps"
  ]
 },
 "contrib_colormaps.tests.test_bokeh":{
  "__set__":true,
  "elements":[
   "contrib_colormaps"
  ]
 },
 "contrib_colormaps.tests.test_colormaps":{
  "__set__":true,
  "elements":[
   "contrib_colormaps"
  ]
 },
 "contrib_colormaps.tests.test_matplotlib":{
  "__set__":true,
  "elements":[
   "contrib_colormaps"
  ]
 },
 "control":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control._version":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.bdalg":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.canonical":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.config":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.ctrlutil":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.delay":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.descfcn":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.dtime":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.exception":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.flatsys":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.flatsys.basis":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.flatsys.bezier":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.flatsys.bspline":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.flatsys.flatsys":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.flatsys.linflat":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.flatsys.poly":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.flatsys.systraj":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.frdata":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.freqplot":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.grid":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.iosys":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.lti":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.margins":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.mateqn":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.matlab":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.matlab.timeresp":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.matlab.wrappers":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.modelsimp":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.namedio":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.nichols":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.optimal":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.passivity":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.phaseplot":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.pzmap":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.rlocus":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.robust":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.setup":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.sisotool":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.statefbk":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.statesp":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.stochsys":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.bdalg_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.bspline_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.canonical_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.config_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.conftest":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.convert_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.ctrlutil_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.delay_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.descfcn_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.discrete_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.flatsys_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.frd_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.freqresp":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.freqresp_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.input_element_int_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.interconnect_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.iosys_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.kwargs_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.lti_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.margin_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.mateqn_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.matlab2_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.matlab_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.minreal_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.modelsimp_array_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.modelsimp_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.namedio_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.nichols_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.nyquist_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.optimal_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.passivity_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.phaseplot_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.pzmap_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.rlocus_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.robust_array_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.robust_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.run_all":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.sisotool_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.slycot_convert_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.statefbk_array_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.statefbk_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.statesp_array_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.statesp_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.stochsys_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.test_control_matlab":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.timebase_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.timeresp_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.trdata_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.type_conversion_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.xferfcn_input_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.tests.xferfcn_test":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.timeresp":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "control.xferfcn":{
  "__set__":true,
  "elements":[
   "control"
  ]
 },
 "controlcenter":{
  "__set__":true,
  "elements":[
   "django-controlcenter"
  ]
 },
 "controlcenter.app_settings":{
  "__set__":true,
  "elements":[
   "django-controlcenter"
  ]
 },
 "controlcenter.base":{
  "__set__":true,
  "elements":[
   "django-controlcenter"
  ]
 },
 "controlcenter.dashboards":{
  "__set__":true,
  "elements":[
   "django-controlcenter"
  ]
 },
 "controlcenter.templatetags":{
  "__set__":true,
  "elements":[
   "django-controlcenter"
  ]
 },
 "controlcenter.templatetags.controlcenter_tags":{
  "__set__":true,
  "elements":[
   "django-controlcenter"
  ]
 },
 "controlcenter.utils":{
  "__set__":true,
  "elements":[
   "django-controlcenter"
  ]
 },
 "controlcenter.views":{
  "__set__":true,
  "elements":[
   "django-controlcenter"
  ]
 },
 "controlcenter.widgets":{
  "__set__":true,
  "elements":[
   "django-controlcenter"
  ]
 },
 "controlcenter.widgets.charts":{
  "__set__":true,
  "elements":[
   "django-controlcenter"
  ]
 },
 "controlcenter.widgets.contrib":{
  "__set__":true,
  "elements":[
   "django-controlcenter"
  ]
 },
 "controlcenter.widgets.contrib.simple":{
  "__set__":true,
  "elements":[
   "django-controlcenter"
  ]
 },
 "controlcenter.widgets.core":{
  "__set__":true,
  "elements":[
   "django-controlcenter"
  ]
 }
}